enumerable = import "enumerable", "enumerable"

array.any? = enumerable->any?
array.find = enumerable->find
array.all? = enumerable->all?
array.select = enumerable->select

comparable = import "comparable"

string.squish comparable

number.squish comparable

number.times = { block |
	true? my > 0
		{
			n = 0
			true? method_arity(->block) > 0
				{ while {
					block n
					n = n + 1
					n < my
				}}
				{ while {
					block
					n = n + 1
					n < my
				}}
		}
	my
}

number.to = { stop, block |
	n = my
	true? n < stop
		{ while { n <= stop }
			{ block n; n = n + 1 }
		}
		{ while { n >= stop }
			{ block n; n = n - 1 }
		}
	stop
}

object.&& = { rhs |
        true? my
                { rhs }
                { false }
}

object.|| = { rhs |
	true? my
		{ true }
		{ true? rhs }
}

