var console = $loader.loadmodule("BratConsole", $loader);
var stdin = $loader.loadprim("std@file_stdin", 0);
var stderr = $loader.loadprim("std@file_stderr", 0);
var read_char = $loader.loadprim("std@file_read_char", 1);
var buffer_new = $loader.loadprim("std@buffer_new", 0);
var buffer_add_char = $loader.loadprim("std@buffer_add_char", 2);
var buffer_string = $loader.loadprim("std@buffer_string", 1);

var variables = $hnew(50);
var in = stdin();

variables = console.run("@brat = $loader.loadmodule(\"core\", $loader);array = @brat.base_array; hash = @brat.base_hash; number = @brat.base_number; string = @brat.base_string; regex = @brat.base_regex; symbol = @brat.base_symbol;object = @brat.base_object;exception = @brat.base_exception;
var stdin = $loader.loadprim(\"std@file_stdin\", 0);
var read_char = $loader.loadprim(\"std@file_read_char\", 1);
var buffer_new = $loader.loadprim(\"std@buffer_new\", 0);
var buffer_add_char = $loader.loadprim(\"std@buffer_add_char\", 2);
var buffer_string = $loader.loadprim(\"std@buffer_string\", 1);
@brat.base_object.g = function() {
        var break_char = 10;
        var b = buffer_new();
        var in = stdin();
	$print(\"\002\");
        try {
                do {
                        var c = read_char(in);
                        if(c == break_char)
                                break;
                        buffer_add_char(b,c);
                } while(true);
        }
        catch e {
                return this.@null();
        }
        string.new(buffer_string(b));
};
", variables);

while(true) {
	var b = buffer_new();
	while(true) {
		var c = read_char(in);
		if(c == 1)
			break;
		else
			buffer_add_char(b,c);
	}
	input = buffer_string(b);

	if(input == "!quit\n")
		break;
	else
		variables = console.run("this = @brat.base_object;" + input, variables);

	$print("\001");
}
