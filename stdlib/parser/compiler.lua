              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp17 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

local _temp11

_temp11 = 0

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp16 = function (_self)

local _temp12 
do
local _temp13 = nil
_temp13 =  _temp11

local _temp14
      if number._unchanged('_plus')  then
        _temp14 = _temp13 + 1
      else
              local _n = number:new(_temp13)
      if _n._plus ~= nil then
        _temp14 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp14 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp13, "+"))
      end

      end 

_temp12 = _temp14 
end

_temp11 = _temp12

return _temp11
end

        if _type(_temp7) == "table" then
          _temp7["next_underliftable"] = _temp16
        elseif _type(_temp7) == "number" then
          number["next_underliftable"] =  _temp16
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp16
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp17
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp17
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp31 = function (_self, _temp18)
        if _temp18 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp19 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp19 =  my(_self)

    elseif my then
      _temp19 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp19 =  _self:my()
      elseif _self.my ~= nil then
        _temp19 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp19

local _temp20 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp21 = nil
        local _t = _type(_temp18)
        if _t == "table" then
          if _rawget(_temp18, "__call_thing") == nil then
            _temp21 = _temp18
          else
                  if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

          end
        elseif _t == "number" then
          _temp21 = _temp18
        elseif _t == "function" then
                if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

        elseif _temp18 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.nodes) == "function" or (_type(_temp21.nodes) == "table" and _rawget(_temp21.nodes, "__call_thing")) then
        _temp21 = _temp21:nodes()
      elseif _temp21.nodes ~= nil then
        _temp21 = _temp21.nodes

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp21, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.nodes ~= nil then
        _temp21 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.nodes ~= nil then
        _temp21 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


local _temp26 = function (_self, _temp22)
        if _temp22 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp23 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp23 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp23 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp24 = nil
    if _type(_temp22) == "function" or (_type(_temp22) == "table" and _rawget(_temp22, "__call_thing")) then
      _temp24 =  _temp22(_self)

    elseif _temp22 then
      _temp24 =  _temp22
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp24 =  _self:n()
      elseif _self.n ~= nil then
        _temp24 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.process) == "function" or (_type(_temp23.process) == "table" and _rawget(_temp23.process, "__call_thing")) then
        return _temp23:process(_temp24)
      elseif _temp23.process ~= nil then
        return _temp23.process

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("process") , _temp24)
        else
          _error(exception:method_error(_temp23, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.process ~= nil then
        return _n:process(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.process ~= nil then
        return _f:process(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.map) == "function" or (_type(_temp21.map) == "table" and _rawget(_temp21.map, "__call_thing")) then
        _temp21 = _temp21:map(_temp26)
      elseif _temp21.map ~= nil then
        _temp21 = _temp21.map

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("map") , _temp26)
        else
          _error(exception:method_error(_temp21, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.map ~= nil then
        _temp21 = _n:map(_temp26)
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.map ~= nil then
        _temp21 = _f:map(_temp26)
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


        if _type(_temp20) == "table" then
          _temp20["results"] = _temp21
        elseif _type(_temp20) == "number" then
          number["results"] = _temp21
        else
          _error("Cannot set method on " .. _temp20)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp26 
do
local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp28 = nil
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.liftable_underfunctions) == "function" or (_type(_temp27.liftable_underfunctions) == "table" and _rawget(_temp27.liftable_underfunctions, "__call_thing")) then
        _temp28 = _temp27:liftable_underfunctions()
      elseif _temp27.liftable_underfunctions ~= nil then
        _temp28 = _temp27.liftable_underfunctions

        elseif _temp27.no_undermethod ~= nil then
          _temp28 =  _temp27:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp27, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.liftable_underfunctions ~= nil then
        _temp28 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.liftable_underfunctions ~= nil then
        _temp28 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp29 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp29 =  _self:my()
      elseif _self.my ~= nil then
        _temp29 =  _self.my

        elseif my ~= nil then
          _temp29 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp29)
      if _t == "table" then
                      if _type(_temp29.results) == "function" or (_type(_temp29.results) == "table" and _rawget(_temp29.results, "__call_thing")) then
        _temp29 = _temp29:results()
      elseif _temp29.results ~= nil then
        _temp29 = _temp29.results

        elseif _temp29.no_undermethod ~= nil then
          _temp29 =  _temp29:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp29, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp29)
      if _n.results ~= nil then
        _temp29 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp29 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp29)
      if _f.results ~= nil then
        _temp29 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp29 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _temp29 == nil then
        _error(exception:null_error("_temp29", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp29))
      end

local _temp30
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28._plus) == "function" or (_type(_temp28._plus) == "table" and _rawget(_temp28._plus, "__call_thing")) then
        _temp30 = _temp28:_plus(_temp29)
      elseif _temp28._plus ~= nil then
        _temp30 = _temp28._plus

        elseif _temp28.no_undermethod ~= nil then
          _temp30 =  _temp28:no_undermethod(string:new("+") , _temp29)
        else
          _error(exception:method_error(_temp28, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp29) == 'number' then
        _temp30 = _temp28 + _temp29
      else
              local _n = number:new(_temp28)
      if _n._plus ~= nil then
        _temp30 = _n:_plus(_temp29)
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f._plus ~= nil then
        _temp30 = _f:_plus(_temp29)
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end

_temp26 = _temp30 
end

        if _type(_temp20) == "table" then
          _temp20["results"] = _temp26
        elseif _type(_temp20) == "number" then
          number["results"] = _temp26
        else
          _error("Cannot set method on " .. _temp20)
        end

return _temp26
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp31)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp36 = function (_self, _temp32)
        if _temp32 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp33
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp33 =  _self:my()
      elseif _self.my ~= nil then
        _temp33 =  _self.my

        elseif my ~= nil then
          _temp33 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.env) == "function" or (_type(_temp33.env) == "table" and _rawget(_temp33.env, "__call_thing")) then
        _temp33 = _temp33:env()
      elseif _temp33.env ~= nil then
        _temp33 = _temp33.env

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.env ~= nil then
        _temp33 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.env ~= nil then
        _temp33 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

local _temp34 = nil
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.lhs) == "function" or (_type(_temp34.lhs) == "table" and _rawget(_temp34.lhs, "__call_thing")) then
        _temp34 = _temp34:lhs()
      elseif _temp34.lhs ~= nil then
        _temp34 = _temp34.lhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp34, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.lhs ~= nil then
        _temp34 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.lhs ~= nil then
        _temp34 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.new_undervar) == "function" or (_type(_temp33.new_undervar) == "table" and _rawget(_temp33.new_undervar, "__call_thing")) then
        _temp33 = _temp33:new_undervar(_temp34)
      elseif _temp33.new_undervar ~= nil then
        _temp33 = _temp33.new_undervar

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("new_var") , _temp34)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.new_undervar ~= nil then
        _temp33 = _n:new_undervar(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.new_undervar ~= nil then
        _temp33 = _f:new_undervar(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end


local _temp35
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.rhs) == "function" or (_type(_temp34.rhs) == "table" and _rawget(_temp34.rhs, "__call_thing")) then
        _temp34 = _temp34:rhs()
      elseif _temp34.rhs ~= nil then
        _temp34 = _temp34.rhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp34, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.rhs ~= nil then
        _temp34 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.rhs ~= nil then
        _temp34 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


local _temp36 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp36 =  _temp33(_self)

    elseif _temp33 then
      _temp36 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp35 =  process(_self, _temp34,_temp36)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp35 =  _self:process(_temp34,_temp36)
      elseif _self.process ~= nil then
        _temp35 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("process") , _temp34,_temp36)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("process") , _temp34,_temp36)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.env) == "function" or (_type(_temp36.env) == "table" and _rawget(_temp36.env, "__call_thing")) then
        _temp36 = _temp36:env()
      elseif _temp36.env ~= nil then
        _temp36 = _temp36.env

        elseif _temp36.no_undermethod ~= nil then
          _temp36 =  _temp36:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp36, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.env ~= nil then
        _temp36 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp36 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.env ~= nil then
        _temp36 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp36 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp34 =  _temp33(_self)

    elseif _temp33 then
      _temp34 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp34 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp34 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp34 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp34 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37
do
    if _type(_temp35) == "function" or (_type(_temp35) == "table" and _rawget(_temp35, "__call_thing")) then
      _temp37 =  _temp35(_self)

    elseif _temp35 then
      _temp37 =  _temp35
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp37 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp37 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp38 = string:new("type")


_temp37 = _temp37:get(_temp38)
end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.set_undertype) == "function" or (_type(_temp36.set_undertype) == "table" and _rawget(_temp36.set_undertype, "__call_thing")) then
        _dummy_ = _temp36:set_undertype(_temp34,_temp37)
      elseif _temp36.set_undertype ~= nil then
        _dummy_ = _temp36.set_undertype

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("set_type") , _temp34,_temp37)
        else
          _error(exception:method_error(_temp36, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp34,_temp37)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp34,_temp37)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

local _temp37 
do
local _temp39 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp39 =  _temp33(_self)

    elseif _temp33 then
      _temp39 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp39 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp39 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp40 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp40 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp40 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.var) == "function" or (_type(_temp40.var) == "table" and _rawget(_temp40.var, "__call_thing")) then
        _temp40 = _temp40:var()
      elseif _temp40.var ~= nil then
        _temp40 = _temp40.var

        elseif _temp40.no_undermethod ~= nil then
          _temp40 =  _temp40:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp40, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.var ~= nil then
        _temp40 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp40 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.var ~= nil then
        _temp40 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp40 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

local _temp41
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39._equal_equal) == "function" or (_type(_temp39._equal_equal) == "table" and _rawget(_temp39._equal_equal, "__call_thing")) then
        _temp41 = _temp39:_equal_equal(_temp40)
      elseif _temp39._equal_equal ~= nil then
        _temp41 = _temp39._equal_equal

        elseif _temp39.no_undermethod ~= nil then
          _temp41 =  _temp39:no_undermethod(string:new("==") , _temp40)
        else
          _error(exception:method_error(_temp39, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp40) == 'number' then
              if _temp39 == _temp40 then
        _temp41 = object.__true
      else
        _temp41 = object.__false
      end

      else
              local _n = number:new(_temp39)
      if _n._equal_equal ~= nil then
        _temp41 = _n:_equal_equal(_temp40)
      elseif _n.no_undermethod ~= nil then
        _temp41 =  _n:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f._equal_equal ~= nil then
        _temp41 = _f:_equal_equal(_temp40)
      elseif _f.no_undermethod ~= nil then
        _temp41 =  _f:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end

_temp37 = _temp41 
end


local _temp47 = function (_self)

local _temp42 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp42 =  _temp33(_self)

    elseif _temp33 then
      _temp42 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp44 =  _temp33(_self)

    elseif _temp33 then
      _temp44 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp44 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp44 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp44 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp44 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp45 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp45 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp45 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp45)
      if _t == "table" then
                      if _type(_temp45.out) == "function" or (_type(_temp45.out) == "table" and _rawget(_temp45.out, "__call_thing")) then
        _temp45 = _temp45:out()
      elseif _temp45.out ~= nil then
        _temp45 = _temp45.out

        elseif _temp45.no_undermethod ~= nil then
          _temp45 =  _temp45:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp45, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp45)
      if _n.out ~= nil then
        _temp45 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp45 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp45)
      if _f.out ~= nil then
        _temp45 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp45 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _temp45 == nil then
        _error(exception:null_error("_temp45", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp45))
      end


_temp43 = string:new("local " .. _tostring(_temp44) .. "\n" .. _tostring(_temp45) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end


local _temp54 = function (_self)

local _temp48 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp48 =  _temp33(_self)

    elseif _temp33 then
      _temp48 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp48 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp48 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp48 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp48 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp49 = nil
do
local _temp50 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp50 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp50 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp50)
      if _t == "table" then
                      if _type(_temp50.out) == "function" or (_type(_temp50.out) == "table" and _rawget(_temp50.out, "__call_thing")) then
        _temp50 = _temp50:out()
      elseif _temp50.out ~= nil then
        _temp50 = _temp50.out

        elseif _temp50.no_undermethod ~= nil then
          _temp50 =  _temp50:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp50, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp50)
      if _n.out ~= nil then
        _temp50 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp50 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp50)
      if _f.out ~= nil then
        _temp50 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp50 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _temp50 == nil then
        _error(exception:null_error("_temp50", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp50))
      end


local _temp51 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp51 =  _temp33(_self)

    elseif _temp33 then
      _temp51 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp51 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp51 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp52 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp52 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.var) == "function" or (_type(_temp52.var) == "table" and _rawget(_temp52.var, "__call_thing")) then
        _temp52 = _temp52:var()
      elseif _temp52.var ~= nil then
        _temp52 = _temp52.var

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp52, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.var ~= nil then
        _temp52 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.var ~= nil then
        _temp52 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = string:new("" .. _tostring(_temp50) .. "\nlocal " .. _tostring(_temp51) .. " = " .. _tostring(_temp52) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp48,_temp49)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp48,_temp49)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp48,_temp49)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp48,_temp49)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp37,_temp47,_temp54)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp37,_temp47,_temp54)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp37,_temp47,_temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp37,_temp47,_temp54)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp31 =  _temp5(_self)

    elseif _temp5 then
      _temp31 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp31 =  _self:c()
      elseif _self.c ~= nil then
        _temp31 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp31 = _temp31["var_underreassign"]
        if _temp31 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp31)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["var_underreassign"]
        if _temp36 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp76 = function (_self, _temp56,_temp55)
        if _temp56 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp55 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp55 =  null(_self)

    elseif null then
      _temp55 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp55 =  _self:null()
      elseif _self.null ~= nil then
        _temp55 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp57
local _temp58 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.target) == "function" or (_type(_temp58.target) == "table" and _rawget(_temp58.target, "__call_thing")) then
        _temp58 = _temp58:target()
      elseif _temp58.target ~= nil then
        _temp58 = _temp58.target

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp58, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.target ~= nil then
        _temp58 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.target ~= nil then
        _temp58 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp57 =  process(_self, _temp58)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp57 =  _self:process(_temp58)
      elseif _self.process ~= nil then
        _temp57 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("process") , _temp58)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("process") , _temp58)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.field) == "function" or (_type(_temp58.field) == "table" and _rawget(_temp58.field, "__call_thing")) then
        _temp58 = _temp58:field()
      elseif _temp58.field ~= nil then
        _temp58 = _temp58.field

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp58, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.field ~= nil then
        _temp58 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.field ~= nil then
        _temp58 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


_temp55 = _temp58

local _temp59
local _temp60 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp60 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.rhs) == "function" or (_type(_temp60.rhs) == "table" and _rawget(_temp60.rhs, "__call_thing")) then
        _temp60 = _temp60:rhs()
      elseif _temp60.rhs ~= nil then
        _temp60 = _temp60.rhs

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp60, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.rhs ~= nil then
        _temp60 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.rhs ~= nil then
        _temp60 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp59 =  process(_self, _temp60)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp59 =  _self:process(_temp60)
      elseif _self.process ~= nil then
        _temp59 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("process") , _temp60)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("process") , _temp60)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp61
do
local _temp62 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp62 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp63 = nil
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.out) == "function" or (_type(_temp62.out) == "table" and _rawget(_temp62.out, "__call_thing")) then
        _temp63 = _temp62:out()
      elseif _temp62.out ~= nil then
        _temp63 = _temp62.out

        elseif _temp62.no_undermethod ~= nil then
          _temp63 =  _temp62:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp62, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.out ~= nil then
        _temp63 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.out ~= nil then
        _temp63 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end

local _temp64 = string:new("\n")

local _temp65 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp65 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp66 = nil
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.out) == "function" or (_type(_temp65.out) == "table" and _rawget(_temp65.out, "__call_thing")) then
        _temp66 = _temp65:out()
      elseif _temp65.out ~= nil then
        _temp66 = _temp65.out

        elseif _temp65.no_undermethod ~= nil then
          _temp66 =  _temp65:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp65, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.out ~= nil then
        _temp66 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.out ~= nil then
        _temp66 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end

local _temp67 = nil
do
local _temp68 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp68 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp68 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.var) == "function" or (_type(_temp68.var) == "table" and _rawget(_temp68.var, "__call_thing")) then
        _temp68 = _temp68:var()
      elseif _temp68.var ~= nil then
        _temp68 = _temp68.var

        elseif _temp68.no_undermethod ~= nil then
          _temp68 =  _temp68:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp68, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.var ~= nil then
        _temp68 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp68 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.var ~= nil then
        _temp68 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp68 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end


local _temp69 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp69 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp69 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp69)
      if _t == "table" then
                      if _type(_temp69.var) == "function" or (_type(_temp69.var) == "table" and _rawget(_temp69.var, "__call_thing")) then
        _temp69 = _temp69:var()
      elseif _temp69.var ~= nil then
        _temp69 = _temp69.var

        elseif _temp69.no_undermethod ~= nil then
          _temp69 =  _temp69:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp69, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp69)
      if _n.var ~= nil then
        _temp69 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp69 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp69)
      if _f.var ~= nil then
        _temp69 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp69 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _temp69 == nil then
        _error(exception:null_error("_temp69", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp69))
      end


local _temp70 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp70 =  _temp55(_self)

    elseif _temp55 then
      _temp70 =  _temp55
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp70 =  _self:var()
      elseif _self.var ~= nil then
        _temp70 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp71 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp71 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp71 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp71)
      if _t == "table" then
                      if _type(_temp71.var) == "function" or (_type(_temp71.var) == "table" and _rawget(_temp71.var, "__call_thing")) then
        _temp71 = _temp71:var()
      elseif _temp71.var ~= nil then
        _temp71 = _temp71.var

        elseif _temp71.no_undermethod ~= nil then
          _temp71 =  _temp71:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp71, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp71)
      if _n.var ~= nil then
        _temp71 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp71 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp71)
      if _f.var ~= nil then
        _temp71 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp71 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _temp71 == nil then
        _error(exception:null_error("_temp71", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp71))
      end


local _temp72 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp72 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp72 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.var) == "function" or (_type(_temp72.var) == "table" and _rawget(_temp72.var, "__call_thing")) then
        _temp72 = _temp72:var()
      elseif _temp72.var ~= nil then
        _temp72 = _temp72.var

        elseif _temp72.no_undermethod ~= nil then
          _temp72 =  _temp72:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp72, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.var ~= nil then
        _temp72 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp72 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.var ~= nil then
        _temp72 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp72 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end


_temp67 = string:new("\n    if _type(" .. _tostring(_temp68) .. ") == 'table' then\n      " .. _tostring(_temp69) .. "['" .. _tostring(_temp70) .. "'] = " .. _tostring(_temp71) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp72) .. ")\n    end\n    ")
end
local _temp73
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63._less_less) == "function" or (_type(_temp63._less_less) == "table" and _rawget(_temp63._less_less, "__call_thing")) then
        _temp73 = _temp63:_less_less(_temp64)
      elseif _temp63._less_less ~= nil then
        _temp73 = _temp63._less_less

        elseif _temp63.no_undermethod ~= nil then
          _temp73 =  _temp63:no_undermethod(string:new("<<") , _temp64)
        else
          _error(exception:method_error(_temp63, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n._less_less ~= nil then
        _temp73 = _n:_less_less(_temp64)
      elseif _n.no_undermethod ~= nil then
        _temp73 =  _n:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f._less_less ~= nil then
        _temp73 = _f:_less_less(_temp64)
      elseif _f.no_undermethod ~= nil then
        _temp73 =  _f:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end

local _temp64
      local _t = _type(_temp73)
      if _t == "table" then
                      if _type(_temp73._less_less) == "function" or (_type(_temp73._less_less) == "table" and _rawget(_temp73._less_less, "__call_thing")) then
        _temp64 = _temp73:_less_less(_temp66)
      elseif _temp73._less_less ~= nil then
        _temp64 = _temp73._less_less

        elseif _temp73.no_undermethod ~= nil then
          _temp64 =  _temp73:no_undermethod(string:new("<<") , _temp66)
        else
          _error(exception:method_error(_temp73, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp73)
      if _n._less_less ~= nil then
        _temp64 = _n:_less_less(_temp66)
      elseif _n.no_undermethod ~= nil then
        _temp64 =  _n:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp73)
      if _f._less_less ~= nil then
        _temp64 = _f:_less_less(_temp66)
      elseif _f.no_undermethod ~= nil then
        _temp64 =  _f:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _temp73 == nil then
        _error(exception:null_error("_temp73", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp73))
      end

local _temp66
      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64._less_less) == "function" or (_type(_temp64._less_less) == "table" and _rawget(_temp64._less_less, "__call_thing")) then
        _temp66 = _temp64:_less_less(_temp67)
      elseif _temp64._less_less ~= nil then
        _temp66 = _temp64._less_less

        elseif _temp64.no_undermethod ~= nil then
          _temp66 =  _temp64:no_undermethod(string:new("<<") , _temp67)
        else
          _error(exception:method_error(_temp64, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n._less_less ~= nil then
        _temp66 = _n:_less_less(_temp67)
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f._less_less ~= nil then
        _temp66 = _f:_less_less(_temp67)
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

_temp61 = _temp66 
end

        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp60 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.var) == "function" or (_type(_temp60.var) == "table" and _rawget(_temp60.var, "__call_thing")) then
        _temp60 = _temp60:var()
      elseif _temp60.var ~= nil then
        _temp60 = _temp60.var

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp60, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.var ~= nil then
        _temp60 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.var ~= nil then
        _temp60 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


local _temp74 = nil
    if _type(_temp61) == "function" or (_type(_temp61) == "table" and _rawget(_temp61, "__call_thing")) then
      _temp74 =  _temp61(_self)

    elseif _temp61 then
      _temp74 =  _temp61
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp74 =  _self:out()
      elseif _self.out ~= nil then
        _temp74 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp60,_temp74)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp60,_temp74)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp60,_temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp60,_temp74)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["get_undera_undervalue"]
        if _temp36 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp36)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp76 =  _temp5(_self)

    elseif _temp5 then
      _temp76 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp76 =  _self:c()
      elseif _self.c ~= nil then
        _temp76 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp76 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp76 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp76 = _temp76["get_undera_undervalue"]
        if _temp76 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp86 = function (_self, _temp78,_temp77)
        if _temp78 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp77 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp77 =  null(_self)

    elseif null then
      _temp77 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp77 =  _self:null()
      elseif _self.null ~= nil then
        _temp77 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp79
local _temp80 = nil
    if _type(_temp77) == "function" or (_type(_temp77) == "table" and _rawget(_temp77, "__call_thing")) then
      _temp80 =  _temp77(_self)

    elseif _temp77 then
      _temp80 =  _temp77
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp80 =  _self:var()
      elseif _self.var ~= nil then
        _temp80 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp80 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp80 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp79 =  set_underresult(_self, _temp80)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp79 =  _self:set_underresult(_temp80)
      elseif _self.set_underresult ~= nil then
        _temp79 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("set_result") , _temp80)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("set_result") , _temp80)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp81 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp81 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp81 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp82 = nil
      local _t = _type(_temp81)
      if _t == "table" then
                      if _type(_temp81.out) == "function" or (_type(_temp81.out) == "table" and _rawget(_temp81.out, "__call_thing")) then
        _temp82 = _temp81:out()
      elseif _temp81.out ~= nil then
        _temp82 = _temp81.out

        elseif _temp81.no_undermethod ~= nil then
          _temp82 =  _temp81:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp81, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp81)
      if _n.out ~= nil then
        _temp82 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp82 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp81)
      if _f.out ~= nil then
        _temp82 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp82 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _temp81 == nil then
        _error(exception:null_error("_temp81", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp81))
      end

local _temp83 = nil
local _temp84 = nil
        local _t = _type(_temp78)
        if _t == "table" then
          if _rawget(_temp78, "__call_thing") == nil then
            _temp84 = _temp78
          else
                  if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

          end
        elseif _t == "number" then
          _temp84 = _temp78
        elseif _t == "function" then
                if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

        elseif _temp78 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.value) == "function" or (_type(_temp84.value) == "table" and _rawget(_temp84.value, "__call_thing")) then
        _temp84 = _temp84:value()
      elseif _temp84.value ~= nil then
        _temp84 = _temp84.value

        elseif _temp84.no_undermethod ~= nil then
          _temp84 =  _temp84:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp84, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.value ~= nil then
        _temp84 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp84 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.value ~= nil then
        _temp84 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp84 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end


local _temp85 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp85 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp85 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp85)
      if _t == "table" then
                      if _type(_temp85.var) == "function" or (_type(_temp85.var) == "table" and _rawget(_temp85.var, "__call_thing")) then
        _temp85 = _temp85:var()
      elseif _temp85.var ~= nil then
        _temp85 = _temp85.var

        elseif _temp85.no_undermethod ~= nil then
          _temp85 =  _temp85:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp85, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp85)
      if _n.var ~= nil then
        _temp85 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp85)
      if _f.var ~= nil then
        _temp85 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _temp85 == nil then
        _error(exception:null_error("_temp85", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp85))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp83 =  get_undervalue(_self, _temp84,_temp85)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp83 =  _self:get_undervalue(_temp84,_temp85)
      elseif _self.get_undervalue ~= nil then
        _temp83 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("get_value") , _temp84,_temp85)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("get_value") , _temp84,_temp85)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp85
      local _t = _type(_temp82)
      if _t == "table" then
                      if _type(_temp82._less_less) == "function" or (_type(_temp82._less_less) == "table" and _rawget(_temp82._less_less, "__call_thing")) then
        _temp85 = _temp82:_less_less(_temp83)
      elseif _temp82._less_less ~= nil then
        _temp85 = _temp82._less_less

        elseif _temp82.no_undermethod ~= nil then
          _temp85 =  _temp82:no_undermethod(string:new("<<") , _temp83)
        else
          _error(exception:method_error(_temp82, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp82)
      if _n._less_less ~= nil then
        _temp85 = _n:_less_less(_temp83)
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp82)
      if _f._less_less ~= nil then
        _temp85 = _f:_less_less(_temp83)
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _temp82 == nil then
        _error(exception:null_error("_temp82", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp82))
      end

_dummy_ = _temp85 
end

    if _type(_temp79) == "function" or (_type(_temp79) == "table" and _rawget(_temp79, "__call_thing")) then
      return  _temp79(_self)

    elseif _temp79 then
      return  _temp79
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp86)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp86)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp86)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp86)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp86 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp86 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp94 = function (_self, _temp88,_temp87)
        if _temp88 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp87 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp87 =  null(_self)

    elseif null then
      _temp87 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp87 =  _self:null()
      elseif _self.null ~= nil then
        _temp87 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp89 = nil
    if _type(_temp88) == "function" or (_type(_temp88) == "table" and _rawget(_temp88, "__call_thing")) then
      _temp89 =  _temp88(_self)

    elseif _temp88 then
      _temp89 =  _temp88
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp89 =  _self:node()
      elseif _self.node ~= nil then
        _temp89 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp90 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp90 =  null(_self)

    elseif null then
      _temp90 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp90 =  _self:null()
      elseif _self.null ~= nil then
        _temp90 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp90 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp90 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp91 = nil

        if invoke_underlocal == nil then
          _temp91 = _self["invoke_underlocal"]
          if _temp91 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp91 = invoke_underlocal
        end

local _temp92 = nil
    if _type(_temp87) == "function" or (_type(_temp87) == "table" and _rawget(_temp87, "__call_thing")) then
      _temp92 =  _temp87(_self)

    elseif _temp87 then
      _temp92 =  _temp87
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp92 =  _self:var()
      elseif _self.var ~= nil then
        _temp92 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp89,_temp90,_temp91,_temp92)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp89,_temp90,_temp91,_temp92)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp86)
      if _t == "table" then
                      if _type(_temp86.walk) == "function" or (_type(_temp86.walk) == "table" and _rawget(_temp86.walk, "__call_thing")) then
        _dummy_ = _temp86:walk(_temp4,_temp94)
      elseif _temp86.walk ~= nil then
        _dummy_ = _temp86.walk

        elseif _temp86.no_undermethod ~= nil then
          _dummy_ =  _temp86:no_undermethod(string:new("walk") , _temp4,_temp94)
        else
          _error(exception:method_error(_temp86, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp86)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp94)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp86)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp94)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _temp86 == nil then
        _error(exception:null_error("_temp86", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp86))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp94 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp94 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp102 = function (_self, _temp96,_temp95)
        if _temp96 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp95 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp95 =  null(_self)

    elseif null then
      _temp95 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp95 =  _self:null()
      elseif _self.null ~= nil then
        _temp95 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp97 = nil
    if _type(_temp96) == "function" or (_type(_temp96) == "table" and _rawget(_temp96, "__call_thing")) then
      _temp97 =  _temp96(_self)

    elseif _temp96 then
      _temp97 =  _temp96
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp97 =  _self:node()
      elseif _self.node ~= nil then
        _temp97 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp98 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp98 =  null(_self)

    elseif null then
      _temp98 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp98 =  _self:null()
      elseif _self.null ~= nil then
        _temp98 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp98 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp98 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp99 = nil

        if invoke_underlocal == nil then
          _temp99 = _self["invoke_underlocal"]
          if _temp99 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp99 = invoke_underlocal
        end

local _temp100 = nil
    if _type(_temp95) == "function" or (_type(_temp95) == "table" and _rawget(_temp95, "__call_thing")) then
      _temp100 =  _temp95(_self)

    elseif _temp95 then
      _temp100 =  _temp95
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp100 =  _self:var()
      elseif _self.var ~= nil then
        _temp100 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp97,_temp98,_temp99,_temp100)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp97,_temp98,_temp99,_temp100)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp94)
      if _t == "table" then
                      if _type(_temp94.walk) == "function" or (_type(_temp94.walk) == "table" and _rawget(_temp94.walk, "__call_thing")) then
        _dummy_ = _temp94:walk(_temp4,_temp102)
      elseif _temp94.walk ~= nil then
        _dummy_ = _temp94.walk

        elseif _temp94.no_undermethod ~= nil then
          _dummy_ =  _temp94:no_undermethod(string:new("walk") , _temp4,_temp102)
        else
          _error(exception:method_error(_temp94, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp94)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp102)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp94)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp102)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _temp94 == nil then
        _error(exception:null_error("_temp94", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp94))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp102 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp102 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp110 = function (_self, _temp104,_temp103)
        if _temp104 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp103 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp103 =  null(_self)

    elseif null then
      _temp103 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp103 =  _self:null()
      elseif _self.null ~= nil then
        _temp103 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp105 = nil
    if _type(_temp104) == "function" or (_type(_temp104) == "table" and _rawget(_temp104, "__call_thing")) then
      _temp105 =  _temp104(_self)

    elseif _temp104 then
      _temp105 =  _temp104
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp105 =  _self:node()
      elseif _self.node ~= nil then
        _temp105 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp106 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp106 =  null(_self)

    elseif null then
      _temp106 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp106 =  _self:null()
      elseif _self.null ~= nil then
        _temp106 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp106 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp106 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp107 = nil

        if invoke_underself == nil then
          _temp107 = _self["invoke_underself"]
          if _temp107 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp107 = invoke_underself
        end

local _temp108 = nil
    if _type(_temp103) == "function" or (_type(_temp103) == "table" and _rawget(_temp103, "__call_thing")) then
      _temp108 =  _temp103(_self)

    elseif _temp103 then
      _temp108 =  _temp103
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp108 =  _self:var()
      elseif _self.var ~= nil then
        _temp108 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp108 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp108 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp105,_temp106,_temp107,_temp108)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp105,_temp106,_temp107,_temp108)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp102)
      if _t == "table" then
                      if _type(_temp102.walk) == "function" or (_type(_temp102.walk) == "table" and _rawget(_temp102.walk, "__call_thing")) then
        _dummy_ = _temp102:walk(_temp4,_temp110)
      elseif _temp102.walk ~= nil then
        _dummy_ = _temp102.walk

        elseif _temp102.no_undermethod ~= nil then
          _dummy_ =  _temp102:no_undermethod(string:new("walk") , _temp4,_temp110)
        else
          _error(exception:method_error(_temp102, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp102)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp110)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp102)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp110)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _temp102 == nil then
        _error(exception:null_error("_temp102", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp102))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp110 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp110 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp120 = function (_self, _temp112,_temp111)
        if _temp112 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp111 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp111 =  null(_self)

    elseif null then
      _temp111 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp111 =  _self:null()
      elseif _self.null ~= nil then
        _temp111 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp113
local _temp114 = nil
        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp114 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.target) == "function" or (_type(_temp114.target) == "table" and _rawget(_temp114.target, "__call_thing")) then
        _temp114 = _temp114:target()
      elseif _temp114.target ~= nil then
        _temp114 = _temp114.target

        elseif _temp114.no_undermethod ~= nil then
          _temp114 =  _temp114:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp114, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.target ~= nil then
        _temp114 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp114 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.target ~= nil then
        _temp114 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp114 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end


local _temp115 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp115 =  _temp111(_self)

    elseif _temp111 then
      _temp115 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp115 =  _self:var()
      elseif _self.var ~= nil then
        _temp115 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp113 =  process(_self, _temp114,_temp115)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp113 =  _self:process(_temp114,_temp115)
      elseif _self.process ~= nil then
        _temp113 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp113 =  _self:no_undermethod(string:new("process") , _temp114,_temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp113 =  no_undermethod(_self, string:new("process") , _temp114,_temp115)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp115 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp115 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp114 =  null(_self)

    elseif null then
      _temp114 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp114 =  _self:null()
      elseif _self.null ~= nil then
        _temp114 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp114 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp114 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp115) == "table" then
          _temp115["method"] = _temp114
        elseif _type(_temp115) == "number" then
          number["method"] = _temp114
        else
          _error("Cannot set method on " .. _temp115)
        end

    if _type(_temp112) == "function" or (_type(_temp112) == "table" and _rawget(_temp112, "__call_thing")) then
      _temp115 =  _temp112(_self)

    elseif _temp112 then
      _temp115 =  _temp112
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp115 =  _self:node()
      elseif _self.node ~= nil then
        _temp115 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp116 = nil
    if _type(_temp113) == "function" or (_type(_temp113) == "table" and _rawget(_temp113, "__call_thing")) then
      _temp116 =  _temp113(_self)

    elseif _temp113 then
      _temp116 =  _temp113
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp116 =  _self:target()
      elseif _self.target ~= nil then
        _temp116 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp116 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp116 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp117 = nil

        if invoke_underindex_underget == nil then
          _temp117 = _self["invoke_underindex_underget"]
          if _temp117 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp117 = invoke_underindex_underget
        end

local _temp118 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp118 =  _temp111(_self)

    elseif _temp111 then
      _temp118 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp118 =  _self:var()
      elseif _self.var ~= nil then
        _temp118 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp118 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp118 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp115,_temp116,_temp117,_temp118)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp115,_temp116,_temp117,_temp118)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp110)
      if _t == "table" then
                      if _type(_temp110.walk) == "function" or (_type(_temp110.walk) == "table" and _rawget(_temp110.walk, "__call_thing")) then
        _dummy_ = _temp110:walk(_temp4,_temp120)
      elseif _temp110.walk ~= nil then
        _dummy_ = _temp110.walk

        elseif _temp110.no_undermethod ~= nil then
          _dummy_ =  _temp110:no_undermethod(string:new("walk") , _temp4,_temp120)
        else
          _error(exception:method_error(_temp110, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp110)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp120)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp110)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp120)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _temp110 == nil then
        _error(exception:null_error("_temp110", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp110))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp120 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp120 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_get")

local _temp128 = function (_self, _temp122,_temp121)
        if _temp122 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp121 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp121 =  null(_self)

    elseif null then
      _temp121 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp121 =  _self:null()
      elseif _self.null ~= nil then
        _temp121 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp121 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp121 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp123
local _temp124 = nil
        local _t = _type(_temp122)
        if _t == "table" then
          if _rawget(_temp122, "__call_thing") == nil then
            _temp124 = _temp122
          else
                  if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

          end
        elseif _t == "number" then
          _temp124 = _temp122
        elseif _t == "function" then
                if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

        elseif _temp122 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.target) == "function" or (_type(_temp124.target) == "table" and _rawget(_temp124.target, "__call_thing")) then
        _temp124 = _temp124:target()
      elseif _temp124.target ~= nil then
        _temp124 = _temp124.target

        elseif _temp124.no_undermethod ~= nil then
          _temp124 =  _temp124:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp124, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.target ~= nil then
        _temp124 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp124 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.target ~= nil then
        _temp124 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp124 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp123 =  process(_self, _temp124)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp123 =  _self:process(_temp124)
      elseif _self.process ~= nil then
        _temp123 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("process") , _temp124)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("process") , _temp124)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp122) == "function" or (_type(_temp122) == "table" and _rawget(_temp122, "__call_thing")) then
      _temp124 =  _temp122(_self)

    elseif _temp122 then
      _temp124 =  _temp122
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp124 =  _self:node()
      elseif _self.node ~= nil then
        _temp124 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp124 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp124 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp125 = nil
    if _type(_temp123) == "function" or (_type(_temp123) == "table" and _rawget(_temp123, "__call_thing")) then
      _temp125 =  _temp123(_self)

    elseif _temp123 then
      _temp125 =  _temp123
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp125 =  _self:target()
      elseif _self.target ~= nil then
        _temp125 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp126 = nil
    if _type(_temp121) == "function" or (_type(_temp121) == "table" and _rawget(_temp121, "__call_thing")) then
      _temp126 =  _temp121(_self)

    elseif _temp121 then
      _temp126 =  _temp121
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp126 =  _self:var()
      elseif _self.var ~= nil then
        _temp126 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp126 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp126 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underget_underdirect) == "function" or (_type(invoke_underindex_underget_underdirect) == "table" and _rawget(invoke_underindex_underget_underdirect, "__call_thing")) then
      return  invoke_underindex_underget_underdirect(_self, _temp124,_temp125,_temp126)

    elseif invoke_underindex_underget_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_get_direct (" .. object.__type(invoke_underindex_underget_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underget_underdirect) == "function" or (_type(_self.invoke_underindex_underget_underdirect) == "table" and _rawget(_self.invoke_underindex_underget_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underget_underdirect(_temp124,_temp125,_temp126)
      elseif _self.invoke_underindex_underget_underdirect ~= nil then
        return  _self.invoke_underindex_underget_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      else
        _error(exception:name_error("invoke_index_get_direct"))
      end
    end

end

      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120.walk) == "function" or (_type(_temp120.walk) == "table" and _rawget(_temp120.walk, "__call_thing")) then
        _dummy_ = _temp120:walk(_temp4,_temp128)
      elseif _temp120.walk ~= nil then
        _dummy_ = _temp120.walk

        elseif _temp120.no_undermethod ~= nil then
          _dummy_ =  _temp120:no_undermethod(string:new("walk") , _temp4,_temp128)
        else
          _error(exception:method_error(_temp120, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp128)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp128)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp128 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp128 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_set")

local _temp136 = function (_self, _temp130,_temp129)
        if _temp130 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp129 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp129 =  null(_self)

    elseif null then
      _temp129 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp129 =  _self:null()
      elseif _self.null ~= nil then
        _temp129 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp129 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp129 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp131
local _temp132 = nil
        local _t = _type(_temp130)
        if _t == "table" then
          if _rawget(_temp130, "__call_thing") == nil then
            _temp132 = _temp130
          else
                  if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

          end
        elseif _t == "number" then
          _temp132 = _temp130
        elseif _t == "function" then
                if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

        elseif _temp130 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp132)
      if _t == "table" then
                      if _type(_temp132.target) == "function" or (_type(_temp132.target) == "table" and _rawget(_temp132.target, "__call_thing")) then
        _temp132 = _temp132:target()
      elseif _temp132.target ~= nil then
        _temp132 = _temp132.target

        elseif _temp132.no_undermethod ~= nil then
          _temp132 =  _temp132:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp132, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp132)
      if _n.target ~= nil then
        _temp132 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp132 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp132)
      if _f.target ~= nil then
        _temp132 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp132 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _temp132 == nil then
        _error(exception:null_error("_temp132", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp132))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp131 =  process(_self, _temp132)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp131 =  _self:process(_temp132)
      elseif _self.process ~= nil then
        _temp131 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("process") , _temp132)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("process") , _temp132)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp130) == "function" or (_type(_temp130) == "table" and _rawget(_temp130, "__call_thing")) then
      _temp132 =  _temp130(_self)

    elseif _temp130 then
      _temp132 =  _temp130
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp132 =  _self:node()
      elseif _self.node ~= nil then
        _temp132 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp132 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp132 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp133 = nil
    if _type(_temp131) == "function" or (_type(_temp131) == "table" and _rawget(_temp131, "__call_thing")) then
      _temp133 =  _temp131(_self)

    elseif _temp131 then
      _temp133 =  _temp131
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp133 =  _self:target()
      elseif _self.target ~= nil then
        _temp133 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp134 = nil
    if _type(_temp129) == "function" or (_type(_temp129) == "table" and _rawget(_temp129, "__call_thing")) then
      _temp134 =  _temp129(_self)

    elseif _temp129 then
      _temp134 =  _temp129
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp134 =  _self:var()
      elseif _self.var ~= nil then
        _temp134 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp134 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp134 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underset_underdirect) == "function" or (_type(invoke_underindex_underset_underdirect) == "table" and _rawget(invoke_underindex_underset_underdirect, "__call_thing")) then
      return  invoke_underindex_underset_underdirect(_self, _temp132,_temp133,_temp134)

    elseif invoke_underindex_underset_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_set_direct (" .. object.__type(invoke_underindex_underset_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underset_underdirect) == "function" or (_type(_self.invoke_underindex_underset_underdirect) == "table" and _rawget(_self.invoke_underindex_underset_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underset_underdirect(_temp132,_temp133,_temp134)
      elseif _self.invoke_underindex_underset_underdirect ~= nil then
        return  _self.invoke_underindex_underset_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_set_direct") , _temp132,_temp133,_temp134)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_set_direct") , _temp132,_temp133,_temp134)
      else
        _error(exception:name_error("invoke_index_set_direct"))
      end
    end

end

      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.walk) == "function" or (_type(_temp128.walk) == "table" and _rawget(_temp128.walk, "__call_thing")) then
        _dummy_ = _temp128:walk(_temp4,_temp136)
      elseif _temp128.walk ~= nil then
        _dummy_ = _temp128.walk

        elseif _temp128.no_undermethod ~= nil then
          _dummy_ =  _temp128:no_undermethod(string:new("walk") , _temp4,_temp136)
        else
          _error(exception:method_error(_temp128, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp136)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp136)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp136)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp136)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp136 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp136 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp136 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp136 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp136 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp136 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp136 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp136 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp136 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp136 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp146 = function (_self, _temp138,_temp137)
        if _temp138 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp137 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp137 =  null(_self)

    elseif null then
      _temp137 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp137 =  _self:null()
      elseif _self.null ~= nil then
        _temp137 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp137 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp137 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp139
local _temp140 = nil
        local _t = _type(_temp138)
        if _t == "table" then
          if _rawget(_temp138, "__call_thing") == nil then
            _temp140 = _temp138
          else
                  if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp140 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp140 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp140 =  _temp138(_self)
      end

          end
        elseif _t == "number" then
          _temp140 = _temp138
        elseif _t == "function" then
                if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp140 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp140 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp140 =  _temp138(_self)
      end

        elseif _temp138 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp140)
      if _t == "table" then
                      if _type(_temp140.target) == "function" or (_type(_temp140.target) == "table" and _rawget(_temp140.target, "__call_thing")) then
        _temp140 = _temp140:target()
      elseif _temp140.target ~= nil then
        _temp140 = _temp140.target

        elseif _temp140.no_undermethod ~= nil then
          _temp140 =  _temp140:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp140, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp140)
      if _n.target ~= nil then
        _temp140 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp140 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp140, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp140)
      if _f.target ~= nil then
        _temp140 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp140 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp140, "target"))
      end

      elseif _temp140 == nil then
        _error(exception:null_error("_temp140", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp140))
      end


local _temp141 = nil
    if _type(_temp137) == "function" or (_type(_temp137) == "table" and _rawget(_temp137, "__call_thing")) then
      _temp141 =  _temp137(_self)

    elseif _temp137 then
      _temp141 =  _temp137
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp141 =  _self:var()
      elseif _self.var ~= nil then
        _temp141 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp139 =  process(_self, _temp140,_temp141)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp139 =  _self:process(_temp140,_temp141)
      elseif _self.process ~= nil then
        _temp139 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("process") , _temp140,_temp141)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("process") , _temp140,_temp141)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp138)
        if _t == "table" then
          if _rawget(_temp138, "__call_thing") == nil then
            _temp141 = _temp138
          else
                  if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp141 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp141 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp138(_self)
      end

          end
        elseif _t == "number" then
          _temp141 = _temp138
        elseif _t == "function" then
                if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp141 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp141 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp138(_self)
      end

        elseif _temp138 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp140 =  null(_self)

    elseif null then
      _temp140 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp140 =  _self:null()
      elseif _self.null ~= nil then
        _temp140 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp140 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp140 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp141) == "table" then
          _temp141["method"] = _temp140
        elseif _type(_temp141) == "number" then
          number["method"] = _temp140
        else
          _error("Cannot set method on " .. _temp141)
        end

    if _type(_temp138) == "function" or (_type(_temp138) == "table" and _rawget(_temp138, "__call_thing")) then
      _temp141 =  _temp138(_self)

    elseif _temp138 then
      _temp141 =  _temp138
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp141 =  _self:node()
      elseif _self.node ~= nil then
        _temp141 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp142 = nil
    if _type(_temp139) == "function" or (_type(_temp139) == "table" and _rawget(_temp139, "__call_thing")) then
      _temp142 =  _temp139(_self)

    elseif _temp139 then
      _temp142 =  _temp139
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp142 =  _self:target()
      elseif _self.target ~= nil then
        _temp142 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp142 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp142 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp143 = nil

        if invoke_underfunction == nil then
          _temp143 = _self["invoke_underfunction"]
          if _temp143 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp143 = invoke_underfunction
        end

local _temp144 = nil
    if _type(_temp137) == "function" or (_type(_temp137) == "table" and _rawget(_temp137, "__call_thing")) then
      _temp144 =  _temp137(_self)

    elseif _temp137 then
      _temp144 =  _temp137
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp144 =  _self:var()
      elseif _self.var ~= nil then
        _temp144 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp144 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp144 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp141,_temp142,_temp143,_temp144)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp141,_temp142,_temp143,_temp144)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp141,_temp142,_temp143,_temp144)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp141,_temp142,_temp143,_temp144)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp136)
      if _t == "table" then
                      if _type(_temp136.walk) == "function" or (_type(_temp136.walk) == "table" and _rawget(_temp136.walk, "__call_thing")) then
        _dummy_ = _temp136:walk(_temp4,_temp146)
      elseif _temp136.walk ~= nil then
        _dummy_ = _temp136.walk

        elseif _temp136.no_undermethod ~= nil then
          _dummy_ =  _temp136:no_undermethod(string:new("walk") , _temp4,_temp146)
        else
          _error(exception:method_error(_temp136, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp136)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp146)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp136, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp136)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp146)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp136, "walk"))
      end

      elseif _temp136 == nil then
        _error(exception:null_error("_temp136", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp136))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp146 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp146 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp155 = function (_self, _temp148,_temp147)
        if _temp148 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp147 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp147 =  null(_self)

    elseif null then
      _temp147 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp147 =  _self:null()
      elseif _self.null ~= nil then
        _temp147 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp149
local _temp150 = nil
        local _t = _type(_temp148)
        if _t == "table" then
          if _rawget(_temp148, "__call_thing") == nil then
            _temp150 = _temp148
          else
                  if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp150 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp150 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp148(_self)
      end

          end
        elseif _t == "number" then
          _temp150 = _temp148
        elseif _t == "function" then
                if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp150 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp150 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp148(_self)
      end

        elseif _temp148 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp150)
      if _t == "table" then
                      if _type(_temp150.target) == "function" or (_type(_temp150.target) == "table" and _rawget(_temp150.target, "__call_thing")) then
        _temp150 = _temp150:target()
      elseif _temp150.target ~= nil then
        _temp150 = _temp150.target

        elseif _temp150.no_undermethod ~= nil then
          _temp150 =  _temp150:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp150, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp150)
      if _n.target ~= nil then
        _temp150 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp150 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp150, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp150)
      if _f.target ~= nil then
        _temp150 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp150 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp150, "target"))
      end

      elseif _temp150 == nil then
        _error(exception:null_error("_temp150", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp150))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp149 =  process(_self, _temp150)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp149 =  _self:process(_temp150)
      elseif _self.process ~= nil then
        _temp149 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp149 =  _self:no_undermethod(string:new("process") , _temp150)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp149 =  no_undermethod(_self, string:new("process") , _temp150)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp148) == "function" or (_type(_temp148) == "table" and _rawget(_temp148, "__call_thing")) then
      _temp150 =  _temp148(_self)

    elseif _temp148 then
      _temp150 =  _temp148
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp150 =  _self:node()
      elseif _self.node ~= nil then
        _temp150 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp150 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp150 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp151 = nil
    if _type(_temp149) == "function" or (_type(_temp149) == "table" and _rawget(_temp149, "__call_thing")) then
      _temp151 =  _temp149(_self)

    elseif _temp149 then
      _temp151 =  _temp149
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp151 =  _self:target()
      elseif _self.target ~= nil then
        _temp151 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp152 = nil

        if invoke_undermethod == nil then
          _temp152 = _self["invoke_undermethod"]
          if _temp152 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp152 = invoke_undermethod
        end

local _temp153 = nil
    if _type(_temp147) == "function" or (_type(_temp147) == "table" and _rawget(_temp147, "__call_thing")) then
      _temp153 =  _temp147(_self)

    elseif _temp147 then
      _temp153 =  _temp147
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp153 =  _self:var()
      elseif _self.var ~= nil then
        _temp153 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp153 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp153 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp150,_temp151,_temp152,_temp153)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp150,_temp151,_temp152,_temp153)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp150,_temp151,_temp152,_temp153)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp150,_temp151,_temp152,_temp153)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp146)
      if _t == "table" then
                      if _type(_temp146.walk) == "function" or (_type(_temp146.walk) == "table" and _rawget(_temp146.walk, "__call_thing")) then
        _dummy_ = _temp146:walk(_temp4,_temp155)
      elseif _temp146.walk ~= nil then
        _dummy_ = _temp146.walk

        elseif _temp146.no_undermethod ~= nil then
          _dummy_ =  _temp146:no_undermethod(string:new("walk") , _temp4,_temp155)
        else
          _error(exception:method_error(_temp146, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp146)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp155)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp155)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp146)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp155)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp155)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _temp146 == nil then
        _error(exception:null_error("_temp146", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp146))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp155 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp155 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp155 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp155 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp155 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp155 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp155 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp155 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp162 = function (_self, _temp156)
        if _temp156 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp157
        local _t = _type(_temp156)
        if _t == "table" then
          if _rawget(_temp156, "__call_thing") == nil then
            _temp157 = _temp156
          else
                  if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

          end
        elseif _t == "number" then
          _temp157 = _temp156
        elseif _t == "function" then
                if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

        elseif _temp156 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.value) == "function" or (_type(_temp157.value) == "table" and _rawget(_temp157.value, "__call_thing")) then
        _temp157 = _temp157:value()
      elseif _temp157.value ~= nil then
        _temp157 = _temp157.value

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.value ~= nil then
        _temp157 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.value ~= nil then
        _temp157 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end

      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.to_underf) == "function" or (_type(_temp157.to_underf) == "table" and _rawget(_temp157.to_underf, "__call_thing")) then
        _temp157 = _temp157:to_underf()
      elseif _temp157.to_underf ~= nil then
        _temp157 = _temp157.to_underf

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.to_underf ~= nil then
        _temp157 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.to_underf ~= nil then
        _temp157 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end


local _temp158 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp158 =  _temp157(_self)

    elseif _temp157 then
      _temp158 =  _temp157
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp158 =  _self:val()
      elseif _self.val ~= nil then
        _temp158 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp158 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp158 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp159 = string:new("")

local _temp160 = string:new("number")

local _temp161 = {}
_temp161[string:new("type")] = _temp160
_temp161 = hash:new(_temp161)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp158,_temp159,_temp161)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp158,_temp159,_temp161)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp158,_temp159,_temp161)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp158,_temp159,_temp161)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp155)
      if _t == "table" then
                      if _type(_temp155.walk) == "function" or (_type(_temp155.walk) == "table" and _rawget(_temp155.walk, "__call_thing")) then
        _dummy_ = _temp155:walk(_temp4,_temp162)
      elseif _temp155.walk ~= nil then
        _dummy_ = _temp155.walk

        elseif _temp155.no_undermethod ~= nil then
          _dummy_ =  _temp155:no_undermethod(string:new("walk") , _temp4,_temp162)
        else
          _error(exception:method_error(_temp155, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp155)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp162)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp162)
      else
        _error(exception:method_error(_temp155, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp155)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp162)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp162)
      else
        _error(exception:method_error(_temp155, "walk"))
      end

      elseif _temp155 == nil then
        _error(exception:null_error("_temp155", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp155))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp162 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp162 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp162 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp162 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp162 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp162 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp162 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp162 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp162 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp162 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp206 = function (_self, _temp164,_temp163)
        if _temp164 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp163 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp163 =  null(_self)

    elseif null then
      _temp163 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp163 =  _self:null()
      elseif _self.null ~= nil then
        _temp163 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp165 = nil
        local _t = _type(_temp164)
        if _t == "table" then
          if _rawget(_temp164, "__call_thing") == nil then
            _temp165 = _temp164
          else
                  if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp165 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp165 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp165 =  _temp164(_self)
      end

          end
        elseif _t == "number" then
          _temp165 = _temp164
        elseif _t == "function" then
                if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp165 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp165 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp165 =  _temp164(_self)
      end

        elseif _temp164 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165.nodes) == "function" or (_type(_temp165.nodes) == "table" and _rawget(_temp165.nodes, "__call_thing")) then
        _temp165 = _temp165:nodes()
      elseif _temp165.nodes ~= nil then
        _temp165 = _temp165.nodes

        elseif _temp165.no_undermethod ~= nil then
          _temp165 =  _temp165:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp165, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n.nodes ~= nil then
        _temp165 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp165, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f.nodes ~= nil then
        _temp165 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp165, "nodes"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("_temp165", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end

      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165.empty_question) == "function" or (_type(_temp165.empty_question) == "table" and _rawget(_temp165.empty_question, "__call_thing")) then
        _temp165 = _temp165:empty_question()
      elseif _temp165.empty_question ~= nil then
        _temp165 = _temp165.empty_question

        elseif _temp165.no_undermethod ~= nil then
          _temp165 =  _temp165:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp165, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n.empty_question ~= nil then
        _temp165 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp165, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f.empty_question ~= nil then
        _temp165 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp165, "empty?"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("_temp165", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end



local _temp170 = function (_self)

local _temp166 = nil
    if _type(_temp163) == "function" or (_type(_temp163) == "table" and _rawget(_temp163, "__call_thing")) then
      _temp166 =  _temp163(_self)

    elseif _temp163 then
      _temp166 =  _temp163
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp166 =  _self:var()
      elseif _self.var ~= nil then
        _temp166 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp166 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp166 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp167 = string:new("array:new()")

local _temp168 = string:new("array")

local _temp169 = {}
_temp169[string:new("type")] = _temp168
_temp169 = hash:new(_temp169)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp166,_temp167,_temp169)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp166,_temp167,_temp169)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp166,_temp167,_temp169)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp166,_temp167,_temp169)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp204 = function (_self)

local _temp171
local _temp172 = nil
    if _type(_temp163) == "function" or (_type(_temp163) == "table" and _rawget(_temp163, "__call_thing")) then
      _temp172 =  _temp163(_self)

    elseif _temp163 then
      _temp172 =  _temp163
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp172 =  _self:var()
      elseif _self.var ~= nil then
        _temp172 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp172 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp172 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp171 =  set_underresult(_self, _temp172)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp171 =  _self:set_underresult(_temp172)
      elseif _self.set_underresult ~= nil then
        _temp171 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("set_result") , _temp172)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("set_result") , _temp172)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp173
        local _t = _type(_temp171)
        if _t == "table" then
          if _rawget(_temp171, "__call_thing") == nil then
            _temp173 = _temp171
          else
                  if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp173 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp173 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp173 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp173 =  _temp171(_self)
      end

          end
        elseif _t == "number" then
          _temp173 = _temp171
        elseif _t == "function" then
                if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp173 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp173 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp173 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp173 =  _temp171(_self)
      end

        elseif _temp171 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp173)
      if _t == "table" then
                      if _type(_temp173.var) == "function" or (_type(_temp173.var) == "table" and _rawget(_temp173.var, "__call_thing")) then
        _temp173 = _temp173:var()
      elseif _temp173.var ~= nil then
        _temp173 = _temp173.var

        elseif _temp173.no_undermethod ~= nil then
          _temp173 =  _temp173:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp173)
      if _n.var ~= nil then
        _temp173 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp173 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp173)
      if _f.var ~= nil then
        _temp173 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp173 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp173 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp173))
      end


local _temp174
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp174 =  _self:my()
      elseif _self.my ~= nil then
        _temp174 =  _self.my

        elseif my ~= nil then
          _temp174 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp174)
      if _t == "table" then
                      if _type(_temp174.env) == "function" or (_type(_temp174.env) == "table" and _rawget(_temp174.env, "__call_thing")) then
        _temp174 = _temp174:env()
      elseif _temp174.env ~= nil then
        _temp174 = _temp174.env

        elseif _temp174.no_undermethod ~= nil then
          _temp174 =  _temp174:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp174)
      if _n.env ~= nil then
        _temp174 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp174 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp174)
      if _f.env ~= nil then
        _temp174 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp174 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp174 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp174))
      end

      local _t = _type(_temp174)
      if _t == "table" then
                      if _type(_temp174.next_undertemp) == "function" or (_type(_temp174.next_undertemp) == "table" and _rawget(_temp174.next_undertemp, "__call_thing")) then
        _temp174 = _temp174:next_undertemp()
      elseif _temp174.next_undertemp ~= nil then
        _temp174 = _temp174.next_undertemp

        elseif _temp174.no_undermethod ~= nil then
          _temp174 =  _temp174:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp174)
      if _n.next_undertemp ~= nil then
        _temp174 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp174 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp174)
      if _f.next_undertemp ~= nil then
        _temp174 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp174 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp174 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp174))
      end


local _temp175
do
local _temp176 = nil
        local _t = _type(_temp171)
        if _t == "table" then
          if _rawget(_temp171, "__call_thing") == nil then
            _temp176 = _temp171
          else
                  if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp176 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp176 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp176 =  _temp171(_self)
      end

          end
        elseif _t == "number" then
          _temp176 = _temp171
        elseif _t == "function" then
                if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp176 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp176 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp176 =  _temp171(_self)
      end

        elseif _temp171 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp176)
      if _t == "table" then
                      if _type(_temp176.out) == "function" or (_type(_temp176.out) == "table" and _rawget(_temp176.out, "__call_thing")) then
        _temp176 = _temp176:out()
      elseif _temp176.out ~= nil then
        _temp176 = _temp176.out

        elseif _temp176.no_undermethod ~= nil then
          _temp176 =  _temp176:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp176, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp176)
      if _n.out ~= nil then
        _temp176 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp176 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp176, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp176)
      if _f.out ~= nil then
        _temp176 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp176 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp176, "out"))
      end

      elseif _temp176 == nil then
        _error(exception:null_error("_temp176", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp176))
      end


local _temp177 = nil
    if _type(_temp174) == "function" or (_type(_temp174) == "table" and _rawget(_temp174, "__call_thing")) then
      _temp177 =  _temp174(_self)

    elseif _temp174 then
      _temp177 =  _temp174
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp177 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp177 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp177 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp177 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp178 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp178 =  _temp173(_self)

    elseif _temp173 then
      _temp178 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp178 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp178 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp178 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp178 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp175 = string:new("" .. _tostring(_temp176) .. "\ndo\nlocal " .. _tostring(_temp177) .. "\n" .. _tostring(_temp178) .. " = {}\n")
end

local _temp179
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp179 =  my(_self)

    elseif my then
      _temp179 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp179 =  _self:my()
      elseif _self.my ~= nil then
        _temp179 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp164)
        if _t == "table" then
          if _rawget(_temp164, "__call_thing") == nil then
            _temp172 = _temp164
          else
                  if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp172 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp172 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp164(_self)
      end

          end
        elseif _t == "number" then
          _temp172 = _temp164
        elseif _t == "function" then
                if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp172 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp172 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp164(_self)
      end

        elseif _temp164 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.nodes) == "function" or (_type(_temp172.nodes) == "table" and _rawget(_temp172.nodes, "__call_thing")) then
        _temp172 = _temp172:nodes()
      elseif _temp172.nodes ~= nil then
        _temp172 = _temp172.nodes

        elseif _temp172.no_undermethod ~= nil then
          _temp172 =  _temp172:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp172, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.nodes ~= nil then
        _temp172 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp172 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp172, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.nodes ~= nil then
        _temp172 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp172 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp172, "nodes"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end


local _temp196 = function (_self, _temp180, _temp181)
        if _temp180 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp181 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp182
        local _t = _type(_temp179)
        if _t == "table" then
          if _rawget(_temp179, "__call_thing") == nil then
            _temp182 = _temp179
          else
                  if _temp179 == nil then
              if _type(_self._temp179) == "function" or (_type(_self._temp179) == "table" and _rawget(_self._temp179, "__call_thing")) then
        _temp182 =  _self:_temp179()
      elseif _self._temp179 ~= nil then
        _temp182 =  _self._temp179

        elseif _self.no_undermethod ~= nil then
          _temp182 =  _self:no_undermethod(string:new("_temp179"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp182 =  _temp179(_self)
      end

          end
        elseif _t == "number" then
          _temp182 = _temp179
        elseif _t == "function" then
                if _temp179 == nil then
              if _type(_self._temp179) == "function" or (_type(_self._temp179) == "table" and _rawget(_self._temp179, "__call_thing")) then
        _temp182 =  _self:_temp179()
      elseif _self._temp179 ~= nil then
        _temp182 =  _self._temp179

        elseif _self.no_undermethod ~= nil then
          _temp182 =  _self:no_undermethod(string:new("_temp179"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp182 =  _temp179(_self)
      end

        elseif _temp179 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp183 = nil
    if _type(_temp180) == "function" or (_type(_temp180) == "table" and _rawget(_temp180, "__call_thing")) then
      _temp183 =  _temp180(_self)

    elseif _temp180 then
      _temp183 =  _temp180
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp183 =  _self:n()
      elseif _self.n ~= nil then
        _temp183 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp184 = nil
    if _type(_temp174) == "function" or (_type(_temp174) == "table" and _rawget(_temp174, "__call_thing")) then
      _temp184 =  _temp174(_self)

    elseif _temp174 then
      _temp184 =  _temp174
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp184 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp184 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp184 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp184 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp182)
      if _t == "table" then
                      if _type(_temp182.process) == "function" or (_type(_temp182.process) == "table" and _rawget(_temp182.process, "__call_thing")) then
        _temp182 = _temp182:process(_temp183,_temp184)
      elseif _temp182.process ~= nil then
        _temp182 = _temp182.process

        elseif _temp182.no_undermethod ~= nil then
          _temp182 =  _temp182:no_undermethod(string:new("process") , _temp183,_temp184)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp182)
      if _n.process ~= nil then
        _temp182 = _n:process(_temp183,_temp184)
      elseif _n.no_undermethod ~= nil then
        _temp182 =  _n:no_undermethod(string:new("process") , _temp183,_temp184)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp182)
      if _f.process ~= nil then
        _temp182 = _f:process(_temp183,_temp184)
      elseif _f.no_undermethod ~= nil then
        _temp182 =  _f:no_undermethod(string:new("process") , _temp183,_temp184)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp182 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp182))
      end


local _temp184 
do
local _temp185 = nil
_temp185 =  _temp175

local _temp186 = nil
        local _t = _type(_temp182)
        if _t == "table" then
          if _rawget(_temp182, "__call_thing") == nil then
            _temp186 = _temp182
          else
                  if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp186 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp186 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp182(_self)
      end

          end
        elseif _t == "number" then
          _temp186 = _temp182
        elseif _t == "function" then
                if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp186 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp186 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp182(_self)
      end

        elseif _temp182 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp187 = nil
      local _t = _type(_temp186)
      if _t == "table" then
                      if _type(_temp186.out) == "function" or (_type(_temp186.out) == "table" and _rawget(_temp186.out, "__call_thing")) then
        _temp187 = _temp186:out()
      elseif _temp186.out ~= nil then
        _temp187 = _temp186.out

        elseif _temp186.no_undermethod ~= nil then
          _temp187 =  _temp186:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp186, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp186)
      if _n.out ~= nil then
        _temp187 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp186, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp186)
      if _f.out ~= nil then
        _temp187 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp186, "out"))
      end

      elseif _temp186 == nil then
        _error(exception:null_error("_temp186", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp186))
      end

local _temp188 = string:new("\n")

local _temp189 = nil
do
local _temp190 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp190 =  _temp173(_self)

    elseif _temp173 then
      _temp190 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp190 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp190 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp190 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp190 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp191 
do
local _temp192 = nil
    if _type(_temp181) == "function" or (_type(_temp181) == "table" and _rawget(_temp181, "__call_thing")) then
      _temp192 =  _temp181(_self)

    elseif _temp181 then
      _temp192 =  _temp181
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp192 =  _self:i()
      elseif _self.i ~= nil then
        _temp192 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp192 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp192 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp193
      local _t = _type(_temp192)
      if _t == "table" then
                      if _type(_temp192._plus) == "function" or (_type(_temp192._plus) == "table" and _rawget(_temp192._plus, "__call_thing")) then
        _temp193 = _temp192:_plus(1)
      elseif _temp192._plus ~= nil then
        _temp193 = _temp192._plus

        elseif _temp192.no_undermethod ~= nil then
          _temp193 =  _temp192:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp192, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp193 = _temp192 + 1
      else
              local _n = number:new(_temp192)
      if _n._plus ~= nil then
        _temp193 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp193 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp192, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp192)
      if _f._plus ~= nil then
        _temp193 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp193 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp192, "+"))
      end

      elseif _temp192 == nil then
        _error(exception:null_error("_temp192", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp192))
      end

_temp191 = _temp193 
end

local _temp194 = nil
        local _t = _type(_temp182)
        if _t == "table" then
          if _rawget(_temp182, "__call_thing") == nil then
            _temp194 = _temp182
          else
                  if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp194 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp194 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp194 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp194 =  _temp182(_self)
      end

          end
        elseif _t == "number" then
          _temp194 = _temp182
        elseif _t == "function" then
                if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp194 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp194 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp194 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp194 =  _temp182(_self)
      end

        elseif _temp182 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp194)
      if _t == "table" then
                      if _type(_temp194.var) == "function" or (_type(_temp194.var) == "table" and _rawget(_temp194.var, "__call_thing")) then
        _temp194 = _temp194:var()
      elseif _temp194.var ~= nil then
        _temp194 = _temp194.var

        elseif _temp194.no_undermethod ~= nil then
          _temp194 =  _temp194:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp194, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp194)
      if _n.var ~= nil then
        _temp194 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp194 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp194, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp194)
      if _f.var ~= nil then
        _temp194 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp194 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp194, "var"))
      end

      elseif _temp194 == nil then
        _error(exception:null_error("_temp194", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp194))
      end


_temp189 = string:new("" .. _tostring(_temp190) .. "[" .. _tostring(_temp191) .. "] = " .. _tostring(_temp194) .. "\n")
end
local _temp195
              if _type(_temp185._less_less) == "function" or (_type(_temp185._less_less) == "table" and _rawget(_temp185._less_less, "__call_thing")) then
        _temp195 = _temp185:_less_less(_temp187)
      elseif _temp185._less_less ~= nil then
        _temp195 = _temp185._less_less

        elseif _temp185.no_undermethod ~= nil then
          _temp195 =  _temp185:no_undermethod(string:new("<<") , _temp187)
        else
          _error(exception:method_error(_temp185, "<<"))
        end

local _temp187
      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195._less_less) == "function" or (_type(_temp195._less_less) == "table" and _rawget(_temp195._less_less, "__call_thing")) then
        _temp187 = _temp195:_less_less(_temp188)
      elseif _temp195._less_less ~= nil then
        _temp187 = _temp195._less_less

        elseif _temp195.no_undermethod ~= nil then
          _temp187 =  _temp195:no_undermethod(string:new("<<") , _temp188)
        else
          _error(exception:method_error(_temp195, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n._less_less ~= nil then
        _temp187 = _n:_less_less(_temp188)
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("<<") , _temp188)
      else
        _error(exception:method_error(_temp195, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f._less_less ~= nil then
        _temp187 = _f:_less_less(_temp188)
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("<<") , _temp188)
      else
        _error(exception:method_error(_temp195, "<<"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

local _temp188
      local _t = _type(_temp187)
      if _t == "table" then
                      if _type(_temp187._less_less) == "function" or (_type(_temp187._less_less) == "table" and _rawget(_temp187._less_less, "__call_thing")) then
        _temp188 = _temp187:_less_less(_temp189)
      elseif _temp187._less_less ~= nil then
        _temp188 = _temp187._less_less

        elseif _temp187.no_undermethod ~= nil then
          _temp188 =  _temp187:no_undermethod(string:new("<<") , _temp189)
        else
          _error(exception:method_error(_temp187, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp187)
      if _n._less_less ~= nil then
        _temp188 = _n:_less_less(_temp189)
      elseif _n.no_undermethod ~= nil then
        _temp188 =  _n:no_undermethod(string:new("<<") , _temp189)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp187)
      if _f._less_less ~= nil then
        _temp188 = _f:_less_less(_temp189)
      elseif _f.no_undermethod ~= nil then
        _temp188 =  _f:no_undermethod(string:new("<<") , _temp189)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _temp187 == nil then
        _error(exception:null_error("_temp187", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp187))
      end

_temp184 = _temp188 
end

return _temp184
end

      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.each_underwith_underindex) == "function" or (_type(_temp172.each_underwith_underindex) == "table" and _rawget(_temp172.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp172:each_underwith_underindex(_temp196)
      elseif _temp172.each_underwith_underindex ~= nil then
        _dummy_ = _temp172.each_underwith_underindex

        elseif _temp172.no_undermethod ~= nil then
          _dummy_ =  _temp172:no_undermethod(string:new("each_with_index") , _temp196)
        else
          _error(exception:method_error(_temp172, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp196)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp196)
      else
        _error(exception:method_error(_temp172, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp196)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp196)
      else
        _error(exception:method_error(_temp172, "each_with_index"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end

do
local _temp197 = nil
_temp197 =  _temp175

local _temp198 = nil
do
local _temp199 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp199 =  _temp173(_self)

    elseif _temp173 then
      _temp199 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp199 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp199 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp200 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp200 =  _temp173(_self)

    elseif _temp173 then
      _temp200 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp200 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp200 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp200 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp200 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp198 = string:new("" .. _tostring(_temp199) .. " = array:new(" .. _tostring(_temp200) .. ")\nend\n")
end
local _temp201
              if _type(_temp197._less_less) == "function" or (_type(_temp197._less_less) == "table" and _rawget(_temp197._less_less, "__call_thing")) then
        _temp201 = _temp197:_less_less(_temp198)
      elseif _temp197._less_less ~= nil then
        _temp201 = _temp197._less_less

        elseif _temp197.no_undermethod ~= nil then
          _temp201 =  _temp197:no_undermethod(string:new("<<") , _temp198)
        else
          _error(exception:method_error(_temp197, "<<"))
        end

_dummy_ = _temp201 
end

    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp196 =  _temp173(_self)

    elseif _temp173 then
      _temp196 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp196 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp196 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp196 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp196 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp172 =  _temp175

local _temp202 = string:new("array")

local _temp203 = {}
_temp203[string:new("type")] = _temp202
_temp203 = hash:new(_temp203)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp196,_temp172,_temp203)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp196,_temp172,_temp203)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp196,_temp172,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp196,_temp172,_temp203)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp165,_temp170,_temp204)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp165,_temp170,_temp204)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp165,_temp170,_temp204)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp165,_temp170,_temp204)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp162)
      if _t == "table" then
                      if _type(_temp162.walk) == "function" or (_type(_temp162.walk) == "table" and _rawget(_temp162.walk, "__call_thing")) then
        _dummy_ = _temp162:walk(_temp4,_temp206)
      elseif _temp162.walk ~= nil then
        _dummy_ = _temp162.walk

        elseif _temp162.no_undermethod ~= nil then
          _dummy_ =  _temp162:no_undermethod(string:new("walk") , _temp4,_temp206)
        else
          _error(exception:method_error(_temp162, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp162)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp206)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp206)
      else
        _error(exception:method_error(_temp162, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp162)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp206)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp206)
      else
        _error(exception:method_error(_temp162, "walk"))
      end

      elseif _temp162 == nil then
        _error(exception:null_error("_temp162", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp162))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp206 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp206 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp206 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp206 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp206 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp206 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp206 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp206 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp248 = function (_self, _temp208,_temp207)
        if _temp208 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp207 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp207 =  null(_self)

    elseif null then
      _temp207 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp207 =  _self:null()
      elseif _self.null ~= nil then
        _temp207 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp209 = nil
        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp209 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp209 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp209 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp209 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp209 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp209 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.nodes) == "function" or (_type(_temp209.nodes) == "table" and _rawget(_temp209.nodes, "__call_thing")) then
        _temp209 = _temp209:nodes()
      elseif _temp209.nodes ~= nil then
        _temp209 = _temp209.nodes

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp209, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.nodes ~= nil then
        _temp209 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.nodes ~= nil then
        _temp209 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end

      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.empty_question) == "function" or (_type(_temp209.empty_question) == "table" and _rawget(_temp209.empty_question, "__call_thing")) then
        _temp209 = _temp209:empty_question()
      elseif _temp209.empty_question ~= nil then
        _temp209 = _temp209.empty_question

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp209, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.empty_question ~= nil then
        _temp209 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp209, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.empty_question ~= nil then
        _temp209 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp209, "empty?"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end



local _temp214 = function (_self)

local _temp210 = nil
    if _type(_temp207) == "function" or (_type(_temp207) == "table" and _rawget(_temp207, "__call_thing")) then
      _temp210 =  _temp207(_self)

    elseif _temp207 then
      _temp210 =  _temp207
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp210 =  _self:var()
      elseif _self.var ~= nil then
        _temp210 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp210 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp210 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp211 = string:new("hash:new()")

local _temp212 = string:new("hash")

local _temp213 = {}
_temp213[string:new("type")] = _temp212
_temp213 = hash:new(_temp213)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp210,_temp211,_temp213)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp210,_temp211,_temp213)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp210,_temp211,_temp213)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp210,_temp211,_temp213)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp246 = function (_self)

local _temp215
local _temp216 = nil
    if _type(_temp207) == "function" or (_type(_temp207) == "table" and _rawget(_temp207, "__call_thing")) then
      _temp216 =  _temp207(_self)

    elseif _temp207 then
      _temp216 =  _temp207
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp216 =  _self:var()
      elseif _self.var ~= nil then
        _temp216 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp216 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp216 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp217 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp215 =  set_underresult(_self, _temp216,_temp217)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp215 =  _self:set_underresult(_temp216,_temp217)
      elseif _self.set_underresult ~= nil then
        _temp215 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("set_result") , _temp216,_temp217)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("set_result") , _temp216,_temp217)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp218
        local _t = _type(_temp215)
        if _t == "table" then
          if _rawget(_temp215, "__call_thing") == nil then
            _temp218 = _temp215
          else
                  if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp218 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp218 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp218 =  _temp215(_self)
      end

          end
        elseif _t == "number" then
          _temp218 = _temp215
        elseif _t == "function" then
                if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp218 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp218 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp218 =  _temp215(_self)
      end

        elseif _temp215 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp218)
      if _t == "table" then
                      if _type(_temp218.var) == "function" or (_type(_temp218.var) == "table" and _rawget(_temp218.var, "__call_thing")) then
        _temp218 = _temp218:var()
      elseif _temp218.var ~= nil then
        _temp218 = _temp218.var

        elseif _temp218.no_undermethod ~= nil then
          _temp218 =  _temp218:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp218)
      if _n.var ~= nil then
        _temp218 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp218 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp218)
      if _f.var ~= nil then
        _temp218 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp218 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp218 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp218))
      end


local _temp219
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp219 =  _self:my()
      elseif _self.my ~= nil then
        _temp219 =  _self.my

        elseif my ~= nil then
          _temp219 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp219)
      if _t == "table" then
                      if _type(_temp219.env) == "function" or (_type(_temp219.env) == "table" and _rawget(_temp219.env, "__call_thing")) then
        _temp219 = _temp219:env()
      elseif _temp219.env ~= nil then
        _temp219 = _temp219.env

        elseif _temp219.no_undermethod ~= nil then
          _temp219 =  _temp219:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp219)
      if _n.env ~= nil then
        _temp219 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp219 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp219)
      if _f.env ~= nil then
        _temp219 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp219 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp219 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp219))
      end

      local _t = _type(_temp219)
      if _t == "table" then
                      if _type(_temp219.next_undertemp) == "function" or (_type(_temp219.next_undertemp) == "table" and _rawget(_temp219.next_undertemp, "__call_thing")) then
        _temp219 = _temp219:next_undertemp()
      elseif _temp219.next_undertemp ~= nil then
        _temp219 = _temp219.next_undertemp

        elseif _temp219.no_undermethod ~= nil then
          _temp219 =  _temp219:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp219)
      if _n.next_undertemp ~= nil then
        _temp219 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp219 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp219)
      if _f.next_undertemp ~= nil then
        _temp219 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp219 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp219 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp219))
      end


local _temp220
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp220 =  _self:my()
      elseif _self.my ~= nil then
        _temp220 =  _self.my

        elseif my ~= nil then
          _temp220 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.env) == "function" or (_type(_temp220.env) == "table" and _rawget(_temp220.env, "__call_thing")) then
        _temp220 = _temp220:env()
      elseif _temp220.env ~= nil then
        _temp220 = _temp220.env

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.env ~= nil then
        _temp220 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.env ~= nil then
        _temp220 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end

      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.next_undertemp) == "function" or (_type(_temp220.next_undertemp) == "table" and _rawget(_temp220.next_undertemp, "__call_thing")) then
        _temp220 = _temp220:next_undertemp()
      elseif _temp220.next_undertemp ~= nil then
        _temp220 = _temp220.next_undertemp

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.next_undertemp ~= nil then
        _temp220 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.next_undertemp ~= nil then
        _temp220 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end


local _temp221
do
local _temp222 = nil
        local _t = _type(_temp215)
        if _t == "table" then
          if _rawget(_temp215, "__call_thing") == nil then
            _temp222 = _temp215
          else
                  if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp222 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp222 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp222 =  _temp215(_self)
      end

          end
        elseif _t == "number" then
          _temp222 = _temp215
        elseif _t == "function" then
                if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp222 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp222 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp222 =  _temp215(_self)
      end

        elseif _temp215 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp222)
      if _t == "table" then
                      if _type(_temp222.out) == "function" or (_type(_temp222.out) == "table" and _rawget(_temp222.out, "__call_thing")) then
        _temp222 = _temp222:out()
      elseif _temp222.out ~= nil then
        _temp222 = _temp222.out

        elseif _temp222.no_undermethod ~= nil then
          _temp222 =  _temp222:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp222, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp222)
      if _n.out ~= nil then
        _temp222 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp222 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp222, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp222)
      if _f.out ~= nil then
        _temp222 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp222 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp222, "out"))
      end

      elseif _temp222 == nil then
        _error(exception:null_error("_temp222", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp222))
      end


local _temp223 = nil
    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp223 =  _temp219(_self)

    elseif _temp219 then
      _temp223 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp223 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp223 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp224 = nil
    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp224 =  _temp220(_self)

    elseif _temp220 then
      _temp224 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp224 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp224 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp224 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp224 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp221 = string:new("" .. _tostring(_temp222) .. "\ndo\nlocal " .. _tostring(_temp223) .. ";local " .. _tostring(_temp224) .. "\n")
end

local _temp225
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp225 =  my(_self)

    elseif my then
      _temp225 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp225 =  _self:my()
      elseif _self.my ~= nil then
        _temp225 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp225 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp225 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp217 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp217 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp217 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp217 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp217 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp217 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp217 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp217 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.nodes) == "function" or (_type(_temp217.nodes) == "table" and _rawget(_temp217.nodes, "__call_thing")) then
        _temp217 = _temp217:nodes()
      elseif _temp217.nodes ~= nil then
        _temp217 = _temp217.nodes

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp217, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.nodes ~= nil then
        _temp217 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp217, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.nodes ~= nil then
        _temp217 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp217, "nodes"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end


local _temp239 = function (_self, _temp226)
        if _temp226 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp227
        local _t = _type(_temp225)
        if _t == "table" then
          if _rawget(_temp225, "__call_thing") == nil then
            _temp227 = _temp225
          else
                  if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp227 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp227 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp227 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp227 =  _temp225(_self)
      end

          end
        elseif _t == "number" then
          _temp227 = _temp225
        elseif _t == "function" then
                if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp227 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp227 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp227 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp227 =  _temp225(_self)
      end

        elseif _temp225 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp228 = nil
        local _t = _type(_temp226)
        if _t == "table" then
          if _rawget(_temp226, "__call_thing") == nil then
            _temp228 = _temp226
          else
                  if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp228 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp228 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp228 =  _temp226(_self)
      end

          end
        elseif _t == "number" then
          _temp228 = _temp226
        elseif _t == "function" then
                if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp228 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp228 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp228 =  _temp226(_self)
      end

        elseif _temp226 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp228)
      if _t == "table" then
                      if _type(_temp228.first) == "function" or (_type(_temp228.first) == "table" and _rawget(_temp228.first, "__call_thing")) then
        _temp228 = _temp228:first()
      elseif _temp228.first ~= nil then
        _temp228 = _temp228.first

        elseif _temp228.no_undermethod ~= nil then
          _temp228 =  _temp228:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp228, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp228)
      if _n.first ~= nil then
        _temp228 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp228 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp228, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp228)
      if _f.first ~= nil then
        _temp228 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp228 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp228, "first"))
      end

      elseif _temp228 == nil then
        _error(exception:null_error("_temp228", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp228))
      end


local _temp229 = nil
    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp229 =  _temp219(_self)

    elseif _temp219 then
      _temp229 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp229 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp229 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp229 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp229 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp227)
      if _t == "table" then
                      if _type(_temp227.process) == "function" or (_type(_temp227.process) == "table" and _rawget(_temp227.process, "__call_thing")) then
        _temp227 = _temp227:process(_temp228,_temp229)
      elseif _temp227.process ~= nil then
        _temp227 = _temp227.process

        elseif _temp227.no_undermethod ~= nil then
          _temp227 =  _temp227:no_undermethod(string:new("process") , _temp228,_temp229)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp227)
      if _n.process ~= nil then
        _temp227 = _n:process(_temp228,_temp229)
      elseif _n.no_undermethod ~= nil then
        _temp227 =  _n:no_undermethod(string:new("process") , _temp228,_temp229)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp227)
      if _f.process ~= nil then
        _temp227 = _f:process(_temp228,_temp229)
      elseif _f.no_undermethod ~= nil then
        _temp227 =  _f:no_undermethod(string:new("process") , _temp228,_temp229)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp227 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp227))
      end


local _temp230
        local _t = _type(_temp225)
        if _t == "table" then
          if _rawget(_temp225, "__call_thing") == nil then
            _temp230 = _temp225
          else
                  if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp230 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp230 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp230 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp230 =  _temp225(_self)
      end

          end
        elseif _t == "number" then
          _temp230 = _temp225
        elseif _t == "function" then
                if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp230 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp230 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp230 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp230 =  _temp225(_self)
      end

        elseif _temp225 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp226)
        if _t == "table" then
          if _rawget(_temp226, "__call_thing") == nil then
            _temp229 = _temp226
          else
                  if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp229 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp229 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp229 =  _temp226(_self)
      end

          end
        elseif _t == "number" then
          _temp229 = _temp226
        elseif _t == "function" then
                if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp229 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp229 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp229 =  _temp226(_self)
      end

        elseif _temp226 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp229)
      if _t == "table" then
                      if _type(_temp229.last) == "function" or (_type(_temp229.last) == "table" and _rawget(_temp229.last, "__call_thing")) then
        _temp229 = _temp229:last()
      elseif _temp229.last ~= nil then
        _temp229 = _temp229.last

        elseif _temp229.no_undermethod ~= nil then
          _temp229 =  _temp229:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp229, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp229)
      if _n.last ~= nil then
        _temp229 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp229 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp229, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp229)
      if _f.last ~= nil then
        _temp229 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp229 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp229, "last"))
      end

      elseif _temp229 == nil then
        _error(exception:null_error("_temp229", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp229))
      end


    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp228 =  _temp220(_self)

    elseif _temp220 then
      _temp228 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp228 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp228 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp228 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp228 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp230)
      if _t == "table" then
                      if _type(_temp230.process) == "function" or (_type(_temp230.process) == "table" and _rawget(_temp230.process, "__call_thing")) then
        _temp230 = _temp230:process(_temp229,_temp228)
      elseif _temp230.process ~= nil then
        _temp230 = _temp230.process

        elseif _temp230.no_undermethod ~= nil then
          _temp230 =  _temp230:no_undermethod(string:new("process") , _temp229,_temp228)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp230)
      if _n.process ~= nil then
        _temp230 = _n:process(_temp229,_temp228)
      elseif _n.no_undermethod ~= nil then
        _temp230 =  _n:no_undermethod(string:new("process") , _temp229,_temp228)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp230)
      if _f.process ~= nil then
        _temp230 = _f:process(_temp229,_temp228)
      elseif _f.no_undermethod ~= nil then
        _temp230 =  _f:no_undermethod(string:new("process") , _temp229,_temp228)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp230 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp230))
      end


local _temp228 
do
local _temp231 = nil
_temp231 =  _temp221

local _temp232 = nil
do
local _temp233 = nil
        local _t = _type(_temp227)
        if _t == "table" then
          if _rawget(_temp227, "__call_thing") == nil then
            _temp233 = _temp227
          else
                  if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp233 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp233 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp233 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp233 =  _temp227(_self)
      end

          end
        elseif _t == "number" then
          _temp233 = _temp227
        elseif _t == "function" then
                if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp233 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp233 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp233 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp233 =  _temp227(_self)
      end

        elseif _temp227 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp233)
      if _t == "table" then
                      if _type(_temp233.out) == "function" or (_type(_temp233.out) == "table" and _rawget(_temp233.out, "__call_thing")) then
        _temp233 = _temp233:out()
      elseif _temp233.out ~= nil then
        _temp233 = _temp233.out

        elseif _temp233.no_undermethod ~= nil then
          _temp233 =  _temp233:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp233, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp233)
      if _n.out ~= nil then
        _temp233 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp233 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp233, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp233)
      if _f.out ~= nil then
        _temp233 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp233 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp233, "out"))
      end

      elseif _temp233 == nil then
        _error(exception:null_error("_temp233", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp233))
      end


local _temp234 = nil
        local _t = _type(_temp230)
        if _t == "table" then
          if _rawget(_temp230, "__call_thing") == nil then
            _temp234 = _temp230
          else
                  if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp234 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp234 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp234 =  _temp230(_self)
      end

          end
        elseif _t == "number" then
          _temp234 = _temp230
        elseif _t == "function" then
                if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp234 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp234 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp234 =  _temp230(_self)
      end

        elseif _temp230 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp234)
      if _t == "table" then
                      if _type(_temp234.out) == "function" or (_type(_temp234.out) == "table" and _rawget(_temp234.out, "__call_thing")) then
        _temp234 = _temp234:out()
      elseif _temp234.out ~= nil then
        _temp234 = _temp234.out

        elseif _temp234.no_undermethod ~= nil then
          _temp234 =  _temp234:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp234, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp234)
      if _n.out ~= nil then
        _temp234 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp234 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp234, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp234)
      if _f.out ~= nil then
        _temp234 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp234 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp234, "out"))
      end

      elseif _temp234 == nil then
        _error(exception:null_error("_temp234", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp234))
      end


local _temp235 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp235 =  _temp218(_self)

    elseif _temp218 then
      _temp235 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp235 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp235 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp235 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp235 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp236 = nil
        local _t = _type(_temp227)
        if _t == "table" then
          if _rawget(_temp227, "__call_thing") == nil then
            _temp236 = _temp227
          else
                  if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp236 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp236 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp236 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp236 =  _temp227(_self)
      end

          end
        elseif _t == "number" then
          _temp236 = _temp227
        elseif _t == "function" then
                if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp236 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp236 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp236 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp236 =  _temp227(_self)
      end

        elseif _temp227 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp236)
      if _t == "table" then
                      if _type(_temp236.var) == "function" or (_type(_temp236.var) == "table" and _rawget(_temp236.var, "__call_thing")) then
        _temp236 = _temp236:var()
      elseif _temp236.var ~= nil then
        _temp236 = _temp236.var

        elseif _temp236.no_undermethod ~= nil then
          _temp236 =  _temp236:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp236, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp236)
      if _n.var ~= nil then
        _temp236 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp236 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp236, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp236)
      if _f.var ~= nil then
        _temp236 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp236 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp236, "var"))
      end

      elseif _temp236 == nil then
        _error(exception:null_error("_temp236", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp236))
      end


local _temp237 = nil
        local _t = _type(_temp230)
        if _t == "table" then
          if _rawget(_temp230, "__call_thing") == nil then
            _temp237 = _temp230
          else
                  if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp237 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp237 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp237 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp237 =  _temp230(_self)
      end

          end
        elseif _t == "number" then
          _temp237 = _temp230
        elseif _t == "function" then
                if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp237 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp237 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp237 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp237 =  _temp230(_self)
      end

        elseif _temp230 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp237)
      if _t == "table" then
                      if _type(_temp237.var) == "function" or (_type(_temp237.var) == "table" and _rawget(_temp237.var, "__call_thing")) then
        _temp237 = _temp237:var()
      elseif _temp237.var ~= nil then
        _temp237 = _temp237.var

        elseif _temp237.no_undermethod ~= nil then
          _temp237 =  _temp237:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp237, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp237)
      if _n.var ~= nil then
        _temp237 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp237 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp237, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp237)
      if _f.var ~= nil then
        _temp237 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp237 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp237, "var"))
      end

      elseif _temp237 == nil then
        _error(exception:null_error("_temp237", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp237))
      end


_temp232 = string:new("" .. _tostring(_temp233) .. "\n" .. _tostring(_temp234) .. "\n" .. _tostring(_temp235) .. "[" .. _tostring(_temp236) .. "] = " .. _tostring(_temp237) .. "\n")
end
local _temp238
              if _type(_temp231._less_less) == "function" or (_type(_temp231._less_less) == "table" and _rawget(_temp231._less_less, "__call_thing")) then
        _temp238 = _temp231:_less_less(_temp232)
      elseif _temp231._less_less ~= nil then
        _temp238 = _temp231._less_less

        elseif _temp231.no_undermethod ~= nil then
          _temp238 =  _temp231:no_undermethod(string:new("<<") , _temp232)
        else
          _error(exception:method_error(_temp231, "<<"))
        end

_temp228 = _temp238 
end

return _temp228
end

      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.each) == "function" or (_type(_temp217.each) == "table" and _rawget(_temp217.each, "__call_thing")) then
        _dummy_ = _temp217:each(_temp239)
      elseif _temp217.each ~= nil then
        _dummy_ = _temp217.each

        elseif _temp217.no_undermethod ~= nil then
          _dummy_ =  _temp217:no_undermethod(string:new("each") , _temp239)
        else
          _error(exception:method_error(_temp217, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp239)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp239)
      else
        _error(exception:method_error(_temp217, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp239)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp239)
      else
        _error(exception:method_error(_temp217, "each"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp239 =  _self:my()
      elseif _self.my ~= nil then
        _temp239 =  _self.my

        elseif my ~= nil then
          _temp239 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp239)
      if _t == "table" then
                      if _type(_temp239.env) == "function" or (_type(_temp239.env) == "table" and _rawget(_temp239.env, "__call_thing")) then
        _temp239 = _temp239:env()
      elseif _temp239.env ~= nil then
        _temp239 = _temp239.env

        elseif _temp239.no_undermethod ~= nil then
          _temp239 =  _temp239:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp239, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp239)
      if _n.env ~= nil then
        _temp239 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp239 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp239, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp239)
      if _f.env ~= nil then
        _temp239 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp239 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp239, "env"))
      end

      elseif _temp239 == nil then
        _error(exception:null_error("_temp239", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp239))
      end

    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp217 =  _temp219(_self)

    elseif _temp219 then
      _temp217 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp217 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp217 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp239)
      if _t == "table" then
                      if _type(_temp239.unset) == "function" or (_type(_temp239.unset) == "table" and _rawget(_temp239.unset, "__call_thing")) then
        _dummy_ = _temp239:unset(_temp217)
      elseif _temp239.unset ~= nil then
        _dummy_ = _temp239.unset

        elseif _temp239.no_undermethod ~= nil then
          _dummy_ =  _temp239:no_undermethod(string:new("unset") , _temp217)
        else
          _error(exception:method_error(_temp239, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp239)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp217)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp239, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp239)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp217)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp239, "unset"))
      end

      elseif _temp239 == nil then
        _error(exception:null_error("_temp239", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp239))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp217 =  _self:my()
      elseif _self.my ~= nil then
        _temp217 =  _self.my

        elseif my ~= nil then
          _temp217 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.env) == "function" or (_type(_temp217.env) == "table" and _rawget(_temp217.env, "__call_thing")) then
        _temp217 = _temp217:env()
      elseif _temp217.env ~= nil then
        _temp217 = _temp217.env

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp217, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.env ~= nil then
        _temp217 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.env ~= nil then
        _temp217 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp239 =  _temp220(_self)

    elseif _temp220 then
      _temp239 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp239 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp239 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp239 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp239 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.unset) == "function" or (_type(_temp217.unset) == "table" and _rawget(_temp217.unset, "__call_thing")) then
        _dummy_ = _temp217:unset(_temp239)
      elseif _temp217.unset ~= nil then
        _dummy_ = _temp217.unset

        elseif _temp217.no_undermethod ~= nil then
          _dummy_ =  _temp217:no_undermethod(string:new("unset") , _temp239)
        else
          _error(exception:method_error(_temp217, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp239)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp239)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp239)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp239)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

do
local _temp240 = nil
_temp240 =  _temp221

local _temp241 = nil
do
local _temp242 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp242 =  _temp218(_self)

    elseif _temp218 then
      _temp242 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp242 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp242 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp242 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp242 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp243 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp243 =  _temp218(_self)

    elseif _temp218 then
      _temp243 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp243 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp243 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp243 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp243 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp241 = string:new("\n" .. _tostring(_temp242) .. " = hash:new(" .. _tostring(_temp243) .. ")\nend\n")
end
local _temp244
              if _type(_temp240._less_less) == "function" or (_type(_temp240._less_less) == "table" and _rawget(_temp240._less_less, "__call_thing")) then
        _temp244 = _temp240:_less_less(_temp241)
      elseif _temp240._less_less ~= nil then
        _temp244 = _temp240._less_less

        elseif _temp240.no_undermethod ~= nil then
          _temp244 =  _temp240:no_undermethod(string:new("<<") , _temp241)
        else
          _error(exception:method_error(_temp240, "<<"))
        end

_dummy_ = _temp244 
end

    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp239 =  _temp218(_self)

    elseif _temp218 then
      _temp239 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp239 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp239 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp239 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp239 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp217 =  _temp221

_temp216 = string:new("hash")

local _temp245 = {}
_temp245[string:new("type")] = _temp216
_temp245 = hash:new(_temp245)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp239,_temp217,_temp245)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp239,_temp217,_temp245)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp239,_temp217,_temp245)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp239,_temp217,_temp245)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp209,_temp214,_temp246)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp209,_temp214,_temp246)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp209,_temp214,_temp246)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp209,_temp214,_temp246)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp206)
      if _t == "table" then
                      if _type(_temp206.walk) == "function" or (_type(_temp206.walk) == "table" and _rawget(_temp206.walk, "__call_thing")) then
        _dummy_ = _temp206:walk(_temp4,_temp248)
      elseif _temp206.walk ~= nil then
        _dummy_ = _temp206.walk

        elseif _temp206.no_undermethod ~= nil then
          _dummy_ =  _temp206:no_undermethod(string:new("walk") , _temp4,_temp248)
        else
          _error(exception:method_error(_temp206, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp206)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp248)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp248)
      else
        _error(exception:method_error(_temp206, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp206)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp248)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp248)
      else
        _error(exception:method_error(_temp206, "walk"))
      end

      elseif _temp206 == nil then
        _error(exception:null_error("_temp206", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp206))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp248 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp248 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp248 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp248 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp248 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp248 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp248 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp248 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp265 = function (_self, _temp250,_temp249)
        if _temp250 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp249 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp249 =  null(_self)

    elseif null then
      _temp249 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp249 =  _self:null()
      elseif _self.null ~= nil then
        _temp249 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp249 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp249 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp251 = nil
        local _t = _type(_temp250)
        if _t == "table" then
          if _rawget(_temp250, "__call_thing") == nil then
            _temp251 = _temp250
          else
                  if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp251 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp251 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp251 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp251 =  _temp250(_self)
      end

          end
        elseif _t == "number" then
          _temp251 = _temp250
        elseif _t == "function" then
                if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp251 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp251 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp251 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp251 =  _temp250(_self)
      end

        elseif _temp250 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp251)
      if _t == "table" then
                      if _type(_temp251.nodes) == "function" or (_type(_temp251.nodes) == "table" and _rawget(_temp251.nodes, "__call_thing")) then
        _temp251 = _temp251:nodes()
      elseif _temp251.nodes ~= nil then
        _temp251 = _temp251.nodes

        elseif _temp251.no_undermethod ~= nil then
          _temp251 =  _temp251:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp251, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp251)
      if _n.nodes ~= nil then
        _temp251 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp251 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp251, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp251)
      if _f.nodes ~= nil then
        _temp251 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp251 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp251, "nodes"))
      end

      elseif _temp251 == nil then
        _error(exception:null_error("_temp251", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp251))
      end

      local _t = _type(_temp251)
      if _t == "table" then
                      if _type(_temp251.empty_question) == "function" or (_type(_temp251.empty_question) == "table" and _rawget(_temp251.empty_question, "__call_thing")) then
        _temp251 = _temp251:empty_question()
      elseif _temp251.empty_question ~= nil then
        _temp251 = _temp251.empty_question

        elseif _temp251.no_undermethod ~= nil then
          _temp251 =  _temp251:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp251, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp251)
      if _n.empty_question ~= nil then
        _temp251 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp251 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp251, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp251)
      if _f.empty_question ~= nil then
        _temp251 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp251 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp251, "empty?"))
      end

      elseif _temp251 == nil then
        _error(exception:null_error("_temp251", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp251))
      end



local _temp256 = function (_self)

local _temp252 = nil
    if _type(_temp249) == "function" or (_type(_temp249) == "table" and _rawget(_temp249, "__call_thing")) then
      _temp252 =  _temp249(_self)

    elseif _temp249 then
      _temp252 =  _temp249
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp252 =  _self:var()
      elseif _self.var ~= nil then
        _temp252 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp252 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp252 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp253 = string:new("string:new(\"\")")

local _temp254 = string:new("string")

local _temp255 = {}
_temp255[string:new("type")] = _temp254
_temp255 = hash:new(_temp255)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp252,_temp253,_temp255)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp252,_temp253,_temp255)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp252,_temp253,_temp255)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp252,_temp253,_temp255)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp263 = function (_self)

local _temp257 = nil
    if _type(_temp249) == "function" or (_type(_temp249) == "table" and _rawget(_temp249, "__call_thing")) then
      _temp257 =  _temp249(_self)

    elseif _temp249 then
      _temp257 =  _temp249
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp257 =  _self:var()
      elseif _self.var ~= nil then
        _temp257 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp257 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp257 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp258 = nil
do
local _temp259 = nil
local _temp260 = nil
        local _t = _type(_temp250)
        if _t == "table" then
          if _rawget(_temp250, "__call_thing") == nil then
            _temp260 = _temp250
          else
                  if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp260 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp260 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp260 =  _temp250(_self)
      end

          end
        elseif _t == "number" then
          _temp260 = _temp250
        elseif _t == "function" then
                if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp260 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp260 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp260 =  _temp250(_self)
      end

        elseif _temp250 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp260)
      if _t == "table" then
                      if _type(_temp260.value) == "function" or (_type(_temp260.value) == "table" and _rawget(_temp260.value, "__call_thing")) then
        _temp260 = _temp260:value()
      elseif _temp260.value ~= nil then
        _temp260 = _temp260.value

        elseif _temp260.no_undermethod ~= nil then
          _temp260 =  _temp260:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp260, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp260)
      if _n.value ~= nil then
        _temp260 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp260 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp260, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp260)
      if _f.value ~= nil then
        _temp260 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp260 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp260, "value"))
      end

      elseif _temp260 == nil then
        _error(exception:null_error("_temp260", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp260))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp259 =  escape_understring(_self, _temp260)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp259 =  _self:escape_understring(_temp260)
      elseif _self.escape_understring ~= nil then
        _temp259 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp259 =  _self:no_undermethod(string:new("escape_string") , _temp260)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp259 =  no_undermethod(_self, string:new("escape_string") , _temp260)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp258 = string:new("string:new(\"" .. _tostring(_temp259) .. "\")")
end

local _temp261 = string:new("string")

local _temp262 = {}
_temp262[string:new("type")] = _temp261
_temp262 = hash:new(_temp262)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp257,_temp258,_temp262)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp257,_temp258,_temp262)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp257,_temp258,_temp262)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp257,_temp258,_temp262)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp251,_temp256,_temp263)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp251,_temp256,_temp263)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp251,_temp256,_temp263)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp251,_temp256,_temp263)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp248)
      if _t == "table" then
                      if _type(_temp248.walk) == "function" or (_type(_temp248.walk) == "table" and _rawget(_temp248.walk, "__call_thing")) then
        _dummy_ = _temp248:walk(_temp4,_temp265)
      elseif _temp248.walk ~= nil then
        _dummy_ = _temp248.walk

        elseif _temp248.no_undermethod ~= nil then
          _dummy_ =  _temp248:no_undermethod(string:new("walk") , _temp4,_temp265)
        else
          _error(exception:method_error(_temp248, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp248)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp265)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp265)
      else
        _error(exception:method_error(_temp248, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp248)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp265)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp265)
      else
        _error(exception:method_error(_temp248, "walk"))
      end

      elseif _temp248 == nil then
        _error(exception:null_error("_temp248", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp248))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp265 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp265 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp265 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp265 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp265 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp265 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp265 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp265 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp265 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp265 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp275 = function (_self, _temp267,_temp266)
        if _temp267 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp266 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp266 =  null(_self)

    elseif null then
      _temp266 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp266 =  _self:null()
      elseif _self.null ~= nil then
        _temp266 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp266 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp266 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp268 = nil
    if _type(_temp266) == "function" or (_type(_temp266) == "table" and _rawget(_temp266, "__call_thing")) then
      _temp268 =  _temp266(_self)

    elseif _temp266 then
      _temp268 =  _temp266
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp268 =  _self:var()
      elseif _self.var ~= nil then
        _temp268 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp268 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp268 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp269 = nil
do
local _temp270 = nil
        local _t = _type(_temp267)
        if _t == "table" then
          if _rawget(_temp267, "__call_thing") == nil then
            _temp270 = _temp267
          else
                  if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp270 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp270 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp270 =  _temp267(_self)
      end

          end
        elseif _t == "number" then
          _temp270 = _temp267
        elseif _t == "function" then
                if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp270 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp270 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp270 =  _temp267(_self)
      end

        elseif _temp267 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.value) == "function" or (_type(_temp270.value) == "table" and _rawget(_temp270.value, "__call_thing")) then
        _temp270 = _temp270:value()
      elseif _temp270.value ~= nil then
        _temp270 = _temp270.value

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp270, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.value ~= nil then
        _temp270 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp270, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.value ~= nil then
        _temp270 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp270, "value"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("_temp270", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end

local _temp271 = regex:new("\\n")

local _temp272 = string:new("\\n")

      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.sub) == "function" or (_type(_temp270.sub) == "table" and _rawget(_temp270.sub, "__call_thing")) then
        _temp270 = _temp270:sub(_temp271,_temp272)
      elseif _temp270.sub ~= nil then
        _temp270 = _temp270.sub

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("sub") , _temp271,_temp272)
        else
          _error(exception:method_error(_temp270, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.sub ~= nil then
        _temp270 = _n:sub(_temp271,_temp272)
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("sub") , _temp271,_temp272)
      else
        _error(exception:method_error(_temp270, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.sub ~= nil then
        _temp270 = _f:sub(_temp271,_temp272)
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("sub") , _temp271,_temp272)
      else
        _error(exception:method_error(_temp270, "sub"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("_temp270", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end


_temp269 = string:new("string:new('" .. _tostring(_temp270) .. "')")
end

local _temp273 = string:new("string")

local _temp274 = {}
_temp274[string:new("type")] = _temp273
_temp274 = hash:new(_temp274)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp268,_temp269,_temp274)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp268,_temp269,_temp274)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp268,_temp269,_temp274)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp268,_temp269,_temp274)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp265)
      if _t == "table" then
                      if _type(_temp265.walk) == "function" or (_type(_temp265.walk) == "table" and _rawget(_temp265.walk, "__call_thing")) then
        _dummy_ = _temp265:walk(_temp4,_temp275)
      elseif _temp265.walk ~= nil then
        _dummy_ = _temp265.walk

        elseif _temp265.no_undermethod ~= nil then
          _dummy_ =  _temp265:no_undermethod(string:new("walk") , _temp4,_temp275)
        else
          _error(exception:method_error(_temp265, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp265)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp275)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp275)
      else
        _error(exception:method_error(_temp265, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp265)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp275)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp275)
      else
        _error(exception:method_error(_temp265, "walk"))
      end

      elseif _temp265 == nil then
        _error(exception:null_error("_temp265", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp265))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp275 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp275 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp275 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp275 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp275 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp275 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp275 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp275 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp282 = function (_self, _temp277,_temp276)
        if _temp277 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp276 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp276 =  null(_self)

    elseif null then
      _temp276 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp276 =  _self:null()
      elseif _self.null ~= nil then
        _temp276 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp276 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp276 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp278
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp278 =  my(_self)

    elseif my then
      _temp278 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp278 =  _self:my()
      elseif _self.my ~= nil then
        _temp278 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp278 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp278 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp279 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp279 =  _self:my()
      elseif _self.my ~= nil then
        _temp279 =  _self.my

        elseif my ~= nil then
          _temp279 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.env) == "function" or (_type(_temp279.env) == "table" and _rawget(_temp279.env, "__call_thing")) then
        _temp279 = _temp279:env()
      elseif _temp279.env ~= nil then
        _temp279 = _temp279.env

        elseif _temp279.no_undermethod ~= nil then
          _temp279 =  _temp279:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp279, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.env ~= nil then
        _temp279 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp279 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.env ~= nil then
        _temp279 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp279 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.new_underscope) == "function" or (_type(_temp279.new_underscope) == "table" and _rawget(_temp279.new_underscope, "__call_thing")) then
        _dummy_ = _temp279:new_underscope()
      elseif _temp279.new_underscope ~= nil then
        _dummy_ = _temp279.new_underscope

        elseif _temp279.no_undermethod ~= nil then
          _dummy_ =  _temp279:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp279, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp279, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp279, "new_scope"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

local _temp280
    if _type(_temp277) == "function" or (_type(_temp277) == "table" and _rawget(_temp277, "__call_thing")) then
      _temp279 =  _temp277(_self)

    elseif _temp277 then
      _temp279 =  _temp277
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp279 =  _self:node()
      elseif _self.node ~= nil then
        _temp279 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp280 =  do_underargs(_self, _temp279)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp280 =  _self:do_underargs(_temp279)
      elseif _self.do_underargs ~= nil then
        _temp280 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp280 =  _self:no_undermethod(string:new("do_args") , _temp279)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp280 =  no_undermethod(_self, string:new("do_args") , _temp279)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp281
    if _type(_temp276) == "function" or (_type(_temp276) == "table" and _rawget(_temp276, "__call_thing")) then
      _temp279 =  _temp276(_self)

    elseif _temp276 then
      _temp279 =  _temp276
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp279 =  _self:var()
      elseif _self.var ~= nil then
        _temp279 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp282 = nil
do
local _temp283
do
    if _type(_temp280) == "function" or (_type(_temp280) == "table" and _rawget(_temp280, "__call_thing")) then
      _temp283 =  _temp280(_self)

    elseif _temp280 then
      _temp283 =  _temp280
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp283 =  _self:args()
      elseif _self.args ~= nil then
        _temp283 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp283 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp283 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp284 = string:new("arg_list")


_temp283 = _temp283:get(_temp284)
end

_temp282 = string:new("function(" .. _tostring(_temp283) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp281 =  set_underresult(_self, _temp279,_temp282)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp281 =  _self:set_underresult(_temp279,_temp282)
      elseif _self.set_underresult ~= nil then
        _temp281 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp281 =  _self:no_undermethod(string:new("set_result") , _temp279,_temp282)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp281 =  no_undermethod(_self, string:new("set_result") , _temp279,_temp282)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp285 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp285 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp285 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp285 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp285 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp285 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp285 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp285 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp285 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp285 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp285 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp286 = nil
      local _t = _type(_temp285)
      if _t == "table" then
                      if _type(_temp285.out) == "function" or (_type(_temp285.out) == "table" and _rawget(_temp285.out, "__call_thing")) then
        _temp286 = _temp285:out()
      elseif _temp285.out ~= nil then
        _temp286 = _temp285.out

        elseif _temp285.no_undermethod ~= nil then
          _temp286 =  _temp285:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp285, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp285)
      if _n.out ~= nil then
        _temp286 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp286 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp285, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp285)
      if _f.out ~= nil then
        _temp286 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp286 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp285, "out"))
      end

      elseif _temp285 == nil then
        _error(exception:null_error("_temp285", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp285))
      end

local _temp287
do
    if _type(_temp280) == "function" or (_type(_temp280) == "table" and _rawget(_temp280, "__call_thing")) then
      _temp287 =  _temp280(_self)

    elseif _temp280 then
      _temp287 =  _temp280
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp287 =  _self:args()
      elseif _self.args ~= nil then
        _temp287 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp287 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp287 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp288 = string:new("out")


_temp287 = _temp287:get(_temp288)
end
local _temp289
      local _t = _type(_temp286)
      if _t == "table" then
                      if _type(_temp286._less_less) == "function" or (_type(_temp286._less_less) == "table" and _rawget(_temp286._less_less, "__call_thing")) then
        _temp289 = _temp286:_less_less(_temp287)
      elseif _temp286._less_less ~= nil then
        _temp289 = _temp286._less_less

        elseif _temp286.no_undermethod ~= nil then
          _temp289 =  _temp286:no_undermethod(string:new("<<") , _temp287)
        else
          _error(exception:method_error(_temp286, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp286)
      if _n._less_less ~= nil then
        _temp289 = _n:_less_less(_temp287)
      elseif _n.no_undermethod ~= nil then
        _temp289 =  _n:no_undermethod(string:new("<<") , _temp287)
      else
        _error(exception:method_error(_temp286, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp286)
      if _f._less_less ~= nil then
        _temp289 = _f:_less_less(_temp287)
      elseif _f.no_undermethod ~= nil then
        _temp289 =  _f:no_undermethod(string:new("<<") , _temp287)
      else
        _error(exception:method_error(_temp286, "<<"))
      end

      elseif _temp286 == nil then
        _error(exception:null_error("_temp286", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp286))
      end

_dummy_ = _temp289 
end

local _temp290
        local _t = _type(_temp277)
        if _t == "table" then
          if _rawget(_temp277, "__call_thing") == nil then
            _temp290 = _temp277
          else
                  if _temp277 == nil then
              if _type(_self._temp277) == "function" or (_type(_self._temp277) == "table" and _rawget(_self._temp277, "__call_thing")) then
        _temp290 =  _self:_temp277()
      elseif _self._temp277 ~= nil then
        _temp290 =  _self._temp277

        elseif _self.no_undermethod ~= nil then
          _temp290 =  _self:no_undermethod(string:new("_temp277"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp290 =  _temp277(_self)
      end

          end
        elseif _t == "number" then
          _temp290 = _temp277
        elseif _t == "function" then
                if _temp277 == nil then
              if _type(_self._temp277) == "function" or (_type(_self._temp277) == "table" and _rawget(_self._temp277, "__call_thing")) then
        _temp290 =  _self:_temp277()
      elseif _self._temp277 ~= nil then
        _temp290 =  _self._temp277

        elseif _self.no_undermethod ~= nil then
          _temp290 =  _self:no_undermethod(string:new("_temp277"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp290 =  _temp277(_self)
      end

        elseif _temp277 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290.body) == "function" or (_type(_temp290.body) == "table" and _rawget(_temp290.body, "__call_thing")) then
        _temp290 = _temp290:body()
      elseif _temp290.body ~= nil then
        _temp290 = _temp290.body

        elseif _temp290.no_undermethod ~= nil then
          _temp290 =  _temp290:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n.body ~= nil then
        _temp290 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f.body ~= nil then
        _temp290 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end

      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290.copy) == "function" or (_type(_temp290.copy) == "table" and _rawget(_temp290.copy, "__call_thing")) then
        _temp290 = _temp290:copy()
      elseif _temp290.copy ~= nil then
        _temp290 = _temp290.copy

        elseif _temp290.no_undermethod ~= nil then
          _temp290 =  _temp290:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n.copy ~= nil then
        _temp290 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f.copy ~= nil then
        _temp290 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end


local _temp291
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp291 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp291 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp291)
      if _t == "table" then
                      if _type(_temp291.pop) == "function" or (_type(_temp291.pop) == "table" and _rawget(_temp291.pop, "__call_thing")) then
        _temp291 = _temp291:pop()
      elseif _temp291.pop ~= nil then
        _temp291 = _temp291.pop

        elseif _temp291.no_undermethod ~= nil then
          _temp291 =  _temp291:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp291)
      if _n.pop ~= nil then
        _temp291 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp291)
      if _f.pop ~= nil then
        _temp291 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp291 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp291))
      end


local _temp292
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp292 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp292 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp292 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp292 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp292 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp292 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp292 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp292 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp292 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp292 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp295 = function (_self, _temp293)
        if _temp293 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp294 = nil
        local _t = _type(_temp278)
        if _t == "table" then
          if _rawget(_temp278, "__call_thing") == nil then
            _temp294 = _temp278
          else
                  if _temp278 == nil then
              if _type(_self._temp278) == "function" or (_type(_self._temp278) == "table" and _rawget(_self._temp278, "__call_thing")) then
        _temp294 =  _self:_temp278()
      elseif _self._temp278 ~= nil then
        _temp294 =  _self._temp278

        elseif _self.no_undermethod ~= nil then
          _temp294 =  _self:no_undermethod(string:new("_temp278"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp294 =  _temp278(_self)
      end

          end
        elseif _t == "number" then
          _temp294 = _temp278
        elseif _t == "function" then
                if _temp278 == nil then
              if _type(_self._temp278) == "function" or (_type(_self._temp278) == "table" and _rawget(_self._temp278, "__call_thing")) then
        _temp294 =  _self:_temp278()
      elseif _self._temp278 ~= nil then
        _temp294 =  _self._temp278

        elseif _self.no_undermethod ~= nil then
          _temp294 =  _self:no_undermethod(string:new("_temp278"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp294 =  _temp278(_self)
      end

        elseif _temp278 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp295 = nil
    if _type(_temp293) == "function" or (_type(_temp293) == "table" and _rawget(_temp293, "__call_thing")) then
      _temp295 =  _temp293(_self)

    elseif _temp293 then
      _temp295 =  _temp293
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp295 =  _self:n()
      elseif _self.n ~= nil then
        _temp295 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp295 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp295 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp296 = string:new("_dummy")

      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294.process) == "function" or (_type(_temp294.process) == "table" and _rawget(_temp294.process, "__call_thing")) then
        _temp294 = _temp294:process(_temp295,_temp296)
      elseif _temp294.process ~= nil then
        _temp294 = _temp294.process

        elseif _temp294.no_undermethod ~= nil then
          _temp294 =  _temp294:no_undermethod(string:new("process") , _temp295,_temp296)
        else
          _error(exception:method_error(_temp294, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n.process ~= nil then
        _temp294 = _n:process(_temp295,_temp296)
      elseif _n.no_undermethod ~= nil then
        _temp294 =  _n:no_undermethod(string:new("process") , _temp295,_temp296)
      else
        _error(exception:method_error(_temp294, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f.process ~= nil then
        _temp294 = _f:process(_temp295,_temp296)
      elseif _f.no_undermethod ~= nil then
        _temp294 =  _f:no_undermethod(string:new("process") , _temp295,_temp296)
      else
        _error(exception:method_error(_temp294, "process"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294.out) == "function" or (_type(_temp294.out) == "table" and _rawget(_temp294.out, "__call_thing")) then
        return _temp294:out()
      elseif _temp294.out ~= nil then
        return _temp294.out

        elseif _temp294.no_undermethod ~= nil then
          return  _temp294:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp294, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp294, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp294, "out"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

end

      local _t = _type(_temp292)
      if _t == "table" then
                      if _type(_temp292.map) == "function" or (_type(_temp292.map) == "table" and _rawget(_temp292.map, "__call_thing")) then
        _temp292 = _temp292:map(_temp295)
      elseif _temp292.map ~= nil then
        _temp292 = _temp292.map

        elseif _temp292.no_undermethod ~= nil then
          _temp292 =  _temp292:no_undermethod(string:new("map") , _temp295)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp292)
      if _n.map ~= nil then
        _temp292 = _n:map(_temp295)
      elseif _n.no_undermethod ~= nil then
        _temp292 =  _n:no_undermethod(string:new("map") , _temp295)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp292)
      if _f.map ~= nil then
        _temp292 = _f:map(_temp295)
      elseif _f.no_undermethod ~= nil then
        _temp292 =  _f:no_undermethod(string:new("map") , _temp295)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp292 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp292))
      end

_temp295 = string:new("\n")

      local _t = _type(_temp292)
      if _t == "table" then
                      if _type(_temp292.join) == "function" or (_type(_temp292.join) == "table" and _rawget(_temp292.join, "__call_thing")) then
        _temp292 = _temp292:join(_temp295)
      elseif _temp292.join ~= nil then
        _temp292 = _temp292.join

        elseif _temp292.no_undermethod ~= nil then
          _temp292 =  _temp292:no_undermethod(string:new("join") , _temp295)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp292)
      if _n.join ~= nil then
        _temp292 = _n:join(_temp295)
      elseif _n.no_undermethod ~= nil then
        _temp292 =  _n:no_undermethod(string:new("join") , _temp295)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp292)
      if _f.join ~= nil then
        _temp292 = _f:join(_temp295)
      elseif _f.no_undermethod ~= nil then
        _temp292 =  _f:no_undermethod(string:new("join") , _temp295)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp292 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp292))
      end


do
local _temp297 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp297 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp297 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp297 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp297 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp297 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp297 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp297 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp297 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp298 = nil
      local _t = _type(_temp297)
      if _t == "table" then
                      if _type(_temp297.out) == "function" or (_type(_temp297.out) == "table" and _rawget(_temp297.out, "__call_thing")) then
        _temp298 = _temp297:out()
      elseif _temp297.out ~= nil then
        _temp298 = _temp297.out

        elseif _temp297.no_undermethod ~= nil then
          _temp298 =  _temp297:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp297, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp297)
      if _n.out ~= nil then
        _temp298 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp298 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp297)
      if _f.out ~= nil then
        _temp298 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp298 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _temp297 == nil then
        _error(exception:null_error("_temp297", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp297))
      end

local _temp299 = nil
    if _type(_temp292) == "function" or (_type(_temp292) == "table" and _rawget(_temp292, "__call_thing")) then
      _temp299 =  _temp292(_self)

    elseif _temp292 then
      _temp299 =  _temp292
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp299 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp299 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp299 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp299 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp300
      local _t = _type(_temp298)
      if _t == "table" then
                      if _type(_temp298._less_less) == "function" or (_type(_temp298._less_less) == "table" and _rawget(_temp298._less_less, "__call_thing")) then
        _temp300 = _temp298:_less_less(_temp299)
      elseif _temp298._less_less ~= nil then
        _temp300 = _temp298._less_less

        elseif _temp298.no_undermethod ~= nil then
          _temp300 =  _temp298:no_undermethod(string:new("<<") , _temp299)
        else
          _error(exception:method_error(_temp298, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp298)
      if _n._less_less ~= nil then
        _temp300 = _n:_less_less(_temp299)
      elseif _n.no_undermethod ~= nil then
        _temp300 =  _n:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp298)
      if _f._less_less ~= nil then
        _temp300 = _f:_less_less(_temp299)
      elseif _f.no_undermethod ~= nil then
        _temp300 =  _f:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _temp298 == nil then
        _error(exception:null_error("_temp298", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp298))
      end

_dummy_ = _temp300 
end

    if _type(_temp291) == "function" or (_type(_temp291) == "table" and _rawget(_temp291, "__call_thing")) then
      _temp295 =  _temp291(_self)

    elseif _temp291 then
      _temp295 =  _temp291
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp295 =  _self:last()
      elseif _self.last ~= nil then
        _temp295 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp295 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp295 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp312 = function (_self)

local _temp301
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp301 =  _self:my()
      elseif _self.my ~= nil then
        _temp301 =  _self.my

        elseif my ~= nil then
          _temp301 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp302 = nil
    if _type(_temp291) == "function" or (_type(_temp291) == "table" and _rawget(_temp291, "__call_thing")) then
      _temp302 =  _temp291(_self)

    elseif _temp291 then
      _temp302 =  _temp291
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp302 =  _self:last()
      elseif _self.last ~= nil then
        _temp302 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp302 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp302 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp301)
      if _t == "table" then
                      if _type(_temp301.process) == "function" or (_type(_temp301.process) == "table" and _rawget(_temp301.process, "__call_thing")) then
        _temp301 = _temp301:process(_temp302)
      elseif _temp301.process ~= nil then
        _temp301 = _temp301.process

        elseif _temp301.no_undermethod ~= nil then
          _temp301 =  _temp301:no_undermethod(string:new("process") , _temp302)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp301)
      if _n.process ~= nil then
        _temp301 = _n:process(_temp302)
      elseif _n.no_undermethod ~= nil then
        _temp301 =  _n:no_undermethod(string:new("process") , _temp302)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp301)
      if _f.process ~= nil then
        _temp301 = _f:process(_temp302)
      elseif _f.no_undermethod ~= nil then
        _temp301 =  _f:no_undermethod(string:new("process") , _temp302)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp301 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp301))
      end


local _temp302 
do
local _temp303 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp303 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp303 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp303 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp303 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp303 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp303 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp303 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp303 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp303 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp303 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp304 = nil
      local _t = _type(_temp303)
      if _t == "table" then
                      if _type(_temp303.out) == "function" or (_type(_temp303.out) == "table" and _rawget(_temp303.out, "__call_thing")) then
        _temp304 = _temp303:out()
      elseif _temp303.out ~= nil then
        _temp304 = _temp303.out

        elseif _temp303.no_undermethod ~= nil then
          _temp304 =  _temp303:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp303, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp303)
      if _n.out ~= nil then
        _temp304 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp304 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp303, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp303)
      if _f.out ~= nil then
        _temp304 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp304 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp303, "out"))
      end

      elseif _temp303 == nil then
        _error(exception:null_error("_temp303", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp303))
      end

local _temp305 = nil
        local _t = _type(_temp301)
        if _t == "table" then
          if _rawget(_temp301, "__call_thing") == nil then
            _temp305 = _temp301
          else
                  if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp305 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp305 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp305 =  _temp301(_self)
      end

          end
        elseif _t == "number" then
          _temp305 = _temp301
        elseif _t == "function" then
                if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp305 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp305 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp305 =  _temp301(_self)
      end

        elseif _temp301 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp306 = nil
      local _t = _type(_temp305)
      if _t == "table" then
                      if _type(_temp305.out) == "function" or (_type(_temp305.out) == "table" and _rawget(_temp305.out, "__call_thing")) then
        _temp306 = _temp305:out()
      elseif _temp305.out ~= nil then
        _temp306 = _temp305.out

        elseif _temp305.no_undermethod ~= nil then
          _temp306 =  _temp305:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp305, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp305)
      if _n.out ~= nil then
        _temp306 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp306 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp305, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp305)
      if _f.out ~= nil then
        _temp306 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp306 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp305, "out"))
      end

      elseif _temp305 == nil then
        _error(exception:null_error("_temp305", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp305))
      end

local _temp307 = string:new("\n")

local _temp308 = nil
do
local _temp309 = nil
        local _t = _type(_temp301)
        if _t == "table" then
          if _rawget(_temp301, "__call_thing") == nil then
            _temp309 = _temp301
          else
                  if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp309 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp309 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp309 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp309 =  _temp301(_self)
      end

          end
        elseif _t == "number" then
          _temp309 = _temp301
        elseif _t == "function" then
                if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp309 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp309 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp309 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp309 =  _temp301(_self)
      end

        elseif _temp301 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp309)
      if _t == "table" then
                      if _type(_temp309.var) == "function" or (_type(_temp309.var) == "table" and _rawget(_temp309.var, "__call_thing")) then
        _temp309 = _temp309:var()
      elseif _temp309.var ~= nil then
        _temp309 = _temp309.var

        elseif _temp309.no_undermethod ~= nil then
          _temp309 =  _temp309:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp309, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp309)
      if _n.var ~= nil then
        _temp309 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp309 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp309, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp309)
      if _f.var ~= nil then
        _temp309 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp309 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp309, "var"))
      end

      elseif _temp309 == nil then
        _error(exception:null_error("_temp309", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp309))
      end


_temp308 = string:new("return " .. _tostring(_temp309) .. "\n")
end
local _temp310
      local _t = _type(_temp304)
      if _t == "table" then
                      if _type(_temp304._less_less) == "function" or (_type(_temp304._less_less) == "table" and _rawget(_temp304._less_less, "__call_thing")) then
        _temp310 = _temp304:_less_less(_temp306)
      elseif _temp304._less_less ~= nil then
        _temp310 = _temp304._less_less

        elseif _temp304.no_undermethod ~= nil then
          _temp310 =  _temp304:no_undermethod(string:new("<<") , _temp306)
        else
          _error(exception:method_error(_temp304, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp304)
      if _n._less_less ~= nil then
        _temp310 = _n:_less_less(_temp306)
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("<<") , _temp306)
      else
        _error(exception:method_error(_temp304, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp304)
      if _f._less_less ~= nil then
        _temp310 = _f:_less_less(_temp306)
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("<<") , _temp306)
      else
        _error(exception:method_error(_temp304, "<<"))
      end

      elseif _temp304 == nil then
        _error(exception:null_error("_temp304", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp304))
      end

local _temp306
      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310._less_less) == "function" or (_type(_temp310._less_less) == "table" and _rawget(_temp310._less_less, "__call_thing")) then
        _temp306 = _temp310:_less_less(_temp307)
      elseif _temp310._less_less ~= nil then
        _temp306 = _temp310._less_less

        elseif _temp310.no_undermethod ~= nil then
          _temp306 =  _temp310:no_undermethod(string:new("<<") , _temp307)
        else
          _error(exception:method_error(_temp310, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n._less_less ~= nil then
        _temp306 = _n:_less_less(_temp307)
      elseif _n.no_undermethod ~= nil then
        _temp306 =  _n:no_undermethod(string:new("<<") , _temp307)
      else
        _error(exception:method_error(_temp310, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f._less_less ~= nil then
        _temp306 = _f:_less_less(_temp307)
      elseif _f.no_undermethod ~= nil then
        _temp306 =  _f:no_undermethod(string:new("<<") , _temp307)
      else
        _error(exception:method_error(_temp310, "<<"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end

local _temp307
      local _t = _type(_temp306)
      if _t == "table" then
                      if _type(_temp306._less_less) == "function" or (_type(_temp306._less_less) == "table" and _rawget(_temp306._less_less, "__call_thing")) then
        _temp307 = _temp306:_less_less(_temp308)
      elseif _temp306._less_less ~= nil then
        _temp307 = _temp306._less_less

        elseif _temp306.no_undermethod ~= nil then
          _temp307 =  _temp306:no_undermethod(string:new("<<") , _temp308)
        else
          _error(exception:method_error(_temp306, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp306)
      if _n._less_less ~= nil then
        _temp307 = _n:_less_less(_temp308)
      elseif _n.no_undermethod ~= nil then
        _temp307 =  _n:no_undermethod(string:new("<<") , _temp308)
      else
        _error(exception:method_error(_temp306, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp306)
      if _f._less_less ~= nil then
        _temp307 = _f:_less_less(_temp308)
      elseif _f.no_undermethod ~= nil then
        _temp307 =  _f:no_undermethod(string:new("<<") , _temp308)
      else
        _error(exception:method_error(_temp306, "<<"))
      end

      elseif _temp306 == nil then
        _error(exception:null_error("_temp306", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp306))
      end

_temp302 = _temp307 
end

return _temp302
end


local _temp322 = function (_self)

local _temp313 = nil
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp313 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp313 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp313 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp313 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp313 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp313 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp313 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp313 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp313 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp313 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp313)
      if _t == "table" then
                      if _type(_temp313.empty_question) == "function" or (_type(_temp313.empty_question) == "table" and _rawget(_temp313.empty_question, "__call_thing")) then
        _temp313 = _temp313:empty_question()
      elseif _temp313.empty_question ~= nil then
        _temp313 = _temp313.empty_question

        elseif _temp313.no_undermethod ~= nil then
          _temp313 =  _temp313:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp313, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp313)
      if _n.empty_question ~= nil then
        _temp313 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp313 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp313, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp313)
      if _f.empty_question ~= nil then
        _temp313 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp313 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp313, "empty?"))
      end

      elseif _temp313 == nil then
        _error(exception:null_error("_temp313", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp313))
      end



local _temp320 = function (_self)

local _temp314 
do
local _temp315 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp315 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp315 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp315 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp315 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp315 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp315 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp316 = nil
      local _t = _type(_temp315)
      if _t == "table" then
                      if _type(_temp315.out) == "function" or (_type(_temp315.out) == "table" and _rawget(_temp315.out, "__call_thing")) then
        _temp316 = _temp315:out()
      elseif _temp315.out ~= nil then
        _temp316 = _temp315.out

        elseif _temp315.no_undermethod ~= nil then
          _temp316 =  _temp315:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp315, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp315)
      if _n.out ~= nil then
        _temp316 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp316 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp315)
      if _f.out ~= nil then
        _temp316 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp316 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _temp315 == nil then
        _error(exception:null_error("_temp315", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp315))
      end

local _temp317 = string:new("return object:null()")
local _temp318
      local _t = _type(_temp316)
      if _t == "table" then
                      if _type(_temp316._less_less) == "function" or (_type(_temp316._less_less) == "table" and _rawget(_temp316._less_less, "__call_thing")) then
        _temp318 = _temp316:_less_less(_temp317)
      elseif _temp316._less_less ~= nil then
        _temp318 = _temp316._less_less

        elseif _temp316.no_undermethod ~= nil then
          _temp318 =  _temp316:no_undermethod(string:new("<<") , _temp317)
        else
          _error(exception:method_error(_temp316, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp316)
      if _n._less_less ~= nil then
        _temp318 = _n:_less_less(_temp317)
      elseif _n.no_undermethod ~= nil then
        _temp318 =  _n:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp316)
      if _f._less_less ~= nil then
        _temp318 = _f:_less_less(_temp317)
      elseif _f.no_undermethod ~= nil then
        _temp318 =  _f:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _temp316 == nil then
        _error(exception:null_error("_temp316", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp316))
      end

_temp314 = _temp318 
end

return _temp314
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp313,_temp320)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp313,_temp320)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp313,_temp320)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp313,_temp320)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp295,_temp312,_temp322)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp295,_temp312,_temp322)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp295,_temp312,_temp322)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp295,_temp312,_temp322)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp322 =  _self:my()
      elseif _self.my ~= nil then
        _temp322 =  _self.my

        elseif my ~= nil then
          _temp322 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp322)
      if _t == "table" then
                      if _type(_temp322.env) == "function" or (_type(_temp322.env) == "table" and _rawget(_temp322.env, "__call_thing")) then
        _temp322 = _temp322:env()
      elseif _temp322.env ~= nil then
        _temp322 = _temp322.env

        elseif _temp322.no_undermethod ~= nil then
          _temp322 =  _temp322:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp322, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp322)
      if _n.env ~= nil then
        _temp322 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp322 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp322, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp322)
      if _f.env ~= nil then
        _temp322 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp322 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp322, "env"))
      end

      elseif _temp322 == nil then
        _error(exception:null_error("_temp322", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp322))
      end

      local _t = _type(_temp322)
      if _t == "table" then
                      if _type(_temp322.pop_underscope) == "function" or (_type(_temp322.pop_underscope) == "table" and _rawget(_temp322.pop_underscope, "__call_thing")) then
        _dummy_ = _temp322:pop_underscope()
      elseif _temp322.pop_underscope ~= nil then
        _dummy_ = _temp322.pop_underscope

        elseif _temp322.no_undermethod ~= nil then
          _dummy_ =  _temp322:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp322, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp322)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp322, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp322)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp322, "pop_scope"))
      end

      elseif _temp322 == nil then
        _error(exception:null_error("_temp322", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp322))
      end

do
local _temp323 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp323 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp323 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp323 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp323 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp323 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp323 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp323 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp323 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp323 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp323 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp324 = nil
      local _t = _type(_temp323)
      if _t == "table" then
                      if _type(_temp323.out) == "function" or (_type(_temp323.out) == "table" and _rawget(_temp323.out, "__call_thing")) then
        _temp324 = _temp323:out()
      elseif _temp323.out ~= nil then
        _temp324 = _temp323.out

        elseif _temp323.no_undermethod ~= nil then
          _temp324 =  _temp323:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp323, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp323)
      if _n.out ~= nil then
        _temp324 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp324 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp323, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp323)
      if _f.out ~= nil then
        _temp324 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp324 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp323, "out"))
      end

      elseif _temp323 == nil then
        _error(exception:null_error("_temp323", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp323))
      end

local _temp325 = string:new("\nend\n")
local _temp326
      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324._less_less) == "function" or (_type(_temp324._less_less) == "table" and _rawget(_temp324._less_less, "__call_thing")) then
        _temp326 = _temp324:_less_less(_temp325)
      elseif _temp324._less_less ~= nil then
        _temp326 = _temp324._less_less

        elseif _temp324.no_undermethod ~= nil then
          _temp326 =  _temp324:no_undermethod(string:new("<<") , _temp325)
        else
          _error(exception:method_error(_temp324, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n._less_less ~= nil then
        _temp326 = _n:_less_less(_temp325)
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("<<") , _temp325)
      else
        _error(exception:method_error(_temp324, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f._less_less ~= nil then
        _temp326 = _f:_less_less(_temp325)
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("<<") , _temp325)
      else
        _error(exception:method_error(_temp324, "<<"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

_dummy_ = _temp326 
end

do
local _temp312
    if _type(_temp281) == "function" or (_type(_temp281) == "table" and _rawget(_temp281, "__call_thing")) then
      _temp312 =  _temp281(_self)

    elseif _temp281 then
      _temp312 =  _temp281
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp312 =  _self:res()
      elseif _self.res ~= nil then
        _temp312 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp312 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp312 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp327 = string:new("function")

local _temp328 = string:new("type")

_temp312:set(_temp328, _temp327)
end

    if _type(_temp281) == "function" or (_type(_temp281) == "table" and _rawget(_temp281, "__call_thing")) then
      return  _temp281(_self)

    elseif _temp281 then
      return  _temp281
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp275)
      if _t == "table" then
                      if _type(_temp275.walk) == "function" or (_type(_temp275.walk) == "table" and _rawget(_temp275.walk, "__call_thing")) then
        _dummy_ = _temp275:walk(_temp4,_temp282)
      elseif _temp275.walk ~= nil then
        _dummy_ = _temp275.walk

        elseif _temp275.no_undermethod ~= nil then
          _dummy_ =  _temp275:no_undermethod(string:new("walk") , _temp4,_temp282)
        else
          _error(exception:method_error(_temp275, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp275)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp282)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp282)
      else
        _error(exception:method_error(_temp275, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp275)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp282)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp282)
      else
        _error(exception:method_error(_temp275, "walk"))
      end

      elseif _temp275 == nil then
        _error(exception:null_error("_temp275", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp275))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp282 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp282 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp282 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp282 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp282 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp282 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp282 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp282 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp405 = function (_self, _temp330,_temp329)
        if _temp330 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp329 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp329 =  null(_self)

    elseif null then
      _temp329 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp329 =  _self:null()
      elseif _self.null ~= nil then
        _temp329 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp329 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp329 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp331
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp331 =  my(_self)

    elseif my then
      _temp331 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp331 =  _self:my()
      elseif _self.my ~= nil then
        _temp331 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp331 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp331 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp332 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp332 =  _self:my()
      elseif _self.my ~= nil then
        _temp332 =  _self.my

        elseif my ~= nil then
          _temp332 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.env) == "function" or (_type(_temp332.env) == "table" and _rawget(_temp332.env, "__call_thing")) then
        _temp332 = _temp332:env()
      elseif _temp332.env ~= nil then
        _temp332 = _temp332.env

        elseif _temp332.no_undermethod ~= nil then
          _temp332 =  _temp332:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp332, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.env ~= nil then
        _temp332 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp332, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.env ~= nil then
        _temp332 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp332, "env"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.new_underscope) == "function" or (_type(_temp332.new_underscope) == "table" and _rawget(_temp332.new_underscope, "__call_thing")) then
        _dummy_ = _temp332:new_underscope()
      elseif _temp332.new_underscope ~= nil then
        _dummy_ = _temp332.new_underscope

        elseif _temp332.no_undermethod ~= nil then
          _dummy_ =  _temp332:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp332, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp332, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp332, "new_scope"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

local _temp333
    if _type(_temp330) == "function" or (_type(_temp330) == "table" and _rawget(_temp330, "__call_thing")) then
      _temp332 =  _temp330(_self)

    elseif _temp330 then
      _temp332 =  _temp330
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp332 =  _self:node()
      elseif _self.node ~= nil then
        _temp332 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp332 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp332 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp333 =  do_underargs(_self, _temp332)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp333 =  _self:do_underargs(_temp332)
      elseif _self.do_underargs ~= nil then
        _temp333 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp333 =  _self:no_undermethod(string:new("do_args") , _temp332)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp333 =  no_undermethod(_self, string:new("do_args") , _temp332)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp334
do
local _temp335 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp335 =  _self:my()
      elseif _self.my ~= nil then
        _temp335 =  _self.my

        elseif my ~= nil then
          _temp335 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp335)
      if _t == "table" then
                      if _type(_temp335.next_underliftable) == "function" or (_type(_temp335.next_underliftable) == "table" and _rawget(_temp335.next_underliftable, "__call_thing")) then
        _temp335 = _temp335:next_underliftable()
      elseif _temp335.next_underliftable ~= nil then
        _temp335 = _temp335.next_underliftable

        elseif _temp335.no_undermethod ~= nil then
          _temp335 =  _temp335:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp335, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp335)
      if _n.next_underliftable ~= nil then
        _temp335 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp335 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp335, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp335)
      if _f.next_underliftable ~= nil then
        _temp335 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp335 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp335, "next_liftable"))
      end

      elseif _temp335 == nil then
        _error(exception:null_error("_temp335", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp335))
      end


_temp332 = string:new("_lifted[" .. _tostring(_temp335) .. "]")
end

local _temp336 = nil
do
local _temp337
do
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp337 =  _temp333(_self)

    elseif _temp333 then
      _temp337 =  _temp333
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp337 =  _self:args()
      elseif _self.args ~= nil then
        _temp337 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp337 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp337 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp338 = string:new("arg_list")


_temp337 = _temp337:get(_temp338)
end

_temp336 = string:new("function(_argtable, " .. _tostring(_temp337) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp334 =  set_underresult(_self, _temp332,_temp336)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp334 =  _self:set_underresult(_temp332,_temp336)
      elseif _self.set_underresult ~= nil then
        _temp334 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp334 =  _self:no_undermethod(string:new("set_result") , _temp332,_temp336)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp334 =  no_undermethod(_self, string:new("set_result") , _temp332,_temp336)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp336 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp336 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp336 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp336 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp336 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp336 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp336 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp336 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp336 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp336 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp336)
      if _t == "table" then
                      if _type(_temp336.upvars) == "function" or (_type(_temp336.upvars) == "table" and _rawget(_temp336.upvars, "__call_thing")) then
        _temp336 = _temp336:upvars()
      elseif _temp336.upvars ~= nil then
        _temp336 = _temp336.upvars

        elseif _temp336.no_undermethod ~= nil then
          _temp336 =  _temp336:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp336, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp336)
      if _n.upvars ~= nil then
        _temp336 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp336 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp336, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp336)
      if _f.upvars ~= nil then
        _temp336 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp336 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp336, "upvars"))
      end

      elseif _temp336 == nil then
        _error(exception:null_error("_temp336", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp336))
      end



local _temp352 = function (_self)

local _temp339 
do
local _temp340 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp340 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp340 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp340 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp340 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp340 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp340 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp340 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp340 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp340 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp340 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp341 = nil
      local _t = _type(_temp340)
      if _t == "table" then
                      if _type(_temp340.out) == "function" or (_type(_temp340.out) == "table" and _rawget(_temp340.out, "__call_thing")) then
        _temp341 = _temp340:out()
      elseif _temp340.out ~= nil then
        _temp341 = _temp340.out

        elseif _temp340.no_undermethod ~= nil then
          _temp341 =  _temp340:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp340, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp340)
      if _n.out ~= nil then
        _temp341 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp341 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp340, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp340)
      if _f.out ~= nil then
        _temp341 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp341 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp340, "out"))
      end

      elseif _temp340 == nil then
        _error(exception:null_error("_temp340", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp340))
      end

local _temp342 = nil
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp342 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp342 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp342 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp342 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp342 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp342 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp342 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp342 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.upvars) == "function" or (_type(_temp342.upvars) == "table" and _rawget(_temp342.upvars, "__call_thing")) then
        _temp342 = _temp342:upvars()
      elseif _temp342.upvars ~= nil then
        _temp342 = _temp342.upvars

        elseif _temp342.no_undermethod ~= nil then
          _temp342 =  _temp342:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp342, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.upvars ~= nil then
        _temp342 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp342, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.upvars ~= nil then
        _temp342 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp342, "upvars"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("_temp342", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end


local _temp350 = function (_self, _temp343)
        if _temp343 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp344 = nil
do
local _temp345
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp345 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp345 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp345 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp345 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp345 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp345 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp345 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp345 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp345)
      if _t == "table" then
                      if _type(_temp345.env) == "function" or (_type(_temp345.env) == "table" and _rawget(_temp345.env, "__call_thing")) then
        _temp345 = _temp345:env()
      elseif _temp345.env ~= nil then
        _temp345 = _temp345.env

        elseif _temp345.no_undermethod ~= nil then
          _temp345 =  _temp345:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp345, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp345)
      if _n.env ~= nil then
        _temp345 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp345 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp345, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp345)
      if _f.env ~= nil then
        _temp345 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp345 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp345, "env"))
      end

      elseif _temp345 == nil then
        _error(exception:null_error("_temp345", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp345))
      end

local _temp346 = nil
    if _type(_temp343) == "function" or (_type(_temp343) == "table" and _rawget(_temp343, "__call_thing")) then
      _temp346 =  _temp343(_self)

    elseif _temp343 then
      _temp346 =  _temp343
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp346 =  _self:u()
      elseif _self.u ~= nil then
        _temp346 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp346 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp346 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp345 = _temp345:get(_temp346)
end

local _temp347
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp347 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp347 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp347 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp347 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp347 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp347 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp347 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp347 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp347)
      if _t == "table" then
                      if _type(_temp347.env) == "function" or (_type(_temp347.env) == "table" and _rawget(_temp347.env, "__call_thing")) then
        _temp347 = _temp347:env()
      elseif _temp347.env ~= nil then
        _temp347 = _temp347.env

        elseif _temp347.no_undermethod ~= nil then
          _temp347 =  _temp347:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp347, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp347)
      if _n.env ~= nil then
        _temp347 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp347 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp347, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp347)
      if _f.env ~= nil then
        _temp347 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp347 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp347, "env"))
      end

      elseif _temp347 == nil then
        _error(exception:null_error("_temp347", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp347))
      end

local _temp348 = nil
    if _type(_temp343) == "function" or (_type(_temp343) == "table" and _rawget(_temp343, "__call_thing")) then
      _temp348 =  _temp343(_self)

    elseif _temp343 then
      _temp348 =  _temp343
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp348 =  _self:u()
      elseif _self.u ~= nil then
        _temp348 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp348 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp348 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp347 = _temp347:get(_temp348)
end

_temp344 = string:new("local " .. _tostring(_temp345) .. " = _argtable['" .. _tostring(_temp347) .. "']")
end

return _temp344
end

      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.map) == "function" or (_type(_temp342.map) == "table" and _rawget(_temp342.map, "__call_thing")) then
        _temp342 = _temp342:map(_temp350)
      elseif _temp342.map ~= nil then
        _temp342 = _temp342.map

        elseif _temp342.no_undermethod ~= nil then
          _temp342 =  _temp342:no_undermethod(string:new("map") , _temp350)
        else
          _error(exception:method_error(_temp342, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.map ~= nil then
        _temp342 = _n:map(_temp350)
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("map") , _temp350)
      else
        _error(exception:method_error(_temp342, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.map ~= nil then
        _temp342 = _f:map(_temp350)
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("map") , _temp350)
      else
        _error(exception:method_error(_temp342, "map"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("_temp342", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end

_temp350 = string:new("\n")

      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.join) == "function" or (_type(_temp342.join) == "table" and _rawget(_temp342.join, "__call_thing")) then
        _temp342 = _temp342:join(_temp350)
      elseif _temp342.join ~= nil then
        _temp342 = _temp342.join

        elseif _temp342.no_undermethod ~= nil then
          _temp342 =  _temp342:no_undermethod(string:new("join") , _temp350)
        else
          _error(exception:method_error(_temp342, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.join ~= nil then
        _temp342 = _n:join(_temp350)
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("join") , _temp350)
      else
        _error(exception:method_error(_temp342, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.join ~= nil then
        _temp342 = _f:join(_temp350)
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("join") , _temp350)
      else
        _error(exception:method_error(_temp342, "join"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("_temp342", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end

local _temp350
      local _t = _type(_temp341)
      if _t == "table" then
                      if _type(_temp341._less_less) == "function" or (_type(_temp341._less_less) == "table" and _rawget(_temp341._less_less, "__call_thing")) then
        _temp350 = _temp341:_less_less(_temp342)
      elseif _temp341._less_less ~= nil then
        _temp350 = _temp341._less_less

        elseif _temp341.no_undermethod ~= nil then
          _temp350 =  _temp341:no_undermethod(string:new("<<") , _temp342)
        else
          _error(exception:method_error(_temp341, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp341)
      if _n._less_less ~= nil then
        _temp350 = _n:_less_less(_temp342)
      elseif _n.no_undermethod ~= nil then
        _temp350 =  _n:no_undermethod(string:new("<<") , _temp342)
      else
        _error(exception:method_error(_temp341, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp341)
      if _f._less_less ~= nil then
        _temp350 = _f:_less_less(_temp342)
      elseif _f.no_undermethod ~= nil then
        _temp350 =  _f:no_undermethod(string:new("<<") , _temp342)
      else
        _error(exception:method_error(_temp341, "<<"))
      end

      elseif _temp341 == nil then
        _error(exception:null_error("_temp341", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp341))
      end

_temp339 = _temp350 
end

return _temp339
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp336,_temp352)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp336,_temp352)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp336,_temp352)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp336,_temp352)
      else
        _error(exception:name_error("true?"))
      end
    end

do
local _temp353 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp353 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp353 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp353 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp353 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp353 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp353 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp353 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp353 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp353 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp353 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp354 = nil
      local _t = _type(_temp353)
      if _t == "table" then
                      if _type(_temp353.out) == "function" or (_type(_temp353.out) == "table" and _rawget(_temp353.out, "__call_thing")) then
        _temp354 = _temp353:out()
      elseif _temp353.out ~= nil then
        _temp354 = _temp353.out

        elseif _temp353.no_undermethod ~= nil then
          _temp354 =  _temp353:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp353, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp353)
      if _n.out ~= nil then
        _temp354 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp354 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp353, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp353)
      if _f.out ~= nil then
        _temp354 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp354 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp353, "out"))
      end

      elseif _temp353 == nil then
        _error(exception:null_error("_temp353", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp353))
      end

local _temp355
do
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp355 =  _temp333(_self)

    elseif _temp333 then
      _temp355 =  _temp333
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp355 =  _self:args()
      elseif _self.args ~= nil then
        _temp355 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp355 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp355 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp356 = string:new("out")


_temp355 = _temp355:get(_temp356)
end
local _temp357
      local _t = _type(_temp354)
      if _t == "table" then
                      if _type(_temp354._less_less) == "function" or (_type(_temp354._less_less) == "table" and _rawget(_temp354._less_less, "__call_thing")) then
        _temp357 = _temp354:_less_less(_temp355)
      elseif _temp354._less_less ~= nil then
        _temp357 = _temp354._less_less

        elseif _temp354.no_undermethod ~= nil then
          _temp357 =  _temp354:no_undermethod(string:new("<<") , _temp355)
        else
          _error(exception:method_error(_temp354, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp354)
      if _n._less_less ~= nil then
        _temp357 = _n:_less_less(_temp355)
      elseif _n.no_undermethod ~= nil then
        _temp357 =  _n:no_undermethod(string:new("<<") , _temp355)
      else
        _error(exception:method_error(_temp354, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp354)
      if _f._less_less ~= nil then
        _temp357 = _f:_less_less(_temp355)
      elseif _f.no_undermethod ~= nil then
        _temp357 =  _f:no_undermethod(string:new("<<") , _temp355)
      else
        _error(exception:method_error(_temp354, "<<"))
      end

      elseif _temp354 == nil then
        _error(exception:null_error("_temp354", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp354))
      end

_dummy_ = _temp357 
end

local _temp358
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp358 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp358 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp358 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp358 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp358 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp358 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp358 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp358 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp358 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp358 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp358)
      if _t == "table" then
                      if _type(_temp358.body) == "function" or (_type(_temp358.body) == "table" and _rawget(_temp358.body, "__call_thing")) then
        _temp358 = _temp358:body()
      elseif _temp358.body ~= nil then
        _temp358 = _temp358.body

        elseif _temp358.no_undermethod ~= nil then
          _temp358 =  _temp358:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp358)
      if _n.body ~= nil then
        _temp358 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp358)
      if _f.body ~= nil then
        _temp358 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp358 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp358))
      end

      local _t = _type(_temp358)
      if _t == "table" then
                      if _type(_temp358.copy) == "function" or (_type(_temp358.copy) == "table" and _rawget(_temp358.copy, "__call_thing")) then
        _temp358 = _temp358:copy()
      elseif _temp358.copy ~= nil then
        _temp358 = _temp358.copy

        elseif _temp358.no_undermethod ~= nil then
          _temp358 =  _temp358:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp358)
      if _n.copy ~= nil then
        _temp358 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp358)
      if _f.copy ~= nil then
        _temp358 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp358 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp358))
      end


local _temp359
        local _t = _type(_temp358)
        if _t == "table" then
          if _rawget(_temp358, "__call_thing") == nil then
            _temp359 = _temp358
          else
                  if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp359 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp359 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp359 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp359 =  _temp358(_self)
      end

          end
        elseif _t == "number" then
          _temp359 = _temp358
        elseif _t == "function" then
                if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp359 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp359 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp359 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp359 =  _temp358(_self)
      end

        elseif _temp358 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp359)
      if _t == "table" then
                      if _type(_temp359.pop) == "function" or (_type(_temp359.pop) == "table" and _rawget(_temp359.pop, "__call_thing")) then
        _temp359 = _temp359:pop()
      elseif _temp359.pop ~= nil then
        _temp359 = _temp359.pop

        elseif _temp359.no_undermethod ~= nil then
          _temp359 =  _temp359:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp359)
      if _n.pop ~= nil then
        _temp359 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp359 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp359)
      if _f.pop ~= nil then
        _temp359 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp359 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp359 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp359))
      end


local _temp360
        local _t = _type(_temp358)
        if _t == "table" then
          if _rawget(_temp358, "__call_thing") == nil then
            _temp360 = _temp358
          else
                  if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp360 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp360 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp360 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp360 =  _temp358(_self)
      end

          end
        elseif _t == "number" then
          _temp360 = _temp358
        elseif _t == "function" then
                if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp360 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp360 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp360 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp360 =  _temp358(_self)
      end

        elseif _temp358 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp363 = function (_self, _temp361)
        if _temp361 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp362 = nil
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp362 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp362 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp362 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp362 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp362 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp362 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp362 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp362 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp362 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp362 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp363 = nil
    if _type(_temp361) == "function" or (_type(_temp361) == "table" and _rawget(_temp361, "__call_thing")) then
      _temp363 =  _temp361(_self)

    elseif _temp361 then
      _temp363 =  _temp361
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp363 =  _self:n()
      elseif _self.n ~= nil then
        _temp363 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp363 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp363 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp364 = string:new("_dummy")

      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362.process) == "function" or (_type(_temp362.process) == "table" and _rawget(_temp362.process, "__call_thing")) then
        _temp362 = _temp362:process(_temp363,_temp364)
      elseif _temp362.process ~= nil then
        _temp362 = _temp362.process

        elseif _temp362.no_undermethod ~= nil then
          _temp362 =  _temp362:no_undermethod(string:new("process") , _temp363,_temp364)
        else
          _error(exception:method_error(_temp362, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n.process ~= nil then
        _temp362 = _n:process(_temp363,_temp364)
      elseif _n.no_undermethod ~= nil then
        _temp362 =  _n:no_undermethod(string:new("process") , _temp363,_temp364)
      else
        _error(exception:method_error(_temp362, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f.process ~= nil then
        _temp362 = _f:process(_temp363,_temp364)
      elseif _f.no_undermethod ~= nil then
        _temp362 =  _f:no_undermethod(string:new("process") , _temp363,_temp364)
      else
        _error(exception:method_error(_temp362, "process"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362.out) == "function" or (_type(_temp362.out) == "table" and _rawget(_temp362.out, "__call_thing")) then
        return _temp362:out()
      elseif _temp362.out ~= nil then
        return _temp362.out

        elseif _temp362.no_undermethod ~= nil then
          return  _temp362:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp362, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp362, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp362, "out"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

end

      local _t = _type(_temp360)
      if _t == "table" then
                      if _type(_temp360.map) == "function" or (_type(_temp360.map) == "table" and _rawget(_temp360.map, "__call_thing")) then
        _temp360 = _temp360:map(_temp363)
      elseif _temp360.map ~= nil then
        _temp360 = _temp360.map

        elseif _temp360.no_undermethod ~= nil then
          _temp360 =  _temp360:no_undermethod(string:new("map") , _temp363)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp360)
      if _n.map ~= nil then
        _temp360 = _n:map(_temp363)
      elseif _n.no_undermethod ~= nil then
        _temp360 =  _n:no_undermethod(string:new("map") , _temp363)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp360)
      if _f.map ~= nil then
        _temp360 = _f:map(_temp363)
      elseif _f.no_undermethod ~= nil then
        _temp360 =  _f:no_undermethod(string:new("map") , _temp363)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp360 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp360))
      end

_temp363 = string:new("\n")

      local _t = _type(_temp360)
      if _t == "table" then
                      if _type(_temp360.join) == "function" or (_type(_temp360.join) == "table" and _rawget(_temp360.join, "__call_thing")) then
        _temp360 = _temp360:join(_temp363)
      elseif _temp360.join ~= nil then
        _temp360 = _temp360.join

        elseif _temp360.no_undermethod ~= nil then
          _temp360 =  _temp360:no_undermethod(string:new("join") , _temp363)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp360)
      if _n.join ~= nil then
        _temp360 = _n:join(_temp363)
      elseif _n.no_undermethod ~= nil then
        _temp360 =  _n:no_undermethod(string:new("join") , _temp363)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp360)
      if _f.join ~= nil then
        _temp360 = _f:join(_temp363)
      elseif _f.no_undermethod ~= nil then
        _temp360 =  _f:no_undermethod(string:new("join") , _temp363)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp360 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp360))
      end


do
local _temp365 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp365 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp365 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp365 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp365 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp365 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp365 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp365 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp365 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp366 = nil
      local _t = _type(_temp365)
      if _t == "table" then
                      if _type(_temp365.out) == "function" or (_type(_temp365.out) == "table" and _rawget(_temp365.out, "__call_thing")) then
        _temp366 = _temp365:out()
      elseif _temp365.out ~= nil then
        _temp366 = _temp365.out

        elseif _temp365.no_undermethod ~= nil then
          _temp366 =  _temp365:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp365, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp365)
      if _n.out ~= nil then
        _temp366 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp366 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp365, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp365)
      if _f.out ~= nil then
        _temp366 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp366 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp365, "out"))
      end

      elseif _temp365 == nil then
        _error(exception:null_error("_temp365", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp365))
      end

local _temp367 = nil
    if _type(_temp360) == "function" or (_type(_temp360) == "table" and _rawget(_temp360, "__call_thing")) then
      _temp367 =  _temp360(_self)

    elseif _temp360 then
      _temp367 =  _temp360
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp367 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp367 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp367 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp367 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp368
      local _t = _type(_temp366)
      if _t == "table" then
                      if _type(_temp366._less_less) == "function" or (_type(_temp366._less_less) == "table" and _rawget(_temp366._less_less, "__call_thing")) then
        _temp368 = _temp366:_less_less(_temp367)
      elseif _temp366._less_less ~= nil then
        _temp368 = _temp366._less_less

        elseif _temp366.no_undermethod ~= nil then
          _temp368 =  _temp366:no_undermethod(string:new("<<") , _temp367)
        else
          _error(exception:method_error(_temp366, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp366)
      if _n._less_less ~= nil then
        _temp368 = _n:_less_less(_temp367)
      elseif _n.no_undermethod ~= nil then
        _temp368 =  _n:no_undermethod(string:new("<<") , _temp367)
      else
        _error(exception:method_error(_temp366, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp366)
      if _f._less_less ~= nil then
        _temp368 = _f:_less_less(_temp367)
      elseif _f.no_undermethod ~= nil then
        _temp368 =  _f:no_undermethod(string:new("<<") , _temp367)
      else
        _error(exception:method_error(_temp366, "<<"))
      end

      elseif _temp366 == nil then
        _error(exception:null_error("_temp366", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp366))
      end

_dummy_ = _temp368 
end

    if _type(_temp359) == "function" or (_type(_temp359) == "table" and _rawget(_temp359, "__call_thing")) then
      _temp363 =  _temp359(_self)

    elseif _temp359 then
      _temp363 =  _temp359
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp363 =  _self:last()
      elseif _self.last ~= nil then
        _temp363 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp363 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp363 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp380 = function (_self)

local _temp369
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp369 =  _self:my()
      elseif _self.my ~= nil then
        _temp369 =  _self.my

        elseif my ~= nil then
          _temp369 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp370 = nil
    if _type(_temp359) == "function" or (_type(_temp359) == "table" and _rawget(_temp359, "__call_thing")) then
      _temp370 =  _temp359(_self)

    elseif _temp359 then
      _temp370 =  _temp359
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp370 =  _self:last()
      elseif _self.last ~= nil then
        _temp370 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp370 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp370 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp369)
      if _t == "table" then
                      if _type(_temp369.process) == "function" or (_type(_temp369.process) == "table" and _rawget(_temp369.process, "__call_thing")) then
        _temp369 = _temp369:process(_temp370)
      elseif _temp369.process ~= nil then
        _temp369 = _temp369.process

        elseif _temp369.no_undermethod ~= nil then
          _temp369 =  _temp369:no_undermethod(string:new("process") , _temp370)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp369)
      if _n.process ~= nil then
        _temp369 = _n:process(_temp370)
      elseif _n.no_undermethod ~= nil then
        _temp369 =  _n:no_undermethod(string:new("process") , _temp370)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp369)
      if _f.process ~= nil then
        _temp369 = _f:process(_temp370)
      elseif _f.no_undermethod ~= nil then
        _temp369 =  _f:no_undermethod(string:new("process") , _temp370)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp369 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp369))
      end


local _temp370 
do
local _temp371 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp371 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp371 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp371 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp371 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp371 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp371 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp371 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp371 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp371 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp371 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp372 = nil
      local _t = _type(_temp371)
      if _t == "table" then
                      if _type(_temp371.out) == "function" or (_type(_temp371.out) == "table" and _rawget(_temp371.out, "__call_thing")) then
        _temp372 = _temp371:out()
      elseif _temp371.out ~= nil then
        _temp372 = _temp371.out

        elseif _temp371.no_undermethod ~= nil then
          _temp372 =  _temp371:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp371, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp371)
      if _n.out ~= nil then
        _temp372 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp372 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp371, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp371)
      if _f.out ~= nil then
        _temp372 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp372 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp371, "out"))
      end

      elseif _temp371 == nil then
        _error(exception:null_error("_temp371", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp371))
      end

local _temp373 = nil
        local _t = _type(_temp369)
        if _t == "table" then
          if _rawget(_temp369, "__call_thing") == nil then
            _temp373 = _temp369
          else
                  if _temp369 == nil then
              if _type(_self._temp369) == "function" or (_type(_self._temp369) == "table" and _rawget(_self._temp369, "__call_thing")) then
        _temp373 =  _self:_temp369()
      elseif _self._temp369 ~= nil then
        _temp373 =  _self._temp369

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp369"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp373 =  _temp369(_self)
      end

          end
        elseif _t == "number" then
          _temp373 = _temp369
        elseif _t == "function" then
                if _temp369 == nil then
              if _type(_self._temp369) == "function" or (_type(_self._temp369) == "table" and _rawget(_self._temp369, "__call_thing")) then
        _temp373 =  _self:_temp369()
      elseif _self._temp369 ~= nil then
        _temp373 =  _self._temp369

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp369"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp373 =  _temp369(_self)
      end

        elseif _temp369 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp374 = nil
      local _t = _type(_temp373)
      if _t == "table" then
                      if _type(_temp373.out) == "function" or (_type(_temp373.out) == "table" and _rawget(_temp373.out, "__call_thing")) then
        _temp374 = _temp373:out()
      elseif _temp373.out ~= nil then
        _temp374 = _temp373.out

        elseif _temp373.no_undermethod ~= nil then
          _temp374 =  _temp373:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp373, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp373)
      if _n.out ~= nil then
        _temp374 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp374 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp373, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp373)
      if _f.out ~= nil then
        _temp374 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp374 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp373, "out"))
      end

      elseif _temp373 == nil then
        _error(exception:null_error("_temp373", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp373))
      end

local _temp375 = string:new("\n")

local _temp376 = nil
do
local _temp377 = nil
        local _t = _type(_temp369)
        if _t == "table" then
          if _rawget(_temp369, "__call_thing") == nil then
            _temp377 = _temp369
          else
                  if _temp369 == nil then
              if _type(_self._temp369) == "function" or (_type(_self._temp369) == "table" and _rawget(_self._temp369, "__call_thing")) then
        _temp377 =  _self:_temp369()
      elseif _self._temp369 ~= nil then
        _temp377 =  _self._temp369

        elseif _self.no_undermethod ~= nil then
          _temp377 =  _self:no_undermethod(string:new("_temp369"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp377 =  _temp369(_self)
      end

          end
        elseif _t == "number" then
          _temp377 = _temp369
        elseif _t == "function" then
                if _temp369 == nil then
              if _type(_self._temp369) == "function" or (_type(_self._temp369) == "table" and _rawget(_self._temp369, "__call_thing")) then
        _temp377 =  _self:_temp369()
      elseif _self._temp369 ~= nil then
        _temp377 =  _self._temp369

        elseif _self.no_undermethod ~= nil then
          _temp377 =  _self:no_undermethod(string:new("_temp369"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp377 =  _temp369(_self)
      end

        elseif _temp369 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp377)
      if _t == "table" then
                      if _type(_temp377.var) == "function" or (_type(_temp377.var) == "table" and _rawget(_temp377.var, "__call_thing")) then
        _temp377 = _temp377:var()
      elseif _temp377.var ~= nil then
        _temp377 = _temp377.var

        elseif _temp377.no_undermethod ~= nil then
          _temp377 =  _temp377:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp377, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp377)
      if _n.var ~= nil then
        _temp377 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp377 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp377, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp377)
      if _f.var ~= nil then
        _temp377 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp377 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp377, "var"))
      end

      elseif _temp377 == nil then
        _error(exception:null_error("_temp377", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp377))
      end


_temp376 = string:new("return " .. _tostring(_temp377) .. "\n")
end
local _temp378
      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372._less_less) == "function" or (_type(_temp372._less_less) == "table" and _rawget(_temp372._less_less, "__call_thing")) then
        _temp378 = _temp372:_less_less(_temp374)
      elseif _temp372._less_less ~= nil then
        _temp378 = _temp372._less_less

        elseif _temp372.no_undermethod ~= nil then
          _temp378 =  _temp372:no_undermethod(string:new("<<") , _temp374)
        else
          _error(exception:method_error(_temp372, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n._less_less ~= nil then
        _temp378 = _n:_less_less(_temp374)
      elseif _n.no_undermethod ~= nil then
        _temp378 =  _n:no_undermethod(string:new("<<") , _temp374)
      else
        _error(exception:method_error(_temp372, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f._less_less ~= nil then
        _temp378 = _f:_less_less(_temp374)
      elseif _f.no_undermethod ~= nil then
        _temp378 =  _f:no_undermethod(string:new("<<") , _temp374)
      else
        _error(exception:method_error(_temp372, "<<"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

local _temp374
      local _t = _type(_temp378)
      if _t == "table" then
                      if _type(_temp378._less_less) == "function" or (_type(_temp378._less_less) == "table" and _rawget(_temp378._less_less, "__call_thing")) then
        _temp374 = _temp378:_less_less(_temp375)
      elseif _temp378._less_less ~= nil then
        _temp374 = _temp378._less_less

        elseif _temp378.no_undermethod ~= nil then
          _temp374 =  _temp378:no_undermethod(string:new("<<") , _temp375)
        else
          _error(exception:method_error(_temp378, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp378)
      if _n._less_less ~= nil then
        _temp374 = _n:_less_less(_temp375)
      elseif _n.no_undermethod ~= nil then
        _temp374 =  _n:no_undermethod(string:new("<<") , _temp375)
      else
        _error(exception:method_error(_temp378, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp378)
      if _f._less_less ~= nil then
        _temp374 = _f:_less_less(_temp375)
      elseif _f.no_undermethod ~= nil then
        _temp374 =  _f:no_undermethod(string:new("<<") , _temp375)
      else
        _error(exception:method_error(_temp378, "<<"))
      end

      elseif _temp378 == nil then
        _error(exception:null_error("_temp378", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp378))
      end

local _temp375
      local _t = _type(_temp374)
      if _t == "table" then
                      if _type(_temp374._less_less) == "function" or (_type(_temp374._less_less) == "table" and _rawget(_temp374._less_less, "__call_thing")) then
        _temp375 = _temp374:_less_less(_temp376)
      elseif _temp374._less_less ~= nil then
        _temp375 = _temp374._less_less

        elseif _temp374.no_undermethod ~= nil then
          _temp375 =  _temp374:no_undermethod(string:new("<<") , _temp376)
        else
          _error(exception:method_error(_temp374, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp374)
      if _n._less_less ~= nil then
        _temp375 = _n:_less_less(_temp376)
      elseif _n.no_undermethod ~= nil then
        _temp375 =  _n:no_undermethod(string:new("<<") , _temp376)
      else
        _error(exception:method_error(_temp374, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp374)
      if _f._less_less ~= nil then
        _temp375 = _f:_less_less(_temp376)
      elseif _f.no_undermethod ~= nil then
        _temp375 =  _f:no_undermethod(string:new("<<") , _temp376)
      else
        _error(exception:method_error(_temp374, "<<"))
      end

      elseif _temp374 == nil then
        _error(exception:null_error("_temp374", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp374))
      end

_temp370 = _temp375 
end

return _temp370
end


local _temp390 = function (_self)

local _temp381 = nil
        local _t = _type(_temp358)
        if _t == "table" then
          if _rawget(_temp358, "__call_thing") == nil then
            _temp381 = _temp358
          else
                  if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp381 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp381 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp381 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp381 =  _temp358(_self)
      end

          end
        elseif _t == "number" then
          _temp381 = _temp358
        elseif _t == "function" then
                if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp381 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp381 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp381 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp381 =  _temp358(_self)
      end

        elseif _temp358 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp381)
      if _t == "table" then
                      if _type(_temp381.empty_question) == "function" or (_type(_temp381.empty_question) == "table" and _rawget(_temp381.empty_question, "__call_thing")) then
        _temp381 = _temp381:empty_question()
      elseif _temp381.empty_question ~= nil then
        _temp381 = _temp381.empty_question

        elseif _temp381.no_undermethod ~= nil then
          _temp381 =  _temp381:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp381, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp381)
      if _n.empty_question ~= nil then
        _temp381 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp381 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp381, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp381)
      if _f.empty_question ~= nil then
        _temp381 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp381 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp381, "empty?"))
      end

      elseif _temp381 == nil then
        _error(exception:null_error("_temp381", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp381))
      end



local _temp388 = function (_self)

local _temp382 
do
local _temp383 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp383 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp383 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp383 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp383 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp383 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp383 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp383 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp383 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp384 = nil
      local _t = _type(_temp383)
      if _t == "table" then
                      if _type(_temp383.out) == "function" or (_type(_temp383.out) == "table" and _rawget(_temp383.out, "__call_thing")) then
        _temp384 = _temp383:out()
      elseif _temp383.out ~= nil then
        _temp384 = _temp383.out

        elseif _temp383.no_undermethod ~= nil then
          _temp384 =  _temp383:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp383, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp383)
      if _n.out ~= nil then
        _temp384 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp384 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp383)
      if _f.out ~= nil then
        _temp384 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp384 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _temp383 == nil then
        _error(exception:null_error("_temp383", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp383))
      end

local _temp385 = string:new("return object:null()")
local _temp386
      local _t = _type(_temp384)
      if _t == "table" then
                      if _type(_temp384._less_less) == "function" or (_type(_temp384._less_less) == "table" and _rawget(_temp384._less_less, "__call_thing")) then
        _temp386 = _temp384:_less_less(_temp385)
      elseif _temp384._less_less ~= nil then
        _temp386 = _temp384._less_less

        elseif _temp384.no_undermethod ~= nil then
          _temp386 =  _temp384:no_undermethod(string:new("<<") , _temp385)
        else
          _error(exception:method_error(_temp384, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp384)
      if _n._less_less ~= nil then
        _temp386 = _n:_less_less(_temp385)
      elseif _n.no_undermethod ~= nil then
        _temp386 =  _n:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp384)
      if _f._less_less ~= nil then
        _temp386 = _f:_less_less(_temp385)
      elseif _f.no_undermethod ~= nil then
        _temp386 =  _f:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _temp384 == nil then
        _error(exception:null_error("_temp384", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp384))
      end

_temp382 = _temp386 
end

return _temp382
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp381,_temp388)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp381,_temp388)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp381,_temp388)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp381,_temp388)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp363,_temp380,_temp390)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp363,_temp380,_temp390)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp363,_temp380,_temp390)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp363,_temp380,_temp390)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp390 =  _self:my()
      elseif _self.my ~= nil then
        _temp390 =  _self.my

        elseif my ~= nil then
          _temp390 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp390)
      if _t == "table" then
                      if _type(_temp390.env) == "function" or (_type(_temp390.env) == "table" and _rawget(_temp390.env, "__call_thing")) then
        _temp390 = _temp390:env()
      elseif _temp390.env ~= nil then
        _temp390 = _temp390.env

        elseif _temp390.no_undermethod ~= nil then
          _temp390 =  _temp390:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp390, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp390)
      if _n.env ~= nil then
        _temp390 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp390 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp390, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp390)
      if _f.env ~= nil then
        _temp390 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp390 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp390, "env"))
      end

      elseif _temp390 == nil then
        _error(exception:null_error("_temp390", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp390))
      end

      local _t = _type(_temp390)
      if _t == "table" then
                      if _type(_temp390.pop_underscope) == "function" or (_type(_temp390.pop_underscope) == "table" and _rawget(_temp390.pop_underscope, "__call_thing")) then
        _dummy_ = _temp390:pop_underscope()
      elseif _temp390.pop_underscope ~= nil then
        _dummy_ = _temp390.pop_underscope

        elseif _temp390.no_undermethod ~= nil then
          _dummy_ =  _temp390:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp390, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp390)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp390, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp390)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp390, "pop_scope"))
      end

      elseif _temp390 == nil then
        _error(exception:null_error("_temp390", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp390))
      end

do
local _temp391 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp391 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp391 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp391 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp391 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp391 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp391 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp392 = nil
      local _t = _type(_temp391)
      if _t == "table" then
                      if _type(_temp391.out) == "function" or (_type(_temp391.out) == "table" and _rawget(_temp391.out, "__call_thing")) then
        _temp392 = _temp391:out()
      elseif _temp391.out ~= nil then
        _temp392 = _temp391.out

        elseif _temp391.no_undermethod ~= nil then
          _temp392 =  _temp391:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp391, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp391)
      if _n.out ~= nil then
        _temp392 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp392 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp391, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp391)
      if _f.out ~= nil then
        _temp392 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp392 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp391, "out"))
      end

      elseif _temp391 == nil then
        _error(exception:null_error("_temp391", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp391))
      end

local _temp393 = string:new("\nend\n")
local _temp394
      local _t = _type(_temp392)
      if _t == "table" then
                      if _type(_temp392._less_less) == "function" or (_type(_temp392._less_less) == "table" and _rawget(_temp392._less_less, "__call_thing")) then
        _temp394 = _temp392:_less_less(_temp393)
      elseif _temp392._less_less ~= nil then
        _temp394 = _temp392._less_less

        elseif _temp392.no_undermethod ~= nil then
          _temp394 =  _temp392:no_undermethod(string:new("<<") , _temp393)
        else
          _error(exception:method_error(_temp392, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp392)
      if _n._less_less ~= nil then
        _temp394 = _n:_less_less(_temp393)
      elseif _n.no_undermethod ~= nil then
        _temp394 =  _n:no_undermethod(string:new("<<") , _temp393)
      else
        _error(exception:method_error(_temp392, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp392)
      if _f._less_less ~= nil then
        _temp394 = _f:_less_less(_temp393)
      elseif _f.no_undermethod ~= nil then
        _temp394 =  _f:no_undermethod(string:new("<<") , _temp393)
      else
        _error(exception:method_error(_temp392, "<<"))
      end

      elseif _temp392 == nil then
        _error(exception:null_error("_temp392", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp392))
      end

_dummy_ = _temp394 
end

do
local _temp380
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp380 =  _temp334(_self)

    elseif _temp334 then
      _temp380 =  _temp334
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp380 =  _self:res()
      elseif _self.res ~= nil then
        _temp380 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp380 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp380 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp395 = string:new("function")

local _temp396 = string:new("type")

_temp380:set(_temp396, _temp395)
end

do
local _temp397 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp397 =  _self:my()
      elseif _self.my ~= nil then
        _temp397 =  _self.my

        elseif my ~= nil then
          _temp397 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp398 = nil
      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.liftable_underfunctions) == "function" or (_type(_temp397.liftable_underfunctions) == "table" and _rawget(_temp397.liftable_underfunctions, "__call_thing")) then
        _temp398 = _temp397:liftable_underfunctions()
      elseif _temp397.liftable_underfunctions ~= nil then
        _temp398 = _temp397.liftable_underfunctions

        elseif _temp397.no_undermethod ~= nil then
          _temp398 =  _temp397:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp397, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.liftable_underfunctions ~= nil then
        _temp398 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp398 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp397, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.liftable_underfunctions ~= nil then
        _temp398 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp398 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp397, "liftable_functions"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end

local _temp399 = nil
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp399 =  _temp334(_self)

    elseif _temp334 then
      _temp399 =  _temp334
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp399 =  _self:res()
      elseif _self.res ~= nil then
        _temp399 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp399 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp399 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp400
      local _t = _type(_temp398)
      if _t == "table" then
                      if _type(_temp398._less_less) == "function" or (_type(_temp398._less_less) == "table" and _rawget(_temp398._less_less, "__call_thing")) then
        _temp400 = _temp398:_less_less(_temp399)
      elseif _temp398._less_less ~= nil then
        _temp400 = _temp398._less_less

        elseif _temp398.no_undermethod ~= nil then
          _temp400 =  _temp398:no_undermethod(string:new("<<") , _temp399)
        else
          _error(exception:method_error(_temp398, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp398)
      if _n._less_less ~= nil then
        _temp400 = _n:_less_less(_temp399)
      elseif _n.no_undermethod ~= nil then
        _temp400 =  _n:no_undermethod(string:new("<<") , _temp399)
      else
        _error(exception:method_error(_temp398, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp398)
      if _f._less_less ~= nil then
        _temp400 = _f:_less_less(_temp399)
      elseif _f.no_undermethod ~= nil then
        _temp400 =  _f:no_undermethod(string:new("<<") , _temp399)
      else
        _error(exception:method_error(_temp398, "<<"))
      end

      elseif _temp398 == nil then
        _error(exception:null_error("_temp398", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp398))
      end

_dummy_ = _temp400 
end

local _temp401
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp363 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp363 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp363 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp363 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp363 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp363 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp363 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp363 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp363)
      if _t == "table" then
                      if _type(_temp363.upvars) == "function" or (_type(_temp363.upvars) == "table" and _rawget(_temp363.upvars, "__call_thing")) then
        _temp363 = _temp363:upvars()
      elseif _temp363.upvars ~= nil then
        _temp363 = _temp363.upvars

        elseif _temp363.no_undermethod ~= nil then
          _temp363 =  _temp363:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp363, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp363)
      if _n.upvars ~= nil then
        _temp363 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp363 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp363, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp363)
      if _f.upvars ~= nil then
        _temp363 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp363 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp363, "upvars"))
      end

      elseif _temp363 == nil then
        _error(exception:null_error("_temp363", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp363))
      end



local _temp405 = function (_self)

local _temp402 = nil
do
local _temp403 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp403 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp403 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp403 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp403 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp403 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp403 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp403 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp403 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp403)
      if _t == "table" then
                      if _type(_temp403.var) == "function" or (_type(_temp403.var) == "table" and _rawget(_temp403.var, "__call_thing")) then
        _temp403 = _temp403:var()
      elseif _temp403.var ~= nil then
        _temp403 = _temp403.var

        elseif _temp403.no_undermethod ~= nil then
          _temp403 =  _temp403:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp403, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp403)
      if _n.var ~= nil then
        _temp403 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp403 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp403, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp403)
      if _f.var ~= nil then
        _temp403 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp403 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp403, "var"))
      end

      elseif _temp403 == nil then
        _error(exception:null_error("_temp403", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp403))
      end


_temp402 = string:new("_lifted_call(" .. _tostring(_temp403) .. ", {})")
end

return _temp402
end


local _temp409 = function (_self)

local _temp406 = nil
do
local _temp407 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp407 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp407 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp407 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp407 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp407 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp407 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp407 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp407 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.var) == "function" or (_type(_temp407.var) == "table" and _rawget(_temp407.var, "__call_thing")) then
        _temp407 = _temp407:var()
      elseif _temp407.var ~= nil then
        _temp407 = _temp407.var

        elseif _temp407.no_undermethod ~= nil then
          _temp407 =  _temp407:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp407, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.var ~= nil then
        _temp407 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp407, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.var ~= nil then
        _temp407 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp407, "var"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end


_temp406 = string:new("_lifted_call(" .. _tostring(_temp407) .. ")")
end

return _temp406
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp401 =  true_question(_self, _temp363,_temp405,_temp409)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp401 =  _self:true_question(_temp363,_temp405,_temp409)
      elseif _self.true_question ~= nil then
        _temp401 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp401 =  _self:no_undermethod(string:new("true?") , _temp363,_temp405,_temp409)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp401 =  no_undermethod(_self, string:new("true?") , _temp363,_temp405,_temp409)
      else
        _error(exception:name_error("true?"))
      end
    end

local _temp410
    if _type(_temp329) == "function" or (_type(_temp329) == "table" and _rawget(_temp329, "__call_thing")) then
      _temp409 =  _temp329(_self)

    elseif _temp329 then
      _temp409 =  _temp329
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp409 =  _self:var()
      elseif _self.var ~= nil then
        _temp409 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp409 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp409 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(_temp401) == "function" or (_type(_temp401) == "table" and _rawget(_temp401, "__call_thing")) then
      _temp405 =  _temp401(_self)

    elseif _temp401 then
      _temp405 =  _temp401
    else
            if _type(_self.lifted_undercall) == "function" or (_type(_self.lifted_undercall) == "table" and _rawget(_self.lifted_undercall, "__call_thing")) then
        _temp405 =  _self:lifted_undercall()
      elseif _self.lifted_undercall ~= nil then
        _temp405 =  _self.lifted_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp405 =  _self:no_undermethod(string:new("lifted_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp405 =  no_undermethod(_self, string:new("lifted_call"))
      else
        _error(exception:name_error("lifted_call"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp410 =  set_underresult(_self, _temp409,_temp405)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp410 =  _self:set_underresult(_temp409,_temp405)
      elseif _self.set_underresult ~= nil then
        _temp410 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp410 =  _self:no_undermethod(string:new("set_result") , _temp409,_temp405)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp410 =  no_undermethod(_self, string:new("set_result") , _temp409,_temp405)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp405 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp405 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp405 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp405 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp405 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp405 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp405 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp405 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp405)
      if _t == "table" then
                      if _type(_temp405.upvars) == "function" or (_type(_temp405.upvars) == "table" and _rawget(_temp405.upvars, "__call_thing")) then
        _temp405 = _temp405:upvars()
      elseif _temp405.upvars ~= nil then
        _temp405 = _temp405.upvars

        elseif _temp405.no_undermethod ~= nil then
          _temp405 =  _temp405:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp405, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp405)
      if _n.upvars ~= nil then
        _temp405 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp405 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp405, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp405)
      if _f.upvars ~= nil then
        _temp405 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp405 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp405, "upvars"))
      end

      elseif _temp405 == nil then
        _error(exception:null_error("_temp405", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp405))
      end



local _temp426 = function (_self)

local _temp411
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp411 =  _self:my()
      elseif _self.my ~= nil then
        _temp411 =  _self.my

        elseif my ~= nil then
          _temp411 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp411)
      if _t == "table" then
                      if _type(_temp411.env) == "function" or (_type(_temp411.env) == "table" and _rawget(_temp411.env, "__call_thing")) then
        _temp411 = _temp411:env()
      elseif _temp411.env ~= nil then
        _temp411 = _temp411.env

        elseif _temp411.no_undermethod ~= nil then
          _temp411 =  _temp411:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("e", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp411)
      if _n.env ~= nil then
        _temp411 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp411 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp411)
      if _f.env ~= nil then
        _temp411 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp411 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _temp411 == nil then
        _error(exception:null_error("e", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp411))
      end


local _temp412 
do
local _temp413 = nil
        local _t = _type(_temp410)
        if _t == "table" then
          if _rawget(_temp410, "__call_thing") == nil then
            _temp413 = _temp410
          else
                  if _temp410 == nil then
              if _type(_self._temp410) == "function" or (_type(_self._temp410) == "table" and _rawget(_self._temp410, "__call_thing")) then
        _temp413 =  _self:_temp410()
      elseif _self._temp410 ~= nil then
        _temp413 =  _self._temp410

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp410"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp413 =  _temp410(_self)
      end

          end
        elseif _t == "number" then
          _temp413 = _temp410
        elseif _t == "function" then
                if _temp410 == nil then
              if _type(_self._temp410) == "function" or (_type(_self._temp410) == "table" and _rawget(_self._temp410, "__call_thing")) then
        _temp413 =  _self:_temp410()
      elseif _self._temp410 ~= nil then
        _temp413 =  _self._temp410

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp410"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp413 =  _temp410(_self)
      end

        elseif _temp410 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp414 = nil
      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.out) == "function" or (_type(_temp413.out) == "table" and _rawget(_temp413.out, "__call_thing")) then
        _temp414 = _temp413:out()
      elseif _temp413.out ~= nil then
        _temp414 = _temp413.out

        elseif _temp413.no_undermethod ~= nil then
          _temp414 =  _temp413:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp413, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.out ~= nil then
        _temp414 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp414 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp413, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.out ~= nil then
        _temp414 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp414 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp413, "out"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("_temp413", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end

local _temp415 = nil
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp415 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp415 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp415 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp415 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp415 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp415 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.upvars) == "function" or (_type(_temp415.upvars) == "table" and _rawget(_temp415.upvars, "__call_thing")) then
        _temp415 = _temp415:upvars()
      elseif _temp415.upvars ~= nil then
        _temp415 = _temp415.upvars

        elseif _temp415.no_undermethod ~= nil then
          _temp415 =  _temp415:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp415, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.upvars ~= nil then
        _temp415 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp415 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp415, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.upvars ~= nil then
        _temp415 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp415 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp415, "upvars"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end


local _temp424 = function (_self, _temp416)
        if _temp416 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp417 = nil
do
local _temp418 = nil
        local _t = _type(_temp410)
        if _t == "table" then
          if _rawget(_temp410, "__call_thing") == nil then
            _temp418 = _temp410
          else
                  if _temp410 == nil then
              if _type(_self._temp410) == "function" or (_type(_self._temp410) == "table" and _rawget(_self._temp410, "__call_thing")) then
        _temp418 =  _self:_temp410()
      elseif _self._temp410 ~= nil then
        _temp418 =  _self._temp410

        elseif _self.no_undermethod ~= nil then
          _temp418 =  _self:no_undermethod(string:new("_temp410"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp418 =  _temp410(_self)
      end

          end
        elseif _t == "number" then
          _temp418 = _temp410
        elseif _t == "function" then
                if _temp410 == nil then
              if _type(_self._temp410) == "function" or (_type(_self._temp410) == "table" and _rawget(_self._temp410, "__call_thing")) then
        _temp418 =  _self:_temp410()
      elseif _self._temp410 ~= nil then
        _temp418 =  _self._temp410

        elseif _self.no_undermethod ~= nil then
          _temp418 =  _self:no_undermethod(string:new("_temp410"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp418 =  _temp410(_self)
      end

        elseif _temp410 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp418)
      if _t == "table" then
                      if _type(_temp418.var) == "function" or (_type(_temp418.var) == "table" and _rawget(_temp418.var, "__call_thing")) then
        _temp418 = _temp418:var()
      elseif _temp418.var ~= nil then
        _temp418 = _temp418.var

        elseif _temp418.no_undermethod ~= nil then
          _temp418 =  _temp418:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp418, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp418)
      if _n.var ~= nil then
        _temp418 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp418 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp418, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp418)
      if _f.var ~= nil then
        _temp418 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp418 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp418, "var"))
      end

      elseif _temp418 == nil then
        _error(exception:null_error("_temp418", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp418))
      end


local _temp419
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp419 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp419 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp419 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp419 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp419 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp419 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp419 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp419 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp419 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp419 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp419)
      if _t == "table" then
                      if _type(_temp419.env) == "function" or (_type(_temp419.env) == "table" and _rawget(_temp419.env, "__call_thing")) then
        _temp419 = _temp419:env()
      elseif _temp419.env ~= nil then
        _temp419 = _temp419.env

        elseif _temp419.no_undermethod ~= nil then
          _temp419 =  _temp419:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp419, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp419)
      if _n.env ~= nil then
        _temp419 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp419 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp419, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp419)
      if _f.env ~= nil then
        _temp419 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp419 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp419, "env"))
      end

      elseif _temp419 == nil then
        _error(exception:null_error("_temp419", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp419))
      end

local _temp420 = nil
    if _type(_temp416) == "function" or (_type(_temp416) == "table" and _rawget(_temp416, "__call_thing")) then
      _temp420 =  _temp416(_self)

    elseif _temp416 then
      _temp420 =  _temp416
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp420 =  _self:u()
      elseif _self.u ~= nil then
        _temp420 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp420 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp420 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp419 = _temp419:get(_temp420)
end

local _temp421
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp421 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp421 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp421 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp421 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp421 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp421 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp421 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp421 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp421 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp421 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.env) == "function" or (_type(_temp421.env) == "table" and _rawget(_temp421.env, "__call_thing")) then
        _temp421 = _temp421:env()
      elseif _temp421.env ~= nil then
        _temp421 = _temp421.env

        elseif _temp421.no_undermethod ~= nil then
          _temp421 =  _temp421:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp421, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.env ~= nil then
        _temp421 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp421 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp421, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.env ~= nil then
        _temp421 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp421 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp421, "env"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("_temp421", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end

local _temp422 = nil
    if _type(_temp416) == "function" or (_type(_temp416) == "table" and _rawget(_temp416, "__call_thing")) then
      _temp422 =  _temp416(_self)

    elseif _temp416 then
      _temp422 =  _temp416
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp422 =  _self:u()
      elseif _self.u ~= nil then
        _temp422 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp422 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp422 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp421 = _temp421:get(_temp422)
end

_temp417 = string:new("" .. _tostring(_temp418) .. ".arg_table['" .. _tostring(_temp419) .. "'] = " .. _tostring(_temp421) .. "")
end

return _temp417
end

      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.map) == "function" or (_type(_temp415.map) == "table" and _rawget(_temp415.map, "__call_thing")) then
        _temp415 = _temp415:map(_temp424)
      elseif _temp415.map ~= nil then
        _temp415 = _temp415.map

        elseif _temp415.no_undermethod ~= nil then
          _temp415 =  _temp415:no_undermethod(string:new("map") , _temp424)
        else
          _error(exception:method_error(_temp415, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.map ~= nil then
        _temp415 = _n:map(_temp424)
      elseif _n.no_undermethod ~= nil then
        _temp415 =  _n:no_undermethod(string:new("map") , _temp424)
      else
        _error(exception:method_error(_temp415, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.map ~= nil then
        _temp415 = _f:map(_temp424)
      elseif _f.no_undermethod ~= nil then
        _temp415 =  _f:no_undermethod(string:new("map") , _temp424)
      else
        _error(exception:method_error(_temp415, "map"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end

_temp424 = string:new("\n")

      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.join) == "function" or (_type(_temp415.join) == "table" and _rawget(_temp415.join, "__call_thing")) then
        _temp415 = _temp415:join(_temp424)
      elseif _temp415.join ~= nil then
        _temp415 = _temp415.join

        elseif _temp415.no_undermethod ~= nil then
          _temp415 =  _temp415:no_undermethod(string:new("join") , _temp424)
        else
          _error(exception:method_error(_temp415, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.join ~= nil then
        _temp415 = _n:join(_temp424)
      elseif _n.no_undermethod ~= nil then
        _temp415 =  _n:no_undermethod(string:new("join") , _temp424)
      else
        _error(exception:method_error(_temp415, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.join ~= nil then
        _temp415 = _f:join(_temp424)
      elseif _f.no_undermethod ~= nil then
        _temp415 =  _f:no_undermethod(string:new("join") , _temp424)
      else
        _error(exception:method_error(_temp415, "join"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end

local _temp424
      local _t = _type(_temp414)
      if _t == "table" then
                      if _type(_temp414._less_less) == "function" or (_type(_temp414._less_less) == "table" and _rawget(_temp414._less_less, "__call_thing")) then
        _temp424 = _temp414:_less_less(_temp415)
      elseif _temp414._less_less ~= nil then
        _temp424 = _temp414._less_less

        elseif _temp414.no_undermethod ~= nil then
          _temp424 =  _temp414:no_undermethod(string:new("<<") , _temp415)
        else
          _error(exception:method_error(_temp414, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp414)
      if _n._less_less ~= nil then
        _temp424 = _n:_less_less(_temp415)
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("<<") , _temp415)
      else
        _error(exception:method_error(_temp414, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp414)
      if _f._less_less ~= nil then
        _temp424 = _f:_less_less(_temp415)
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("<<") , _temp415)
      else
        _error(exception:method_error(_temp414, "<<"))
      end

      elseif _temp414 == nil then
        _error(exception:null_error("_temp414", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp414))
      end

_temp412 = _temp424 
end

return _temp412
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp405,_temp426)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp405,_temp426)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp405,_temp426)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp405,_temp426)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp410) == "function" or (_type(_temp410) == "table" and _rawget(_temp410, "__call_thing")) then
      return  _temp410(_self)

    elseif _temp410 then
      return  _temp410
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282.walk) == "function" or (_type(_temp282.walk) == "table" and _rawget(_temp282.walk, "__call_thing")) then
        _dummy_ = _temp282:walk(_temp4,_temp405)
      elseif _temp282.walk ~= nil then
        _dummy_ = _temp282.walk

        elseif _temp282.no_undermethod ~= nil then
          _dummy_ =  _temp282:no_undermethod(string:new("walk") , _temp4,_temp405)
        else
          _error(exception:method_error(_temp282, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp405)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp405)
      else
        _error(exception:method_error(_temp282, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp405)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp405)
      else
        _error(exception:method_error(_temp282, "walk"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("_temp282", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp405 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp405 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp405 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp405 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp405 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp405 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp405 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp405 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp434 = function (_self, _temp428,_temp427)
        if _temp428 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp427 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp427 =  null(_self)

    elseif null then
      _temp427 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp427 =  _self:null()
      elseif _self.null ~= nil then
        _temp427 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp427 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp427 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp429
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp429 =  _self:my()
      elseif _self.my ~= nil then
        _temp429 =  _self.my

        elseif my ~= nil then
          _temp429 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp429)
      if _t == "table" then
                      if _type(_temp429.env) == "function" or (_type(_temp429.env) == "table" and _rawget(_temp429.env, "__call_thing")) then
        _temp429 = _temp429:env()
      elseif _temp429.env ~= nil then
        _temp429 = _temp429.env

        elseif _temp429.no_undermethod ~= nil then
          _temp429 =  _temp429:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp429)
      if _n.env ~= nil then
        _temp429 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp429 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp429)
      if _f.env ~= nil then
        _temp429 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp429 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp429 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp429))
      end

local _temp430 = nil
        local _t = _type(_temp428)
        if _t == "table" then
          if _rawget(_temp428, "__call_thing") == nil then
            _temp430 = _temp428
          else
                  if _temp428 == nil then
              if _type(_self._temp428) == "function" or (_type(_self._temp428) == "table" and _rawget(_self._temp428, "__call_thing")) then
        _temp430 =  _self:_temp428()
      elseif _self._temp428 ~= nil then
        _temp430 =  _self._temp428

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp428"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp430 =  _temp428(_self)
      end

          end
        elseif _t == "number" then
          _temp430 = _temp428
        elseif _t == "function" then
                if _temp428 == nil then
              if _type(_self._temp428) == "function" or (_type(_self._temp428) == "table" and _rawget(_self._temp428, "__call_thing")) then
        _temp430 =  _self:_temp428()
      elseif _self._temp428 ~= nil then
        _temp430 =  _self._temp428

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp428"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp430 =  _temp428(_self)
      end

        elseif _temp428 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.id) == "function" or (_type(_temp430.id) == "table" and _rawget(_temp430.id, "__call_thing")) then
        _temp430 = _temp430:id()
      elseif _temp430.id ~= nil then
        _temp430 = _temp430.id

        elseif _temp430.no_undermethod ~= nil then
          _temp430 =  _temp430:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp430, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.id ~= nil then
        _temp430 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp430 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp430, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.id ~= nil then
        _temp430 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp430 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp430, "id"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("_temp430", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end


      local _t = _type(_temp429)
      if _t == "table" then
                      if _type(_temp429.new_undervar) == "function" or (_type(_temp429.new_undervar) == "table" and _rawget(_temp429.new_undervar, "__call_thing")) then
        _temp429 = _temp429:new_undervar(_temp430)
      elseif _temp429.new_undervar ~= nil then
        _temp429 = _temp429.new_undervar

        elseif _temp429.no_undermethod ~= nil then
          _temp429 =  _temp429:no_undermethod(string:new("new_var") , _temp430)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp429)
      if _n.new_undervar ~= nil then
        _temp429 = _n:new_undervar(_temp430)
      elseif _n.no_undermethod ~= nil then
        _temp429 =  _n:no_undermethod(string:new("new_var") , _temp430)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp429)
      if _f.new_undervar ~= nil then
        _temp429 = _f:new_undervar(_temp430)
      elseif _f.no_undermethod ~= nil then
        _temp429 =  _f:no_undermethod(string:new("new_var") , _temp430)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp429 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp429))
      end


    if _type(_temp429) == "function" or (_type(_temp429) == "table" and _rawget(_temp429, "__call_thing")) then
      _temp430 =  _temp429(_self)

    elseif _temp429 then
      _temp430 =  _temp429
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp430 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp430 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp430 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp430 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp431 = string:new("")

local _temp432 = string:new("arg")

local _temp433 = {}
_temp433[string:new("arg_type")] = _temp432
_temp433 = hash:new(_temp433)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp430,_temp431,_temp433)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp430,_temp431,_temp433)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp430,_temp431,_temp433)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp430,_temp431,_temp433)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp405)
      if _t == "table" then
                      if _type(_temp405.walk) == "function" or (_type(_temp405.walk) == "table" and _rawget(_temp405.walk, "__call_thing")) then
        _dummy_ = _temp405:walk(_temp4,_temp434)
      elseif _temp405.walk ~= nil then
        _dummy_ = _temp405.walk

        elseif _temp405.no_undermethod ~= nil then
          _dummy_ =  _temp405:no_undermethod(string:new("walk") , _temp4,_temp434)
        else
          _error(exception:method_error(_temp405, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp405)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp434)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp434)
      else
        _error(exception:method_error(_temp405, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp405)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp434)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp434)
      else
        _error(exception:method_error(_temp405, "walk"))
      end

      elseif _temp405 == nil then
        _error(exception:null_error("_temp405", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp405))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp434 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp434 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp434 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp434 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp434 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp434 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp434 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp434 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp434 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp434 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp443 = function (_self, _temp436,_temp435)
        if _temp436 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp435 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp435 =  null(_self)

    elseif null then
      _temp435 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp435 =  _self:null()
      elseif _self.null ~= nil then
        _temp435 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp435 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp435 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp437
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp437 =  _self:my()
      elseif _self.my ~= nil then
        _temp437 =  _self.my

        elseif my ~= nil then
          _temp437 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp437)
      if _t == "table" then
                      if _type(_temp437.env) == "function" or (_type(_temp437.env) == "table" and _rawget(_temp437.env, "__call_thing")) then
        _temp437 = _temp437:env()
      elseif _temp437.env ~= nil then
        _temp437 = _temp437.env

        elseif _temp437.no_undermethod ~= nil then
          _temp437 =  _temp437:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp437)
      if _n.env ~= nil then
        _temp437 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp437 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp437)
      if _f.env ~= nil then
        _temp437 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp437 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp437 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp437))
      end

local _temp438 = nil
        local _t = _type(_temp436)
        if _t == "table" then
          if _rawget(_temp436, "__call_thing") == nil then
            _temp438 = _temp436
          else
                  if _temp436 == nil then
              if _type(_self._temp436) == "function" or (_type(_self._temp436) == "table" and _rawget(_self._temp436, "__call_thing")) then
        _temp438 =  _self:_temp436()
      elseif _self._temp436 ~= nil then
        _temp438 =  _self._temp436

        elseif _self.no_undermethod ~= nil then
          _temp438 =  _self:no_undermethod(string:new("_temp436"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp438 =  _temp436(_self)
      end

          end
        elseif _t == "number" then
          _temp438 = _temp436
        elseif _t == "function" then
                if _temp436 == nil then
              if _type(_self._temp436) == "function" or (_type(_self._temp436) == "table" and _rawget(_self._temp436, "__call_thing")) then
        _temp438 =  _self:_temp436()
      elseif _self._temp436 ~= nil then
        _temp438 =  _self._temp436

        elseif _self.no_undermethod ~= nil then
          _temp438 =  _self:no_undermethod(string:new("_temp436"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp438 =  _temp436(_self)
      end

        elseif _temp436 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.id) == "function" or (_type(_temp438.id) == "table" and _rawget(_temp438.id, "__call_thing")) then
        _temp438 = _temp438:id()
      elseif _temp438.id ~= nil then
        _temp438 = _temp438.id

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp438, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.id ~= nil then
        _temp438 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp438, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.id ~= nil then
        _temp438 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp438, "id"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("_temp438", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end


      local _t = _type(_temp437)
      if _t == "table" then
                      if _type(_temp437.new_undervar) == "function" or (_type(_temp437.new_undervar) == "table" and _rawget(_temp437.new_undervar, "__call_thing")) then
        _temp437 = _temp437:new_undervar(_temp438)
      elseif _temp437.new_undervar ~= nil then
        _temp437 = _temp437.new_undervar

        elseif _temp437.no_undermethod ~= nil then
          _temp437 =  _temp437:no_undermethod(string:new("new_var") , _temp438)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp437)
      if _n.new_undervar ~= nil then
        _temp437 = _n:new_undervar(_temp438)
      elseif _n.no_undermethod ~= nil then
        _temp437 =  _n:no_undermethod(string:new("new_var") , _temp438)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp437)
      if _f.new_undervar ~= nil then
        _temp437 = _f:new_undervar(_temp438)
      elseif _f.no_undermethod ~= nil then
        _temp437 =  _f:no_undermethod(string:new("new_var") , _temp438)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp437 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp437))
      end


_temp438 = string:new("...")

local _temp439 = nil
do
local _temp440 = nil
    if _type(_temp437) == "function" or (_type(_temp437) == "table" and _rawget(_temp437, "__call_thing")) then
      _temp440 =  _temp437(_self)

    elseif _temp437 then
      _temp440 =  _temp437
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp440 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp440 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp440 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp440 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp439 = string:new("local " .. _tostring(_temp440) .. " = array:new(...)\n")
end

local _temp441 = string:new("var_arg")

local _temp442 = {}
_temp442[string:new("arg_type")] = _temp441
_temp442 = hash:new(_temp442)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp438,_temp439,_temp442)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp438,_temp439,_temp442)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp438,_temp439,_temp442)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp438,_temp439,_temp442)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp434)
      if _t == "table" then
                      if _type(_temp434.walk) == "function" or (_type(_temp434.walk) == "table" and _rawget(_temp434.walk, "__call_thing")) then
        _dummy_ = _temp434:walk(_temp4,_temp443)
      elseif _temp434.walk ~= nil then
        _dummy_ = _temp434.walk

        elseif _temp434.no_undermethod ~= nil then
          _dummy_ =  _temp434:no_undermethod(string:new("walk") , _temp4,_temp443)
        else
          _error(exception:method_error(_temp434, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp434)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp443)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp443)
      else
        _error(exception:method_error(_temp434, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp434)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp443)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp443)
      else
        _error(exception:method_error(_temp434, "walk"))
      end

      elseif _temp434 == nil then
        _error(exception:null_error("_temp434", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp434))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp443 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp443 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp443 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp443 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp443 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp443 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp443 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp443 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp443 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp443 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp469 = function (_self, _temp445,_temp444)
        if _temp445 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp444 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp444 =  null(_self)

    elseif null then
      _temp444 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp444 =  _self:null()
      elseif _self.null ~= nil then
        _temp444 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp444 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp444 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp446
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp446 =  _self:my()
      elseif _self.my ~= nil then
        _temp446 =  _self.my

        elseif my ~= nil then
          _temp446 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446.env) == "function" or (_type(_temp446.env) == "table" and _rawget(_temp446.env, "__call_thing")) then
        _temp446 = _temp446:env()
      elseif _temp446.env ~= nil then
        _temp446 = _temp446.env

        elseif _temp446.no_undermethod ~= nil then
          _temp446 =  _temp446:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp446)
      if _n.env ~= nil then
        _temp446 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp446 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f.env ~= nil then
        _temp446 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp446 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end

local _temp447 = nil
        local _t = _type(_temp445)
        if _t == "table" then
          if _rawget(_temp445, "__call_thing") == nil then
            _temp447 = _temp445
          else
                  if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

          end
        elseif _t == "number" then
          _temp447 = _temp445
        elseif _t == "function" then
                if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

        elseif _temp445 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp447)
      if _t == "table" then
                      if _type(_temp447.id) == "function" or (_type(_temp447.id) == "table" and _rawget(_temp447.id, "__call_thing")) then
        _temp447 = _temp447:id()
      elseif _temp447.id ~= nil then
        _temp447 = _temp447.id

        elseif _temp447.no_undermethod ~= nil then
          _temp447 =  _temp447:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp447, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp447)
      if _n.id ~= nil then
        _temp447 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp447 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp447, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp447)
      if _f.id ~= nil then
        _temp447 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp447 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp447, "id"))
      end

      elseif _temp447 == nil then
        _error(exception:null_error("_temp447", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp447))
      end


      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446.new_undervar) == "function" or (_type(_temp446.new_undervar) == "table" and _rawget(_temp446.new_undervar, "__call_thing")) then
        _temp446 = _temp446:new_undervar(_temp447)
      elseif _temp446.new_undervar ~= nil then
        _temp446 = _temp446.new_undervar

        elseif _temp446.no_undermethod ~= nil then
          _temp446 =  _temp446:no_undermethod(string:new("new_var") , _temp447)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp446)
      if _n.new_undervar ~= nil then
        _temp446 = _n:new_undervar(_temp447)
      elseif _n.no_undermethod ~= nil then
        _temp446 =  _n:no_undermethod(string:new("new_var") , _temp447)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f.new_undervar ~= nil then
        _temp446 = _f:new_undervar(_temp447)
      elseif _f.no_undermethod ~= nil then
        _temp446 =  _f:no_undermethod(string:new("new_var") , _temp447)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end


local _temp448
        local _t = _type(_temp445)
        if _t == "table" then
          if _rawget(_temp445, "__call_thing") == nil then
            _temp447 = _temp445
          else
                  if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

          end
        elseif _t == "number" then
          _temp447 = _temp445
        elseif _t == "function" then
                if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

        elseif _temp445 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp447)
      if _t == "table" then
                      if _type(_temp447.value) == "function" or (_type(_temp447.value) == "table" and _rawget(_temp447.value, "__call_thing")) then
        _temp447 = _temp447:value()
      elseif _temp447.value ~= nil then
        _temp447 = _temp447.value

        elseif _temp447.no_undermethod ~= nil then
          _temp447 =  _temp447:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp447, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp447)
      if _n.value ~= nil then
        _temp447 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp447 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp447, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp447)
      if _f.value ~= nil then
        _temp447 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp447 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp447, "value"))
      end

      elseif _temp447 == nil then
        _error(exception:null_error("_temp447", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp447))
      end


local _temp449 = nil
    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp449 =  _temp446(_self)

    elseif _temp446 then
      _temp449 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp449 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp449 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp449 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp449 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp448 =  process(_self, _temp447,_temp449)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp448 =  _self:process(_temp447,_temp449)
      elseif _self.process ~= nil then
        _temp448 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp448 =  _self:no_undermethod(string:new("process") , _temp447,_temp449)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp448 =  no_undermethod(_self, string:new("process") , _temp447,_temp449)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp450
do
local _temp451 = nil
    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp451 =  _temp446(_self)

    elseif _temp446 then
      _temp451 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp451 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp451 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp451 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp451 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp452 = nil
        local _t = _type(_temp448)
        if _t == "table" then
          if _rawget(_temp448, "__call_thing") == nil then
            _temp452 = _temp448
          else
                  if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp452 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp452 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp452 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp452 =  _temp448(_self)
      end

          end
        elseif _t == "number" then
          _temp452 = _temp448
        elseif _t == "function" then
                if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp452 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp452 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp452 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp452 =  _temp448(_self)
      end

        elseif _temp448 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp452)
      if _t == "table" then
                      if _type(_temp452.out) == "function" or (_type(_temp452.out) == "table" and _rawget(_temp452.out, "__call_thing")) then
        _temp452 = _temp452:out()
      elseif _temp452.out ~= nil then
        _temp452 = _temp452.out

        elseif _temp452.no_undermethod ~= nil then
          _temp452 =  _temp452:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp452, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp452)
      if _n.out ~= nil then
        _temp452 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp452 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp452, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp452)
      if _f.out ~= nil then
        _temp452 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp452 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp452, "out"))
      end

      elseif _temp452 == nil then
        _error(exception:null_error("_temp452", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp452))
      end


_temp450 = string:new("\n    if " .. _tostring(_temp451) .. " == nil then\n      " .. _tostring(_temp452) .. "\n  ")
end

local _temp449 
do
local _temp453 = nil
        local _t = _type(_temp448)
        if _t == "table" then
          if _rawget(_temp448, "__call_thing") == nil then
            _temp453 = _temp448
          else
                  if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp453 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp453 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp453 =  _temp448(_self)
      end

          end
        elseif _t == "number" then
          _temp453 = _temp448
        elseif _t == "function" then
                if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp453 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp453 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp453 =  _temp448(_self)
      end

        elseif _temp448 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp454 = nil
      local _t = _type(_temp453)
      if _t == "table" then
                      if _type(_temp453.var) == "function" or (_type(_temp453.var) == "table" and _rawget(_temp453.var, "__call_thing")) then
        _temp454 = _temp453:var()
      elseif _temp453.var ~= nil then
        _temp454 = _temp453.var

        elseif _temp453.no_undermethod ~= nil then
          _temp454 =  _temp453:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp453, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp453)
      if _n.var ~= nil then
        _temp454 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp454 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp453)
      if _f.var ~= nil then
        _temp454 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp454 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _temp453 == nil then
        _error(exception:null_error("_temp453", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp453))
      end

local _temp455 = nil
    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp455 =  _temp446(_self)

    elseif _temp446 then
      _temp455 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp455 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp455 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp455 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp455 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp456
      local _t = _type(_temp454)
      if _t == "table" then
                      if _type(_temp454._equal_equal) == "function" or (_type(_temp454._equal_equal) == "table" and _rawget(_temp454._equal_equal, "__call_thing")) then
        _temp456 = _temp454:_equal_equal(_temp455)
      elseif _temp454._equal_equal ~= nil then
        _temp456 = _temp454._equal_equal

        elseif _temp454.no_undermethod ~= nil then
          _temp456 =  _temp454:no_undermethod(string:new("==") , _temp455)
        else
          _error(exception:method_error(_temp454, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp455) == 'number' then
              if _temp454 == _temp455 then
        _temp456 = object.__true
      else
        _temp456 = object.__false
      end

      else
              local _n = number:new(_temp454)
      if _n._equal_equal ~= nil then
        _temp456 = _n:_equal_equal(_temp455)
      elseif _n.no_undermethod ~= nil then
        _temp456 =  _n:no_undermethod(string:new("==") , _temp455)
      else
        _error(exception:method_error(_temp454, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp454)
      if _f._equal_equal ~= nil then
        _temp456 = _f:_equal_equal(_temp455)
      elseif _f.no_undermethod ~= nil then
        _temp456 =  _f:no_undermethod(string:new("==") , _temp455)
      else
        _error(exception:method_error(_temp454, "=="))
      end

      elseif _temp454 == nil then
        _error(exception:null_error("_temp454", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp454))
      end

_temp449 = _temp456 
end


local _temp464 = function (_self)

local _temp457 
do
local _temp458 = nil
_temp458 =  _temp450

local _temp459 = nil
do
local _temp460 = nil
    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp460 =  _temp446(_self)

    elseif _temp446 then
      _temp460 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp460 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp460 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp460 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp460 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp461 = nil
        local _t = _type(_temp448)
        if _t == "table" then
          if _rawget(_temp448, "__call_thing") == nil then
            _temp461 = _temp448
          else
                  if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp461 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp461 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp461 =  _temp448(_self)
      end

          end
        elseif _t == "number" then
          _temp461 = _temp448
        elseif _t == "function" then
                if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp461 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp461 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp461 =  _temp448(_self)
      end

        elseif _temp448 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp461)
      if _t == "table" then
                      if _type(_temp461.var) == "function" or (_type(_temp461.var) == "table" and _rawget(_temp461.var, "__call_thing")) then
        _temp461 = _temp461:var()
      elseif _temp461.var ~= nil then
        _temp461 = _temp461.var

        elseif _temp461.no_undermethod ~= nil then
          _temp461 =  _temp461:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp461, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp461)
      if _n.var ~= nil then
        _temp461 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp461 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp461, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp461)
      if _f.var ~= nil then
        _temp461 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp461 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp461, "var"))
      end

      elseif _temp461 == nil then
        _error(exception:null_error("_temp461", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp461))
      end


_temp459 = string:new("" .. _tostring(_temp460) .. " = " .. _tostring(_temp461) .. "\n")
end
local _temp462
              if _type(_temp458._less_less) == "function" or (_type(_temp458._less_less) == "table" and _rawget(_temp458._less_less, "__call_thing")) then
        _temp462 = _temp458:_less_less(_temp459)
      elseif _temp458._less_less ~= nil then
        _temp462 = _temp458._less_less

        elseif _temp458.no_undermethod ~= nil then
          _temp462 =  _temp458:no_undermethod(string:new("<<") , _temp459)
        else
          _error(exception:method_error(_temp458, "<<"))
        end

_temp457 = _temp462 
end

return _temp457
end

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp449,_temp464)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp449,_temp464)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp449,_temp464)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp449,_temp464)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp465 = nil
_temp465 =  _temp450

local _temp466 = string:new("end\n")
local _temp467
              if _type(_temp465._less_less) == "function" or (_type(_temp465._less_less) == "table" and _rawget(_temp465._less_less, "__call_thing")) then
        _temp467 = _temp465:_less_less(_temp466)
      elseif _temp465._less_less ~= nil then
        _temp467 = _temp465._less_less

        elseif _temp465.no_undermethod ~= nil then
          _temp467 =  _temp465:no_undermethod(string:new("<<") , _temp466)
        else
          _error(exception:method_error(_temp465, "<<"))
        end

_dummy_ = _temp467 
end

    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp464 =  _temp446(_self)

    elseif _temp446 then
      _temp464 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp464 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp464 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp464 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp464 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp449 =  _temp450

_temp447 = string:new("def_arg")

local _temp468 = {}
_temp468[string:new("arg_type")] = _temp447
_temp468 = hash:new(_temp468)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp464,_temp449,_temp468)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp464,_temp449,_temp468)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp464,_temp449,_temp468)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp464,_temp449,_temp468)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp443)
      if _t == "table" then
                      if _type(_temp443.walk) == "function" or (_type(_temp443.walk) == "table" and _rawget(_temp443.walk, "__call_thing")) then
        _dummy_ = _temp443:walk(_temp4,_temp469)
      elseif _temp443.walk ~= nil then
        _dummy_ = _temp443.walk

        elseif _temp443.no_undermethod ~= nil then
          _dummy_ =  _temp443:no_undermethod(string:new("walk") , _temp4,_temp469)
        else
          _error(exception:method_error(_temp443, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp443)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp469)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp469)
      else
        _error(exception:method_error(_temp443, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp443)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp469)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp469)
      else
        _error(exception:method_error(_temp443, "walk"))
      end

      elseif _temp443 == nil then
        _error(exception:null_error("_temp443", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp443))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp469 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp469 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp469 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp469 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp469 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp469 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp469 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp469 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp469 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp469 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp479 = function (_self, _temp471,_temp470)
        if _temp471 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp470 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp470 =  null(_self)

    elseif null then
      _temp470 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp470 =  _self:null()
      elseif _self.null ~= nil then
        _temp470 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp470 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp470 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp472
local _temp473 = nil
    if _type(_temp470) == "function" or (_type(_temp470) == "table" and _rawget(_temp470, "__call_thing")) then
      _temp473 =  _temp470(_self)

    elseif _temp470 then
      _temp473 =  _temp470
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp473 =  _self:var()
      elseif _self.var ~= nil then
        _temp473 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp473 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp473 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp472 =  set_underresult(_self, _temp473)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp472 =  _self:set_underresult(_temp473)
      elseif _self.set_underresult ~= nil then
        _temp472 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp472 =  _self:no_undermethod(string:new("set_result") , _temp473)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp472 =  no_undermethod(_self, string:new("set_result") , _temp473)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp474 = nil
        local _t = _type(_temp472)
        if _t == "table" then
          if _rawget(_temp472, "__call_thing") == nil then
            _temp474 = _temp472
          else
                  if _temp472 == nil then
              if _type(_self._temp472) == "function" or (_type(_self._temp472) == "table" and _rawget(_self._temp472, "__call_thing")) then
        _temp474 =  _self:_temp472()
      elseif _self._temp472 ~= nil then
        _temp474 =  _self._temp472

        elseif _self.no_undermethod ~= nil then
          _temp474 =  _self:no_undermethod(string:new("_temp472"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp474 =  _temp472(_self)
      end

          end
        elseif _t == "number" then
          _temp474 = _temp472
        elseif _t == "function" then
                if _temp472 == nil then
              if _type(_self._temp472) == "function" or (_type(_self._temp472) == "table" and _rawget(_self._temp472, "__call_thing")) then
        _temp474 =  _self:_temp472()
      elseif _self._temp472 ~= nil then
        _temp474 =  _self._temp472

        elseif _self.no_undermethod ~= nil then
          _temp474 =  _self:no_undermethod(string:new("_temp472"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp474 =  _temp472(_self)
      end

        elseif _temp472 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp475 = nil
      local _t = _type(_temp474)
      if _t == "table" then
                      if _type(_temp474.out) == "function" or (_type(_temp474.out) == "table" and _rawget(_temp474.out, "__call_thing")) then
        _temp475 = _temp474:out()
      elseif _temp474.out ~= nil then
        _temp475 = _temp474.out

        elseif _temp474.no_undermethod ~= nil then
          _temp475 =  _temp474:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp474, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp474)
      if _n.out ~= nil then
        _temp475 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp475 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp474, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp474)
      if _f.out ~= nil then
        _temp475 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp475 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp474, "out"))
      end

      elseif _temp474 == nil then
        _error(exception:null_error("_temp474", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp474))
      end

local _temp476 = nil
local _temp477 = nil
        local _t = _type(_temp471)
        if _t == "table" then
          if _rawget(_temp471, "__call_thing") == nil then
            _temp477 = _temp471
          else
                  if _temp471 == nil then
              if _type(_self._temp471) == "function" or (_type(_self._temp471) == "table" and _rawget(_self._temp471, "__call_thing")) then
        _temp477 =  _self:_temp471()
      elseif _self._temp471 ~= nil then
        _temp477 =  _self._temp471

        elseif _self.no_undermethod ~= nil then
          _temp477 =  _self:no_undermethod(string:new("_temp471"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp477 =  _temp471(_self)
      end

          end
        elseif _t == "number" then
          _temp477 = _temp471
        elseif _t == "function" then
                if _temp471 == nil then
              if _type(_self._temp471) == "function" or (_type(_self._temp471) == "table" and _rawget(_self._temp471, "__call_thing")) then
        _temp477 =  _self:_temp471()
      elseif _self._temp471 ~= nil then
        _temp477 =  _self._temp471

        elseif _self.no_undermethod ~= nil then
          _temp477 =  _self:no_undermethod(string:new("_temp471"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp477 =  _temp471(_self)
      end

        elseif _temp471 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp477)
      if _t == "table" then
                      if _type(_temp477.method) == "function" or (_type(_temp477.method) == "table" and _rawget(_temp477.method, "__call_thing")) then
        _temp477 = _temp477:method()
      elseif _temp477.method ~= nil then
        _temp477 = _temp477.method

        elseif _temp477.no_undermethod ~= nil then
          _temp477 =  _temp477:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp477, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp477)
      if _n.method ~= nil then
        _temp477 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp477 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp477, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp477)
      if _f.method ~= nil then
        _temp477 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp477 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp477, "method"))
      end

      elseif _temp477 == nil then
        _error(exception:null_error("_temp477", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp477))
      end


local _temp478 = nil
        local _t = _type(_temp472)
        if _t == "table" then
          if _rawget(_temp472, "__call_thing") == nil then
            _temp478 = _temp472
          else
                  if _temp472 == nil then
              if _type(_self._temp472) == "function" or (_type(_self._temp472) == "table" and _rawget(_self._temp472, "__call_thing")) then
        _temp478 =  _self:_temp472()
      elseif _self._temp472 ~= nil then
        _temp478 =  _self._temp472

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp472"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp478 =  _temp472(_self)
      end

          end
        elseif _t == "number" then
          _temp478 = _temp472
        elseif _t == "function" then
                if _temp472 == nil then
              if _type(_self._temp472) == "function" or (_type(_self._temp472) == "table" and _rawget(_self._temp472, "__call_thing")) then
        _temp478 =  _self:_temp472()
      elseif _self._temp472 ~= nil then
        _temp478 =  _self._temp472

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp472"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp478 =  _temp472(_self)
      end

        elseif _temp472 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp478)
      if _t == "table" then
                      if _type(_temp478.var) == "function" or (_type(_temp478.var) == "table" and _rawget(_temp478.var, "__call_thing")) then
        _temp478 = _temp478:var()
      elseif _temp478.var ~= nil then
        _temp478 = _temp478.var

        elseif _temp478.no_undermethod ~= nil then
          _temp478 =  _temp478:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp478, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp478)
      if _n.var ~= nil then
        _temp478 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp478 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp478, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp478)
      if _f.var ~= nil then
        _temp478 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp478 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp478, "var"))
      end

      elseif _temp478 == nil then
        _error(exception:null_error("_temp478", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp478))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp476 =  get_undermethod_underlocal(_self, _temp477,_temp478)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp476 =  _self:get_undermethod_underlocal(_temp477,_temp478)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp476 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp476 =  _self:no_undermethod(string:new("get_method_local") , _temp477,_temp478)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp476 =  no_undermethod(_self, string:new("get_method_local") , _temp477,_temp478)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp478
      local _t = _type(_temp475)
      if _t == "table" then
                      if _type(_temp475._less_less) == "function" or (_type(_temp475._less_less) == "table" and _rawget(_temp475._less_less, "__call_thing")) then
        _temp478 = _temp475:_less_less(_temp476)
      elseif _temp475._less_less ~= nil then
        _temp478 = _temp475._less_less

        elseif _temp475.no_undermethod ~= nil then
          _temp478 =  _temp475:no_undermethod(string:new("<<") , _temp476)
        else
          _error(exception:method_error(_temp475, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp475)
      if _n._less_less ~= nil then
        _temp478 = _n:_less_less(_temp476)
      elseif _n.no_undermethod ~= nil then
        _temp478 =  _n:no_undermethod(string:new("<<") , _temp476)
      else
        _error(exception:method_error(_temp475, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp475)
      if _f._less_less ~= nil then
        _temp478 = _f:_less_less(_temp476)
      elseif _f.no_undermethod ~= nil then
        _temp478 =  _f:no_undermethod(string:new("<<") , _temp476)
      else
        _error(exception:method_error(_temp475, "<<"))
      end

      elseif _temp475 == nil then
        _error(exception:null_error("_temp475", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp475))
      end

_dummy_ = _temp478 
end

    if _type(_temp472) == "function" or (_type(_temp472) == "table" and _rawget(_temp472, "__call_thing")) then
      return  _temp472(_self)

    elseif _temp472 then
      return  _temp472
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp469)
      if _t == "table" then
                      if _type(_temp469.walk) == "function" or (_type(_temp469.walk) == "table" and _rawget(_temp469.walk, "__call_thing")) then
        _dummy_ = _temp469:walk(_temp4,_temp479)
      elseif _temp469.walk ~= nil then
        _dummy_ = _temp469.walk

        elseif _temp469.no_undermethod ~= nil then
          _dummy_ =  _temp469:no_undermethod(string:new("walk") , _temp4,_temp479)
        else
          _error(exception:method_error(_temp469, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp469)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp479)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp479)
      else
        _error(exception:method_error(_temp469, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp469)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp479)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp479)
      else
        _error(exception:method_error(_temp469, "walk"))
      end

      elseif _temp469 == nil then
        _error(exception:null_error("_temp469", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp469))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp479 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp479 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp479 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp479 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp479 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp479 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp479 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp479 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp489 = function (_self, _temp481,_temp480)
        if _temp481 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp480 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp480 =  null(_self)

    elseif null then
      _temp480 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp480 =  _self:null()
      elseif _self.null ~= nil then
        _temp480 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp480 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp480 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp482
local _temp483 = nil
    if _type(_temp480) == "function" or (_type(_temp480) == "table" and _rawget(_temp480, "__call_thing")) then
      _temp483 =  _temp480(_self)

    elseif _temp480 then
      _temp483 =  _temp480
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp483 =  _self:var()
      elseif _self.var ~= nil then
        _temp483 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp483 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp483 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp482 =  set_underresult(_self, _temp483)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp482 =  _self:set_underresult(_temp483)
      elseif _self.set_underresult ~= nil then
        _temp482 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp482 =  _self:no_undermethod(string:new("set_result") , _temp483)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp482 =  no_undermethod(_self, string:new("set_result") , _temp483)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp484 = nil
        local _t = _type(_temp482)
        if _t == "table" then
          if _rawget(_temp482, "__call_thing") == nil then
            _temp484 = _temp482
          else
                  if _temp482 == nil then
              if _type(_self._temp482) == "function" or (_type(_self._temp482) == "table" and _rawget(_self._temp482, "__call_thing")) then
        _temp484 =  _self:_temp482()
      elseif _self._temp482 ~= nil then
        _temp484 =  _self._temp482

        elseif _self.no_undermethod ~= nil then
          _temp484 =  _self:no_undermethod(string:new("_temp482"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp484 =  _temp482(_self)
      end

          end
        elseif _t == "number" then
          _temp484 = _temp482
        elseif _t == "function" then
                if _temp482 == nil then
              if _type(_self._temp482) == "function" or (_type(_self._temp482) == "table" and _rawget(_self._temp482, "__call_thing")) then
        _temp484 =  _self:_temp482()
      elseif _self._temp482 ~= nil then
        _temp484 =  _self._temp482

        elseif _self.no_undermethod ~= nil then
          _temp484 =  _self:no_undermethod(string:new("_temp482"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp484 =  _temp482(_self)
      end

        elseif _temp482 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp485 = nil
      local _t = _type(_temp484)
      if _t == "table" then
                      if _type(_temp484.out) == "function" or (_type(_temp484.out) == "table" and _rawget(_temp484.out, "__call_thing")) then
        _temp485 = _temp484:out()
      elseif _temp484.out ~= nil then
        _temp485 = _temp484.out

        elseif _temp484.no_undermethod ~= nil then
          _temp485 =  _temp484:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp484, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp484)
      if _n.out ~= nil then
        _temp485 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp485 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp484, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp484)
      if _f.out ~= nil then
        _temp485 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp485 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp484, "out"))
      end

      elseif _temp484 == nil then
        _error(exception:null_error("_temp484", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp484))
      end

local _temp486 = nil
local _temp487 = nil
        local _t = _type(_temp481)
        if _t == "table" then
          if _rawget(_temp481, "__call_thing") == nil then
            _temp487 = _temp481
          else
                  if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp487 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp487 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp481(_self)
      end

          end
        elseif _t == "number" then
          _temp487 = _temp481
        elseif _t == "function" then
                if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp487 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp487 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp481(_self)
      end

        elseif _temp481 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487.method) == "function" or (_type(_temp487.method) == "table" and _rawget(_temp487.method, "__call_thing")) then
        _temp487 = _temp487:method()
      elseif _temp487.method ~= nil then
        _temp487 = _temp487.method

        elseif _temp487.no_undermethod ~= nil then
          _temp487 =  _temp487:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp487, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n.method ~= nil then
        _temp487 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp487, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f.method ~= nil then
        _temp487 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp487, "method"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end


local _temp488 = nil
        local _t = _type(_temp482)
        if _t == "table" then
          if _rawget(_temp482, "__call_thing") == nil then
            _temp488 = _temp482
          else
                  if _temp482 == nil then
              if _type(_self._temp482) == "function" or (_type(_self._temp482) == "table" and _rawget(_self._temp482, "__call_thing")) then
        _temp488 =  _self:_temp482()
      elseif _self._temp482 ~= nil then
        _temp488 =  _self._temp482

        elseif _self.no_undermethod ~= nil then
          _temp488 =  _self:no_undermethod(string:new("_temp482"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp488 =  _temp482(_self)
      end

          end
        elseif _t == "number" then
          _temp488 = _temp482
        elseif _t == "function" then
                if _temp482 == nil then
              if _type(_self._temp482) == "function" or (_type(_self._temp482) == "table" and _rawget(_self._temp482, "__call_thing")) then
        _temp488 =  _self:_temp482()
      elseif _self._temp482 ~= nil then
        _temp488 =  _self._temp482

        elseif _self.no_undermethod ~= nil then
          _temp488 =  _self:no_undermethod(string:new("_temp482"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp488 =  _temp482(_self)
      end

        elseif _temp482 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp488)
      if _t == "table" then
                      if _type(_temp488.var) == "function" or (_type(_temp488.var) == "table" and _rawget(_temp488.var, "__call_thing")) then
        _temp488 = _temp488:var()
      elseif _temp488.var ~= nil then
        _temp488 = _temp488.var

        elseif _temp488.no_undermethod ~= nil then
          _temp488 =  _temp488:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp488, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp488)
      if _n.var ~= nil then
        _temp488 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp488 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp488, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp488)
      if _f.var ~= nil then
        _temp488 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp488 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp488, "var"))
      end

      elseif _temp488 == nil then
        _error(exception:null_error("_temp488", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp488))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp486 =  get_undermethod_underlocal(_self, _temp487,_temp488)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp486 =  _self:get_undermethod_underlocal(_temp487,_temp488)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp486 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp486 =  _self:no_undermethod(string:new("get_method_local") , _temp487,_temp488)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp486 =  no_undermethod(_self, string:new("get_method_local") , _temp487,_temp488)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp488
      local _t = _type(_temp485)
      if _t == "table" then
                      if _type(_temp485._less_less) == "function" or (_type(_temp485._less_less) == "table" and _rawget(_temp485._less_less, "__call_thing")) then
        _temp488 = _temp485:_less_less(_temp486)
      elseif _temp485._less_less ~= nil then
        _temp488 = _temp485._less_less

        elseif _temp485.no_undermethod ~= nil then
          _temp488 =  _temp485:no_undermethod(string:new("<<") , _temp486)
        else
          _error(exception:method_error(_temp485, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp485)
      if _n._less_less ~= nil then
        _temp488 = _n:_less_less(_temp486)
      elseif _n.no_undermethod ~= nil then
        _temp488 =  _n:no_undermethod(string:new("<<") , _temp486)
      else
        _error(exception:method_error(_temp485, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp485)
      if _f._less_less ~= nil then
        _temp488 = _f:_less_less(_temp486)
      elseif _f.no_undermethod ~= nil then
        _temp488 =  _f:no_undermethod(string:new("<<") , _temp486)
      else
        _error(exception:method_error(_temp485, "<<"))
      end

      elseif _temp485 == nil then
        _error(exception:null_error("_temp485", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp485))
      end

_dummy_ = _temp488 
end

    if _type(_temp482) == "function" or (_type(_temp482) == "table" and _rawget(_temp482, "__call_thing")) then
      return  _temp482(_self)

    elseif _temp482 then
      return  _temp482
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp479)
      if _t == "table" then
                      if _type(_temp479.walk) == "function" or (_type(_temp479.walk) == "table" and _rawget(_temp479.walk, "__call_thing")) then
        _dummy_ = _temp479:walk(_temp4,_temp489)
      elseif _temp479.walk ~= nil then
        _dummy_ = _temp479.walk

        elseif _temp479.no_undermethod ~= nil then
          _dummy_ =  _temp479:no_undermethod(string:new("walk") , _temp4,_temp489)
        else
          _error(exception:method_error(_temp479, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp479)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp489)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp489)
      else
        _error(exception:method_error(_temp479, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp479)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp489)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp489)
      else
        _error(exception:method_error(_temp479, "walk"))
      end

      elseif _temp479 == nil then
        _error(exception:null_error("_temp479", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp479))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp489 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp489 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp489 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp489 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp489 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp489 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp489 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp489 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp499 = function (_self, _temp491,_temp490)
        if _temp491 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp490 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp490 =  null(_self)

    elseif null then
      _temp490 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp490 =  _self:null()
      elseif _self.null ~= nil then
        _temp490 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp490 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp490 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp492
local _temp493 = nil
    if _type(_temp490) == "function" or (_type(_temp490) == "table" and _rawget(_temp490, "__call_thing")) then
      _temp493 =  _temp490(_self)

    elseif _temp490 then
      _temp493 =  _temp490
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp493 =  _self:var()
      elseif _self.var ~= nil then
        _temp493 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp493 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp493 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp492 =  set_underresult(_self, _temp493)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp492 =  _self:set_underresult(_temp493)
      elseif _self.set_underresult ~= nil then
        _temp492 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp492 =  _self:no_undermethod(string:new("set_result") , _temp493)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp492 =  no_undermethod(_self, string:new("set_result") , _temp493)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp494 = nil
        local _t = _type(_temp492)
        if _t == "table" then
          if _rawget(_temp492, "__call_thing") == nil then
            _temp494 = _temp492
          else
                  if _temp492 == nil then
              if _type(_self._temp492) == "function" or (_type(_self._temp492) == "table" and _rawget(_self._temp492, "__call_thing")) then
        _temp494 =  _self:_temp492()
      elseif _self._temp492 ~= nil then
        _temp494 =  _self._temp492

        elseif _self.no_undermethod ~= nil then
          _temp494 =  _self:no_undermethod(string:new("_temp492"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp494 =  _temp492(_self)
      end

          end
        elseif _t == "number" then
          _temp494 = _temp492
        elseif _t == "function" then
                if _temp492 == nil then
              if _type(_self._temp492) == "function" or (_type(_self._temp492) == "table" and _rawget(_self._temp492, "__call_thing")) then
        _temp494 =  _self:_temp492()
      elseif _self._temp492 ~= nil then
        _temp494 =  _self._temp492

        elseif _self.no_undermethod ~= nil then
          _temp494 =  _self:no_undermethod(string:new("_temp492"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp494 =  _temp492(_self)
      end

        elseif _temp492 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp495 = nil
      local _t = _type(_temp494)
      if _t == "table" then
                      if _type(_temp494.out) == "function" or (_type(_temp494.out) == "table" and _rawget(_temp494.out, "__call_thing")) then
        _temp495 = _temp494:out()
      elseif _temp494.out ~= nil then
        _temp495 = _temp494.out

        elseif _temp494.no_undermethod ~= nil then
          _temp495 =  _temp494:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp494, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp494)
      if _n.out ~= nil then
        _temp495 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp494, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp494)
      if _f.out ~= nil then
        _temp495 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp494, "out"))
      end

      elseif _temp494 == nil then
        _error(exception:null_error("_temp494", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp494))
      end

local _temp496 = nil
local _temp497 = nil
        local _t = _type(_temp491)
        if _t == "table" then
          if _rawget(_temp491, "__call_thing") == nil then
            _temp497 = _temp491
          else
                  if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp497 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp497 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp497 =  _temp491(_self)
      end

          end
        elseif _t == "number" then
          _temp497 = _temp491
        elseif _t == "function" then
                if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp497 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp497 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp497 =  _temp491(_self)
      end

        elseif _temp491 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp497)
      if _t == "table" then
                      if _type(_temp497.method) == "function" or (_type(_temp497.method) == "table" and _rawget(_temp497.method, "__call_thing")) then
        _temp497 = _temp497:method()
      elseif _temp497.method ~= nil then
        _temp497 = _temp497.method

        elseif _temp497.no_undermethod ~= nil then
          _temp497 =  _temp497:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp497, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp497)
      if _n.method ~= nil then
        _temp497 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp497 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp497, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp497)
      if _f.method ~= nil then
        _temp497 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp497 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp497, "method"))
      end

      elseif _temp497 == nil then
        _error(exception:null_error("_temp497", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp497))
      end


local _temp498 = nil
        local _t = _type(_temp492)
        if _t == "table" then
          if _rawget(_temp492, "__call_thing") == nil then
            _temp498 = _temp492
          else
                  if _temp492 == nil then
              if _type(_self._temp492) == "function" or (_type(_self._temp492) == "table" and _rawget(_self._temp492, "__call_thing")) then
        _temp498 =  _self:_temp492()
      elseif _self._temp492 ~= nil then
        _temp498 =  _self._temp492

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp492"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp498 =  _temp492(_self)
      end

          end
        elseif _t == "number" then
          _temp498 = _temp492
        elseif _t == "function" then
                if _temp492 == nil then
              if _type(_self._temp492) == "function" or (_type(_self._temp492) == "table" and _rawget(_self._temp492, "__call_thing")) then
        _temp498 =  _self:_temp492()
      elseif _self._temp492 ~= nil then
        _temp498 =  _self._temp492

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp492"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp498 =  _temp492(_self)
      end

        elseif _temp492 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.var) == "function" or (_type(_temp498.var) == "table" and _rawget(_temp498.var, "__call_thing")) then
        _temp498 = _temp498:var()
      elseif _temp498.var ~= nil then
        _temp498 = _temp498.var

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp498, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.var ~= nil then
        _temp498 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp498, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.var ~= nil then
        _temp498 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp498, "var"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("_temp498", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp496 =  get_undermethod_underself(_self, _temp497,_temp498)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp496 =  _self:get_undermethod_underself(_temp497,_temp498)
      elseif _self.get_undermethod_underself ~= nil then
        _temp496 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp496 =  _self:no_undermethod(string:new("get_method_self") , _temp497,_temp498)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp496 =  no_undermethod(_self, string:new("get_method_self") , _temp497,_temp498)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp498
      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495._less_less) == "function" or (_type(_temp495._less_less) == "table" and _rawget(_temp495._less_less, "__call_thing")) then
        _temp498 = _temp495:_less_less(_temp496)
      elseif _temp495._less_less ~= nil then
        _temp498 = _temp495._less_less

        elseif _temp495.no_undermethod ~= nil then
          _temp498 =  _temp495:no_undermethod(string:new("<<") , _temp496)
        else
          _error(exception:method_error(_temp495, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n._less_less ~= nil then
        _temp498 = _n:_less_less(_temp496)
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("<<") , _temp496)
      else
        _error(exception:method_error(_temp495, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f._less_less ~= nil then
        _temp498 = _f:_less_less(_temp496)
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("<<") , _temp496)
      else
        _error(exception:method_error(_temp495, "<<"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("_temp495", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end

_dummy_ = _temp498 
end

    if _type(_temp492) == "function" or (_type(_temp492) == "table" and _rawget(_temp492, "__call_thing")) then
      return  _temp492(_self)

    elseif _temp492 then
      return  _temp492
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp489)
      if _t == "table" then
                      if _type(_temp489.walk) == "function" or (_type(_temp489.walk) == "table" and _rawget(_temp489.walk, "__call_thing")) then
        _dummy_ = _temp489:walk(_temp4,_temp499)
      elseif _temp489.walk ~= nil then
        _dummy_ = _temp489.walk

        elseif _temp489.no_undermethod ~= nil then
          _dummy_ =  _temp489:no_undermethod(string:new("walk") , _temp4,_temp499)
        else
          _error(exception:method_error(_temp489, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp489)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp499)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp499)
      else
        _error(exception:method_error(_temp489, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp489)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp499)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp499)
      else
        _error(exception:method_error(_temp489, "walk"))
      end

      elseif _temp489 == nil then
        _error(exception:null_error("_temp489", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp489))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp499 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp499 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp499 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp499 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp499 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp499 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp499 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp499 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp515 = function (_self, _temp501,_temp500)
        if _temp501 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp500 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp500 =  null(_self)

    elseif null then
      _temp500 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp500 =  _self:null()
      elseif _self.null ~= nil then
        _temp500 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp500 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp500 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp502
local _temp503 = nil
    if _type(_temp500) == "function" or (_type(_temp500) == "table" and _rawget(_temp500, "__call_thing")) then
      _temp503 =  _temp500(_self)

    elseif _temp500 then
      _temp503 =  _temp500
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp503 =  _self:var()
      elseif _self.var ~= nil then
        _temp503 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp503 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp503 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp502 =  set_underresult(_self, _temp503)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp502 =  _self:set_underresult(_temp503)
      elseif _self.set_underresult ~= nil then
        _temp502 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp502 =  _self:no_undermethod(string:new("set_result") , _temp503)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp502 =  no_undermethod(_self, string:new("set_result") , _temp503)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp504
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp503 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp503 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp503 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp503 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp503 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp503 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp503 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp503 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp503 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp503 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp503)
      if _t == "table" then
                      if _type(_temp503.target) == "function" or (_type(_temp503.target) == "table" and _rawget(_temp503.target, "__call_thing")) then
        _temp503 = _temp503:target()
      elseif _temp503.target ~= nil then
        _temp503 = _temp503.target

        elseif _temp503.no_undermethod ~= nil then
          _temp503 =  _temp503:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp503, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp503)
      if _n.target ~= nil then
        _temp503 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp503 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp503, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp503)
      if _f.target ~= nil then
        _temp503 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp503 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp503, "target"))
      end

      elseif _temp503 == nil then
        _error(exception:null_error("_temp503", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp503))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp504 =  process(_self, _temp503)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp504 =  _self:process(_temp503)
      elseif _self.process ~= nil then
        _temp504 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp504 =  _self:no_undermethod(string:new("process") , _temp503)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp504 =  no_undermethod(_self, string:new("process") , _temp503)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp505 = nil
        local _t = _type(_temp502)
        if _t == "table" then
          if _rawget(_temp502, "__call_thing") == nil then
            _temp505 = _temp502
          else
                  if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp505 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp505 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp505 =  _temp502(_self)
      end

          end
        elseif _t == "number" then
          _temp505 = _temp502
        elseif _t == "function" then
                if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp505 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp505 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp505 =  _temp502(_self)
      end

        elseif _temp502 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp506 = nil
      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.out) == "function" or (_type(_temp505.out) == "table" and _rawget(_temp505.out, "__call_thing")) then
        _temp506 = _temp505:out()
      elseif _temp505.out ~= nil then
        _temp506 = _temp505.out

        elseif _temp505.no_undermethod ~= nil then
          _temp506 =  _temp505:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp505, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.out ~= nil then
        _temp506 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp506 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp505, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.out ~= nil then
        _temp506 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp506 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp505, "out"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("_temp505", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end

local _temp507 = nil
        local _t = _type(_temp504)
        if _t == "table" then
          if _rawget(_temp504, "__call_thing") == nil then
            _temp507 = _temp504
          else
                  if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp507 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp507 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp507 =  _temp504(_self)
      end

          end
        elseif _t == "number" then
          _temp507 = _temp504
        elseif _t == "function" then
                if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp507 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp507 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp507 =  _temp504(_self)
      end

        elseif _temp504 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp507)
      if _t == "table" then
                      if _type(_temp507.out) == "function" or (_type(_temp507.out) == "table" and _rawget(_temp507.out, "__call_thing")) then
        _temp507 = _temp507:out()
      elseif _temp507.out ~= nil then
        _temp507 = _temp507.out

        elseif _temp507.no_undermethod ~= nil then
          _temp507 =  _temp507:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp507, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp507)
      if _n.out ~= nil then
        _temp507 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp507 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp507, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp507)
      if _f.out ~= nil then
        _temp507 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp507 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp507, "out"))
      end

      elseif _temp507 == nil then
        _error(exception:null_error("_temp507", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp507))
      end

local _temp508
      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506._less_less) == "function" or (_type(_temp506._less_less) == "table" and _rawget(_temp506._less_less, "__call_thing")) then
        _temp508 = _temp506:_less_less(_temp507)
      elseif _temp506._less_less ~= nil then
        _temp508 = _temp506._less_less

        elseif _temp506.no_undermethod ~= nil then
          _temp508 =  _temp506:no_undermethod(string:new("<<") , _temp507)
        else
          _error(exception:method_error(_temp506, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n._less_less ~= nil then
        _temp508 = _n:_less_less(_temp507)
      elseif _n.no_undermethod ~= nil then
        _temp508 =  _n:no_undermethod(string:new("<<") , _temp507)
      else
        _error(exception:method_error(_temp506, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f._less_less ~= nil then
        _temp508 = _f:_less_less(_temp507)
      elseif _f.no_undermethod ~= nil then
        _temp508 =  _f:no_undermethod(string:new("<<") , _temp507)
      else
        _error(exception:method_error(_temp506, "<<"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end

_dummy_ = _temp508 
end

do
local _temp509 = nil
        local _t = _type(_temp502)
        if _t == "table" then
          if _rawget(_temp502, "__call_thing") == nil then
            _temp509 = _temp502
          else
                  if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp509 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp509 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp509 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp509 =  _temp502(_self)
      end

          end
        elseif _t == "number" then
          _temp509 = _temp502
        elseif _t == "function" then
                if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp509 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp509 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp509 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp509 =  _temp502(_self)
      end

        elseif _temp502 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp510 = nil
      local _t = _type(_temp509)
      if _t == "table" then
                      if _type(_temp509.out) == "function" or (_type(_temp509.out) == "table" and _rawget(_temp509.out, "__call_thing")) then
        _temp510 = _temp509:out()
      elseif _temp509.out ~= nil then
        _temp510 = _temp509.out

        elseif _temp509.no_undermethod ~= nil then
          _temp510 =  _temp509:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp509, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp509)
      if _n.out ~= nil then
        _temp510 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp510 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp509, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp509)
      if _f.out ~= nil then
        _temp510 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp510 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp509, "out"))
      end

      elseif _temp509 == nil then
        _error(exception:null_error("_temp509", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp509))
      end

local _temp511 = nil
local _temp512 = nil
        local _t = _type(_temp504)
        if _t == "table" then
          if _rawget(_temp504, "__call_thing") == nil then
            _temp512 = _temp504
          else
                  if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp512 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp512 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp512 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp512 =  _temp504(_self)
      end

          end
        elseif _t == "number" then
          _temp512 = _temp504
        elseif _t == "function" then
                if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp512 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp512 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp512 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp512 =  _temp504(_self)
      end

        elseif _temp504 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp512)
      if _t == "table" then
                      if _type(_temp512.var) == "function" or (_type(_temp512.var) == "table" and _rawget(_temp512.var, "__call_thing")) then
        _temp512 = _temp512:var()
      elseif _temp512.var ~= nil then
        _temp512 = _temp512.var

        elseif _temp512.no_undermethod ~= nil then
          _temp512 =  _temp512:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp512, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp512)
      if _n.var ~= nil then
        _temp512 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp512 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp512, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp512)
      if _f.var ~= nil then
        _temp512 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp512 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp512, "var"))
      end

      elseif _temp512 == nil then
        _error(exception:null_error("_temp512", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp512))
      end


local _temp513 = nil
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp513 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp513 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp513 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp513 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp513 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp513 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.method) == "function" or (_type(_temp513.method) == "table" and _rawget(_temp513.method, "__call_thing")) then
        _temp513 = _temp513:method()
      elseif _temp513.method ~= nil then
        _temp513 = _temp513.method

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp513, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.method ~= nil then
        _temp513 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp513, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.method ~= nil then
        _temp513 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp513, "method"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("_temp513", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end


local _temp514 = nil
        local _t = _type(_temp502)
        if _t == "table" then
          if _rawget(_temp502, "__call_thing") == nil then
            _temp514 = _temp502
          else
                  if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp514 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp514 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp514 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp514 =  _temp502(_self)
      end

          end
        elseif _t == "number" then
          _temp514 = _temp502
        elseif _t == "function" then
                if _temp502 == nil then
              if _type(_self._temp502) == "function" or (_type(_self._temp502) == "table" and _rawget(_self._temp502, "__call_thing")) then
        _temp514 =  _self:_temp502()
      elseif _self._temp502 ~= nil then
        _temp514 =  _self._temp502

        elseif _self.no_undermethod ~= nil then
          _temp514 =  _self:no_undermethod(string:new("_temp502"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp514 =  _temp502(_self)
      end

        elseif _temp502 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp514)
      if _t == "table" then
                      if _type(_temp514.var) == "function" or (_type(_temp514.var) == "table" and _rawget(_temp514.var, "__call_thing")) then
        _temp514 = _temp514:var()
      elseif _temp514.var ~= nil then
        _temp514 = _temp514.var

        elseif _temp514.no_undermethod ~= nil then
          _temp514 =  _temp514:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp514, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp514)
      if _n.var ~= nil then
        _temp514 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp514 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp514, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp514)
      if _f.var ~= nil then
        _temp514 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp514 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp514, "var"))
      end

      elseif _temp514 == nil then
        _error(exception:null_error("_temp514", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp514))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp511 =  get_undermethod(_self, _temp512,_temp513,_temp514)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp511 =  _self:get_undermethod(_temp512,_temp513,_temp514)
      elseif _self.get_undermethod ~= nil then
        _temp511 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp511 =  _self:no_undermethod(string:new("get_method") , _temp512,_temp513,_temp514)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp511 =  no_undermethod(_self, string:new("get_method") , _temp512,_temp513,_temp514)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp514
      local _t = _type(_temp510)
      if _t == "table" then
                      if _type(_temp510._less_less) == "function" or (_type(_temp510._less_less) == "table" and _rawget(_temp510._less_less, "__call_thing")) then
        _temp514 = _temp510:_less_less(_temp511)
      elseif _temp510._less_less ~= nil then
        _temp514 = _temp510._less_less

        elseif _temp510.no_undermethod ~= nil then
          _temp514 =  _temp510:no_undermethod(string:new("<<") , _temp511)
        else
          _error(exception:method_error(_temp510, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp510)
      if _n._less_less ~= nil then
        _temp514 = _n:_less_less(_temp511)
      elseif _n.no_undermethod ~= nil then
        _temp514 =  _n:no_undermethod(string:new("<<") , _temp511)
      else
        _error(exception:method_error(_temp510, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp510)
      if _f._less_less ~= nil then
        _temp514 = _f:_less_less(_temp511)
      elseif _f.no_undermethod ~= nil then
        _temp514 =  _f:no_undermethod(string:new("<<") , _temp511)
      else
        _error(exception:method_error(_temp510, "<<"))
      end

      elseif _temp510 == nil then
        _error(exception:null_error("_temp510", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp510))
      end

_dummy_ = _temp514 
end

    if _type(_temp502) == "function" or (_type(_temp502) == "table" and _rawget(_temp502, "__call_thing")) then
      return  _temp502(_self)

    elseif _temp502 then
      return  _temp502
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp499)
      if _t == "table" then
                      if _type(_temp499.walk) == "function" or (_type(_temp499.walk) == "table" and _rawget(_temp499.walk, "__call_thing")) then
        _dummy_ = _temp499:walk(_temp4,_temp515)
      elseif _temp499.walk ~= nil then
        _dummy_ = _temp499.walk

        elseif _temp499.no_undermethod ~= nil then
          _dummy_ =  _temp499:no_undermethod(string:new("walk") , _temp4,_temp515)
        else
          _error(exception:method_error(_temp499, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp499)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp515)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp515)
      else
        _error(exception:method_error(_temp499, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp499)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp515)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp515)
      else
        _error(exception:method_error(_temp499, "walk"))
      end

      elseif _temp499 == nil then
        _error(exception:null_error("_temp499", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp499))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp515 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp515 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp515 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp515 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp515 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp515 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp515 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp515 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp515 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp515 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp525 = function (_self, _temp517,_temp516)
        if _temp517 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp516 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp516 =  null(_self)

    elseif null then
      _temp516 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp516 =  _self:null()
      elseif _self.null ~= nil then
        _temp516 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp516 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp516 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp518
        local _t = _type(_temp517)
        if _t == "table" then
          if _rawget(_temp517, "__call_thing") == nil then
            _temp518 = _temp517
          else
                  if _temp517 == nil then
              if _type(_self._temp517) == "function" or (_type(_self._temp517) == "table" and _rawget(_self._temp517, "__call_thing")) then
        _temp518 =  _self:_temp517()
      elseif _self._temp517 ~= nil then
        _temp518 =  _self._temp517

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp517"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp518 =  _temp517(_self)
      end

          end
        elseif _t == "number" then
          _temp518 = _temp517
        elseif _t == "function" then
                if _temp517 == nil then
              if _type(_self._temp517) == "function" or (_type(_self._temp517) == "table" and _rawget(_self._temp517, "__call_thing")) then
        _temp518 =  _self:_temp517()
      elseif _self._temp517 ~= nil then
        _temp518 =  _self._temp517

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp517"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp518 =  _temp517(_self)
      end

        elseif _temp517 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518.body) == "function" or (_type(_temp518.body) == "table" and _rawget(_temp518.body, "__call_thing")) then
        _temp518 = _temp518:body()
      elseif _temp518.body ~= nil then
        _temp518 = _temp518.body

        elseif _temp518.no_undermethod ~= nil then
          _temp518 =  _temp518:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp518)
      if _n.body ~= nil then
        _temp518 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp518 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f.body ~= nil then
        _temp518 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp518 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end

local _temp519 = regex:new("[\\\\]")

local _temp520 = string:new("\\\\")

      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518.sub) == "function" or (_type(_temp518.sub) == "table" and _rawget(_temp518.sub, "__call_thing")) then
        _temp518 = _temp518:sub(_temp519,_temp520)
      elseif _temp518.sub ~= nil then
        _temp518 = _temp518.sub

        elseif _temp518.no_undermethod ~= nil then
          _temp518 =  _temp518:no_undermethod(string:new("sub") , _temp519,_temp520)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp518)
      if _n.sub ~= nil then
        _temp518 = _n:sub(_temp519,_temp520)
      elseif _n.no_undermethod ~= nil then
        _temp518 =  _n:no_undermethod(string:new("sub") , _temp519,_temp520)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f.sub ~= nil then
        _temp518 = _f:sub(_temp519,_temp520)
      elseif _f.no_undermethod ~= nil then
        _temp518 =  _f:no_undermethod(string:new("sub") , _temp519,_temp520)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end

local _temp520 = regex:new("\"")

_temp519 = string:new("\\\"")

      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518.sub) == "function" or (_type(_temp518.sub) == "table" and _rawget(_temp518.sub, "__call_thing")) then
        _temp518 = _temp518:sub(_temp520,_temp519)
      elseif _temp518.sub ~= nil then
        _temp518 = _temp518.sub

        elseif _temp518.no_undermethod ~= nil then
          _temp518 =  _temp518:no_undermethod(string:new("sub") , _temp520,_temp519)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp518)
      if _n.sub ~= nil then
        _temp518 = _n:sub(_temp520,_temp519)
      elseif _n.no_undermethod ~= nil then
        _temp518 =  _n:no_undermethod(string:new("sub") , _temp520,_temp519)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f.sub ~= nil then
        _temp518 = _f:sub(_temp520,_temp519)
      elseif _f.no_undermethod ~= nil then
        _temp518 =  _f:no_undermethod(string:new("sub") , _temp520,_temp519)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end


local _temp521
        local _t = _type(_temp517)
        if _t == "table" then
          if _rawget(_temp517, "__call_thing") == nil then
            _temp521 = _temp517
          else
                  if _temp517 == nil then
              if _type(_self._temp517) == "function" or (_type(_self._temp517) == "table" and _rawget(_self._temp517, "__call_thing")) then
        _temp521 =  _self:_temp517()
      elseif _self._temp517 ~= nil then
        _temp521 =  _self._temp517

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp517"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp521 =  _temp517(_self)
      end

          end
        elseif _t == "number" then
          _temp521 = _temp517
        elseif _t == "function" then
                if _temp517 == nil then
              if _type(_self._temp517) == "function" or (_type(_self._temp517) == "table" and _rawget(_self._temp517, "__call_thing")) then
        _temp521 =  _self:_temp517()
      elseif _self._temp517 ~= nil then
        _temp521 =  _self._temp517

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp517"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp521 =  _temp517(_self)
      end

        elseif _temp517 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.opts) == "function" or (_type(_temp521.opts) == "table" and _rawget(_temp521.opts, "__call_thing")) then
        _temp521 = _temp521:opts()
      elseif _temp521.opts ~= nil then
        _temp521 = _temp521.opts

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.opts ~= nil then
        _temp521 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.opts ~= nil then
        _temp521 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.dice) == "function" or (_type(_temp521.dice) == "table" and _rawget(_temp521.dice, "__call_thing")) then
        _temp521 = _temp521:dice()
      elseif _temp521.dice ~= nil then
        _temp521 = _temp521.dice

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.dice ~= nil then
        _temp521 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.dice ~= nil then
        _temp521 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.unique) == "function" or (_type(_temp521.unique) == "table" and _rawget(_temp521.unique, "__call_thing")) then
        _temp521 = _temp521:unique()
      elseif _temp521.unique ~= nil then
        _temp521 = _temp521.unique

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.unique ~= nil then
        _temp521 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.unique ~= nil then
        _temp521 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.join) == "function" or (_type(_temp521.join) == "table" and _rawget(_temp521.join, "__call_thing")) then
        _temp521 = _temp521:join()
      elseif _temp521.join ~= nil then
        _temp521 = _temp521.join

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.join ~= nil then
        _temp521 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.join ~= nil then
        _temp521 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

local _temp519 = regex:new("m")

_temp520 = string:new("s")

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.sub) == "function" or (_type(_temp521.sub) == "table" and _rawget(_temp521.sub, "__call_thing")) then
        _temp521 = _temp521:sub(_temp519,_temp520)
      elseif _temp521.sub ~= nil then
        _temp521 = _temp521.sub

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("sub") , _temp519,_temp520)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.sub ~= nil then
        _temp521 = _n:sub(_temp519,_temp520)
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("sub") , _temp519,_temp520)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.sub ~= nil then
        _temp521 = _f:sub(_temp519,_temp520)
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("sub") , _temp519,_temp520)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end


    if _type(_temp516) == "function" or (_type(_temp516) == "table" and _rawget(_temp516, "__call_thing")) then
      _temp520 =  _temp516(_self)

    elseif _temp516 then
      _temp520 =  _temp516
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp520 =  _self:var()
      elseif _self.var ~= nil then
        _temp520 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp520 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp520 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp522 = nil
    if _type(_temp518) == "function" or (_type(_temp518) == "table" and _rawget(_temp518, "__call_thing")) then
      _temp522 =  _temp518(_self)

    elseif _temp518 then
      _temp522 =  _temp518
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp522 =  _self:body()
      elseif _self.body ~= nil then
        _temp522 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp522 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp522 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp523 = nil
    if _type(_temp521) == "function" or (_type(_temp521) == "table" and _rawget(_temp521, "__call_thing")) then
      _temp523 =  _temp521(_self)

    elseif _temp521 then
      _temp523 =  _temp521
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp523 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp523 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp523 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp523 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp519 = string:new("regex:new(\"" .. _tostring(_temp522) .. "\", \"" .. _tostring(_temp523) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp520,_temp519)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp520,_temp519)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp520,_temp519)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp520,_temp519)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp515)
      if _t == "table" then
                      if _type(_temp515.walk) == "function" or (_type(_temp515.walk) == "table" and _rawget(_temp515.walk, "__call_thing")) then
        _dummy_ = _temp515:walk(_temp4,_temp525)
      elseif _temp515.walk ~= nil then
        _dummy_ = _temp515.walk

        elseif _temp515.no_undermethod ~= nil then
          _dummy_ =  _temp515:no_undermethod(string:new("walk") , _temp4,_temp525)
        else
          _error(exception:method_error(_temp515, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp515)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp525)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp525)
      else
        _error(exception:method_error(_temp515, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp515)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp525)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp525)
      else
        _error(exception:method_error(_temp515, "walk"))
      end

      elseif _temp515 == nil then
        _error(exception:null_error("_temp515", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp515))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp525 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp525 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp525 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp525 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp525 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp525 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp525 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp525 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp525 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp525 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp529 = function (_self, _temp527,_temp526)
        if _temp527 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp526 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp526 =  null(_self)

    elseif null then
      _temp526 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp526 =  _self:null()
      elseif _self.null ~= nil then
        _temp526 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp526 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp526 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp528
local _temp529 = nil
    if _type(_temp526) == "function" or (_type(_temp526) == "table" and _rawget(_temp526, "__call_thing")) then
      _temp529 =  _temp526(_self)

    elseif _temp526 then
      _temp529 =  _temp526
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp529 =  _self:var()
      elseif _self.var ~= nil then
        _temp529 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp529 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp529 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp528 =  set_underresult(_self, _temp529)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp528 =  _self:set_underresult(_temp529)
      elseif _self.set_underresult ~= nil then
        _temp528 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp528 =  _self:no_undermethod(string:new("set_result") , _temp529)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp528 =  no_undermethod(_self, string:new("set_result") , _temp529)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp530
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp530 =  _self:my()
      elseif _self.my ~= nil then
        _temp530 =  _self.my

        elseif my ~= nil then
          _temp530 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.env) == "function" or (_type(_temp530.env) == "table" and _rawget(_temp530.env, "__call_thing")) then
        _temp530 = _temp530:env()
      elseif _temp530.env ~= nil then
        _temp530 = _temp530.env

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.env ~= nil then
        _temp530 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.env ~= nil then
        _temp530 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.next_undertemp) == "function" or (_type(_temp530.next_undertemp) == "table" and _rawget(_temp530.next_undertemp, "__call_thing")) then
        _temp530 = _temp530:next_undertemp()
      elseif _temp530.next_undertemp ~= nil then
        _temp530 = _temp530.next_undertemp

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.next_undertemp ~= nil then
        _temp530 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.next_undertemp ~= nil then
        _temp530 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end


do
local _temp531 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp531 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp531 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp531 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp531 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp531 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp531 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp531 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp531 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp531 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp531 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp532 = nil
      local _t = _type(_temp531)
      if _t == "table" then
                      if _type(_temp531.out) == "function" or (_type(_temp531.out) == "table" and _rawget(_temp531.out, "__call_thing")) then
        _temp532 = _temp531:out()
      elseif _temp531.out ~= nil then
        _temp532 = _temp531.out

        elseif _temp531.no_undermethod ~= nil then
          _temp532 =  _temp531:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp531, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp531)
      if _n.out ~= nil then
        _temp532 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp532 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp531, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp531)
      if _f.out ~= nil then
        _temp532 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp532 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp531, "out"))
      end

      elseif _temp531 == nil then
        _error(exception:null_error("_temp531", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp531))
      end

local _temp533 = nil
do
local _temp534 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp534 =  _temp530(_self)

    elseif _temp530 then
      _temp534 =  _temp530
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp534 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp534 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp534 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp534 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp533 = string:new("\ndo\nlocal " .. _tostring(_temp534) .. " = {}\n")
end
local _temp535
      local _t = _type(_temp532)
      if _t == "table" then
                      if _type(_temp532._less_less) == "function" or (_type(_temp532._less_less) == "table" and _rawget(_temp532._less_less, "__call_thing")) then
        _temp535 = _temp532:_less_less(_temp533)
      elseif _temp532._less_less ~= nil then
        _temp535 = _temp532._less_less

        elseif _temp532.no_undermethod ~= nil then
          _temp535 =  _temp532:no_undermethod(string:new("<<") , _temp533)
        else
          _error(exception:method_error(_temp532, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp532)
      if _n._less_less ~= nil then
        _temp535 = _n:_less_less(_temp533)
      elseif _n.no_undermethod ~= nil then
        _temp535 =  _n:no_undermethod(string:new("<<") , _temp533)
      else
        _error(exception:method_error(_temp532, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp532)
      if _f._less_less ~= nil then
        _temp535 = _f:_less_less(_temp533)
      elseif _f.no_undermethod ~= nil then
        _temp535 =  _f:no_undermethod(string:new("<<") , _temp533)
      else
        _error(exception:method_error(_temp532, "<<"))
      end

      elseif _temp532 == nil then
        _error(exception:null_error("_temp532", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp532))
      end

_dummy_ = _temp535 
end

local _temp536
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp536 =  my(_self)

    elseif my then
      _temp536 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp536 =  _self:my()
      elseif _self.my ~= nil then
        _temp536 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp536 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp536 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp527)
        if _t == "table" then
          if _rawget(_temp527, "__call_thing") == nil then
            _temp529 = _temp527
          else
                  if _temp527 == nil then
              if _type(_self._temp527) == "function" or (_type(_self._temp527) == "table" and _rawget(_self._temp527, "__call_thing")) then
        _temp529 =  _self:_temp527()
      elseif _self._temp527 ~= nil then
        _temp529 =  _self._temp527

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp527"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp529 =  _temp527(_self)
      end

          end
        elseif _t == "number" then
          _temp529 = _temp527
        elseif _t == "function" then
                if _temp527 == nil then
              if _type(_self._temp527) == "function" or (_type(_self._temp527) == "table" and _rawget(_self._temp527, "__call_thing")) then
        _temp529 =  _self:_temp527()
      elseif _self._temp527 ~= nil then
        _temp529 =  _self._temp527

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp527"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp529 =  _temp527(_self)
      end

        elseif _temp527 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp529)
      if _t == "table" then
                      if _type(_temp529.nodes) == "function" or (_type(_temp529.nodes) == "table" and _rawget(_temp529.nodes, "__call_thing")) then
        _temp529 = _temp529:nodes()
      elseif _temp529.nodes ~= nil then
        _temp529 = _temp529.nodes

        elseif _temp529.no_undermethod ~= nil then
          _temp529 =  _temp529:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp529, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp529)
      if _n.nodes ~= nil then
        _temp529 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp529 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp529, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp529)
      if _f.nodes ~= nil then
        _temp529 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp529 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp529, "nodes"))
      end

      elseif _temp529 == nil then
        _error(exception:null_error("_temp529", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp529))
      end


local _temp579 = function (_self, _temp537, _temp538)
        if _temp537 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp538 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp539 
do
local _temp540 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp540 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp540 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp540 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp540 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp540 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp540 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp540 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp540 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp540 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp540 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp541 = nil
      local _t = _type(_temp540)
      if _t == "table" then
                      if _type(_temp540.name) == "function" or (_type(_temp540.name) == "table" and _rawget(_temp540.name, "__call_thing")) then
        _temp541 = _temp540:name()
      elseif _temp540.name ~= nil then
        _temp541 = _temp540.name

        elseif _temp540.no_undermethod ~= nil then
          _temp541 =  _temp540:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp540, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp540)
      if _n.name ~= nil then
        _temp541 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp541 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp540, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp540)
      if _f.name ~= nil then
        _temp541 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp541 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp540, "name"))
      end

      elseif _temp540 == nil then
        _error(exception:null_error("_temp540", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp540))
      end

local _temp542 = string:new("string")
local _temp543
      local _t = _type(_temp541)
      if _t == "table" then
                      if _type(_temp541._equal_equal) == "function" or (_type(_temp541._equal_equal) == "table" and _rawget(_temp541._equal_equal, "__call_thing")) then
        _temp543 = _temp541:_equal_equal(_temp542)
      elseif _temp541._equal_equal ~= nil then
        _temp543 = _temp541._equal_equal

        elseif _temp541.no_undermethod ~= nil then
          _temp543 =  _temp541:no_undermethod(string:new("==") , _temp542)
        else
          _error(exception:method_error(_temp541, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp542) == 'number' then
              if _temp541 == _temp542 then
        _temp543 = object.__true
      else
        _temp543 = object.__false
      end

      else
              local _n = number:new(_temp541)
      if _n._equal_equal ~= nil then
        _temp543 = _n:_equal_equal(_temp542)
      elseif _n.no_undermethod ~= nil then
        _temp543 =  _n:no_undermethod(string:new("==") , _temp542)
      else
        _error(exception:method_error(_temp541, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp541)
      if _f._equal_equal ~= nil then
        _temp543 = _f:_equal_equal(_temp542)
      elseif _f.no_undermethod ~= nil then
        _temp543 =  _f:no_undermethod(string:new("==") , _temp542)
      else
        _error(exception:method_error(_temp541, "=="))
      end

      elseif _temp541 == nil then
        _error(exception:null_error("_temp541", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp541))
      end

_temp539 = _temp543 
end


local _temp556 = function (_self)

local _temp544 
do
local _temp545 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp545 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp545 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp545 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp545 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp545 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp545 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp545 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp545 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp546 = nil
      local _t = _type(_temp545)
      if _t == "table" then
                      if _type(_temp545.out) == "function" or (_type(_temp545.out) == "table" and _rawget(_temp545.out, "__call_thing")) then
        _temp546 = _temp545:out()
      elseif _temp545.out ~= nil then
        _temp546 = _temp545.out

        elseif _temp545.no_undermethod ~= nil then
          _temp546 =  _temp545:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp545, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp545)
      if _n.out ~= nil then
        _temp546 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp546 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp545, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp545)
      if _f.out ~= nil then
        _temp546 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp546 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp545, "out"))
      end

      elseif _temp545 == nil then
        _error(exception:null_error("_temp545", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp545))
      end

local _temp547 = nil
do
local _temp548 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp548 =  _temp530(_self)

    elseif _temp530 then
      _temp548 =  _temp530
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp548 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp548 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp548 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp548 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp549 
do
local _temp550 = nil
    if _type(_temp538) == "function" or (_type(_temp538) == "table" and _rawget(_temp538, "__call_thing")) then
      _temp550 =  _temp538(_self)

    elseif _temp538 then
      _temp550 =  _temp538
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp550 =  _self:i()
      elseif _self.i ~= nil then
        _temp550 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp550 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp550 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp551
      local _t = _type(_temp550)
      if _t == "table" then
                      if _type(_temp550._plus) == "function" or (_type(_temp550._plus) == "table" and _rawget(_temp550._plus, "__call_thing")) then
        _temp551 = _temp550:_plus(1)
      elseif _temp550._plus ~= nil then
        _temp551 = _temp550._plus

        elseif _temp550.no_undermethod ~= nil then
          _temp551 =  _temp550:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp550, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp551 = _temp550 + 1
      else
              local _n = number:new(_temp550)
      if _n._plus ~= nil then
        _temp551 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp551 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp550, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp550)
      if _f._plus ~= nil then
        _temp551 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp551 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp550, "+"))
      end

      elseif _temp550 == nil then
        _error(exception:null_error("_temp550", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp550))
      end

_temp549 = _temp551 
end

local _temp552 = nil
        local _t = _type(_temp536)
        if _t == "table" then
          if _rawget(_temp536, "__call_thing") == nil then
            _temp552 = _temp536
          else
                  if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp552 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp552 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp552 =  _temp536(_self)
      end

          end
        elseif _t == "number" then
          _temp552 = _temp536
        elseif _t == "function" then
                if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp552 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp552 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp552 =  _temp536(_self)
      end

        elseif _temp536 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp553 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp553 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp553 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp553 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp553 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp553 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp553 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp553 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp553 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp553 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp553 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp553)
      if _t == "table" then
                      if _type(_temp553.value) == "function" or (_type(_temp553.value) == "table" and _rawget(_temp553.value, "__call_thing")) then
        _temp553 = _temp553:value()
      elseif _temp553.value ~= nil then
        _temp553 = _temp553.value

        elseif _temp553.no_undermethod ~= nil then
          _temp553 =  _temp553:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp553, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp553)
      if _n.value ~= nil then
        _temp553 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp553 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp553, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp553)
      if _f.value ~= nil then
        _temp553 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp553 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp553, "value"))
      end

      elseif _temp553 == nil then
        _error(exception:null_error("_temp553", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp553))
      end


      local _t = _type(_temp552)
      if _t == "table" then
                      if _type(_temp552.escape_understring) == "function" or (_type(_temp552.escape_understring) == "table" and _rawget(_temp552.escape_understring, "__call_thing")) then
        _temp552 = _temp552:escape_understring(_temp553)
      elseif _temp552.escape_understring ~= nil then
        _temp552 = _temp552.escape_understring

        elseif _temp552.no_undermethod ~= nil then
          _temp552 =  _temp552:no_undermethod(string:new("escape_string") , _temp553)
        else
          _error(exception:method_error(_temp552, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp552)
      if _n.escape_understring ~= nil then
        _temp552 = _n:escape_understring(_temp553)
      elseif _n.no_undermethod ~= nil then
        _temp552 =  _n:no_undermethod(string:new("escape_string") , _temp553)
      else
        _error(exception:method_error(_temp552, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp552)
      if _f.escape_understring ~= nil then
        _temp552 = _f:escape_understring(_temp553)
      elseif _f.no_undermethod ~= nil then
        _temp552 =  _f:no_undermethod(string:new("escape_string") , _temp553)
      else
        _error(exception:method_error(_temp552, "escape_string"))
      end

      elseif _temp552 == nil then
        _error(exception:null_error("_temp552", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp552))
      end


_temp547 = string:new("" .. _tostring(_temp548) .. "[" .. _tostring(_temp549) .. "] = \"" .. _tostring(_temp552) .. "\"\n")
end
local _temp554
      local _t = _type(_temp546)
      if _t == "table" then
                      if _type(_temp546._less_less) == "function" or (_type(_temp546._less_less) == "table" and _rawget(_temp546._less_less, "__call_thing")) then
        _temp554 = _temp546:_less_less(_temp547)
      elseif _temp546._less_less ~= nil then
        _temp554 = _temp546._less_less

        elseif _temp546.no_undermethod ~= nil then
          _temp554 =  _temp546:no_undermethod(string:new("<<") , _temp547)
        else
          _error(exception:method_error(_temp546, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp546)
      if _n._less_less ~= nil then
        _temp554 = _n:_less_less(_temp547)
      elseif _n.no_undermethod ~= nil then
        _temp554 =  _n:no_undermethod(string:new("<<") , _temp547)
      else
        _error(exception:method_error(_temp546, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp546)
      if _f._less_less ~= nil then
        _temp554 = _f:_less_less(_temp547)
      elseif _f.no_undermethod ~= nil then
        _temp554 =  _f:no_undermethod(string:new("<<") , _temp547)
      else
        _error(exception:method_error(_temp546, "<<"))
      end

      elseif _temp546 == nil then
        _error(exception:null_error("_temp546", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp546))
      end

_temp544 = _temp554 
end

return _temp544
end


local _temp577 = function (_self)

local _temp557
        local _t = _type(_temp536)
        if _t == "table" then
          if _rawget(_temp536, "__call_thing") == nil then
            _temp557 = _temp536
          else
                  if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp557 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp557 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp557 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp557 =  _temp536(_self)
      end

          end
        elseif _t == "number" then
          _temp557 = _temp536
        elseif _t == "function" then
                if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp557 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp557 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp557 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp557 =  _temp536(_self)
      end

        elseif _temp536 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp558 = nil
    if _type(_temp537) == "function" or (_type(_temp537) == "table" and _rawget(_temp537, "__call_thing")) then
      _temp558 =  _temp537(_self)

    elseif _temp537 then
      _temp558 =  _temp537
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp558 =  _self:n()
      elseif _self.n ~= nil then
        _temp558 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp558 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp558 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp559 = nil
do
local _temp560 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp560 =  _temp530(_self)

    elseif _temp530 then
      _temp560 =  _temp530
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp560 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp560 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp560 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp560 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp561 
do
local _temp562 = nil
    if _type(_temp538) == "function" or (_type(_temp538) == "table" and _rawget(_temp538, "__call_thing")) then
      _temp562 =  _temp538(_self)

    elseif _temp538 then
      _temp562 =  _temp538
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp562 =  _self:i()
      elseif _self.i ~= nil then
        _temp562 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp562 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp562 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp563
      local _t = _type(_temp562)
      if _t == "table" then
                      if _type(_temp562._plus) == "function" or (_type(_temp562._plus) == "table" and _rawget(_temp562._plus, "__call_thing")) then
        _temp563 = _temp562:_plus(1)
      elseif _temp562._plus ~= nil then
        _temp563 = _temp562._plus

        elseif _temp562.no_undermethod ~= nil then
          _temp563 =  _temp562:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp562, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp563 = _temp562 + 1
      else
              local _n = number:new(_temp562)
      if _n._plus ~= nil then
        _temp563 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp563 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp562, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp562)
      if _f._plus ~= nil then
        _temp563 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp563 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp562, "+"))
      end

      elseif _temp562 == nil then
        _error(exception:null_error("_temp562", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp562))
      end

_temp561 = _temp563 
end

_temp559 = string:new("" .. _tostring(_temp560) .. "[" .. _tostring(_temp561) .. "]")
end

      local _t = _type(_temp557)
      if _t == "table" then
                      if _type(_temp557.process) == "function" or (_type(_temp557.process) == "table" and _rawget(_temp557.process, "__call_thing")) then
        _temp557 = _temp557:process(_temp558,_temp559)
      elseif _temp557.process ~= nil then
        _temp557 = _temp557.process

        elseif _temp557.no_undermethod ~= nil then
          _temp557 =  _temp557:no_undermethod(string:new("process") , _temp558,_temp559)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp557)
      if _n.process ~= nil then
        _temp557 = _n:process(_temp558,_temp559)
      elseif _n.no_undermethod ~= nil then
        _temp557 =  _n:no_undermethod(string:new("process") , _temp558,_temp559)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp557)
      if _f.process ~= nil then
        _temp557 = _f:process(_temp558,_temp559)
      elseif _f.no_undermethod ~= nil then
        _temp557 =  _f:no_undermethod(string:new("process") , _temp558,_temp559)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp557 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp557))
      end


do
local _temp564 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp564 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp564 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp564 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp564 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp564 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp564 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp564 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp564 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp565 = nil
      local _t = _type(_temp564)
      if _t == "table" then
                      if _type(_temp564.out) == "function" or (_type(_temp564.out) == "table" and _rawget(_temp564.out, "__call_thing")) then
        _temp565 = _temp564:out()
      elseif _temp564.out ~= nil then
        _temp565 = _temp564.out

        elseif _temp564.no_undermethod ~= nil then
          _temp565 =  _temp564:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp564, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp564)
      if _n.out ~= nil then
        _temp565 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp565 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp564, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp564)
      if _f.out ~= nil then
        _temp565 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp565 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp564, "out"))
      end

      elseif _temp564 == nil then
        _error(exception:null_error("_temp564", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp564))
      end

local _temp566 = nil
        local _t = _type(_temp557)
        if _t == "table" then
          if _rawget(_temp557, "__call_thing") == nil then
            _temp566 = _temp557
          else
                  if _temp557 == nil then
              if _type(_self._temp557) == "function" or (_type(_self._temp557) == "table" and _rawget(_self._temp557, "__call_thing")) then
        _temp566 =  _self:_temp557()
      elseif _self._temp557 ~= nil then
        _temp566 =  _self._temp557

        elseif _self.no_undermethod ~= nil then
          _temp566 =  _self:no_undermethod(string:new("_temp557"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp566 =  _temp557(_self)
      end

          end
        elseif _t == "number" then
          _temp566 = _temp557
        elseif _t == "function" then
                if _temp557 == nil then
              if _type(_self._temp557) == "function" or (_type(_self._temp557) == "table" and _rawget(_self._temp557, "__call_thing")) then
        _temp566 =  _self:_temp557()
      elseif _self._temp557 ~= nil then
        _temp566 =  _self._temp557

        elseif _self.no_undermethod ~= nil then
          _temp566 =  _self:no_undermethod(string:new("_temp557"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp566 =  _temp557(_self)
      end

        elseif _temp557 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp566)
      if _t == "table" then
                      if _type(_temp566.out) == "function" or (_type(_temp566.out) == "table" and _rawget(_temp566.out, "__call_thing")) then
        _temp566 = _temp566:out()
      elseif _temp566.out ~= nil then
        _temp566 = _temp566.out

        elseif _temp566.no_undermethod ~= nil then
          _temp566 =  _temp566:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp566, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp566)
      if _n.out ~= nil then
        _temp566 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp566 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp566, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp566)
      if _f.out ~= nil then
        _temp566 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp566 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp566, "out"))
      end

      elseif _temp566 == nil then
        _error(exception:null_error("_temp566", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp566))
      end

local _temp567
      local _t = _type(_temp565)
      if _t == "table" then
                      if _type(_temp565._less_less) == "function" or (_type(_temp565._less_less) == "table" and _rawget(_temp565._less_less, "__call_thing")) then
        _temp567 = _temp565:_less_less(_temp566)
      elseif _temp565._less_less ~= nil then
        _temp567 = _temp565._less_less

        elseif _temp565.no_undermethod ~= nil then
          _temp567 =  _temp565:no_undermethod(string:new("<<") , _temp566)
        else
          _error(exception:method_error(_temp565, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp565)
      if _n._less_less ~= nil then
        _temp567 = _n:_less_less(_temp566)
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("<<") , _temp566)
      else
        _error(exception:method_error(_temp565, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp565)
      if _f._less_less ~= nil then
        _temp567 = _f:_less_less(_temp566)
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("<<") , _temp566)
      else
        _error(exception:method_error(_temp565, "<<"))
      end

      elseif _temp565 == nil then
        _error(exception:null_error("_temp565", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp565))
      end

_dummy_ = _temp567 
end

local _temp559 
do
local _temp568 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp568 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp568 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp568 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp568 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp568 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp568 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp568 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp568 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp568 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp568 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp569 = nil
      local _t = _type(_temp568)
      if _t == "table" then
                      if _type(_temp568.out) == "function" or (_type(_temp568.out) == "table" and _rawget(_temp568.out, "__call_thing")) then
        _temp569 = _temp568:out()
      elseif _temp568.out ~= nil then
        _temp569 = _temp568.out

        elseif _temp568.no_undermethod ~= nil then
          _temp569 =  _temp568:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp568, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp568)
      if _n.out ~= nil then
        _temp569 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp569 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp568, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp568)
      if _f.out ~= nil then
        _temp569 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp569 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp568, "out"))
      end

      elseif _temp568 == nil then
        _error(exception:null_error("_temp568", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp568))
      end

local _temp570 = nil
do
local _temp571 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp571 =  _temp530(_self)

    elseif _temp530 then
      _temp571 =  _temp530
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp571 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp571 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp571 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp571 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp572 
do
local _temp573 = nil
    if _type(_temp538) == "function" or (_type(_temp538) == "table" and _rawget(_temp538, "__call_thing")) then
      _temp573 =  _temp538(_self)

    elseif _temp538 then
      _temp573 =  _temp538
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp573 =  _self:i()
      elseif _self.i ~= nil then
        _temp573 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp573 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp573 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp574
      local _t = _type(_temp573)
      if _t == "table" then
                      if _type(_temp573._plus) == "function" or (_type(_temp573._plus) == "table" and _rawget(_temp573._plus, "__call_thing")) then
        _temp574 = _temp573:_plus(1)
      elseif _temp573._plus ~= nil then
        _temp574 = _temp573._plus

        elseif _temp573.no_undermethod ~= nil then
          _temp574 =  _temp573:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp573, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp574 = _temp573 + 1
      else
              local _n = number:new(_temp573)
      if _n._plus ~= nil then
        _temp574 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp574 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp573, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp573)
      if _f._plus ~= nil then
        _temp574 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp574 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp573, "+"))
      end

      elseif _temp573 == nil then
        _error(exception:null_error("_temp573", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp573))
      end

_temp572 = _temp574 
end

local _temp575 = nil
        local _t = _type(_temp557)
        if _t == "table" then
          if _rawget(_temp557, "__call_thing") == nil then
            _temp575 = _temp557
          else
                  if _temp557 == nil then
              if _type(_self._temp557) == "function" or (_type(_self._temp557) == "table" and _rawget(_self._temp557, "__call_thing")) then
        _temp575 =  _self:_temp557()
      elseif _self._temp557 ~= nil then
        _temp575 =  _self._temp557

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp557"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp575 =  _temp557(_self)
      end

          end
        elseif _t == "number" then
          _temp575 = _temp557
        elseif _t == "function" then
                if _temp557 == nil then
              if _type(_self._temp557) == "function" or (_type(_self._temp557) == "table" and _rawget(_self._temp557, "__call_thing")) then
        _temp575 =  _self:_temp557()
      elseif _self._temp557 ~= nil then
        _temp575 =  _self._temp557

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp557"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp575 =  _temp557(_self)
      end

        elseif _temp557 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.var) == "function" or (_type(_temp575.var) == "table" and _rawget(_temp575.var, "__call_thing")) then
        _temp575 = _temp575:var()
      elseif _temp575.var ~= nil then
        _temp575 = _temp575.var

        elseif _temp575.no_undermethod ~= nil then
          _temp575 =  _temp575:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp575, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.var ~= nil then
        _temp575 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp575 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp575, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.var ~= nil then
        _temp575 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp575 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp575, "var"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("_temp575", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end


_temp570 = string:new("" .. _tostring(_temp571) .. "[" .. _tostring(_temp572) .. "] = _tostring(" .. _tostring(_temp575) .. ")\n")
end
local _temp576
      local _t = _type(_temp569)
      if _t == "table" then
                      if _type(_temp569._less_less) == "function" or (_type(_temp569._less_less) == "table" and _rawget(_temp569._less_less, "__call_thing")) then
        _temp576 = _temp569:_less_less(_temp570)
      elseif _temp569._less_less ~= nil then
        _temp576 = _temp569._less_less

        elseif _temp569.no_undermethod ~= nil then
          _temp576 =  _temp569:no_undermethod(string:new("<<") , _temp570)
        else
          _error(exception:method_error(_temp569, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp569)
      if _n._less_less ~= nil then
        _temp576 = _n:_less_less(_temp570)
      elseif _n.no_undermethod ~= nil then
        _temp576 =  _n:no_undermethod(string:new("<<") , _temp570)
      else
        _error(exception:method_error(_temp569, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp569)
      if _f._less_less ~= nil then
        _temp576 = _f:_less_less(_temp570)
      elseif _f.no_undermethod ~= nil then
        _temp576 =  _f:no_undermethod(string:new("<<") , _temp570)
      else
        _error(exception:method_error(_temp569, "<<"))
      end

      elseif _temp569 == nil then
        _error(exception:null_error("_temp569", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp569))
      end

_temp559 = _temp576 
end

return _temp559
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp539,_temp556,_temp577)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp539,_temp556,_temp577)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp539,_temp556,_temp577)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp539,_temp556,_temp577)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp529)
      if _t == "table" then
                      if _type(_temp529.each_underwith_underindex) == "function" or (_type(_temp529.each_underwith_underindex) == "table" and _rawget(_temp529.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp529:each_underwith_underindex(_temp579)
      elseif _temp529.each_underwith_underindex ~= nil then
        _dummy_ = _temp529.each_underwith_underindex

        elseif _temp529.no_undermethod ~= nil then
          _dummy_ =  _temp529:no_undermethod(string:new("each_with_index") , _temp579)
        else
          _error(exception:method_error(_temp529, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp529)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp579)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp579)
      else
        _error(exception:method_error(_temp529, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp529)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp579)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp579)
      else
        _error(exception:method_error(_temp529, "each_with_index"))
      end

      elseif _temp529 == nil then
        _error(exception:null_error("_temp529", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp529))
      end

do
local _temp580 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp580 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp580 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp580 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp580 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp580 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp580 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp580 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp580 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp580 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp580 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp581 = nil
      local _t = _type(_temp580)
      if _t == "table" then
                      if _type(_temp580.out) == "function" or (_type(_temp580.out) == "table" and _rawget(_temp580.out, "__call_thing")) then
        _temp581 = _temp580:out()
      elseif _temp580.out ~= nil then
        _temp581 = _temp580.out

        elseif _temp580.no_undermethod ~= nil then
          _temp581 =  _temp580:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp580, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp580)
      if _n.out ~= nil then
        _temp581 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp581 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp580, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp580)
      if _f.out ~= nil then
        _temp581 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp581 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp580, "out"))
      end

      elseif _temp580 == nil then
        _error(exception:null_error("_temp580", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp580))
      end

local _temp582 = nil
do
local _temp583 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp583 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp583 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp583 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp583 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp583 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp583 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp583 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp583 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp583 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp583 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp583)
      if _t == "table" then
                      if _type(_temp583.var) == "function" or (_type(_temp583.var) == "table" and _rawget(_temp583.var, "__call_thing")) then
        _temp583 = _temp583:var()
      elseif _temp583.var ~= nil then
        _temp583 = _temp583.var

        elseif _temp583.no_undermethod ~= nil then
          _temp583 =  _temp583:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp583, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp583)
      if _n.var ~= nil then
        _temp583 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp583 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp583, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp583)
      if _f.var ~= nil then
        _temp583 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp583 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp583, "var"))
      end

      elseif _temp583 == nil then
        _error(exception:null_error("_temp583", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp583))
      end


local _temp584 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp584 =  _temp530(_self)

    elseif _temp530 then
      _temp584 =  _temp530
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp584 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp584 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp584 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp584 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp582 = string:new("" .. _tostring(_temp583) .. " = string:new(_table.concat(" .. _tostring(_temp584) .. "))\nend\n")
end
local _temp585
      local _t = _type(_temp581)
      if _t == "table" then
                      if _type(_temp581._less_less) == "function" or (_type(_temp581._less_less) == "table" and _rawget(_temp581._less_less, "__call_thing")) then
        _temp585 = _temp581:_less_less(_temp582)
      elseif _temp581._less_less ~= nil then
        _temp585 = _temp581._less_less

        elseif _temp581.no_undermethod ~= nil then
          _temp585 =  _temp581:no_undermethod(string:new("<<") , _temp582)
        else
          _error(exception:method_error(_temp581, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp581)
      if _n._less_less ~= nil then
        _temp585 = _n:_less_less(_temp582)
      elseif _n.no_undermethod ~= nil then
        _temp585 =  _n:no_undermethod(string:new("<<") , _temp582)
      else
        _error(exception:method_error(_temp581, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp581)
      if _f._less_less ~= nil then
        _temp585 = _f:_less_less(_temp582)
      elseif _f.no_undermethod ~= nil then
        _temp585 =  _f:no_undermethod(string:new("<<") , _temp582)
      else
        _error(exception:method_error(_temp581, "<<"))
      end

      elseif _temp581 == nil then
        _error(exception:null_error("_temp581", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp581))
      end

_dummy_ = _temp585 
end

    if _type(_temp528) == "function" or (_type(_temp528) == "table" and _rawget(_temp528, "__call_thing")) then
      return  _temp528(_self)

    elseif _temp528 then
      return  _temp528
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp525)
      if _t == "table" then
                      if _type(_temp525.walk) == "function" or (_type(_temp525.walk) == "table" and _rawget(_temp525.walk, "__call_thing")) then
        _dummy_ = _temp525:walk(_temp4,_temp529)
      elseif _temp525.walk ~= nil then
        _dummy_ = _temp525.walk

        elseif _temp525.no_undermethod ~= nil then
          _dummy_ =  _temp525:no_undermethod(string:new("walk") , _temp4,_temp529)
        else
          _error(exception:method_error(_temp525, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp525)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp529)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp529)
      else
        _error(exception:method_error(_temp525, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp525)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp529)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp529)
      else
        _error(exception:method_error(_temp525, "walk"))
      end

      elseif _temp525 == nil then
        _error(exception:null_error("_temp525", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp525))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp529 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp529 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp529 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp529 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp529 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp529 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp529 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp529 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp597 = function (_self, _temp587,_temp586)
        if _temp587 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp586 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp586 =  null(_self)

    elseif null then
      _temp586 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp586 =  _self:null()
      elseif _self.null ~= nil then
        _temp586 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp586 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp586 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp588
local _temp589 = nil
    if _type(_temp586) == "function" or (_type(_temp586) == "table" and _rawget(_temp586, "__call_thing")) then
      _temp589 =  _temp586(_self)

    elseif _temp586 then
      _temp589 =  _temp586
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp589 =  _self:var()
      elseif _self.var ~= nil then
        _temp589 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp589 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp589 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp588 =  set_underresult(_self, _temp589)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp588 =  _self:set_underresult(_temp589)
      elseif _self.set_underresult ~= nil then
        _temp588 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp588 =  _self:no_undermethod(string:new("set_result") , _temp589)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp588 =  no_undermethod(_self, string:new("set_result") , _temp589)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp590
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp590 =  my(_self)

    elseif my then
      _temp590 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp590 =  _self:my()
      elseif _self.my ~= nil then
        _temp590 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp590 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp590 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp591
        local _t = _type(_temp587)
        if _t == "table" then
          if _rawget(_temp587, "__call_thing") == nil then
            _temp591 = _temp587
          else
                  if _temp587 == nil then
              if _type(_self._temp587) == "function" or (_type(_self._temp587) == "table" and _rawget(_self._temp587, "__call_thing")) then
        _temp591 =  _self:_temp587()
      elseif _self._temp587 ~= nil then
        _temp591 =  _self._temp587

        elseif _self.no_undermethod ~= nil then
          _temp591 =  _self:no_undermethod(string:new("_temp587"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp591 =  _temp587(_self)
      end

          end
        elseif _t == "number" then
          _temp591 = _temp587
        elseif _t == "function" then
                if _temp587 == nil then
              if _type(_self._temp587) == "function" or (_type(_self._temp587) == "table" and _rawget(_self._temp587, "__call_thing")) then
        _temp591 =  _self:_temp587()
      elseif _self._temp587 ~= nil then
        _temp591 =  _self._temp587

        elseif _self.no_undermethod ~= nil then
          _temp591 =  _self:no_undermethod(string:new("_temp587"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp591 =  _temp587(_self)
      end

        elseif _temp587 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp591)
      if _t == "table" then
                      if _type(_temp591.nodes) == "function" or (_type(_temp591.nodes) == "table" and _rawget(_temp591.nodes, "__call_thing")) then
        _temp591 = _temp591:nodes()
      elseif _temp591.nodes ~= nil then
        _temp591 = _temp591.nodes

        elseif _temp591.no_undermethod ~= nil then
          _temp591 =  _temp591:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp591)
      if _n.nodes ~= nil then
        _temp591 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp591 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp591)
      if _f.nodes ~= nil then
        _temp591 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp591 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp591 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp591))
      end


local _temp597 = function (_self, _temp592)
        if _temp592 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp593 = nil
        local _t = _type(_temp590)
        if _t == "table" then
          if _rawget(_temp590, "__call_thing") == nil then
            _temp593 = _temp590
          else
                  if _temp590 == nil then
              if _type(_self._temp590) == "function" or (_type(_self._temp590) == "table" and _rawget(_self._temp590, "__call_thing")) then
        _temp593 =  _self:_temp590()
      elseif _self._temp590 ~= nil then
        _temp593 =  _self._temp590

        elseif _self.no_undermethod ~= nil then
          _temp593 =  _self:no_undermethod(string:new("_temp590"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp593 =  _temp590(_self)
      end

          end
        elseif _t == "number" then
          _temp593 = _temp590
        elseif _t == "function" then
                if _temp590 == nil then
              if _type(_self._temp590) == "function" or (_type(_self._temp590) == "table" and _rawget(_self._temp590, "__call_thing")) then
        _temp593 =  _self:_temp590()
      elseif _self._temp590 ~= nil then
        _temp593 =  _self._temp590

        elseif _self.no_undermethod ~= nil then
          _temp593 =  _self:no_undermethod(string:new("_temp590"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp593 =  _temp590(_self)
      end

        elseif _temp590 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp594 = nil
    if _type(_temp592) == "function" or (_type(_temp592) == "table" and _rawget(_temp592, "__call_thing")) then
      _temp594 =  _temp592(_self)

    elseif _temp592 then
      _temp594 =  _temp592
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp594 =  _self:n()
      elseif _self.n ~= nil then
        _temp594 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp594 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp594 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp595 = nil
        local _t = _type(_temp588)
        if _t == "table" then
          if _rawget(_temp588, "__call_thing") == nil then
            _temp595 = _temp588
          else
                  if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp595 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp595 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp595 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp595 =  _temp588(_self)
      end

          end
        elseif _t == "number" then
          _temp595 = _temp588
        elseif _t == "function" then
                if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp595 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp595 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp595 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp595 =  _temp588(_self)
      end

        elseif _temp588 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp595)
      if _t == "table" then
                      if _type(_temp595.var) == "function" or (_type(_temp595.var) == "table" and _rawget(_temp595.var, "__call_thing")) then
        _temp595 = _temp595:var()
      elseif _temp595.var ~= nil then
        _temp595 = _temp595.var

        elseif _temp595.no_undermethod ~= nil then
          _temp595 =  _temp595:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp595, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp595)
      if _n.var ~= nil then
        _temp595 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp595 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp595, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp595)
      if _f.var ~= nil then
        _temp595 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp595 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp595, "var"))
      end

      elseif _temp595 == nil then
        _error(exception:null_error("_temp595", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp595))
      end


      local _t = _type(_temp593)
      if _t == "table" then
                      if _type(_temp593.process) == "function" or (_type(_temp593.process) == "table" and _rawget(_temp593.process, "__call_thing")) then
        return _temp593:process(_temp594,_temp595)
      elseif _temp593.process ~= nil then
        return _temp593.process

        elseif _temp593.no_undermethod ~= nil then
          return  _temp593:no_undermethod(string:new("process") , _temp594,_temp595)
        else
          _error(exception:method_error(_temp593, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp593)
      if _n.process ~= nil then
        return _n:process(_temp594,_temp595)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp594,_temp595)
      else
        _error(exception:method_error(_temp593, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp593)
      if _f.process ~= nil then
        return _f:process(_temp594,_temp595)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp594,_temp595)
      else
        _error(exception:method_error(_temp593, "process"))
      end

      elseif _temp593 == nil then
        _error(exception:null_error("_temp593", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp593))
      end

end

      local _t = _type(_temp591)
      if _t == "table" then
                      if _type(_temp591.map) == "function" or (_type(_temp591.map) == "table" and _rawget(_temp591.map, "__call_thing")) then
        _temp591 = _temp591:map(_temp597)
      elseif _temp591.map ~= nil then
        _temp591 = _temp591.map

        elseif _temp591.no_undermethod ~= nil then
          _temp591 =  _temp591:no_undermethod(string:new("map") , _temp597)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp591)
      if _n.map ~= nil then
        _temp591 = _n:map(_temp597)
      elseif _n.no_undermethod ~= nil then
        _temp591 =  _n:no_undermethod(string:new("map") , _temp597)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp591)
      if _f.map ~= nil then
        _temp591 = _f:map(_temp597)
      elseif _f.no_undermethod ~= nil then
        _temp591 =  _f:no_undermethod(string:new("map") , _temp597)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp591 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp591))
      end


do
local _temp598 = nil
        local _t = _type(_temp588)
        if _t == "table" then
          if _rawget(_temp588, "__call_thing") == nil then
            _temp598 = _temp588
          else
                  if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp598 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp598 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp598 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp598 =  _temp588(_self)
      end

          end
        elseif _t == "number" then
          _temp598 = _temp588
        elseif _t == "function" then
                if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp598 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp598 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp598 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp598 =  _temp588(_self)
      end

        elseif _temp588 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp599 = nil
      local _t = _type(_temp598)
      if _t == "table" then
                      if _type(_temp598.out) == "function" or (_type(_temp598.out) == "table" and _rawget(_temp598.out, "__call_thing")) then
        _temp599 = _temp598:out()
      elseif _temp598.out ~= nil then
        _temp599 = _temp598.out

        elseif _temp598.no_undermethod ~= nil then
          _temp599 =  _temp598:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp598, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp598)
      if _n.out ~= nil then
        _temp599 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp599 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp598, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp598)
      if _f.out ~= nil then
        _temp599 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp599 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp598, "out"))
      end

      elseif _temp598 == nil then
        _error(exception:null_error("_temp598", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp598))
      end

local _temp600 = nil
        local _t = _type(_temp591)
        if _t == "table" then
          if _rawget(_temp591, "__call_thing") == nil then
            _temp600 = _temp591
          else
                  if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp600 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp600 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp600 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp600 =  _temp591(_self)
      end

          end
        elseif _t == "number" then
          _temp600 = _temp591
        elseif _t == "function" then
                if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp600 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp600 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp600 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp600 =  _temp591(_self)
      end

        elseif _temp591 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp601 = string:new("out")

      local _t = _type(_temp600)
      if _t == "table" then
                      if _type(_temp600.map) == "function" or (_type(_temp600.map) == "table" and _rawget(_temp600.map, "__call_thing")) then
        _temp600 = _temp600:map(_temp601)
      elseif _temp600.map ~= nil then
        _temp600 = _temp600.map

        elseif _temp600.no_undermethod ~= nil then
          _temp600 =  _temp600:no_undermethod(string:new("map") , _temp601)
        else
          _error(exception:method_error(_temp600, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp600)
      if _n.map ~= nil then
        _temp600 = _n:map(_temp601)
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("map") , _temp601)
      else
        _error(exception:method_error(_temp600, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp600)
      if _f.map ~= nil then
        _temp600 = _f:map(_temp601)
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("map") , _temp601)
      else
        _error(exception:method_error(_temp600, "map"))
      end

      elseif _temp600 == nil then
        _error(exception:null_error("_temp600", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp600))
      end

_temp601 = string:new("\n")

      local _t = _type(_temp600)
      if _t == "table" then
                      if _type(_temp600.join) == "function" or (_type(_temp600.join) == "table" and _rawget(_temp600.join, "__call_thing")) then
        _temp600 = _temp600:join(_temp601)
      elseif _temp600.join ~= nil then
        _temp600 = _temp600.join

        elseif _temp600.no_undermethod ~= nil then
          _temp600 =  _temp600:no_undermethod(string:new("join") , _temp601)
        else
          _error(exception:method_error(_temp600, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp600)
      if _n.join ~= nil then
        _temp600 = _n:join(_temp601)
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("join") , _temp601)
      else
        _error(exception:method_error(_temp600, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp600)
      if _f.join ~= nil then
        _temp600 = _f:join(_temp601)
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("join") , _temp601)
      else
        _error(exception:method_error(_temp600, "join"))
      end

      elseif _temp600 == nil then
        _error(exception:null_error("_temp600", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp600))
      end

local _temp601
      local _t = _type(_temp599)
      if _t == "table" then
                      if _type(_temp599._less_less) == "function" or (_type(_temp599._less_less) == "table" and _rawget(_temp599._less_less, "__call_thing")) then
        _temp601 = _temp599:_less_less(_temp600)
      elseif _temp599._less_less ~= nil then
        _temp601 = _temp599._less_less

        elseif _temp599.no_undermethod ~= nil then
          _temp601 =  _temp599:no_undermethod(string:new("<<") , _temp600)
        else
          _error(exception:method_error(_temp599, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp599)
      if _n._less_less ~= nil then
        _temp601 = _n:_less_less(_temp600)
      elseif _n.no_undermethod ~= nil then
        _temp601 =  _n:no_undermethod(string:new("<<") , _temp600)
      else
        _error(exception:method_error(_temp599, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp599)
      if _f._less_less ~= nil then
        _temp601 = _f:_less_less(_temp600)
      elseif _f.no_undermethod ~= nil then
        _temp601 =  _f:no_undermethod(string:new("<<") , _temp600)
      else
        _error(exception:method_error(_temp599, "<<"))
      end

      elseif _temp599 == nil then
        _error(exception:null_error("_temp599", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp599))
      end

_dummy_ = _temp601 
end

local _temp597 
do
local _temp602 = nil
        local _t = _type(_temp588)
        if _t == "table" then
          if _rawget(_temp588, "__call_thing") == nil then
            _temp602 = _temp588
          else
                  if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp602 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp602 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp588(_self)
      end

          end
        elseif _t == "number" then
          _temp602 = _temp588
        elseif _t == "function" then
                if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp602 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp602 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp588(_self)
      end

        elseif _temp588 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp603 = nil
      local _t = _type(_temp602)
      if _t == "table" then
                      if _type(_temp602.var) == "function" or (_type(_temp602.var) == "table" and _rawget(_temp602.var, "__call_thing")) then
        _temp603 = _temp602:var()
      elseif _temp602.var ~= nil then
        _temp603 = _temp602.var

        elseif _temp602.no_undermethod ~= nil then
          _temp603 =  _temp602:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp602, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp602)
      if _n.var ~= nil then
        _temp603 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp603 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp602, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp602)
      if _f.var ~= nil then
        _temp603 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp603 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp602, "var"))
      end

      elseif _temp602 == nil then
        _error(exception:null_error("_temp602", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp602))
      end

local _temp604 = nil
        local _t = _type(_temp591)
        if _t == "table" then
          if _rawget(_temp591, "__call_thing") == nil then
            _temp604 = _temp591
          else
                  if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp604 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp604 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp604 =  _temp591(_self)
      end

          end
        elseif _t == "number" then
          _temp604 = _temp591
        elseif _t == "function" then
                if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp604 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp604 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp604 =  _temp591(_self)
      end

        elseif _temp591 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp604)
      if _t == "table" then
                      if _type(_temp604.last) == "function" or (_type(_temp604.last) == "table" and _rawget(_temp604.last, "__call_thing")) then
        _temp604 = _temp604:last()
      elseif _temp604.last ~= nil then
        _temp604 = _temp604.last

        elseif _temp604.no_undermethod ~= nil then
          _temp604 =  _temp604:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp604, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp604)
      if _n.last ~= nil then
        _temp604 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp604 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp604, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp604)
      if _f.last ~= nil then
        _temp604 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp604 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp604, "last"))
      end

      elseif _temp604 == nil then
        _error(exception:null_error("_temp604", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp604))
      end

      local _t = _type(_temp604)
      if _t == "table" then
                      if _type(_temp604.var) == "function" or (_type(_temp604.var) == "table" and _rawget(_temp604.var, "__call_thing")) then
        _temp604 = _temp604:var()
      elseif _temp604.var ~= nil then
        _temp604 = _temp604.var

        elseif _temp604.no_undermethod ~= nil then
          _temp604 =  _temp604:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp604, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp604)
      if _n.var ~= nil then
        _temp604 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp604 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp604, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp604)
      if _f.var ~= nil then
        _temp604 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp604 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp604, "var"))
      end

      elseif _temp604 == nil then
        _error(exception:null_error("_temp604", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp604))
      end

local _temp605
      local _t = _type(_temp603)
      if _t == "table" then
                      if _type(_temp603._bang_equal) == "function" or (_type(_temp603._bang_equal) == "table" and _rawget(_temp603._bang_equal, "__call_thing")) then
        _temp605 = _temp603:_bang_equal(_temp604)
      elseif _temp603._bang_equal ~= nil then
        _temp605 = _temp603._bang_equal

        elseif _temp603.no_undermethod ~= nil then
          _temp605 =  _temp603:no_undermethod(string:new("!=") , _temp604)
        else
          _error(exception:method_error(_temp603, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp603)
      if _n._bang_equal ~= nil then
        _temp605 = _n:_bang_equal(_temp604)
      elseif _n.no_undermethod ~= nil then
        _temp605 =  _n:no_undermethod(string:new("!=") , _temp604)
      else
        _error(exception:method_error(_temp603, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp603)
      if _f._bang_equal ~= nil then
        _temp605 = _f:_bang_equal(_temp604)
      elseif _f.no_undermethod ~= nil then
        _temp605 =  _f:no_undermethod(string:new("!=") , _temp604)
      else
        _error(exception:method_error(_temp603, "!="))
      end

      elseif _temp603 == nil then
        _error(exception:null_error("_temp603", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp603))
      end

_temp597 = _temp605 
end


local _temp614 = function (_self)

local _temp606 
do
local _temp607 = nil
        local _t = _type(_temp588)
        if _t == "table" then
          if _rawget(_temp588, "__call_thing") == nil then
            _temp607 = _temp588
          else
                  if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp607 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp607 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp607 =  _temp588(_self)
      end

          end
        elseif _t == "number" then
          _temp607 = _temp588
        elseif _t == "function" then
                if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp607 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp607 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp607 =  _temp588(_self)
      end

        elseif _temp588 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp608 = nil
      local _t = _type(_temp607)
      if _t == "table" then
                      if _type(_temp607.out) == "function" or (_type(_temp607.out) == "table" and _rawget(_temp607.out, "__call_thing")) then
        _temp608 = _temp607:out()
      elseif _temp607.out ~= nil then
        _temp608 = _temp607.out

        elseif _temp607.no_undermethod ~= nil then
          _temp608 =  _temp607:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp607, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp607)
      if _n.out ~= nil then
        _temp608 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp608 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp607, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp607)
      if _f.out ~= nil then
        _temp608 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp608 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp607, "out"))
      end

      elseif _temp607 == nil then
        _error(exception:null_error("_temp607", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp607))
      end

local _temp609 = nil
do
local _temp610 = nil
        local _t = _type(_temp588)
        if _t == "table" then
          if _rawget(_temp588, "__call_thing") == nil then
            _temp610 = _temp588
          else
                  if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp610 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp610 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp610 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp610 =  _temp588(_self)
      end

          end
        elseif _t == "number" then
          _temp610 = _temp588
        elseif _t == "function" then
                if _temp588 == nil then
              if _type(_self._temp588) == "function" or (_type(_self._temp588) == "table" and _rawget(_self._temp588, "__call_thing")) then
        _temp610 =  _self:_temp588()
      elseif _self._temp588 ~= nil then
        _temp610 =  _self._temp588

        elseif _self.no_undermethod ~= nil then
          _temp610 =  _self:no_undermethod(string:new("_temp588"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp610 =  _temp588(_self)
      end

        elseif _temp588 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp610)
      if _t == "table" then
                      if _type(_temp610.var) == "function" or (_type(_temp610.var) == "table" and _rawget(_temp610.var, "__call_thing")) then
        _temp610 = _temp610:var()
      elseif _temp610.var ~= nil then
        _temp610 = _temp610.var

        elseif _temp610.no_undermethod ~= nil then
          _temp610 =  _temp610:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp610, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp610)
      if _n.var ~= nil then
        _temp610 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp610 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp610, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp610)
      if _f.var ~= nil then
        _temp610 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp610 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp610, "var"))
      end

      elseif _temp610 == nil then
        _error(exception:null_error("_temp610", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp610))
      end


local _temp611 = nil
        local _t = _type(_temp591)
        if _t == "table" then
          if _rawget(_temp591, "__call_thing") == nil then
            _temp611 = _temp591
          else
                  if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp611 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp611 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp611 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp611 =  _temp591(_self)
      end

          end
        elseif _t == "number" then
          _temp611 = _temp591
        elseif _t == "function" then
                if _temp591 == nil then
              if _type(_self._temp591) == "function" or (_type(_self._temp591) == "table" and _rawget(_self._temp591, "__call_thing")) then
        _temp611 =  _self:_temp591()
      elseif _self._temp591 ~= nil then
        _temp611 =  _self._temp591

        elseif _self.no_undermethod ~= nil then
          _temp611 =  _self:no_undermethod(string:new("_temp591"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp611 =  _temp591(_self)
      end

        elseif _temp591 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp611)
      if _t == "table" then
                      if _type(_temp611.last) == "function" or (_type(_temp611.last) == "table" and _rawget(_temp611.last, "__call_thing")) then
        _temp611 = _temp611:last()
      elseif _temp611.last ~= nil then
        _temp611 = _temp611.last

        elseif _temp611.no_undermethod ~= nil then
          _temp611 =  _temp611:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp611, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp611)
      if _n.last ~= nil then
        _temp611 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp611 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp611, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp611)
      if _f.last ~= nil then
        _temp611 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp611 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp611, "last"))
      end

      elseif _temp611 == nil then
        _error(exception:null_error("_temp611", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp611))
      end

      local _t = _type(_temp611)
      if _t == "table" then
                      if _type(_temp611.var) == "function" or (_type(_temp611.var) == "table" and _rawget(_temp611.var, "__call_thing")) then
        _temp611 = _temp611:var()
      elseif _temp611.var ~= nil then
        _temp611 = _temp611.var

        elseif _temp611.no_undermethod ~= nil then
          _temp611 =  _temp611:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp611, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp611)
      if _n.var ~= nil then
        _temp611 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp611 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp611, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp611)
      if _f.var ~= nil then
        _temp611 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp611 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp611, "var"))
      end

      elseif _temp611 == nil then
        _error(exception:null_error("_temp611", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp611))
      end


_temp609 = string:new("\n" .. _tostring(_temp610) .. " = " .. _tostring(_temp611) .. "\n")
end
local _temp612
      local _t = _type(_temp608)
      if _t == "table" then
                      if _type(_temp608._less_less) == "function" or (_type(_temp608._less_less) == "table" and _rawget(_temp608._less_less, "__call_thing")) then
        _temp612 = _temp608:_less_less(_temp609)
      elseif _temp608._less_less ~= nil then
        _temp612 = _temp608._less_less

        elseif _temp608.no_undermethod ~= nil then
          _temp612 =  _temp608:no_undermethod(string:new("<<") , _temp609)
        else
          _error(exception:method_error(_temp608, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp608)
      if _n._less_less ~= nil then
        _temp612 = _n:_less_less(_temp609)
      elseif _n.no_undermethod ~= nil then
        _temp612 =  _n:no_undermethod(string:new("<<") , _temp609)
      else
        _error(exception:method_error(_temp608, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp608)
      if _f._less_less ~= nil then
        _temp612 = _f:_less_less(_temp609)
      elseif _f.no_undermethod ~= nil then
        _temp612 =  _f:no_undermethod(string:new("<<") , _temp609)
      else
        _error(exception:method_error(_temp608, "<<"))
      end

      elseif _temp608 == nil then
        _error(exception:null_error("_temp608", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp608))
      end

_temp606 = _temp612 
end

return _temp606
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp597,_temp614)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp597,_temp614)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp597,_temp614)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp597,_temp614)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp588) == "function" or (_type(_temp588) == "table" and _rawget(_temp588, "__call_thing")) then
      return  _temp588(_self)

    elseif _temp588 then
      return  _temp588
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp529)
      if _t == "table" then
                      if _type(_temp529.walk) == "function" or (_type(_temp529.walk) == "table" and _rawget(_temp529.walk, "__call_thing")) then
        _dummy_ = _temp529:walk(_temp4,_temp597)
      elseif _temp529.walk ~= nil then
        _dummy_ = _temp529.walk

        elseif _temp529.no_undermethod ~= nil then
          _dummy_ =  _temp529:no_undermethod(string:new("walk") , _temp4,_temp597)
        else
          _error(exception:method_error(_temp529, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp529)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp597)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp597)
      else
        _error(exception:method_error(_temp529, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp529)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp597)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp597)
      else
        _error(exception:method_error(_temp529, "walk"))
      end

      elseif _temp529 == nil then
        _error(exception:null_error("_temp529", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp529))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp597 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp597 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp597 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp597 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp597 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp597 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp597 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp597 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp597 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp597 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp620 = function (_self, _temp616,_temp615)
        if _temp616 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp615 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp615 =  null(_self)

    elseif null then
      _temp615 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp615 =  _self:null()
      elseif _self.null ~= nil then
        _temp615 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp615 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp615 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp617
local _temp618 = nil
    if _type(_temp616) == "function" or (_type(_temp616) == "table" and _rawget(_temp616, "__call_thing")) then
      _temp618 =  _temp616(_self)

    elseif _temp616 then
      _temp618 =  _temp616
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp618 =  _self:node()
      elseif _self.node ~= nil then
        _temp618 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp618 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp618 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp617 =  reorder_underops(_self, _temp618)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp617 =  _self:reorder_underops(_temp618)
      elseif _self.reorder_underops ~= nil then
        _temp617 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp617 =  _self:no_undermethod(string:new("reorder_ops") , _temp618)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp617 =  no_undermethod(_self, string:new("reorder_ops") , _temp618)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp617) == "function" or (_type(_temp617) == "table" and _rawget(_temp617, "__call_thing")) then
      _temp618 =  _temp617(_self)

    elseif _temp617 then
      _temp618 =  _temp617
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp618 =  _self:res()
      elseif _self.res ~= nil then
        _temp618 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp618 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp618 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp618)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp618)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp618)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp618)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp597)
      if _t == "table" then
                      if _type(_temp597.walk) == "function" or (_type(_temp597.walk) == "table" and _rawget(_temp597.walk, "__call_thing")) then
        _dummy_ = _temp597:walk(_temp4,_temp620)
      elseif _temp597.walk ~= nil then
        _dummy_ = _temp597.walk

        elseif _temp597.no_undermethod ~= nil then
          _dummy_ =  _temp597:no_undermethod(string:new("walk") , _temp4,_temp620)
        else
          _error(exception:method_error(_temp597, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp597)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp620)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp620)
      else
        _error(exception:method_error(_temp597, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp597)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp620)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp620)
      else
        _error(exception:method_error(_temp597, "walk"))
      end

      elseif _temp597 == nil then
        _error(exception:null_error("_temp597", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp597))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp620 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp620 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp620 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp620 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp620 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp620 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp620 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp620 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp632 = function (_self, _temp622,_temp621)
        if _temp622 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp621 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp621 =  null(_self)

    elseif null then
      _temp621 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp621 =  _self:null()
      elseif _self.null ~= nil then
        _temp621 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp621 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp621 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp623
local _temp624 = nil
    if _type(_temp621) == "function" or (_type(_temp621) == "table" and _rawget(_temp621, "__call_thing")) then
      _temp624 =  _temp621(_self)

    elseif _temp621 then
      _temp624 =  _temp621
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp624 =  _self:var()
      elseif _self.var ~= nil then
        _temp624 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp624 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp624 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp623 =  set_underresult(_self, _temp624)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp623 =  _self:set_underresult(_temp624)
      elseif _self.set_underresult ~= nil then
        _temp623 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp623 =  _self:no_undermethod(string:new("set_result") , _temp624)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp623 =  no_undermethod(_self, string:new("set_result") , _temp624)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp625 = nil
        local _t = _type(_temp623)
        if _t == "table" then
          if _rawget(_temp623, "__call_thing") == nil then
            _temp625 = _temp623
          else
                  if _temp623 == nil then
              if _type(_self._temp623) == "function" or (_type(_self._temp623) == "table" and _rawget(_self._temp623, "__call_thing")) then
        _temp625 =  _self:_temp623()
      elseif _self._temp623 ~= nil then
        _temp625 =  _self._temp623

        elseif _self.no_undermethod ~= nil then
          _temp625 =  _self:no_undermethod(string:new("_temp623"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp625 =  _temp623(_self)
      end

          end
        elseif _t == "number" then
          _temp625 = _temp623
        elseif _t == "function" then
                if _temp623 == nil then
              if _type(_self._temp623) == "function" or (_type(_self._temp623) == "table" and _rawget(_self._temp623, "__call_thing")) then
        _temp625 =  _self:_temp623()
      elseif _self._temp623 ~= nil then
        _temp625 =  _self._temp623

        elseif _self.no_undermethod ~= nil then
          _temp625 =  _self:no_undermethod(string:new("_temp623"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp625 =  _temp623(_self)
      end

        elseif _temp623 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp626 = nil
      local _t = _type(_temp625)
      if _t == "table" then
                      if _type(_temp625.out) == "function" or (_type(_temp625.out) == "table" and _rawget(_temp625.out, "__call_thing")) then
        _temp626 = _temp625:out()
      elseif _temp625.out ~= nil then
        _temp626 = _temp625.out

        elseif _temp625.no_undermethod ~= nil then
          _temp626 =  _temp625:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp625, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp625)
      if _n.out ~= nil then
        _temp626 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp626 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp625, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp625)
      if _f.out ~= nil then
        _temp626 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp626 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp625, "out"))
      end

      elseif _temp625 == nil then
        _error(exception:null_error("_temp625", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp625))
      end

local _temp627 = nil
local _temp628 = nil
        local _t = _type(_temp622)
        if _t == "table" then
          if _rawget(_temp622, "__call_thing") == nil then
            _temp628 = _temp622
          else
                  if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp628 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp628 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp628 =  _temp622(_self)
      end

          end
        elseif _t == "number" then
          _temp628 = _temp622
        elseif _t == "function" then
                if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp628 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp628 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp628 =  _temp622(_self)
      end

        elseif _temp622 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp628)
      if _t == "table" then
                      if _type(_temp628.lhs) == "function" or (_type(_temp628.lhs) == "table" and _rawget(_temp628.lhs, "__call_thing")) then
        _temp628 = _temp628:lhs()
      elseif _temp628.lhs ~= nil then
        _temp628 = _temp628.lhs

        elseif _temp628.no_undermethod ~= nil then
          _temp628 =  _temp628:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp628, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp628)
      if _n.lhs ~= nil then
        _temp628 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp628 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp628, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp628)
      if _f.lhs ~= nil then
        _temp628 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp628 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp628, "lhs"))
      end

      elseif _temp628 == nil then
        _error(exception:null_error("_temp628", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp628))
      end

      local _t = _type(_temp628)
      if _t == "table" then
                      if _type(_temp628.value) == "function" or (_type(_temp628.value) == "table" and _rawget(_temp628.value, "__call_thing")) then
        _temp628 = _temp628:value()
      elseif _temp628.value ~= nil then
        _temp628 = _temp628.value

        elseif _temp628.no_undermethod ~= nil then
          _temp628 =  _temp628:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp628, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp628)
      if _n.value ~= nil then
        _temp628 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp628 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp628, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp628)
      if _f.value ~= nil then
        _temp628 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp628 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp628, "value"))
      end

      elseif _temp628 == nil then
        _error(exception:null_error("_temp628", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp628))
      end


local _temp629 = nil
        local _t = _type(_temp622)
        if _t == "table" then
          if _rawget(_temp622, "__call_thing") == nil then
            _temp629 = _temp622
          else
                  if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp629 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp629 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp629 =  _temp622(_self)
      end

          end
        elseif _t == "number" then
          _temp629 = _temp622
        elseif _t == "function" then
                if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp629 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp629 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp629 =  _temp622(_self)
      end

        elseif _temp622 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp629)
      if _t == "table" then
                      if _type(_temp629.op) == "function" or (_type(_temp629.op) == "table" and _rawget(_temp629.op, "__call_thing")) then
        _temp629 = _temp629:op()
      elseif _temp629.op ~= nil then
        _temp629 = _temp629.op

        elseif _temp629.no_undermethod ~= nil then
          _temp629 =  _temp629:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp629, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp629)
      if _n.op ~= nil then
        _temp629 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp629 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp629, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp629)
      if _f.op ~= nil then
        _temp629 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp629 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp629, "op"))
      end

      elseif _temp629 == nil then
        _error(exception:null_error("_temp629", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp629))
      end


local _temp630 = nil
        local _t = _type(_temp622)
        if _t == "table" then
          if _rawget(_temp622, "__call_thing") == nil then
            _temp630 = _temp622
          else
                  if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp630 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp630 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp630 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp630 =  _temp622(_self)
      end

          end
        elseif _t == "number" then
          _temp630 = _temp622
        elseif _t == "function" then
                if _temp622 == nil then
              if _type(_self._temp622) == "function" or (_type(_self._temp622) == "table" and _rawget(_self._temp622, "__call_thing")) then
        _temp630 =  _self:_temp622()
      elseif _self._temp622 ~= nil then
        _temp630 =  _self._temp622

        elseif _self.no_undermethod ~= nil then
          _temp630 =  _self:no_undermethod(string:new("_temp622"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp630 =  _temp622(_self)
      end

        elseif _temp622 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp630)
      if _t == "table" then
                      if _type(_temp630.rhs) == "function" or (_type(_temp630.rhs) == "table" and _rawget(_temp630.rhs, "__call_thing")) then
        _temp630 = _temp630:rhs()
      elseif _temp630.rhs ~= nil then
        _temp630 = _temp630.rhs

        elseif _temp630.no_undermethod ~= nil then
          _temp630 =  _temp630:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp630, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp630)
      if _n.rhs ~= nil then
        _temp630 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp630 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp630, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp630)
      if _f.rhs ~= nil then
        _temp630 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp630 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp630, "rhs"))
      end

      elseif _temp630 == nil then
        _error(exception:null_error("_temp630", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp630))
      end

      local _t = _type(_temp630)
      if _t == "table" then
                      if _type(_temp630.value) == "function" or (_type(_temp630.value) == "table" and _rawget(_temp630.value, "__call_thing")) then
        _temp630 = _temp630:value()
      elseif _temp630.value ~= nil then
        _temp630 = _temp630.value

        elseif _temp630.no_undermethod ~= nil then
          _temp630 =  _temp630:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp630, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp630)
      if _n.value ~= nil then
        _temp630 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp630 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp630, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp630)
      if _f.value ~= nil then
        _temp630 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp630 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp630, "value"))
      end

      elseif _temp630 == nil then
        _error(exception:null_error("_temp630", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp630))
      end


local _temp631 = nil
        local _t = _type(_temp623)
        if _t == "table" then
          if _rawget(_temp623, "__call_thing") == nil then
            _temp631 = _temp623
          else
                  if _temp623 == nil then
              if _type(_self._temp623) == "function" or (_type(_self._temp623) == "table" and _rawget(_self._temp623, "__call_thing")) then
        _temp631 =  _self:_temp623()
      elseif _self._temp623 ~= nil then
        _temp631 =  _self._temp623

        elseif _self.no_undermethod ~= nil then
          _temp631 =  _self:no_undermethod(string:new("_temp623"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp631 =  _temp623(_self)
      end

          end
        elseif _t == "number" then
          _temp631 = _temp623
        elseif _t == "function" then
                if _temp623 == nil then
              if _type(_self._temp623) == "function" or (_type(_self._temp623) == "table" and _rawget(_self._temp623, "__call_thing")) then
        _temp631 =  _self:_temp623()
      elseif _self._temp623 ~= nil then
        _temp631 =  _self._temp623

        elseif _self.no_undermethod ~= nil then
          _temp631 =  _self:no_undermethod(string:new("_temp623"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp631 =  _temp623(_self)
      end

        elseif _temp623 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp631)
      if _t == "table" then
                      if _type(_temp631.var) == "function" or (_type(_temp631.var) == "table" and _rawget(_temp631.var, "__call_thing")) then
        _temp631 = _temp631:var()
      elseif _temp631.var ~= nil then
        _temp631 = _temp631.var

        elseif _temp631.no_undermethod ~= nil then
          _temp631 =  _temp631:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp631, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp631)
      if _n.var ~= nil then
        _temp631 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp631 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp631, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp631)
      if _f.var ~= nil then
        _temp631 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp631 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp631, "var"))
      end

      elseif _temp631 == nil then
        _error(exception:null_error("_temp631", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp631))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp627 =  invoke_undernumbers(_self, _temp628,_temp629,_temp630,_temp631)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp627 =  _self:invoke_undernumbers(_temp628,_temp629,_temp630,_temp631)
      elseif _self.invoke_undernumbers ~= nil then
        _temp627 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp627 =  _self:no_undermethod(string:new("invoke_numbers") , _temp628,_temp629,_temp630,_temp631)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp627 =  no_undermethod(_self, string:new("invoke_numbers") , _temp628,_temp629,_temp630,_temp631)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp631
      local _t = _type(_temp626)
      if _t == "table" then
                      if _type(_temp626._less_less) == "function" or (_type(_temp626._less_less) == "table" and _rawget(_temp626._less_less, "__call_thing")) then
        _temp631 = _temp626:_less_less(_temp627)
      elseif _temp626._less_less ~= nil then
        _temp631 = _temp626._less_less

        elseif _temp626.no_undermethod ~= nil then
          _temp631 =  _temp626:no_undermethod(string:new("<<") , _temp627)
        else
          _error(exception:method_error(_temp626, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp626)
      if _n._less_less ~= nil then
        _temp631 = _n:_less_less(_temp627)
      elseif _n.no_undermethod ~= nil then
        _temp631 =  _n:no_undermethod(string:new("<<") , _temp627)
      else
        _error(exception:method_error(_temp626, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp626)
      if _f._less_less ~= nil then
        _temp631 = _f:_less_less(_temp627)
      elseif _f.no_undermethod ~= nil then
        _temp631 =  _f:no_undermethod(string:new("<<") , _temp627)
      else
        _error(exception:method_error(_temp626, "<<"))
      end

      elseif _temp626 == nil then
        _error(exception:null_error("_temp626", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp626))
      end

_dummy_ = _temp631 
end

    if _type(_temp623) == "function" or (_type(_temp623) == "table" and _rawget(_temp623, "__call_thing")) then
      return  _temp623(_self)

    elseif _temp623 then
      return  _temp623
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.walk) == "function" or (_type(_temp620.walk) == "table" and _rawget(_temp620.walk, "__call_thing")) then
        _dummy_ = _temp620:walk(_temp4,_temp632)
      elseif _temp620.walk ~= nil then
        _dummy_ = _temp620.walk

        elseif _temp620.no_undermethod ~= nil then
          _dummy_ =  _temp620:no_undermethod(string:new("walk") , _temp4,_temp632)
        else
          _error(exception:method_error(_temp620, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp632)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp632)
      else
        _error(exception:method_error(_temp620, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp632)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp632)
      else
        _error(exception:method_error(_temp620, "walk"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp632 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp632 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp632 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp632 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp632 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp632 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp632 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp632 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp651 = function (_self, _temp634,_temp633)
        if _temp634 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp633 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp633 =  null(_self)

    elseif null then
      _temp633 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp633 =  _self:null()
      elseif _self.null ~= nil then
        _temp633 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp633 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp633 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp635
local _temp636 = nil
    if _type(_temp633) == "function" or (_type(_temp633) == "table" and _rawget(_temp633, "__call_thing")) then
      _temp636 =  _temp633(_self)

    elseif _temp633 then
      _temp636 =  _temp633
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp636 =  _self:var()
      elseif _self.var ~= nil then
        _temp636 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp636 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp636 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp635 =  set_underresult(_self, _temp636)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp635 =  _self:set_underresult(_temp636)
      elseif _self.set_underresult ~= nil then
        _temp635 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp635 =  _self:no_undermethod(string:new("set_result") , _temp636)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp635 =  no_undermethod(_self, string:new("set_result") , _temp636)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp637
        local _t = _type(_temp634)
        if _t == "table" then
          if _rawget(_temp634, "__call_thing") == nil then
            _temp636 = _temp634
          else
                  if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp636 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp636 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp636 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp636 =  _temp634(_self)
      end

          end
        elseif _t == "number" then
          _temp636 = _temp634
        elseif _t == "function" then
                if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp636 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp636 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp636 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp636 =  _temp634(_self)
      end

        elseif _temp634 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp636)
      if _t == "table" then
                      if _type(_temp636.rhs) == "function" or (_type(_temp636.rhs) == "table" and _rawget(_temp636.rhs, "__call_thing")) then
        _temp636 = _temp636:rhs()
      elseif _temp636.rhs ~= nil then
        _temp636 = _temp636.rhs

        elseif _temp636.no_undermethod ~= nil then
          _temp636 =  _temp636:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp636, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp636)
      if _n.rhs ~= nil then
        _temp636 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp636 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp636, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp636)
      if _f.rhs ~= nil then
        _temp636 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp636 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp636, "rhs"))
      end

      elseif _temp636 == nil then
        _error(exception:null_error("_temp636", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp636))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp637 =  process(_self, _temp636)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp637 =  _self:process(_temp636)
      elseif _self.process ~= nil then
        _temp637 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp637 =  _self:no_undermethod(string:new("process") , _temp636)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp637 =  no_undermethod(_self, string:new("process") , _temp636)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp638 = nil
        local _t = _type(_temp635)
        if _t == "table" then
          if _rawget(_temp635, "__call_thing") == nil then
            _temp638 = _temp635
          else
                  if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp638 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp638 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp638 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp638 =  _temp635(_self)
      end

          end
        elseif _t == "number" then
          _temp638 = _temp635
        elseif _t == "function" then
                if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp638 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp638 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp638 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp638 =  _temp635(_self)
      end

        elseif _temp635 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp639 = nil
      local _t = _type(_temp638)
      if _t == "table" then
                      if _type(_temp638.out) == "function" or (_type(_temp638.out) == "table" and _rawget(_temp638.out, "__call_thing")) then
        _temp639 = _temp638:out()
      elseif _temp638.out ~= nil then
        _temp639 = _temp638.out

        elseif _temp638.no_undermethod ~= nil then
          _temp639 =  _temp638:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp638, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp638)
      if _n.out ~= nil then
        _temp639 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp638, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp638)
      if _f.out ~= nil then
        _temp639 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp638, "out"))
      end

      elseif _temp638 == nil then
        _error(exception:null_error("_temp638", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp638))
      end

local _temp640 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp640 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp640 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp640 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp640 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp640 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp640 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp640 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp640 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp641 = nil
      local _t = _type(_temp640)
      if _t == "table" then
                      if _type(_temp640.out) == "function" or (_type(_temp640.out) == "table" and _rawget(_temp640.out, "__call_thing")) then
        _temp641 = _temp640:out()
      elseif _temp640.out ~= nil then
        _temp641 = _temp640.out

        elseif _temp640.no_undermethod ~= nil then
          _temp641 =  _temp640:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp640, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp640)
      if _n.out ~= nil then
        _temp641 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp641 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp640, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp640)
      if _f.out ~= nil then
        _temp641 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp641 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp640, "out"))
      end

      elseif _temp640 == nil then
        _error(exception:null_error("_temp640", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp640))
      end

local _temp642 = string:new("\n")
local _temp643
      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639._less_less) == "function" or (_type(_temp639._less_less) == "table" and _rawget(_temp639._less_less, "__call_thing")) then
        _temp643 = _temp639:_less_less(_temp641)
      elseif _temp639._less_less ~= nil then
        _temp643 = _temp639._less_less

        elseif _temp639.no_undermethod ~= nil then
          _temp643 =  _temp639:no_undermethod(string:new("<<") , _temp641)
        else
          _error(exception:method_error(_temp639, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n._less_less ~= nil then
        _temp643 = _n:_less_less(_temp641)
      elseif _n.no_undermethod ~= nil then
        _temp643 =  _n:no_undermethod(string:new("<<") , _temp641)
      else
        _error(exception:method_error(_temp639, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f._less_less ~= nil then
        _temp643 = _f:_less_less(_temp641)
      elseif _f.no_undermethod ~= nil then
        _temp643 =  _f:no_undermethod(string:new("<<") , _temp641)
      else
        _error(exception:method_error(_temp639, "<<"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end

local _temp641
      local _t = _type(_temp643)
      if _t == "table" then
                      if _type(_temp643._less_less) == "function" or (_type(_temp643._less_less) == "table" and _rawget(_temp643._less_less, "__call_thing")) then
        _temp641 = _temp643:_less_less(_temp642)
      elseif _temp643._less_less ~= nil then
        _temp641 = _temp643._less_less

        elseif _temp643.no_undermethod ~= nil then
          _temp641 =  _temp643:no_undermethod(string:new("<<") , _temp642)
        else
          _error(exception:method_error(_temp643, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp643)
      if _n._less_less ~= nil then
        _temp641 = _n:_less_less(_temp642)
      elseif _n.no_undermethod ~= nil then
        _temp641 =  _n:no_undermethod(string:new("<<") , _temp642)
      else
        _error(exception:method_error(_temp643, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp643)
      if _f._less_less ~= nil then
        _temp641 = _f:_less_less(_temp642)
      elseif _f.no_undermethod ~= nil then
        _temp641 =  _f:no_undermethod(string:new("<<") , _temp642)
      else
        _error(exception:method_error(_temp643, "<<"))
      end

      elseif _temp643 == nil then
        _error(exception:null_error("_temp643", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp643))
      end

_dummy_ = _temp641 
end

do
local _temp644 = nil
        local _t = _type(_temp635)
        if _t == "table" then
          if _rawget(_temp635, "__call_thing") == nil then
            _temp644 = _temp635
          else
                  if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp644 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp644 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp644 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp644 =  _temp635(_self)
      end

          end
        elseif _t == "number" then
          _temp644 = _temp635
        elseif _t == "function" then
                if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp644 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp644 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp644 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp644 =  _temp635(_self)
      end

        elseif _temp635 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp645 = nil
      local _t = _type(_temp644)
      if _t == "table" then
                      if _type(_temp644.out) == "function" or (_type(_temp644.out) == "table" and _rawget(_temp644.out, "__call_thing")) then
        _temp645 = _temp644:out()
      elseif _temp644.out ~= nil then
        _temp645 = _temp644.out

        elseif _temp644.no_undermethod ~= nil then
          _temp645 =  _temp644:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp644, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp644)
      if _n.out ~= nil then
        _temp645 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp645 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp644, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp644)
      if _f.out ~= nil then
        _temp645 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp645 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp644, "out"))
      end

      elseif _temp644 == nil then
        _error(exception:null_error("_temp644", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp644))
      end

local _temp646 = nil
local _temp647 = nil
        local _t = _type(_temp634)
        if _t == "table" then
          if _rawget(_temp634, "__call_thing") == nil then
            _temp647 = _temp634
          else
                  if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp647 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp647 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp647 =  _temp634(_self)
      end

          end
        elseif _t == "number" then
          _temp647 = _temp634
        elseif _t == "function" then
                if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp647 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp647 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp647 =  _temp634(_self)
      end

        elseif _temp634 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.lhs) == "function" or (_type(_temp647.lhs) == "table" and _rawget(_temp647.lhs, "__call_thing")) then
        _temp647 = _temp647:lhs()
      elseif _temp647.lhs ~= nil then
        _temp647 = _temp647.lhs

        elseif _temp647.no_undermethod ~= nil then
          _temp647 =  _temp647:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp647, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.lhs ~= nil then
        _temp647 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp647 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp647, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.lhs ~= nil then
        _temp647 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp647 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp647, "lhs"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end

      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.value) == "function" or (_type(_temp647.value) == "table" and _rawget(_temp647.value, "__call_thing")) then
        _temp647 = _temp647:value()
      elseif _temp647.value ~= nil then
        _temp647 = _temp647.value

        elseif _temp647.no_undermethod ~= nil then
          _temp647 =  _temp647:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp647, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.value ~= nil then
        _temp647 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp647 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp647, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.value ~= nil then
        _temp647 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp647 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp647, "value"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end


local _temp648 = nil
        local _t = _type(_temp634)
        if _t == "table" then
          if _rawget(_temp634, "__call_thing") == nil then
            _temp648 = _temp634
          else
                  if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp648 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp648 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp648 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp648 =  _temp634(_self)
      end

          end
        elseif _t == "number" then
          _temp648 = _temp634
        elseif _t == "function" then
                if _temp634 == nil then
              if _type(_self._temp634) == "function" or (_type(_self._temp634) == "table" and _rawget(_self._temp634, "__call_thing")) then
        _temp648 =  _self:_temp634()
      elseif _self._temp634 ~= nil then
        _temp648 =  _self._temp634

        elseif _self.no_undermethod ~= nil then
          _temp648 =  _self:no_undermethod(string:new("_temp634"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp648 =  _temp634(_self)
      end

        elseif _temp634 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp648)
      if _t == "table" then
                      if _type(_temp648.op) == "function" or (_type(_temp648.op) == "table" and _rawget(_temp648.op, "__call_thing")) then
        _temp648 = _temp648:op()
      elseif _temp648.op ~= nil then
        _temp648 = _temp648.op

        elseif _temp648.no_undermethod ~= nil then
          _temp648 =  _temp648:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp648, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp648)
      if _n.op ~= nil then
        _temp648 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp648 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp648, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp648)
      if _f.op ~= nil then
        _temp648 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp648 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp648, "op"))
      end

      elseif _temp648 == nil then
        _error(exception:null_error("_temp648", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp648))
      end


local _temp649 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp649 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp649 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp649 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp649 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp649 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp649 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp649 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp649 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp649)
      if _t == "table" then
                      if _type(_temp649.var) == "function" or (_type(_temp649.var) == "table" and _rawget(_temp649.var, "__call_thing")) then
        _temp649 = _temp649:var()
      elseif _temp649.var ~= nil then
        _temp649 = _temp649.var

        elseif _temp649.no_undermethod ~= nil then
          _temp649 =  _temp649:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp649, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp649)
      if _n.var ~= nil then
        _temp649 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp649 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp649, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp649)
      if _f.var ~= nil then
        _temp649 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp649 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp649, "var"))
      end

      elseif _temp649 == nil then
        _error(exception:null_error("_temp649", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp649))
      end


local _temp650 = nil
        local _t = _type(_temp635)
        if _t == "table" then
          if _rawget(_temp635, "__call_thing") == nil then
            _temp650 = _temp635
          else
                  if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp650 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp650 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp650 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp650 =  _temp635(_self)
      end

          end
        elseif _t == "number" then
          _temp650 = _temp635
        elseif _t == "function" then
                if _temp635 == nil then
              if _type(_self._temp635) == "function" or (_type(_self._temp635) == "table" and _rawget(_self._temp635, "__call_thing")) then
        _temp650 =  _self:_temp635()
      elseif _self._temp635 ~= nil then
        _temp650 =  _self._temp635

        elseif _self.no_undermethod ~= nil then
          _temp650 =  _self:no_undermethod(string:new("_temp635"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp650 =  _temp635(_self)
      end

        elseif _temp635 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp650)
      if _t == "table" then
                      if _type(_temp650.var) == "function" or (_type(_temp650.var) == "table" and _rawget(_temp650.var, "__call_thing")) then
        _temp650 = _temp650:var()
      elseif _temp650.var ~= nil then
        _temp650 = _temp650.var

        elseif _temp650.no_undermethod ~= nil then
          _temp650 =  _temp650:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp650, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp650)
      if _n.var ~= nil then
        _temp650 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp650, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp650)
      if _f.var ~= nil then
        _temp650 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp650, "var"))
      end

      elseif _temp650 == nil then
        _error(exception:null_error("_temp650", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp650))
      end


    if _type(invoke_undernumber_underlhs) == "function" or (_type(invoke_undernumber_underlhs) == "table" and _rawget(invoke_undernumber_underlhs, "__call_thing")) then
      _temp646 =  invoke_undernumber_underlhs(_self, _temp647,_temp648,_temp649,_temp650)

    elseif invoke_undernumber_underlhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_lhs (" .. object.__type(invoke_undernumber_underlhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underlhs) == "function" or (_type(_self.invoke_undernumber_underlhs) == "table" and _rawget(_self.invoke_undernumber_underlhs, "__call_thing")) then
        _temp646 =  _self:invoke_undernumber_underlhs(_temp647,_temp648,_temp649,_temp650)
      elseif _self.invoke_undernumber_underlhs ~= nil then
        _temp646 =  _self.invoke_undernumber_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp646 =  _self:no_undermethod(string:new("invoke_number_lhs") , _temp647,_temp648,_temp649,_temp650)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp646 =  no_undermethod(_self, string:new("invoke_number_lhs") , _temp647,_temp648,_temp649,_temp650)
      else
        _error(exception:name_error("invoke_number_lhs"))
      end
    end
local _temp650
      local _t = _type(_temp645)
      if _t == "table" then
                      if _type(_temp645._less_less) == "function" or (_type(_temp645._less_less) == "table" and _rawget(_temp645._less_less, "__call_thing")) then
        _temp650 = _temp645:_less_less(_temp646)
      elseif _temp645._less_less ~= nil then
        _temp650 = _temp645._less_less

        elseif _temp645.no_undermethod ~= nil then
          _temp650 =  _temp645:no_undermethod(string:new("<<") , _temp646)
        else
          _error(exception:method_error(_temp645, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp645)
      if _n._less_less ~= nil then
        _temp650 = _n:_less_less(_temp646)
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("<<") , _temp646)
      else
        _error(exception:method_error(_temp645, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp645)
      if _f._less_less ~= nil then
        _temp650 = _f:_less_less(_temp646)
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("<<") , _temp646)
      else
        _error(exception:method_error(_temp645, "<<"))
      end

      elseif _temp645 == nil then
        _error(exception:null_error("_temp645", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp645))
      end

_dummy_ = _temp650 
end

    if _type(_temp635) == "function" or (_type(_temp635) == "table" and _rawget(_temp635, "__call_thing")) then
      return  _temp635(_self)

    elseif _temp635 then
      return  _temp635
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp632)
      if _t == "table" then
                      if _type(_temp632.walk) == "function" or (_type(_temp632.walk) == "table" and _rawget(_temp632.walk, "__call_thing")) then
        _dummy_ = _temp632:walk(_temp4,_temp651)
      elseif _temp632.walk ~= nil then
        _dummy_ = _temp632.walk

        elseif _temp632.no_undermethod ~= nil then
          _dummy_ =  _temp632:no_undermethod(string:new("walk") , _temp4,_temp651)
        else
          _error(exception:method_error(_temp632, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp632)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp651)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp651)
      else
        _error(exception:method_error(_temp632, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp632)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp651)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp651)
      else
        _error(exception:method_error(_temp632, "walk"))
      end

      elseif _temp632 == nil then
        _error(exception:null_error("_temp632", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp632))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp651 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp651 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp651 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp651 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp651 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp651 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp651 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp651 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number_rhs")

local _temp670 = function (_self, _temp653,_temp652)
        if _temp653 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp652 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp652 =  null(_self)

    elseif null then
      _temp652 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp652 =  _self:null()
      elseif _self.null ~= nil then
        _temp652 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp652 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp652 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp654
local _temp655 = nil
    if _type(_temp652) == "function" or (_type(_temp652) == "table" and _rawget(_temp652, "__call_thing")) then
      _temp655 =  _temp652(_self)

    elseif _temp652 then
      _temp655 =  _temp652
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp655 =  _self:var()
      elseif _self.var ~= nil then
        _temp655 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp655 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp655 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp654 =  set_underresult(_self, _temp655)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp654 =  _self:set_underresult(_temp655)
      elseif _self.set_underresult ~= nil then
        _temp654 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp654 =  _self:no_undermethod(string:new("set_result") , _temp655)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp654 =  no_undermethod(_self, string:new("set_result") , _temp655)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp656
        local _t = _type(_temp653)
        if _t == "table" then
          if _rawget(_temp653, "__call_thing") == nil then
            _temp655 = _temp653
          else
                  if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp655 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp655 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp655 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp655 =  _temp653(_self)
      end

          end
        elseif _t == "number" then
          _temp655 = _temp653
        elseif _t == "function" then
                if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp655 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp655 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp655 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp655 =  _temp653(_self)
      end

        elseif _temp653 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp655)
      if _t == "table" then
                      if _type(_temp655.lhs) == "function" or (_type(_temp655.lhs) == "table" and _rawget(_temp655.lhs, "__call_thing")) then
        _temp655 = _temp655:lhs()
      elseif _temp655.lhs ~= nil then
        _temp655 = _temp655.lhs

        elseif _temp655.no_undermethod ~= nil then
          _temp655 =  _temp655:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp655, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp655)
      if _n.lhs ~= nil then
        _temp655 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp655 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp655, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp655)
      if _f.lhs ~= nil then
        _temp655 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp655 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp655, "lhs"))
      end

      elseif _temp655 == nil then
        _error(exception:null_error("_temp655", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp655))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp656 =  process(_self, _temp655)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp656 =  _self:process(_temp655)
      elseif _self.process ~= nil then
        _temp656 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp656 =  _self:no_undermethod(string:new("process") , _temp655)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp656 =  no_undermethod(_self, string:new("process") , _temp655)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp657 = nil
        local _t = _type(_temp654)
        if _t == "table" then
          if _rawget(_temp654, "__call_thing") == nil then
            _temp657 = _temp654
          else
                  if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp657 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp657 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp657 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp657 =  _temp654(_self)
      end

          end
        elseif _t == "number" then
          _temp657 = _temp654
        elseif _t == "function" then
                if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp657 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp657 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp657 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp657 =  _temp654(_self)
      end

        elseif _temp654 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp658 = nil
      local _t = _type(_temp657)
      if _t == "table" then
                      if _type(_temp657.out) == "function" or (_type(_temp657.out) == "table" and _rawget(_temp657.out, "__call_thing")) then
        _temp658 = _temp657:out()
      elseif _temp657.out ~= nil then
        _temp658 = _temp657.out

        elseif _temp657.no_undermethod ~= nil then
          _temp658 =  _temp657:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp657, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp657)
      if _n.out ~= nil then
        _temp658 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp658 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp657, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp657)
      if _f.out ~= nil then
        _temp658 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp658 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp657, "out"))
      end

      elseif _temp657 == nil then
        _error(exception:null_error("_temp657", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp657))
      end

local _temp659 = nil
        local _t = _type(_temp656)
        if _t == "table" then
          if _rawget(_temp656, "__call_thing") == nil then
            _temp659 = _temp656
          else
                  if _temp656 == nil then
              if _type(_self._temp656) == "function" or (_type(_self._temp656) == "table" and _rawget(_self._temp656, "__call_thing")) then
        _temp659 =  _self:_temp656()
      elseif _self._temp656 ~= nil then
        _temp659 =  _self._temp656

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp656"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp659 =  _temp656(_self)
      end

          end
        elseif _t == "number" then
          _temp659 = _temp656
        elseif _t == "function" then
                if _temp656 == nil then
              if _type(_self._temp656) == "function" or (_type(_self._temp656) == "table" and _rawget(_self._temp656, "__call_thing")) then
        _temp659 =  _self:_temp656()
      elseif _self._temp656 ~= nil then
        _temp659 =  _self._temp656

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp656"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp659 =  _temp656(_self)
      end

        elseif _temp656 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp660 = nil
      local _t = _type(_temp659)
      if _t == "table" then
                      if _type(_temp659.out) == "function" or (_type(_temp659.out) == "table" and _rawget(_temp659.out, "__call_thing")) then
        _temp660 = _temp659:out()
      elseif _temp659.out ~= nil then
        _temp660 = _temp659.out

        elseif _temp659.no_undermethod ~= nil then
          _temp660 =  _temp659:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp659, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp659)
      if _n.out ~= nil then
        _temp660 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp659, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp659)
      if _f.out ~= nil then
        _temp660 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp659, "out"))
      end

      elseif _temp659 == nil then
        _error(exception:null_error("_temp659", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp659))
      end

local _temp661 = string:new("\n")
local _temp662
      local _t = _type(_temp658)
      if _t == "table" then
                      if _type(_temp658._less_less) == "function" or (_type(_temp658._less_less) == "table" and _rawget(_temp658._less_less, "__call_thing")) then
        _temp662 = _temp658:_less_less(_temp660)
      elseif _temp658._less_less ~= nil then
        _temp662 = _temp658._less_less

        elseif _temp658.no_undermethod ~= nil then
          _temp662 =  _temp658:no_undermethod(string:new("<<") , _temp660)
        else
          _error(exception:method_error(_temp658, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp658)
      if _n._less_less ~= nil then
        _temp662 = _n:_less_less(_temp660)
      elseif _n.no_undermethod ~= nil then
        _temp662 =  _n:no_undermethod(string:new("<<") , _temp660)
      else
        _error(exception:method_error(_temp658, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp658)
      if _f._less_less ~= nil then
        _temp662 = _f:_less_less(_temp660)
      elseif _f.no_undermethod ~= nil then
        _temp662 =  _f:no_undermethod(string:new("<<") , _temp660)
      else
        _error(exception:method_error(_temp658, "<<"))
      end

      elseif _temp658 == nil then
        _error(exception:null_error("_temp658", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp658))
      end

local _temp660
      local _t = _type(_temp662)
      if _t == "table" then
                      if _type(_temp662._less_less) == "function" or (_type(_temp662._less_less) == "table" and _rawget(_temp662._less_less, "__call_thing")) then
        _temp660 = _temp662:_less_less(_temp661)
      elseif _temp662._less_less ~= nil then
        _temp660 = _temp662._less_less

        elseif _temp662.no_undermethod ~= nil then
          _temp660 =  _temp662:no_undermethod(string:new("<<") , _temp661)
        else
          _error(exception:method_error(_temp662, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp662)
      if _n._less_less ~= nil then
        _temp660 = _n:_less_less(_temp661)
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("<<") , _temp661)
      else
        _error(exception:method_error(_temp662, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp662)
      if _f._less_less ~= nil then
        _temp660 = _f:_less_less(_temp661)
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("<<") , _temp661)
      else
        _error(exception:method_error(_temp662, "<<"))
      end

      elseif _temp662 == nil then
        _error(exception:null_error("_temp662", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp662))
      end

_dummy_ = _temp660 
end

do
local _temp663 = nil
        local _t = _type(_temp654)
        if _t == "table" then
          if _rawget(_temp654, "__call_thing") == nil then
            _temp663 = _temp654
          else
                  if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp663 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp663 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp663 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp663 =  _temp654(_self)
      end

          end
        elseif _t == "number" then
          _temp663 = _temp654
        elseif _t == "function" then
                if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp663 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp663 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp663 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp663 =  _temp654(_self)
      end

        elseif _temp654 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp664 = nil
      local _t = _type(_temp663)
      if _t == "table" then
                      if _type(_temp663.out) == "function" or (_type(_temp663.out) == "table" and _rawget(_temp663.out, "__call_thing")) then
        _temp664 = _temp663:out()
      elseif _temp663.out ~= nil then
        _temp664 = _temp663.out

        elseif _temp663.no_undermethod ~= nil then
          _temp664 =  _temp663:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp663, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp663)
      if _n.out ~= nil then
        _temp664 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp664 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp663, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp663)
      if _f.out ~= nil then
        _temp664 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp664 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp663, "out"))
      end

      elseif _temp663 == nil then
        _error(exception:null_error("_temp663", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp663))
      end

local _temp665 = nil
local _temp666 = nil
        local _t = _type(_temp656)
        if _t == "table" then
          if _rawget(_temp656, "__call_thing") == nil then
            _temp666 = _temp656
          else
                  if _temp656 == nil then
              if _type(_self._temp656) == "function" or (_type(_self._temp656) == "table" and _rawget(_self._temp656, "__call_thing")) then
        _temp666 =  _self:_temp656()
      elseif _self._temp656 ~= nil then
        _temp666 =  _self._temp656

        elseif _self.no_undermethod ~= nil then
          _temp666 =  _self:no_undermethod(string:new("_temp656"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp666 =  _temp656(_self)
      end

          end
        elseif _t == "number" then
          _temp666 = _temp656
        elseif _t == "function" then
                if _temp656 == nil then
              if _type(_self._temp656) == "function" or (_type(_self._temp656) == "table" and _rawget(_self._temp656, "__call_thing")) then
        _temp666 =  _self:_temp656()
      elseif _self._temp656 ~= nil then
        _temp666 =  _self._temp656

        elseif _self.no_undermethod ~= nil then
          _temp666 =  _self:no_undermethod(string:new("_temp656"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp666 =  _temp656(_self)
      end

        elseif _temp656 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp666)
      if _t == "table" then
                      if _type(_temp666.var) == "function" or (_type(_temp666.var) == "table" and _rawget(_temp666.var, "__call_thing")) then
        _temp666 = _temp666:var()
      elseif _temp666.var ~= nil then
        _temp666 = _temp666.var

        elseif _temp666.no_undermethod ~= nil then
          _temp666 =  _temp666:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp666, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp666)
      if _n.var ~= nil then
        _temp666 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp666 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp666, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp666)
      if _f.var ~= nil then
        _temp666 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp666 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp666, "var"))
      end

      elseif _temp666 == nil then
        _error(exception:null_error("_temp666", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp666))
      end


local _temp667 = nil
        local _t = _type(_temp653)
        if _t == "table" then
          if _rawget(_temp653, "__call_thing") == nil then
            _temp667 = _temp653
          else
                  if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp667 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp667 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp667 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp667 =  _temp653(_self)
      end

          end
        elseif _t == "number" then
          _temp667 = _temp653
        elseif _t == "function" then
                if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp667 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp667 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp667 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp667 =  _temp653(_self)
      end

        elseif _temp653 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp667)
      if _t == "table" then
                      if _type(_temp667.op) == "function" or (_type(_temp667.op) == "table" and _rawget(_temp667.op, "__call_thing")) then
        _temp667 = _temp667:op()
      elseif _temp667.op ~= nil then
        _temp667 = _temp667.op

        elseif _temp667.no_undermethod ~= nil then
          _temp667 =  _temp667:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp667, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp667)
      if _n.op ~= nil then
        _temp667 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp667 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp667, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp667)
      if _f.op ~= nil then
        _temp667 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp667 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp667, "op"))
      end

      elseif _temp667 == nil then
        _error(exception:null_error("_temp667", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp667))
      end


local _temp668 = nil
        local _t = _type(_temp653)
        if _t == "table" then
          if _rawget(_temp653, "__call_thing") == nil then
            _temp668 = _temp653
          else
                  if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp668 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp668 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp668 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp668 =  _temp653(_self)
      end

          end
        elseif _t == "number" then
          _temp668 = _temp653
        elseif _t == "function" then
                if _temp653 == nil then
              if _type(_self._temp653) == "function" or (_type(_self._temp653) == "table" and _rawget(_self._temp653, "__call_thing")) then
        _temp668 =  _self:_temp653()
      elseif _self._temp653 ~= nil then
        _temp668 =  _self._temp653

        elseif _self.no_undermethod ~= nil then
          _temp668 =  _self:no_undermethod(string:new("_temp653"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp668 =  _temp653(_self)
      end

        elseif _temp653 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp668)
      if _t == "table" then
                      if _type(_temp668.rhs) == "function" or (_type(_temp668.rhs) == "table" and _rawget(_temp668.rhs, "__call_thing")) then
        _temp668 = _temp668:rhs()
      elseif _temp668.rhs ~= nil then
        _temp668 = _temp668.rhs

        elseif _temp668.no_undermethod ~= nil then
          _temp668 =  _temp668:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp668, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp668)
      if _n.rhs ~= nil then
        _temp668 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp668 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp668, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp668)
      if _f.rhs ~= nil then
        _temp668 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp668 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp668, "rhs"))
      end

      elseif _temp668 == nil then
        _error(exception:null_error("_temp668", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp668))
      end

      local _t = _type(_temp668)
      if _t == "table" then
                      if _type(_temp668.value) == "function" or (_type(_temp668.value) == "table" and _rawget(_temp668.value, "__call_thing")) then
        _temp668 = _temp668:value()
      elseif _temp668.value ~= nil then
        _temp668 = _temp668.value

        elseif _temp668.no_undermethod ~= nil then
          _temp668 =  _temp668:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp668, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp668)
      if _n.value ~= nil then
        _temp668 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp668 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp668, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp668)
      if _f.value ~= nil then
        _temp668 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp668 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp668, "value"))
      end

      elseif _temp668 == nil then
        _error(exception:null_error("_temp668", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp668))
      end


local _temp669 = nil
        local _t = _type(_temp654)
        if _t == "table" then
          if _rawget(_temp654, "__call_thing") == nil then
            _temp669 = _temp654
          else
                  if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp669 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp669 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp669 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp669 =  _temp654(_self)
      end

          end
        elseif _t == "number" then
          _temp669 = _temp654
        elseif _t == "function" then
                if _temp654 == nil then
              if _type(_self._temp654) == "function" or (_type(_self._temp654) == "table" and _rawget(_self._temp654, "__call_thing")) then
        _temp669 =  _self:_temp654()
      elseif _self._temp654 ~= nil then
        _temp669 =  _self._temp654

        elseif _self.no_undermethod ~= nil then
          _temp669 =  _self:no_undermethod(string:new("_temp654"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp669 =  _temp654(_self)
      end

        elseif _temp654 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp669)
      if _t == "table" then
                      if _type(_temp669.var) == "function" or (_type(_temp669.var) == "table" and _rawget(_temp669.var, "__call_thing")) then
        _temp669 = _temp669:var()
      elseif _temp669.var ~= nil then
        _temp669 = _temp669.var

        elseif _temp669.no_undermethod ~= nil then
          _temp669 =  _temp669:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp669, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp669)
      if _n.var ~= nil then
        _temp669 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp669 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp669, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp669)
      if _f.var ~= nil then
        _temp669 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp669 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp669, "var"))
      end

      elseif _temp669 == nil then
        _error(exception:null_error("_temp669", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp669))
      end


    if _type(invoke_undernumber_underrhs) == "function" or (_type(invoke_undernumber_underrhs) == "table" and _rawget(invoke_undernumber_underrhs, "__call_thing")) then
      _temp665 =  invoke_undernumber_underrhs(_self, _temp666,_temp667,_temp668,_temp669)

    elseif invoke_undernumber_underrhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_rhs (" .. object.__type(invoke_undernumber_underrhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underrhs) == "function" or (_type(_self.invoke_undernumber_underrhs) == "table" and _rawget(_self.invoke_undernumber_underrhs, "__call_thing")) then
        _temp665 =  _self:invoke_undernumber_underrhs(_temp666,_temp667,_temp668,_temp669)
      elseif _self.invoke_undernumber_underrhs ~= nil then
        _temp665 =  _self.invoke_undernumber_underrhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp665 =  _self:no_undermethod(string:new("invoke_number_rhs") , _temp666,_temp667,_temp668,_temp669)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp665 =  no_undermethod(_self, string:new("invoke_number_rhs") , _temp666,_temp667,_temp668,_temp669)
      else
        _error(exception:name_error("invoke_number_rhs"))
      end
    end
local _temp669
      local _t = _type(_temp664)
      if _t == "table" then
                      if _type(_temp664._less_less) == "function" or (_type(_temp664._less_less) == "table" and _rawget(_temp664._less_less, "__call_thing")) then
        _temp669 = _temp664:_less_less(_temp665)
      elseif _temp664._less_less ~= nil then
        _temp669 = _temp664._less_less

        elseif _temp664.no_undermethod ~= nil then
          _temp669 =  _temp664:no_undermethod(string:new("<<") , _temp665)
        else
          _error(exception:method_error(_temp664, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp664)
      if _n._less_less ~= nil then
        _temp669 = _n:_less_less(_temp665)
      elseif _n.no_undermethod ~= nil then
        _temp669 =  _n:no_undermethod(string:new("<<") , _temp665)
      else
        _error(exception:method_error(_temp664, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp664)
      if _f._less_less ~= nil then
        _temp669 = _f:_less_less(_temp665)
      elseif _f.no_undermethod ~= nil then
        _temp669 =  _f:no_undermethod(string:new("<<") , _temp665)
      else
        _error(exception:method_error(_temp664, "<<"))
      end

      elseif _temp664 == nil then
        _error(exception:null_error("_temp664", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp664))
      end

_dummy_ = _temp669 
end

    if _type(_temp654) == "function" or (_type(_temp654) == "table" and _rawget(_temp654, "__call_thing")) then
      return  _temp654(_self)

    elseif _temp654 then
      return  _temp654
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp651)
      if _t == "table" then
                      if _type(_temp651.walk) == "function" or (_type(_temp651.walk) == "table" and _rawget(_temp651.walk, "__call_thing")) then
        _dummy_ = _temp651:walk(_temp4,_temp670)
      elseif _temp651.walk ~= nil then
        _dummy_ = _temp651.walk

        elseif _temp651.no_undermethod ~= nil then
          _dummy_ =  _temp651:no_undermethod(string:new("walk") , _temp4,_temp670)
        else
          _error(exception:method_error(_temp651, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp651)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp670)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp670)
      else
        _error(exception:method_error(_temp651, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp651)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp670)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp670)
      else
        _error(exception:method_error(_temp651, "walk"))
      end

      elseif _temp651 == nil then
        _error(exception:null_error("_temp651", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp651))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp670 =  _temp5(_self)

    elseif _temp5 then
      _temp670 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp670 =  _self:c()
      elseif _self.c ~= nil then
        _temp670 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp670 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp670 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp670,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp670,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp670,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp670,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
