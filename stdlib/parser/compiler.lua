              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp17 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

local _temp11

_temp11 = 0

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp16 = function (_self)

local _temp12 
do
local _temp13 = nil
_temp13 =  _temp11

local _temp14
      if number._unchanged('_plus')  then
        _temp14 = _temp13 + 1
      else
              local _n = number:new(_temp13)
      if _n._plus ~= nil then
        _temp14 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp14 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp13, "+"))
      end

      end 

_temp12 = _temp14 
end

_temp11 = _temp12

return _temp11
end

        if _type(_temp7) == "table" then
          _temp7["next_underliftable"] = _temp16
        elseif _type(_temp7) == "number" then
          number["next_underliftable"] =  _temp16
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp16
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp17
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp17
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp31 = function (_self, _temp18)
        if _temp18 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp19 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp19 =  my(_self)

    elseif my then
      _temp19 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp19 =  _self:my()
      elseif _self.my ~= nil then
        _temp19 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp19

local _temp20 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp21 = nil
        local _t = _type(_temp18)
        if _t == "table" then
          if _rawget(_temp18, "__call_thing") == nil then
            _temp21 = _temp18
          else
                  if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

          end
        elseif _t == "number" then
          _temp21 = _temp18
        elseif _t == "function" then
                if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

        elseif _temp18 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.nodes) == "function" or (_type(_temp21.nodes) == "table" and _rawget(_temp21.nodes, "__call_thing")) then
        _temp21 = _temp21:nodes()
      elseif _temp21.nodes ~= nil then
        _temp21 = _temp21.nodes

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp21, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.nodes ~= nil then
        _temp21 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.nodes ~= nil then
        _temp21 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


local _temp26 = function (_self, _temp22)
        if _temp22 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp23 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp23 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp23 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp24 = nil
    if _type(_temp22) == "function" or (_type(_temp22) == "table" and _rawget(_temp22, "__call_thing")) then
      _temp24 =  _temp22(_self)

    elseif _temp22 then
      _temp24 =  _temp22
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp24 =  _self:n()
      elseif _self.n ~= nil then
        _temp24 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.process) == "function" or (_type(_temp23.process) == "table" and _rawget(_temp23.process, "__call_thing")) then
        return _temp23:process(_temp24)
      elseif _temp23.process ~= nil then
        return _temp23.process

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("process") , _temp24)
        else
          _error(exception:method_error(_temp23, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.process ~= nil then
        return _n:process(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.process ~= nil then
        return _f:process(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.map) == "function" or (_type(_temp21.map) == "table" and _rawget(_temp21.map, "__call_thing")) then
        _temp21 = _temp21:map(_temp26)
      elseif _temp21.map ~= nil then
        _temp21 = _temp21.map

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("map") , _temp26)
        else
          _error(exception:method_error(_temp21, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.map ~= nil then
        _temp21 = _n:map(_temp26)
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.map ~= nil then
        _temp21 = _f:map(_temp26)
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


        if _type(_temp20) == "table" then
          _temp20["results"] = _temp21
        elseif _type(_temp20) == "number" then
          number["results"] = _temp21
        else
          _error("Cannot set method on " .. _temp20)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp26 
do
local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp28 = nil
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.liftable_underfunctions) == "function" or (_type(_temp27.liftable_underfunctions) == "table" and _rawget(_temp27.liftable_underfunctions, "__call_thing")) then
        _temp28 = _temp27:liftable_underfunctions()
      elseif _temp27.liftable_underfunctions ~= nil then
        _temp28 = _temp27.liftable_underfunctions

        elseif _temp27.no_undermethod ~= nil then
          _temp28 =  _temp27:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp27, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.liftable_underfunctions ~= nil then
        _temp28 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.liftable_underfunctions ~= nil then
        _temp28 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp29 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp29 =  _self:my()
      elseif _self.my ~= nil then
        _temp29 =  _self.my

        elseif my ~= nil then
          _temp29 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp29)
      if _t == "table" then
                      if _type(_temp29.results) == "function" or (_type(_temp29.results) == "table" and _rawget(_temp29.results, "__call_thing")) then
        _temp29 = _temp29:results()
      elseif _temp29.results ~= nil then
        _temp29 = _temp29.results

        elseif _temp29.no_undermethod ~= nil then
          _temp29 =  _temp29:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp29, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp29)
      if _n.results ~= nil then
        _temp29 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp29 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp29)
      if _f.results ~= nil then
        _temp29 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp29 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _temp29 == nil then
        _error(exception:null_error("_temp29", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp29))
      end

local _temp30
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28._plus) == "function" or (_type(_temp28._plus) == "table" and _rawget(_temp28._plus, "__call_thing")) then
        _temp30 = _temp28:_plus(_temp29)
      elseif _temp28._plus ~= nil then
        _temp30 = _temp28._plus

        elseif _temp28.no_undermethod ~= nil then
          _temp30 =  _temp28:no_undermethod(string:new("+") , _temp29)
        else
          _error(exception:method_error(_temp28, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp29) == 'number' then
        _temp30 = _temp28 + _temp29
      else
              local _n = number:new(_temp28)
      if _n._plus ~= nil then
        _temp30 = _n:_plus(_temp29)
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f._plus ~= nil then
        _temp30 = _f:_plus(_temp29)
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end

_temp26 = _temp30 
end

        if _type(_temp20) == "table" then
          _temp20["results"] = _temp26
        elseif _type(_temp20) == "number" then
          number["results"] = _temp26
        else
          _error("Cannot set method on " .. _temp20)
        end

return _temp26
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp31)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp36 = function (_self, _temp32)
        if _temp32 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp33
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp33 =  _self:my()
      elseif _self.my ~= nil then
        _temp33 =  _self.my

        elseif my ~= nil then
          _temp33 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.env) == "function" or (_type(_temp33.env) == "table" and _rawget(_temp33.env, "__call_thing")) then
        _temp33 = _temp33:env()
      elseif _temp33.env ~= nil then
        _temp33 = _temp33.env

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.env ~= nil then
        _temp33 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.env ~= nil then
        _temp33 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

local _temp34 = nil
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.lhs) == "function" or (_type(_temp34.lhs) == "table" and _rawget(_temp34.lhs, "__call_thing")) then
        _temp34 = _temp34:lhs()
      elseif _temp34.lhs ~= nil then
        _temp34 = _temp34.lhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp34, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.lhs ~= nil then
        _temp34 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.lhs ~= nil then
        _temp34 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.new_undervar) == "function" or (_type(_temp33.new_undervar) == "table" and _rawget(_temp33.new_undervar, "__call_thing")) then
        _temp33 = _temp33:new_undervar(_temp34)
      elseif _temp33.new_undervar ~= nil then
        _temp33 = _temp33.new_undervar

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("new_var") , _temp34)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.new_undervar ~= nil then
        _temp33 = _n:new_undervar(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.new_undervar ~= nil then
        _temp33 = _f:new_undervar(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end


local _temp35
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.rhs) == "function" or (_type(_temp34.rhs) == "table" and _rawget(_temp34.rhs, "__call_thing")) then
        _temp34 = _temp34:rhs()
      elseif _temp34.rhs ~= nil then
        _temp34 = _temp34.rhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp34, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.rhs ~= nil then
        _temp34 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.rhs ~= nil then
        _temp34 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


local _temp36 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp36 =  _temp33(_self)

    elseif _temp33 then
      _temp36 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp35 =  process(_self, _temp34,_temp36)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp35 =  _self:process(_temp34,_temp36)
      elseif _self.process ~= nil then
        _temp35 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("process") , _temp34,_temp36)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("process") , _temp34,_temp36)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.env) == "function" or (_type(_temp36.env) == "table" and _rawget(_temp36.env, "__call_thing")) then
        _temp36 = _temp36:env()
      elseif _temp36.env ~= nil then
        _temp36 = _temp36.env

        elseif _temp36.no_undermethod ~= nil then
          _temp36 =  _temp36:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp36, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.env ~= nil then
        _temp36 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp36 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.env ~= nil then
        _temp36 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp36 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp34 =  _temp33(_self)

    elseif _temp33 then
      _temp34 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp34 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp34 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp34 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp34 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37
do
    if _type(_temp35) == "function" or (_type(_temp35) == "table" and _rawget(_temp35, "__call_thing")) then
      _temp37 =  _temp35(_self)

    elseif _temp35 then
      _temp37 =  _temp35
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp37 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp37 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp38 = string:new("type")


_temp37 = _temp37:get(_temp38)
end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.set_undertype) == "function" or (_type(_temp36.set_undertype) == "table" and _rawget(_temp36.set_undertype, "__call_thing")) then
        _dummy_ = _temp36:set_undertype(_temp34,_temp37)
      elseif _temp36.set_undertype ~= nil then
        _dummy_ = _temp36.set_undertype

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("set_type") , _temp34,_temp37)
        else
          _error(exception:method_error(_temp36, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp34,_temp37)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp34,_temp37)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

local _temp37 
do
local _temp39 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp39 =  _temp33(_self)

    elseif _temp33 then
      _temp39 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp39 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp39 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp40 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp40 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp40 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.var) == "function" or (_type(_temp40.var) == "table" and _rawget(_temp40.var, "__call_thing")) then
        _temp40 = _temp40:var()
      elseif _temp40.var ~= nil then
        _temp40 = _temp40.var

        elseif _temp40.no_undermethod ~= nil then
          _temp40 =  _temp40:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp40, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.var ~= nil then
        _temp40 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp40 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.var ~= nil then
        _temp40 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp40 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

local _temp41
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39._equal_equal) == "function" or (_type(_temp39._equal_equal) == "table" and _rawget(_temp39._equal_equal, "__call_thing")) then
        _temp41 = _temp39:_equal_equal(_temp40)
      elseif _temp39._equal_equal ~= nil then
        _temp41 = _temp39._equal_equal

        elseif _temp39.no_undermethod ~= nil then
          _temp41 =  _temp39:no_undermethod(string:new("==") , _temp40)
        else
          _error(exception:method_error(_temp39, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp40) == 'number' then
              if _temp39 == _temp40 then
        _temp41 = object.__true
      else
        _temp41 = object.__false
      end

      else
              local _n = number:new(_temp39)
      if _n._equal_equal ~= nil then
        _temp41 = _n:_equal_equal(_temp40)
      elseif _n.no_undermethod ~= nil then
        _temp41 =  _n:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f._equal_equal ~= nil then
        _temp41 = _f:_equal_equal(_temp40)
      elseif _f.no_undermethod ~= nil then
        _temp41 =  _f:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end

_temp37 = _temp41 
end


local _temp47 = function (_self)

local _temp42 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp42 =  _temp33(_self)

    elseif _temp33 then
      _temp42 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp44 =  _temp33(_self)

    elseif _temp33 then
      _temp44 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp44 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp44 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp44 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp44 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp45 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp45 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp45 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp45)
      if _t == "table" then
                      if _type(_temp45.out) == "function" or (_type(_temp45.out) == "table" and _rawget(_temp45.out, "__call_thing")) then
        _temp45 = _temp45:out()
      elseif _temp45.out ~= nil then
        _temp45 = _temp45.out

        elseif _temp45.no_undermethod ~= nil then
          _temp45 =  _temp45:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp45, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp45)
      if _n.out ~= nil then
        _temp45 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp45 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp45)
      if _f.out ~= nil then
        _temp45 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp45 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _temp45 == nil then
        _error(exception:null_error("_temp45", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp45))
      end


_temp43 = string:new("local " .. _tostring(_temp44) .. "\n" .. _tostring(_temp45) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end


local _temp54 = function (_self)

local _temp48 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp48 =  _temp33(_self)

    elseif _temp33 then
      _temp48 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp48 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp48 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp48 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp48 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp49 = nil
do
local _temp50 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp50 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp50 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp50)
      if _t == "table" then
                      if _type(_temp50.out) == "function" or (_type(_temp50.out) == "table" and _rawget(_temp50.out, "__call_thing")) then
        _temp50 = _temp50:out()
      elseif _temp50.out ~= nil then
        _temp50 = _temp50.out

        elseif _temp50.no_undermethod ~= nil then
          _temp50 =  _temp50:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp50, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp50)
      if _n.out ~= nil then
        _temp50 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp50 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp50)
      if _f.out ~= nil then
        _temp50 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp50 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _temp50 == nil then
        _error(exception:null_error("_temp50", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp50))
      end


local _temp51 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp51 =  _temp33(_self)

    elseif _temp33 then
      _temp51 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp51 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp51 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp52 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp52 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.var) == "function" or (_type(_temp52.var) == "table" and _rawget(_temp52.var, "__call_thing")) then
        _temp52 = _temp52:var()
      elseif _temp52.var ~= nil then
        _temp52 = _temp52.var

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp52, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.var ~= nil then
        _temp52 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.var ~= nil then
        _temp52 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = string:new("" .. _tostring(_temp50) .. "\nlocal " .. _tostring(_temp51) .. " = " .. _tostring(_temp52) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp48,_temp49)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp48,_temp49)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp48,_temp49)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp48,_temp49)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp37,_temp47,_temp54)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp37,_temp47,_temp54)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp37,_temp47,_temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp37,_temp47,_temp54)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp31 =  _temp5(_self)

    elseif _temp5 then
      _temp31 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp31 =  _self:c()
      elseif _self.c ~= nil then
        _temp31 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp31 = _temp31["var_underreassign"]
        if _temp31 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp31)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["var_underreassign"]
        if _temp36 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp76 = function (_self, _temp56,_temp55)
        if _temp56 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp55 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp55 =  null(_self)

    elseif null then
      _temp55 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp55 =  _self:null()
      elseif _self.null ~= nil then
        _temp55 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp57
local _temp58 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.target) == "function" or (_type(_temp58.target) == "table" and _rawget(_temp58.target, "__call_thing")) then
        _temp58 = _temp58:target()
      elseif _temp58.target ~= nil then
        _temp58 = _temp58.target

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp58, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.target ~= nil then
        _temp58 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.target ~= nil then
        _temp58 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp57 =  process(_self, _temp58)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp57 =  _self:process(_temp58)
      elseif _self.process ~= nil then
        _temp57 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("process") , _temp58)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("process") , _temp58)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.field) == "function" or (_type(_temp58.field) == "table" and _rawget(_temp58.field, "__call_thing")) then
        _temp58 = _temp58:field()
      elseif _temp58.field ~= nil then
        _temp58 = _temp58.field

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp58, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.field ~= nil then
        _temp58 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.field ~= nil then
        _temp58 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


_temp55 = _temp58

local _temp59
local _temp60 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp60 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.rhs) == "function" or (_type(_temp60.rhs) == "table" and _rawget(_temp60.rhs, "__call_thing")) then
        _temp60 = _temp60:rhs()
      elseif _temp60.rhs ~= nil then
        _temp60 = _temp60.rhs

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp60, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.rhs ~= nil then
        _temp60 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.rhs ~= nil then
        _temp60 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp59 =  process(_self, _temp60)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp59 =  _self:process(_temp60)
      elseif _self.process ~= nil then
        _temp59 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("process") , _temp60)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("process") , _temp60)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp61
do
local _temp62 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp62 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp63 = nil
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.out) == "function" or (_type(_temp62.out) == "table" and _rawget(_temp62.out, "__call_thing")) then
        _temp63 = _temp62:out()
      elseif _temp62.out ~= nil then
        _temp63 = _temp62.out

        elseif _temp62.no_undermethod ~= nil then
          _temp63 =  _temp62:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp62, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.out ~= nil then
        _temp63 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.out ~= nil then
        _temp63 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end

local _temp64 = string:new("\n")

local _temp65 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp65 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp66 = nil
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.out) == "function" or (_type(_temp65.out) == "table" and _rawget(_temp65.out, "__call_thing")) then
        _temp66 = _temp65:out()
      elseif _temp65.out ~= nil then
        _temp66 = _temp65.out

        elseif _temp65.no_undermethod ~= nil then
          _temp66 =  _temp65:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp65, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.out ~= nil then
        _temp66 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.out ~= nil then
        _temp66 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end

local _temp67 = nil
do
local _temp68 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp68 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp68 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.var) == "function" or (_type(_temp68.var) == "table" and _rawget(_temp68.var, "__call_thing")) then
        _temp68 = _temp68:var()
      elseif _temp68.var ~= nil then
        _temp68 = _temp68.var

        elseif _temp68.no_undermethod ~= nil then
          _temp68 =  _temp68:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp68, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.var ~= nil then
        _temp68 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp68 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.var ~= nil then
        _temp68 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp68 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end


local _temp69 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp69 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp69 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp69)
      if _t == "table" then
                      if _type(_temp69.var) == "function" or (_type(_temp69.var) == "table" and _rawget(_temp69.var, "__call_thing")) then
        _temp69 = _temp69:var()
      elseif _temp69.var ~= nil then
        _temp69 = _temp69.var

        elseif _temp69.no_undermethod ~= nil then
          _temp69 =  _temp69:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp69, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp69)
      if _n.var ~= nil then
        _temp69 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp69 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp69)
      if _f.var ~= nil then
        _temp69 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp69 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _temp69 == nil then
        _error(exception:null_error("_temp69", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp69))
      end


local _temp70 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp70 =  _temp55(_self)

    elseif _temp55 then
      _temp70 =  _temp55
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp70 =  _self:var()
      elseif _self.var ~= nil then
        _temp70 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp71 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp71 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp71 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp71)
      if _t == "table" then
                      if _type(_temp71.var) == "function" or (_type(_temp71.var) == "table" and _rawget(_temp71.var, "__call_thing")) then
        _temp71 = _temp71:var()
      elseif _temp71.var ~= nil then
        _temp71 = _temp71.var

        elseif _temp71.no_undermethod ~= nil then
          _temp71 =  _temp71:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp71, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp71)
      if _n.var ~= nil then
        _temp71 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp71 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp71)
      if _f.var ~= nil then
        _temp71 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp71 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _temp71 == nil then
        _error(exception:null_error("_temp71", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp71))
      end


local _temp72 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp72 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp72 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.var) == "function" or (_type(_temp72.var) == "table" and _rawget(_temp72.var, "__call_thing")) then
        _temp72 = _temp72:var()
      elseif _temp72.var ~= nil then
        _temp72 = _temp72.var

        elseif _temp72.no_undermethod ~= nil then
          _temp72 =  _temp72:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp72, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.var ~= nil then
        _temp72 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp72 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.var ~= nil then
        _temp72 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp72 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end


_temp67 = string:new("\n    if _type(" .. _tostring(_temp68) .. ") == 'table' then\n      " .. _tostring(_temp69) .. "['" .. _tostring(_temp70) .. "'] = " .. _tostring(_temp71) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp72) .. ")\n    end\n    ")
end
local _temp73
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63._less_less) == "function" or (_type(_temp63._less_less) == "table" and _rawget(_temp63._less_less, "__call_thing")) then
        _temp73 = _temp63:_less_less(_temp64)
      elseif _temp63._less_less ~= nil then
        _temp73 = _temp63._less_less

        elseif _temp63.no_undermethod ~= nil then
          _temp73 =  _temp63:no_undermethod(string:new("<<") , _temp64)
        else
          _error(exception:method_error(_temp63, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n._less_less ~= nil then
        _temp73 = _n:_less_less(_temp64)
      elseif _n.no_undermethod ~= nil then
        _temp73 =  _n:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f._less_less ~= nil then
        _temp73 = _f:_less_less(_temp64)
      elseif _f.no_undermethod ~= nil then
        _temp73 =  _f:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end

local _temp64
      local _t = _type(_temp73)
      if _t == "table" then
                      if _type(_temp73._less_less) == "function" or (_type(_temp73._less_less) == "table" and _rawget(_temp73._less_less, "__call_thing")) then
        _temp64 = _temp73:_less_less(_temp66)
      elseif _temp73._less_less ~= nil then
        _temp64 = _temp73._less_less

        elseif _temp73.no_undermethod ~= nil then
          _temp64 =  _temp73:no_undermethod(string:new("<<") , _temp66)
        else
          _error(exception:method_error(_temp73, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp73)
      if _n._less_less ~= nil then
        _temp64 = _n:_less_less(_temp66)
      elseif _n.no_undermethod ~= nil then
        _temp64 =  _n:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp73)
      if _f._less_less ~= nil then
        _temp64 = _f:_less_less(_temp66)
      elseif _f.no_undermethod ~= nil then
        _temp64 =  _f:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _temp73 == nil then
        _error(exception:null_error("_temp73", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp73))
      end

local _temp66
      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64._less_less) == "function" or (_type(_temp64._less_less) == "table" and _rawget(_temp64._less_less, "__call_thing")) then
        _temp66 = _temp64:_less_less(_temp67)
      elseif _temp64._less_less ~= nil then
        _temp66 = _temp64._less_less

        elseif _temp64.no_undermethod ~= nil then
          _temp66 =  _temp64:no_undermethod(string:new("<<") , _temp67)
        else
          _error(exception:method_error(_temp64, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n._less_less ~= nil then
        _temp66 = _n:_less_less(_temp67)
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f._less_less ~= nil then
        _temp66 = _f:_less_less(_temp67)
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

_temp61 = _temp66 
end

        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp60 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.var) == "function" or (_type(_temp60.var) == "table" and _rawget(_temp60.var, "__call_thing")) then
        _temp60 = _temp60:var()
      elseif _temp60.var ~= nil then
        _temp60 = _temp60.var

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp60, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.var ~= nil then
        _temp60 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.var ~= nil then
        _temp60 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


local _temp74 = nil
    if _type(_temp61) == "function" or (_type(_temp61) == "table" and _rawget(_temp61, "__call_thing")) then
      _temp74 =  _temp61(_self)

    elseif _temp61 then
      _temp74 =  _temp61
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp74 =  _self:out()
      elseif _self.out ~= nil then
        _temp74 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp60,_temp74)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp60,_temp74)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp60,_temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp60,_temp74)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["get_undera_undervalue"]
        if _temp36 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp36)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp76 =  _temp5(_self)

    elseif _temp5 then
      _temp76 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp76 =  _self:c()
      elseif _self.c ~= nil then
        _temp76 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp76 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp76 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp76 = _temp76["get_undera_undervalue"]
        if _temp76 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp86 = function (_self, _temp78,_temp77)
        if _temp78 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp77 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp77 =  null(_self)

    elseif null then
      _temp77 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp77 =  _self:null()
      elseif _self.null ~= nil then
        _temp77 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp79
local _temp80 = nil
    if _type(_temp77) == "function" or (_type(_temp77) == "table" and _rawget(_temp77, "__call_thing")) then
      _temp80 =  _temp77(_self)

    elseif _temp77 then
      _temp80 =  _temp77
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp80 =  _self:var()
      elseif _self.var ~= nil then
        _temp80 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp80 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp80 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp79 =  set_underresult(_self, _temp80)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp79 =  _self:set_underresult(_temp80)
      elseif _self.set_underresult ~= nil then
        _temp79 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("set_result") , _temp80)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("set_result") , _temp80)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp81 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp81 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp81 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp82 = nil
      local _t = _type(_temp81)
      if _t == "table" then
                      if _type(_temp81.out) == "function" or (_type(_temp81.out) == "table" and _rawget(_temp81.out, "__call_thing")) then
        _temp82 = _temp81:out()
      elseif _temp81.out ~= nil then
        _temp82 = _temp81.out

        elseif _temp81.no_undermethod ~= nil then
          _temp82 =  _temp81:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp81, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp81)
      if _n.out ~= nil then
        _temp82 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp82 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp81)
      if _f.out ~= nil then
        _temp82 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp82 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _temp81 == nil then
        _error(exception:null_error("_temp81", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp81))
      end

local _temp83 = nil
local _temp84 = nil
        local _t = _type(_temp78)
        if _t == "table" then
          if _rawget(_temp78, "__call_thing") == nil then
            _temp84 = _temp78
          else
                  if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

          end
        elseif _t == "number" then
          _temp84 = _temp78
        elseif _t == "function" then
                if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

        elseif _temp78 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.value) == "function" or (_type(_temp84.value) == "table" and _rawget(_temp84.value, "__call_thing")) then
        _temp84 = _temp84:value()
      elseif _temp84.value ~= nil then
        _temp84 = _temp84.value

        elseif _temp84.no_undermethod ~= nil then
          _temp84 =  _temp84:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp84, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.value ~= nil then
        _temp84 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp84 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.value ~= nil then
        _temp84 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp84 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end


local _temp85 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp85 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp85 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp85)
      if _t == "table" then
                      if _type(_temp85.var) == "function" or (_type(_temp85.var) == "table" and _rawget(_temp85.var, "__call_thing")) then
        _temp85 = _temp85:var()
      elseif _temp85.var ~= nil then
        _temp85 = _temp85.var

        elseif _temp85.no_undermethod ~= nil then
          _temp85 =  _temp85:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp85, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp85)
      if _n.var ~= nil then
        _temp85 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp85)
      if _f.var ~= nil then
        _temp85 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _temp85 == nil then
        _error(exception:null_error("_temp85", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp85))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp83 =  get_undervalue(_self, _temp84,_temp85)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp83 =  _self:get_undervalue(_temp84,_temp85)
      elseif _self.get_undervalue ~= nil then
        _temp83 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("get_value") , _temp84,_temp85)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("get_value") , _temp84,_temp85)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp85
      local _t = _type(_temp82)
      if _t == "table" then
                      if _type(_temp82._less_less) == "function" or (_type(_temp82._less_less) == "table" and _rawget(_temp82._less_less, "__call_thing")) then
        _temp85 = _temp82:_less_less(_temp83)
      elseif _temp82._less_less ~= nil then
        _temp85 = _temp82._less_less

        elseif _temp82.no_undermethod ~= nil then
          _temp85 =  _temp82:no_undermethod(string:new("<<") , _temp83)
        else
          _error(exception:method_error(_temp82, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp82)
      if _n._less_less ~= nil then
        _temp85 = _n:_less_less(_temp83)
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp82)
      if _f._less_less ~= nil then
        _temp85 = _f:_less_less(_temp83)
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _temp82 == nil then
        _error(exception:null_error("_temp82", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp82))
      end

_dummy_ = _temp85 
end

    if _type(_temp79) == "function" or (_type(_temp79) == "table" and _rawget(_temp79, "__call_thing")) then
      return  _temp79(_self)

    elseif _temp79 then
      return  _temp79
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp86)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp86)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp86)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp86)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp86 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp86 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp94 = function (_self, _temp88,_temp87)
        if _temp88 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp87 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp87 =  null(_self)

    elseif null then
      _temp87 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp87 =  _self:null()
      elseif _self.null ~= nil then
        _temp87 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp89 = nil
    if _type(_temp88) == "function" or (_type(_temp88) == "table" and _rawget(_temp88, "__call_thing")) then
      _temp89 =  _temp88(_self)

    elseif _temp88 then
      _temp89 =  _temp88
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp89 =  _self:node()
      elseif _self.node ~= nil then
        _temp89 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp90 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp90 =  null(_self)

    elseif null then
      _temp90 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp90 =  _self:null()
      elseif _self.null ~= nil then
        _temp90 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp90 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp90 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp91 = nil

        if invoke_underlocal == nil then
          _temp91 = _self["invoke_underlocal"]
          if _temp91 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp91 = invoke_underlocal
        end

local _temp92 = nil
    if _type(_temp87) == "function" or (_type(_temp87) == "table" and _rawget(_temp87, "__call_thing")) then
      _temp92 =  _temp87(_self)

    elseif _temp87 then
      _temp92 =  _temp87
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp92 =  _self:var()
      elseif _self.var ~= nil then
        _temp92 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp89,_temp90,_temp91,_temp92)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp89,_temp90,_temp91,_temp92)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp86)
      if _t == "table" then
                      if _type(_temp86.walk) == "function" or (_type(_temp86.walk) == "table" and _rawget(_temp86.walk, "__call_thing")) then
        _dummy_ = _temp86:walk(_temp4,_temp94)
      elseif _temp86.walk ~= nil then
        _dummy_ = _temp86.walk

        elseif _temp86.no_undermethod ~= nil then
          _dummy_ =  _temp86:no_undermethod(string:new("walk") , _temp4,_temp94)
        else
          _error(exception:method_error(_temp86, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp86)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp94)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp86)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp94)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _temp86 == nil then
        _error(exception:null_error("_temp86", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp86))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp94 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp94 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp102 = function (_self, _temp96,_temp95)
        if _temp96 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp95 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp95 =  null(_self)

    elseif null then
      _temp95 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp95 =  _self:null()
      elseif _self.null ~= nil then
        _temp95 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp97 = nil
    if _type(_temp96) == "function" or (_type(_temp96) == "table" and _rawget(_temp96, "__call_thing")) then
      _temp97 =  _temp96(_self)

    elseif _temp96 then
      _temp97 =  _temp96
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp97 =  _self:node()
      elseif _self.node ~= nil then
        _temp97 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp98 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp98 =  null(_self)

    elseif null then
      _temp98 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp98 =  _self:null()
      elseif _self.null ~= nil then
        _temp98 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp98 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp98 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp99 = nil

        if invoke_underlocal == nil then
          _temp99 = _self["invoke_underlocal"]
          if _temp99 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp99 = invoke_underlocal
        end

local _temp100 = nil
    if _type(_temp95) == "function" or (_type(_temp95) == "table" and _rawget(_temp95, "__call_thing")) then
      _temp100 =  _temp95(_self)

    elseif _temp95 then
      _temp100 =  _temp95
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp100 =  _self:var()
      elseif _self.var ~= nil then
        _temp100 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp97,_temp98,_temp99,_temp100)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp97,_temp98,_temp99,_temp100)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp94)
      if _t == "table" then
                      if _type(_temp94.walk) == "function" or (_type(_temp94.walk) == "table" and _rawget(_temp94.walk, "__call_thing")) then
        _dummy_ = _temp94:walk(_temp4,_temp102)
      elseif _temp94.walk ~= nil then
        _dummy_ = _temp94.walk

        elseif _temp94.no_undermethod ~= nil then
          _dummy_ =  _temp94:no_undermethod(string:new("walk") , _temp4,_temp102)
        else
          _error(exception:method_error(_temp94, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp94)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp102)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp94)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp102)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _temp94 == nil then
        _error(exception:null_error("_temp94", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp94))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp102 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp102 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp110 = function (_self, _temp104,_temp103)
        if _temp104 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp103 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp103 =  null(_self)

    elseif null then
      _temp103 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp103 =  _self:null()
      elseif _self.null ~= nil then
        _temp103 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp105 = nil
    if _type(_temp104) == "function" or (_type(_temp104) == "table" and _rawget(_temp104, "__call_thing")) then
      _temp105 =  _temp104(_self)

    elseif _temp104 then
      _temp105 =  _temp104
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp105 =  _self:node()
      elseif _self.node ~= nil then
        _temp105 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp106 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp106 =  null(_self)

    elseif null then
      _temp106 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp106 =  _self:null()
      elseif _self.null ~= nil then
        _temp106 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp106 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp106 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp107 = nil

        if invoke_underself == nil then
          _temp107 = _self["invoke_underself"]
          if _temp107 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp107 = invoke_underself
        end

local _temp108 = nil
    if _type(_temp103) == "function" or (_type(_temp103) == "table" and _rawget(_temp103, "__call_thing")) then
      _temp108 =  _temp103(_self)

    elseif _temp103 then
      _temp108 =  _temp103
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp108 =  _self:var()
      elseif _self.var ~= nil then
        _temp108 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp108 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp108 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp105,_temp106,_temp107,_temp108)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp105,_temp106,_temp107,_temp108)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp102)
      if _t == "table" then
                      if _type(_temp102.walk) == "function" or (_type(_temp102.walk) == "table" and _rawget(_temp102.walk, "__call_thing")) then
        _dummy_ = _temp102:walk(_temp4,_temp110)
      elseif _temp102.walk ~= nil then
        _dummy_ = _temp102.walk

        elseif _temp102.no_undermethod ~= nil then
          _dummy_ =  _temp102:no_undermethod(string:new("walk") , _temp4,_temp110)
        else
          _error(exception:method_error(_temp102, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp102)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp110)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp102)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp110)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _temp102 == nil then
        _error(exception:null_error("_temp102", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp102))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp110 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp110 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp120 = function (_self, _temp112,_temp111)
        if _temp112 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp111 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp111 =  null(_self)

    elseif null then
      _temp111 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp111 =  _self:null()
      elseif _self.null ~= nil then
        _temp111 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp113
local _temp114 = nil
        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp114 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.target) == "function" or (_type(_temp114.target) == "table" and _rawget(_temp114.target, "__call_thing")) then
        _temp114 = _temp114:target()
      elseif _temp114.target ~= nil then
        _temp114 = _temp114.target

        elseif _temp114.no_undermethod ~= nil then
          _temp114 =  _temp114:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp114, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.target ~= nil then
        _temp114 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp114 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.target ~= nil then
        _temp114 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp114 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end


local _temp115 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp115 =  _temp111(_self)

    elseif _temp111 then
      _temp115 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp115 =  _self:var()
      elseif _self.var ~= nil then
        _temp115 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp113 =  process(_self, _temp114,_temp115)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp113 =  _self:process(_temp114,_temp115)
      elseif _self.process ~= nil then
        _temp113 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp113 =  _self:no_undermethod(string:new("process") , _temp114,_temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp113 =  no_undermethod(_self, string:new("process") , _temp114,_temp115)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp115 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp115 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp114 =  null(_self)

    elseif null then
      _temp114 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp114 =  _self:null()
      elseif _self.null ~= nil then
        _temp114 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp114 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp114 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp115) == "table" then
          _temp115["method"] = _temp114
        elseif _type(_temp115) == "number" then
          number["method"] = _temp114
        else
          _error("Cannot set method on " .. _temp115)
        end

    if _type(_temp112) == "function" or (_type(_temp112) == "table" and _rawget(_temp112, "__call_thing")) then
      _temp115 =  _temp112(_self)

    elseif _temp112 then
      _temp115 =  _temp112
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp115 =  _self:node()
      elseif _self.node ~= nil then
        _temp115 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp116 = nil
    if _type(_temp113) == "function" or (_type(_temp113) == "table" and _rawget(_temp113, "__call_thing")) then
      _temp116 =  _temp113(_self)

    elseif _temp113 then
      _temp116 =  _temp113
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp116 =  _self:target()
      elseif _self.target ~= nil then
        _temp116 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp116 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp116 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp117 = nil

        if invoke_underindex_underget == nil then
          _temp117 = _self["invoke_underindex_underget"]
          if _temp117 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp117 = invoke_underindex_underget
        end

local _temp118 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp118 =  _temp111(_self)

    elseif _temp111 then
      _temp118 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp118 =  _self:var()
      elseif _self.var ~= nil then
        _temp118 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp118 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp118 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp115,_temp116,_temp117,_temp118)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp115,_temp116,_temp117,_temp118)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp110)
      if _t == "table" then
                      if _type(_temp110.walk) == "function" or (_type(_temp110.walk) == "table" and _rawget(_temp110.walk, "__call_thing")) then
        _dummy_ = _temp110:walk(_temp4,_temp120)
      elseif _temp110.walk ~= nil then
        _dummy_ = _temp110.walk

        elseif _temp110.no_undermethod ~= nil then
          _dummy_ =  _temp110:no_undermethod(string:new("walk") , _temp4,_temp120)
        else
          _error(exception:method_error(_temp110, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp110)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp120)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp110)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp120)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _temp110 == nil then
        _error(exception:null_error("_temp110", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp110))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp120 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp120 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_get")

local _temp128 = function (_self, _temp122,_temp121)
        if _temp122 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp121 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp121 =  null(_self)

    elseif null then
      _temp121 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp121 =  _self:null()
      elseif _self.null ~= nil then
        _temp121 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp121 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp121 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp123
local _temp124 = nil
        local _t = _type(_temp122)
        if _t == "table" then
          if _rawget(_temp122, "__call_thing") == nil then
            _temp124 = _temp122
          else
                  if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

          end
        elseif _t == "number" then
          _temp124 = _temp122
        elseif _t == "function" then
                if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

        elseif _temp122 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.target) == "function" or (_type(_temp124.target) == "table" and _rawget(_temp124.target, "__call_thing")) then
        _temp124 = _temp124:target()
      elseif _temp124.target ~= nil then
        _temp124 = _temp124.target

        elseif _temp124.no_undermethod ~= nil then
          _temp124 =  _temp124:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp124, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.target ~= nil then
        _temp124 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp124 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.target ~= nil then
        _temp124 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp124 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp123 =  process(_self, _temp124)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp123 =  _self:process(_temp124)
      elseif _self.process ~= nil then
        _temp123 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("process") , _temp124)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("process") , _temp124)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp122) == "function" or (_type(_temp122) == "table" and _rawget(_temp122, "__call_thing")) then
      _temp124 =  _temp122(_self)

    elseif _temp122 then
      _temp124 =  _temp122
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp124 =  _self:node()
      elseif _self.node ~= nil then
        _temp124 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp124 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp124 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp125 = nil
    if _type(_temp123) == "function" or (_type(_temp123) == "table" and _rawget(_temp123, "__call_thing")) then
      _temp125 =  _temp123(_self)

    elseif _temp123 then
      _temp125 =  _temp123
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp125 =  _self:target()
      elseif _self.target ~= nil then
        _temp125 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp126 = nil
    if _type(_temp121) == "function" or (_type(_temp121) == "table" and _rawget(_temp121, "__call_thing")) then
      _temp126 =  _temp121(_self)

    elseif _temp121 then
      _temp126 =  _temp121
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp126 =  _self:var()
      elseif _self.var ~= nil then
        _temp126 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp126 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp126 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underget_underdirect) == "function" or (_type(invoke_underindex_underget_underdirect) == "table" and _rawget(invoke_underindex_underget_underdirect, "__call_thing")) then
      return  invoke_underindex_underget_underdirect(_self, _temp124,_temp125,_temp126)

    elseif invoke_underindex_underget_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_get_direct (" .. object.__type(invoke_underindex_underget_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underget_underdirect) == "function" or (_type(_self.invoke_underindex_underget_underdirect) == "table" and _rawget(_self.invoke_underindex_underget_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underget_underdirect(_temp124,_temp125,_temp126)
      elseif _self.invoke_underindex_underget_underdirect ~= nil then
        return  _self.invoke_underindex_underget_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      else
        _error(exception:name_error("invoke_index_get_direct"))
      end
    end

end

      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120.walk) == "function" or (_type(_temp120.walk) == "table" and _rawget(_temp120.walk, "__call_thing")) then
        _dummy_ = _temp120:walk(_temp4,_temp128)
      elseif _temp120.walk ~= nil then
        _dummy_ = _temp120.walk

        elseif _temp120.no_undermethod ~= nil then
          _dummy_ =  _temp120:no_undermethod(string:new("walk") , _temp4,_temp128)
        else
          _error(exception:method_error(_temp120, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp128)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp128)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp128 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp128 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_set")

local _temp136 = function (_self, _temp130,_temp129)
        if _temp130 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp129 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp129 =  null(_self)

    elseif null then
      _temp129 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp129 =  _self:null()
      elseif _self.null ~= nil then
        _temp129 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp129 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp129 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp131
local _temp132 = nil
        local _t = _type(_temp130)
        if _t == "table" then
          if _rawget(_temp130, "__call_thing") == nil then
            _temp132 = _temp130
          else
                  if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

          end
        elseif _t == "number" then
          _temp132 = _temp130
        elseif _t == "function" then
                if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

        elseif _temp130 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp132)
      if _t == "table" then
                      if _type(_temp132.target) == "function" or (_type(_temp132.target) == "table" and _rawget(_temp132.target, "__call_thing")) then
        _temp132 = _temp132:target()
      elseif _temp132.target ~= nil then
        _temp132 = _temp132.target

        elseif _temp132.no_undermethod ~= nil then
          _temp132 =  _temp132:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp132, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp132)
      if _n.target ~= nil then
        _temp132 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp132 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp132)
      if _f.target ~= nil then
        _temp132 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp132 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _temp132 == nil then
        _error(exception:null_error("_temp132", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp132))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp131 =  process(_self, _temp132)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp131 =  _self:process(_temp132)
      elseif _self.process ~= nil then
        _temp131 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("process") , _temp132)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("process") , _temp132)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp130) == "function" or (_type(_temp130) == "table" and _rawget(_temp130, "__call_thing")) then
      _temp132 =  _temp130(_self)

    elseif _temp130 then
      _temp132 =  _temp130
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp132 =  _self:node()
      elseif _self.node ~= nil then
        _temp132 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp132 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp132 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp133 = nil
    if _type(_temp131) == "function" or (_type(_temp131) == "table" and _rawget(_temp131, "__call_thing")) then
      _temp133 =  _temp131(_self)

    elseif _temp131 then
      _temp133 =  _temp131
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp133 =  _self:target()
      elseif _self.target ~= nil then
        _temp133 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp134 = nil
    if _type(_temp129) == "function" or (_type(_temp129) == "table" and _rawget(_temp129, "__call_thing")) then
      _temp134 =  _temp129(_self)

    elseif _temp129 then
      _temp134 =  _temp129
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp134 =  _self:var()
      elseif _self.var ~= nil then
        _temp134 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp134 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp134 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underset_underdirect) == "function" or (_type(invoke_underindex_underset_underdirect) == "table" and _rawget(invoke_underindex_underset_underdirect, "__call_thing")) then
      return  invoke_underindex_underset_underdirect(_self, _temp132,_temp133,_temp134)

    elseif invoke_underindex_underset_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_set_direct (" .. object.__type(invoke_underindex_underset_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underset_underdirect) == "function" or (_type(_self.invoke_underindex_underset_underdirect) == "table" and _rawget(_self.invoke_underindex_underset_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underset_underdirect(_temp132,_temp133,_temp134)
      elseif _self.invoke_underindex_underset_underdirect ~= nil then
        return  _self.invoke_underindex_underset_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_set_direct") , _temp132,_temp133,_temp134)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_set_direct") , _temp132,_temp133,_temp134)
      else
        _error(exception:name_error("invoke_index_set_direct"))
      end
    end

end

      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.walk) == "function" or (_type(_temp128.walk) == "table" and _rawget(_temp128.walk, "__call_thing")) then
        _dummy_ = _temp128:walk(_temp4,_temp136)
      elseif _temp128.walk ~= nil then
        _dummy_ = _temp128.walk

        elseif _temp128.no_undermethod ~= nil then
          _dummy_ =  _temp128:no_undermethod(string:new("walk") , _temp4,_temp136)
        else
          _error(exception:method_error(_temp128, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp136)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp136)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp136)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp136)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp136 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp136 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp136 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp136 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp136 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp136 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp136 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp136 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp136 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp136 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp146 = function (_self, _temp138,_temp137)
        if _temp138 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp137 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp137 =  null(_self)

    elseif null then
      _temp137 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp137 =  _self:null()
      elseif _self.null ~= nil then
        _temp137 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp137 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp137 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp139
local _temp140 = nil
        local _t = _type(_temp138)
        if _t == "table" then
          if _rawget(_temp138, "__call_thing") == nil then
            _temp140 = _temp138
          else
                  if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp140 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp140 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp140 =  _temp138(_self)
      end

          end
        elseif _t == "number" then
          _temp140 = _temp138
        elseif _t == "function" then
                if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp140 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp140 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp140 =  _temp138(_self)
      end

        elseif _temp138 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp140)
      if _t == "table" then
                      if _type(_temp140.target) == "function" or (_type(_temp140.target) == "table" and _rawget(_temp140.target, "__call_thing")) then
        _temp140 = _temp140:target()
      elseif _temp140.target ~= nil then
        _temp140 = _temp140.target

        elseif _temp140.no_undermethod ~= nil then
          _temp140 =  _temp140:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp140, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp140)
      if _n.target ~= nil then
        _temp140 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp140 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp140, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp140)
      if _f.target ~= nil then
        _temp140 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp140 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp140, "target"))
      end

      elseif _temp140 == nil then
        _error(exception:null_error("_temp140", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp140))
      end


local _temp141 = nil
    if _type(_temp137) == "function" or (_type(_temp137) == "table" and _rawget(_temp137, "__call_thing")) then
      _temp141 =  _temp137(_self)

    elseif _temp137 then
      _temp141 =  _temp137
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp141 =  _self:var()
      elseif _self.var ~= nil then
        _temp141 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp139 =  process(_self, _temp140,_temp141)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp139 =  _self:process(_temp140,_temp141)
      elseif _self.process ~= nil then
        _temp139 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("process") , _temp140,_temp141)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("process") , _temp140,_temp141)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp138)
        if _t == "table" then
          if _rawget(_temp138, "__call_thing") == nil then
            _temp141 = _temp138
          else
                  if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp141 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp141 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp138(_self)
      end

          end
        elseif _t == "number" then
          _temp141 = _temp138
        elseif _t == "function" then
                if _temp138 == nil then
              if _type(_self._temp138) == "function" or (_type(_self._temp138) == "table" and _rawget(_self._temp138, "__call_thing")) then
        _temp141 =  _self:_temp138()
      elseif _self._temp138 ~= nil then
        _temp141 =  _self._temp138

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp138"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp138(_self)
      end

        elseif _temp138 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp140 =  null(_self)

    elseif null then
      _temp140 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp140 =  _self:null()
      elseif _self.null ~= nil then
        _temp140 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp140 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp140 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp141) == "table" then
          _temp141["method"] = _temp140
        elseif _type(_temp141) == "number" then
          number["method"] = _temp140
        else
          _error("Cannot set method on " .. _temp141)
        end

    if _type(_temp138) == "function" or (_type(_temp138) == "table" and _rawget(_temp138, "__call_thing")) then
      _temp141 =  _temp138(_self)

    elseif _temp138 then
      _temp141 =  _temp138
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp141 =  _self:node()
      elseif _self.node ~= nil then
        _temp141 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp142 = nil
    if _type(_temp139) == "function" or (_type(_temp139) == "table" and _rawget(_temp139, "__call_thing")) then
      _temp142 =  _temp139(_self)

    elseif _temp139 then
      _temp142 =  _temp139
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp142 =  _self:target()
      elseif _self.target ~= nil then
        _temp142 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp142 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp142 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp143 = nil

        if invoke_underfunction == nil then
          _temp143 = _self["invoke_underfunction"]
          if _temp143 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp143 = invoke_underfunction
        end

local _temp144 = nil
    if _type(_temp137) == "function" or (_type(_temp137) == "table" and _rawget(_temp137, "__call_thing")) then
      _temp144 =  _temp137(_self)

    elseif _temp137 then
      _temp144 =  _temp137
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp144 =  _self:var()
      elseif _self.var ~= nil then
        _temp144 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp144 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp144 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp141,_temp142,_temp143,_temp144)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp141,_temp142,_temp143,_temp144)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp141,_temp142,_temp143,_temp144)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp141,_temp142,_temp143,_temp144)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp136)
      if _t == "table" then
                      if _type(_temp136.walk) == "function" or (_type(_temp136.walk) == "table" and _rawget(_temp136.walk, "__call_thing")) then
        _dummy_ = _temp136:walk(_temp4,_temp146)
      elseif _temp136.walk ~= nil then
        _dummy_ = _temp136.walk

        elseif _temp136.no_undermethod ~= nil then
          _dummy_ =  _temp136:no_undermethod(string:new("walk") , _temp4,_temp146)
        else
          _error(exception:method_error(_temp136, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp136)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp146)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp136, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp136)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp146)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp136, "walk"))
      end

      elseif _temp136 == nil then
        _error(exception:null_error("_temp136", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp136))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp146 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp146 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp155 = function (_self, _temp148,_temp147)
        if _temp148 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp147 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp147 =  null(_self)

    elseif null then
      _temp147 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp147 =  _self:null()
      elseif _self.null ~= nil then
        _temp147 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp149
local _temp150 = nil
        local _t = _type(_temp148)
        if _t == "table" then
          if _rawget(_temp148, "__call_thing") == nil then
            _temp150 = _temp148
          else
                  if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp150 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp150 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp148(_self)
      end

          end
        elseif _t == "number" then
          _temp150 = _temp148
        elseif _t == "function" then
                if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp150 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp150 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp148(_self)
      end

        elseif _temp148 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp150)
      if _t == "table" then
                      if _type(_temp150.target) == "function" or (_type(_temp150.target) == "table" and _rawget(_temp150.target, "__call_thing")) then
        _temp150 = _temp150:target()
      elseif _temp150.target ~= nil then
        _temp150 = _temp150.target

        elseif _temp150.no_undermethod ~= nil then
          _temp150 =  _temp150:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp150, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp150)
      if _n.target ~= nil then
        _temp150 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp150 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp150, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp150)
      if _f.target ~= nil then
        _temp150 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp150 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp150, "target"))
      end

      elseif _temp150 == nil then
        _error(exception:null_error("_temp150", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp150))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp149 =  process(_self, _temp150)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp149 =  _self:process(_temp150)
      elseif _self.process ~= nil then
        _temp149 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp149 =  _self:no_undermethod(string:new("process") , _temp150)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp149 =  no_undermethod(_self, string:new("process") , _temp150)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp148) == "function" or (_type(_temp148) == "table" and _rawget(_temp148, "__call_thing")) then
      _temp150 =  _temp148(_self)

    elseif _temp148 then
      _temp150 =  _temp148
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp150 =  _self:node()
      elseif _self.node ~= nil then
        _temp150 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp150 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp150 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp151 = nil
    if _type(_temp149) == "function" or (_type(_temp149) == "table" and _rawget(_temp149, "__call_thing")) then
      _temp151 =  _temp149(_self)

    elseif _temp149 then
      _temp151 =  _temp149
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp151 =  _self:target()
      elseif _self.target ~= nil then
        _temp151 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp152 = nil

        if invoke_undermethod == nil then
          _temp152 = _self["invoke_undermethod"]
          if _temp152 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp152 = invoke_undermethod
        end

local _temp153 = nil
    if _type(_temp147) == "function" or (_type(_temp147) == "table" and _rawget(_temp147, "__call_thing")) then
      _temp153 =  _temp147(_self)

    elseif _temp147 then
      _temp153 =  _temp147
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp153 =  _self:var()
      elseif _self.var ~= nil then
        _temp153 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp153 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp153 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp150,_temp151,_temp152,_temp153)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp150,_temp151,_temp152,_temp153)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp150,_temp151,_temp152,_temp153)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp150,_temp151,_temp152,_temp153)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp146)
      if _t == "table" then
                      if _type(_temp146.walk) == "function" or (_type(_temp146.walk) == "table" and _rawget(_temp146.walk, "__call_thing")) then
        _dummy_ = _temp146:walk(_temp4,_temp155)
      elseif _temp146.walk ~= nil then
        _dummy_ = _temp146.walk

        elseif _temp146.no_undermethod ~= nil then
          _dummy_ =  _temp146:no_undermethod(string:new("walk") , _temp4,_temp155)
        else
          _error(exception:method_error(_temp146, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp146)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp155)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp155)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp146)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp155)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp155)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _temp146 == nil then
        _error(exception:null_error("_temp146", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp146))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp155 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp155 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp155 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp155 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp155 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp155 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp155 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp155 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp162 = function (_self, _temp156)
        if _temp156 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp157
        local _t = _type(_temp156)
        if _t == "table" then
          if _rawget(_temp156, "__call_thing") == nil then
            _temp157 = _temp156
          else
                  if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

          end
        elseif _t == "number" then
          _temp157 = _temp156
        elseif _t == "function" then
                if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

        elseif _temp156 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.value) == "function" or (_type(_temp157.value) == "table" and _rawget(_temp157.value, "__call_thing")) then
        _temp157 = _temp157:value()
      elseif _temp157.value ~= nil then
        _temp157 = _temp157.value

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.value ~= nil then
        _temp157 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.value ~= nil then
        _temp157 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end

      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.to_underf) == "function" or (_type(_temp157.to_underf) == "table" and _rawget(_temp157.to_underf, "__call_thing")) then
        _temp157 = _temp157:to_underf()
      elseif _temp157.to_underf ~= nil then
        _temp157 = _temp157.to_underf

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.to_underf ~= nil then
        _temp157 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.to_underf ~= nil then
        _temp157 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end


local _temp158 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp158 =  _temp157(_self)

    elseif _temp157 then
      _temp158 =  _temp157
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp158 =  _self:val()
      elseif _self.val ~= nil then
        _temp158 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp158 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp158 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp159 = string:new("")

local _temp160 = string:new("number")

local _temp161 = {}
_temp161[string:new("type")] = _temp160
_temp161 = hash:new(_temp161)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp158,_temp159,_temp161)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp158,_temp159,_temp161)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp158,_temp159,_temp161)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp158,_temp159,_temp161)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp155)
      if _t == "table" then
                      if _type(_temp155.walk) == "function" or (_type(_temp155.walk) == "table" and _rawget(_temp155.walk, "__call_thing")) then
        _dummy_ = _temp155:walk(_temp4,_temp162)
      elseif _temp155.walk ~= nil then
        _dummy_ = _temp155.walk

        elseif _temp155.no_undermethod ~= nil then
          _dummy_ =  _temp155:no_undermethod(string:new("walk") , _temp4,_temp162)
        else
          _error(exception:method_error(_temp155, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp155)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp162)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp162)
      else
        _error(exception:method_error(_temp155, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp155)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp162)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp162)
      else
        _error(exception:method_error(_temp155, "walk"))
      end

      elseif _temp155 == nil then
        _error(exception:null_error("_temp155", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp155))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp162 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp162 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp162 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp162 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp162 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp162 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp162 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp162 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp162 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp162 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp206 = function (_self, _temp164,_temp163)
        if _temp164 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp163 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp163 =  null(_self)

    elseif null then
      _temp163 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp163 =  _self:null()
      elseif _self.null ~= nil then
        _temp163 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp165 = nil
        local _t = _type(_temp164)
        if _t == "table" then
          if _rawget(_temp164, "__call_thing") == nil then
            _temp165 = _temp164
          else
                  if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp165 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp165 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp165 =  _temp164(_self)
      end

          end
        elseif _t == "number" then
          _temp165 = _temp164
        elseif _t == "function" then
                if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp165 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp165 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp165 =  _temp164(_self)
      end

        elseif _temp164 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165.nodes) == "function" or (_type(_temp165.nodes) == "table" and _rawget(_temp165.nodes, "__call_thing")) then
        _temp165 = _temp165:nodes()
      elseif _temp165.nodes ~= nil then
        _temp165 = _temp165.nodes

        elseif _temp165.no_undermethod ~= nil then
          _temp165 =  _temp165:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp165, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n.nodes ~= nil then
        _temp165 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp165, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f.nodes ~= nil then
        _temp165 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp165, "nodes"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("_temp165", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end

      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165.empty_question) == "function" or (_type(_temp165.empty_question) == "table" and _rawget(_temp165.empty_question, "__call_thing")) then
        _temp165 = _temp165:empty_question()
      elseif _temp165.empty_question ~= nil then
        _temp165 = _temp165.empty_question

        elseif _temp165.no_undermethod ~= nil then
          _temp165 =  _temp165:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp165, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n.empty_question ~= nil then
        _temp165 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp165, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f.empty_question ~= nil then
        _temp165 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp165, "empty?"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("_temp165", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end



local _temp170 = function (_self)

local _temp166 = nil
    if _type(_temp163) == "function" or (_type(_temp163) == "table" and _rawget(_temp163, "__call_thing")) then
      _temp166 =  _temp163(_self)

    elseif _temp163 then
      _temp166 =  _temp163
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp166 =  _self:var()
      elseif _self.var ~= nil then
        _temp166 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp166 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp166 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp167 = string:new("array:new()")

local _temp168 = string:new("array")

local _temp169 = {}
_temp169[string:new("type")] = _temp168
_temp169 = hash:new(_temp169)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp166,_temp167,_temp169)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp166,_temp167,_temp169)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp166,_temp167,_temp169)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp166,_temp167,_temp169)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp204 = function (_self)

local _temp171
local _temp172 = nil
    if _type(_temp163) == "function" or (_type(_temp163) == "table" and _rawget(_temp163, "__call_thing")) then
      _temp172 =  _temp163(_self)

    elseif _temp163 then
      _temp172 =  _temp163
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp172 =  _self:var()
      elseif _self.var ~= nil then
        _temp172 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp172 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp172 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp171 =  set_underresult(_self, _temp172)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp171 =  _self:set_underresult(_temp172)
      elseif _self.set_underresult ~= nil then
        _temp171 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("set_result") , _temp172)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("set_result") , _temp172)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp173
        local _t = _type(_temp171)
        if _t == "table" then
          if _rawget(_temp171, "__call_thing") == nil then
            _temp173 = _temp171
          else
                  if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp173 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp173 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp173 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp173 =  _temp171(_self)
      end

          end
        elseif _t == "number" then
          _temp173 = _temp171
        elseif _t == "function" then
                if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp173 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp173 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp173 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp173 =  _temp171(_self)
      end

        elseif _temp171 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp173)
      if _t == "table" then
                      if _type(_temp173.var) == "function" or (_type(_temp173.var) == "table" and _rawget(_temp173.var, "__call_thing")) then
        _temp173 = _temp173:var()
      elseif _temp173.var ~= nil then
        _temp173 = _temp173.var

        elseif _temp173.no_undermethod ~= nil then
          _temp173 =  _temp173:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp173)
      if _n.var ~= nil then
        _temp173 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp173 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp173)
      if _f.var ~= nil then
        _temp173 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp173 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp173 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp173))
      end


local _temp174
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp174 =  _self:my()
      elseif _self.my ~= nil then
        _temp174 =  _self.my

        elseif my ~= nil then
          _temp174 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp174)
      if _t == "table" then
                      if _type(_temp174.env) == "function" or (_type(_temp174.env) == "table" and _rawget(_temp174.env, "__call_thing")) then
        _temp174 = _temp174:env()
      elseif _temp174.env ~= nil then
        _temp174 = _temp174.env

        elseif _temp174.no_undermethod ~= nil then
          _temp174 =  _temp174:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp174)
      if _n.env ~= nil then
        _temp174 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp174 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp174)
      if _f.env ~= nil then
        _temp174 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp174 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp174 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp174))
      end

      local _t = _type(_temp174)
      if _t == "table" then
                      if _type(_temp174.next_undertemp) == "function" or (_type(_temp174.next_undertemp) == "table" and _rawget(_temp174.next_undertemp, "__call_thing")) then
        _temp174 = _temp174:next_undertemp()
      elseif _temp174.next_undertemp ~= nil then
        _temp174 = _temp174.next_undertemp

        elseif _temp174.no_undermethod ~= nil then
          _temp174 =  _temp174:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp174)
      if _n.next_undertemp ~= nil then
        _temp174 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp174 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp174)
      if _f.next_undertemp ~= nil then
        _temp174 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp174 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp174 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp174))
      end


local _temp175
do
local _temp176 = nil
        local _t = _type(_temp171)
        if _t == "table" then
          if _rawget(_temp171, "__call_thing") == nil then
            _temp176 = _temp171
          else
                  if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp176 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp176 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp176 =  _temp171(_self)
      end

          end
        elseif _t == "number" then
          _temp176 = _temp171
        elseif _t == "function" then
                if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp176 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp176 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp176 =  _temp171(_self)
      end

        elseif _temp171 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp176)
      if _t == "table" then
                      if _type(_temp176.out) == "function" or (_type(_temp176.out) == "table" and _rawget(_temp176.out, "__call_thing")) then
        _temp176 = _temp176:out()
      elseif _temp176.out ~= nil then
        _temp176 = _temp176.out

        elseif _temp176.no_undermethod ~= nil then
          _temp176 =  _temp176:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp176, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp176)
      if _n.out ~= nil then
        _temp176 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp176 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp176, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp176)
      if _f.out ~= nil then
        _temp176 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp176 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp176, "out"))
      end

      elseif _temp176 == nil then
        _error(exception:null_error("_temp176", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp176))
      end


local _temp177 = nil
    if _type(_temp174) == "function" or (_type(_temp174) == "table" and _rawget(_temp174, "__call_thing")) then
      _temp177 =  _temp174(_self)

    elseif _temp174 then
      _temp177 =  _temp174
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp177 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp177 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp177 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp177 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp178 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp178 =  _temp173(_self)

    elseif _temp173 then
      _temp178 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp178 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp178 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp178 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp178 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp175 = string:new("" .. _tostring(_temp176) .. "\ndo\nlocal " .. _tostring(_temp177) .. "\n" .. _tostring(_temp178) .. " = {}\n")
end

local _temp179
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp179 =  my(_self)

    elseif my then
      _temp179 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp179 =  _self:my()
      elseif _self.my ~= nil then
        _temp179 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp164)
        if _t == "table" then
          if _rawget(_temp164, "__call_thing") == nil then
            _temp172 = _temp164
          else
                  if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp172 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp172 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp164(_self)
      end

          end
        elseif _t == "number" then
          _temp172 = _temp164
        elseif _t == "function" then
                if _temp164 == nil then
              if _type(_self._temp164) == "function" or (_type(_self._temp164) == "table" and _rawget(_self._temp164, "__call_thing")) then
        _temp172 =  _self:_temp164()
      elseif _self._temp164 ~= nil then
        _temp172 =  _self._temp164

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp164"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp164(_self)
      end

        elseif _temp164 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.nodes) == "function" or (_type(_temp172.nodes) == "table" and _rawget(_temp172.nodes, "__call_thing")) then
        _temp172 = _temp172:nodes()
      elseif _temp172.nodes ~= nil then
        _temp172 = _temp172.nodes

        elseif _temp172.no_undermethod ~= nil then
          _temp172 =  _temp172:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp172, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.nodes ~= nil then
        _temp172 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp172 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp172, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.nodes ~= nil then
        _temp172 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp172 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp172, "nodes"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end


local _temp196 = function (_self, _temp180, _temp181)
        if _temp180 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp181 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp182
        local _t = _type(_temp179)
        if _t == "table" then
          if _rawget(_temp179, "__call_thing") == nil then
            _temp182 = _temp179
          else
                  if _temp179 == nil then
              if _type(_self._temp179) == "function" or (_type(_self._temp179) == "table" and _rawget(_self._temp179, "__call_thing")) then
        _temp182 =  _self:_temp179()
      elseif _self._temp179 ~= nil then
        _temp182 =  _self._temp179

        elseif _self.no_undermethod ~= nil then
          _temp182 =  _self:no_undermethod(string:new("_temp179"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp182 =  _temp179(_self)
      end

          end
        elseif _t == "number" then
          _temp182 = _temp179
        elseif _t == "function" then
                if _temp179 == nil then
              if _type(_self._temp179) == "function" or (_type(_self._temp179) == "table" and _rawget(_self._temp179, "__call_thing")) then
        _temp182 =  _self:_temp179()
      elseif _self._temp179 ~= nil then
        _temp182 =  _self._temp179

        elseif _self.no_undermethod ~= nil then
          _temp182 =  _self:no_undermethod(string:new("_temp179"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp182 =  _temp179(_self)
      end

        elseif _temp179 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp183 = nil
    if _type(_temp180) == "function" or (_type(_temp180) == "table" and _rawget(_temp180, "__call_thing")) then
      _temp183 =  _temp180(_self)

    elseif _temp180 then
      _temp183 =  _temp180
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp183 =  _self:n()
      elseif _self.n ~= nil then
        _temp183 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp184 = nil
    if _type(_temp174) == "function" or (_type(_temp174) == "table" and _rawget(_temp174, "__call_thing")) then
      _temp184 =  _temp174(_self)

    elseif _temp174 then
      _temp184 =  _temp174
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp184 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp184 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp184 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp184 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp182)
      if _t == "table" then
                      if _type(_temp182.process) == "function" or (_type(_temp182.process) == "table" and _rawget(_temp182.process, "__call_thing")) then
        _temp182 = _temp182:process(_temp183,_temp184)
      elseif _temp182.process ~= nil then
        _temp182 = _temp182.process

        elseif _temp182.no_undermethod ~= nil then
          _temp182 =  _temp182:no_undermethod(string:new("process") , _temp183,_temp184)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp182)
      if _n.process ~= nil then
        _temp182 = _n:process(_temp183,_temp184)
      elseif _n.no_undermethod ~= nil then
        _temp182 =  _n:no_undermethod(string:new("process") , _temp183,_temp184)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp182)
      if _f.process ~= nil then
        _temp182 = _f:process(_temp183,_temp184)
      elseif _f.no_undermethod ~= nil then
        _temp182 =  _f:no_undermethod(string:new("process") , _temp183,_temp184)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp182 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp182))
      end


local _temp184 
do
local _temp185 = nil
_temp185 =  _temp175

local _temp186 = nil
        local _t = _type(_temp182)
        if _t == "table" then
          if _rawget(_temp182, "__call_thing") == nil then
            _temp186 = _temp182
          else
                  if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp186 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp186 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp182(_self)
      end

          end
        elseif _t == "number" then
          _temp186 = _temp182
        elseif _t == "function" then
                if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp186 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp186 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp182(_self)
      end

        elseif _temp182 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp187 = nil
      local _t = _type(_temp186)
      if _t == "table" then
                      if _type(_temp186.out) == "function" or (_type(_temp186.out) == "table" and _rawget(_temp186.out, "__call_thing")) then
        _temp187 = _temp186:out()
      elseif _temp186.out ~= nil then
        _temp187 = _temp186.out

        elseif _temp186.no_undermethod ~= nil then
          _temp187 =  _temp186:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp186, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp186)
      if _n.out ~= nil then
        _temp187 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp186, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp186)
      if _f.out ~= nil then
        _temp187 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp186, "out"))
      end

      elseif _temp186 == nil then
        _error(exception:null_error("_temp186", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp186))
      end

local _temp188 = string:new("\n")

local _temp189 = nil
do
local _temp190 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp190 =  _temp173(_self)

    elseif _temp173 then
      _temp190 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp190 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp190 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp190 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp190 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp191 
do
local _temp192 = nil
    if _type(_temp181) == "function" or (_type(_temp181) == "table" and _rawget(_temp181, "__call_thing")) then
      _temp192 =  _temp181(_self)

    elseif _temp181 then
      _temp192 =  _temp181
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp192 =  _self:i()
      elseif _self.i ~= nil then
        _temp192 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp192 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp192 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp193
      local _t = _type(_temp192)
      if _t == "table" then
                      if _type(_temp192._plus) == "function" or (_type(_temp192._plus) == "table" and _rawget(_temp192._plus, "__call_thing")) then
        _temp193 = _temp192:_plus(1)
      elseif _temp192._plus ~= nil then
        _temp193 = _temp192._plus

        elseif _temp192.no_undermethod ~= nil then
          _temp193 =  _temp192:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp192, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp193 = _temp192 + 1
      else
              local _n = number:new(_temp192)
      if _n._plus ~= nil then
        _temp193 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp193 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp192, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp192)
      if _f._plus ~= nil then
        _temp193 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp193 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp192, "+"))
      end

      elseif _temp192 == nil then
        _error(exception:null_error("_temp192", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp192))
      end

_temp191 = _temp193 
end

local _temp194 = nil
        local _t = _type(_temp182)
        if _t == "table" then
          if _rawget(_temp182, "__call_thing") == nil then
            _temp194 = _temp182
          else
                  if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp194 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp194 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp194 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp194 =  _temp182(_self)
      end

          end
        elseif _t == "number" then
          _temp194 = _temp182
        elseif _t == "function" then
                if _temp182 == nil then
              if _type(_self._temp182) == "function" or (_type(_self._temp182) == "table" and _rawget(_self._temp182, "__call_thing")) then
        _temp194 =  _self:_temp182()
      elseif _self._temp182 ~= nil then
        _temp194 =  _self._temp182

        elseif _self.no_undermethod ~= nil then
          _temp194 =  _self:no_undermethod(string:new("_temp182"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp194 =  _temp182(_self)
      end

        elseif _temp182 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp194)
      if _t == "table" then
                      if _type(_temp194.var) == "function" or (_type(_temp194.var) == "table" and _rawget(_temp194.var, "__call_thing")) then
        _temp194 = _temp194:var()
      elseif _temp194.var ~= nil then
        _temp194 = _temp194.var

        elseif _temp194.no_undermethod ~= nil then
          _temp194 =  _temp194:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp194, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp194)
      if _n.var ~= nil then
        _temp194 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp194 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp194, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp194)
      if _f.var ~= nil then
        _temp194 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp194 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp194, "var"))
      end

      elseif _temp194 == nil then
        _error(exception:null_error("_temp194", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp194))
      end


_temp189 = string:new("" .. _tostring(_temp190) .. "[" .. _tostring(_temp191) .. "] = " .. _tostring(_temp194) .. "\n")
end
local _temp195
              if _type(_temp185._less_less) == "function" or (_type(_temp185._less_less) == "table" and _rawget(_temp185._less_less, "__call_thing")) then
        _temp195 = _temp185:_less_less(_temp187)
      elseif _temp185._less_less ~= nil then
        _temp195 = _temp185._less_less

        elseif _temp185.no_undermethod ~= nil then
          _temp195 =  _temp185:no_undermethod(string:new("<<") , _temp187)
        else
          _error(exception:method_error(_temp185, "<<"))
        end

local _temp187
      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195._less_less) == "function" or (_type(_temp195._less_less) == "table" and _rawget(_temp195._less_less, "__call_thing")) then
        _temp187 = _temp195:_less_less(_temp188)
      elseif _temp195._less_less ~= nil then
        _temp187 = _temp195._less_less

        elseif _temp195.no_undermethod ~= nil then
          _temp187 =  _temp195:no_undermethod(string:new("<<") , _temp188)
        else
          _error(exception:method_error(_temp195, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n._less_less ~= nil then
        _temp187 = _n:_less_less(_temp188)
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("<<") , _temp188)
      else
        _error(exception:method_error(_temp195, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f._less_less ~= nil then
        _temp187 = _f:_less_less(_temp188)
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("<<") , _temp188)
      else
        _error(exception:method_error(_temp195, "<<"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

local _temp188
      local _t = _type(_temp187)
      if _t == "table" then
                      if _type(_temp187._less_less) == "function" or (_type(_temp187._less_less) == "table" and _rawget(_temp187._less_less, "__call_thing")) then
        _temp188 = _temp187:_less_less(_temp189)
      elseif _temp187._less_less ~= nil then
        _temp188 = _temp187._less_less

        elseif _temp187.no_undermethod ~= nil then
          _temp188 =  _temp187:no_undermethod(string:new("<<") , _temp189)
        else
          _error(exception:method_error(_temp187, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp187)
      if _n._less_less ~= nil then
        _temp188 = _n:_less_less(_temp189)
      elseif _n.no_undermethod ~= nil then
        _temp188 =  _n:no_undermethod(string:new("<<") , _temp189)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp187)
      if _f._less_less ~= nil then
        _temp188 = _f:_less_less(_temp189)
      elseif _f.no_undermethod ~= nil then
        _temp188 =  _f:no_undermethod(string:new("<<") , _temp189)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _temp187 == nil then
        _error(exception:null_error("_temp187", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp187))
      end

_temp184 = _temp188 
end

return _temp184
end

      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.each_underwith_underindex) == "function" or (_type(_temp172.each_underwith_underindex) == "table" and _rawget(_temp172.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp172:each_underwith_underindex(_temp196)
      elseif _temp172.each_underwith_underindex ~= nil then
        _dummy_ = _temp172.each_underwith_underindex

        elseif _temp172.no_undermethod ~= nil then
          _dummy_ =  _temp172:no_undermethod(string:new("each_with_index") , _temp196)
        else
          _error(exception:method_error(_temp172, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp196)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp196)
      else
        _error(exception:method_error(_temp172, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp196)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp196)
      else
        _error(exception:method_error(_temp172, "each_with_index"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end

do
local _temp197 = nil
_temp197 =  _temp175

local _temp198 = nil
do
local _temp199 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp199 =  _temp173(_self)

    elseif _temp173 then
      _temp199 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp199 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp199 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp200 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp200 =  _temp173(_self)

    elseif _temp173 then
      _temp200 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp200 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp200 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp200 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp200 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp198 = string:new("" .. _tostring(_temp199) .. " = array:new(" .. _tostring(_temp200) .. ")\nend\n")
end
local _temp201
              if _type(_temp197._less_less) == "function" or (_type(_temp197._less_less) == "table" and _rawget(_temp197._less_less, "__call_thing")) then
        _temp201 = _temp197:_less_less(_temp198)
      elseif _temp197._less_less ~= nil then
        _temp201 = _temp197._less_less

        elseif _temp197.no_undermethod ~= nil then
          _temp201 =  _temp197:no_undermethod(string:new("<<") , _temp198)
        else
          _error(exception:method_error(_temp197, "<<"))
        end

_dummy_ = _temp201 
end

    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp196 =  _temp173(_self)

    elseif _temp173 then
      _temp196 =  _temp173
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp196 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp196 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp196 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp196 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp172 =  _temp175

local _temp202 = string:new("array")

local _temp203 = {}
_temp203[string:new("type")] = _temp202
_temp203 = hash:new(_temp203)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp196,_temp172,_temp203)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp196,_temp172,_temp203)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp196,_temp172,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp196,_temp172,_temp203)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp165,_temp170,_temp204)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp165,_temp170,_temp204)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp165,_temp170,_temp204)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp165,_temp170,_temp204)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp162)
      if _t == "table" then
                      if _type(_temp162.walk) == "function" or (_type(_temp162.walk) == "table" and _rawget(_temp162.walk, "__call_thing")) then
        _dummy_ = _temp162:walk(_temp4,_temp206)
      elseif _temp162.walk ~= nil then
        _dummy_ = _temp162.walk

        elseif _temp162.no_undermethod ~= nil then
          _dummy_ =  _temp162:no_undermethod(string:new("walk") , _temp4,_temp206)
        else
          _error(exception:method_error(_temp162, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp162)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp206)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp206)
      else
        _error(exception:method_error(_temp162, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp162)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp206)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp206)
      else
        _error(exception:method_error(_temp162, "walk"))
      end

      elseif _temp162 == nil then
        _error(exception:null_error("_temp162", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp162))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp206 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp206 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp206 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp206 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp206 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp206 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp206 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp206 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp248 = function (_self, _temp208,_temp207)
        if _temp208 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp207 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp207 =  null(_self)

    elseif null then
      _temp207 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp207 =  _self:null()
      elseif _self.null ~= nil then
        _temp207 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp209 = nil
        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp209 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp209 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp209 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp209 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp209 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp209 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.nodes) == "function" or (_type(_temp209.nodes) == "table" and _rawget(_temp209.nodes, "__call_thing")) then
        _temp209 = _temp209:nodes()
      elseif _temp209.nodes ~= nil then
        _temp209 = _temp209.nodes

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp209, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.nodes ~= nil then
        _temp209 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.nodes ~= nil then
        _temp209 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end

      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.empty_question) == "function" or (_type(_temp209.empty_question) == "table" and _rawget(_temp209.empty_question, "__call_thing")) then
        _temp209 = _temp209:empty_question()
      elseif _temp209.empty_question ~= nil then
        _temp209 = _temp209.empty_question

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp209, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.empty_question ~= nil then
        _temp209 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp209, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.empty_question ~= nil then
        _temp209 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp209, "empty?"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end



local _temp214 = function (_self)

local _temp210 = nil
    if _type(_temp207) == "function" or (_type(_temp207) == "table" and _rawget(_temp207, "__call_thing")) then
      _temp210 =  _temp207(_self)

    elseif _temp207 then
      _temp210 =  _temp207
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp210 =  _self:var()
      elseif _self.var ~= nil then
        _temp210 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp210 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp210 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp211 = string:new("hash:new()")

local _temp212 = string:new("hash")

local _temp213 = {}
_temp213[string:new("type")] = _temp212
_temp213 = hash:new(_temp213)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp210,_temp211,_temp213)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp210,_temp211,_temp213)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp210,_temp211,_temp213)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp210,_temp211,_temp213)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp246 = function (_self)

local _temp215
local _temp216 = nil
    if _type(_temp207) == "function" or (_type(_temp207) == "table" and _rawget(_temp207, "__call_thing")) then
      _temp216 =  _temp207(_self)

    elseif _temp207 then
      _temp216 =  _temp207
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp216 =  _self:var()
      elseif _self.var ~= nil then
        _temp216 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp216 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp216 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp217 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp215 =  set_underresult(_self, _temp216,_temp217)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp215 =  _self:set_underresult(_temp216,_temp217)
      elseif _self.set_underresult ~= nil then
        _temp215 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("set_result") , _temp216,_temp217)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("set_result") , _temp216,_temp217)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp218
        local _t = _type(_temp215)
        if _t == "table" then
          if _rawget(_temp215, "__call_thing") == nil then
            _temp218 = _temp215
          else
                  if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp218 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp218 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp218 =  _temp215(_self)
      end

          end
        elseif _t == "number" then
          _temp218 = _temp215
        elseif _t == "function" then
                if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp218 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp218 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp218 =  _temp215(_self)
      end

        elseif _temp215 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp218)
      if _t == "table" then
                      if _type(_temp218.var) == "function" or (_type(_temp218.var) == "table" and _rawget(_temp218.var, "__call_thing")) then
        _temp218 = _temp218:var()
      elseif _temp218.var ~= nil then
        _temp218 = _temp218.var

        elseif _temp218.no_undermethod ~= nil then
          _temp218 =  _temp218:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp218)
      if _n.var ~= nil then
        _temp218 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp218 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp218)
      if _f.var ~= nil then
        _temp218 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp218 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp218 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp218))
      end


local _temp219
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp219 =  _self:my()
      elseif _self.my ~= nil then
        _temp219 =  _self.my

        elseif my ~= nil then
          _temp219 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp219)
      if _t == "table" then
                      if _type(_temp219.env) == "function" or (_type(_temp219.env) == "table" and _rawget(_temp219.env, "__call_thing")) then
        _temp219 = _temp219:env()
      elseif _temp219.env ~= nil then
        _temp219 = _temp219.env

        elseif _temp219.no_undermethod ~= nil then
          _temp219 =  _temp219:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp219)
      if _n.env ~= nil then
        _temp219 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp219 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp219)
      if _f.env ~= nil then
        _temp219 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp219 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp219 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp219))
      end

      local _t = _type(_temp219)
      if _t == "table" then
                      if _type(_temp219.next_undertemp) == "function" or (_type(_temp219.next_undertemp) == "table" and _rawget(_temp219.next_undertemp, "__call_thing")) then
        _temp219 = _temp219:next_undertemp()
      elseif _temp219.next_undertemp ~= nil then
        _temp219 = _temp219.next_undertemp

        elseif _temp219.no_undermethod ~= nil then
          _temp219 =  _temp219:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp219)
      if _n.next_undertemp ~= nil then
        _temp219 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp219 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp219)
      if _f.next_undertemp ~= nil then
        _temp219 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp219 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp219 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp219))
      end


local _temp220
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp220 =  _self:my()
      elseif _self.my ~= nil then
        _temp220 =  _self.my

        elseif my ~= nil then
          _temp220 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.env) == "function" or (_type(_temp220.env) == "table" and _rawget(_temp220.env, "__call_thing")) then
        _temp220 = _temp220:env()
      elseif _temp220.env ~= nil then
        _temp220 = _temp220.env

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.env ~= nil then
        _temp220 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.env ~= nil then
        _temp220 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end

      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.next_undertemp) == "function" or (_type(_temp220.next_undertemp) == "table" and _rawget(_temp220.next_undertemp, "__call_thing")) then
        _temp220 = _temp220:next_undertemp()
      elseif _temp220.next_undertemp ~= nil then
        _temp220 = _temp220.next_undertemp

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.next_undertemp ~= nil then
        _temp220 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.next_undertemp ~= nil then
        _temp220 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end


local _temp221
do
local _temp222 = nil
        local _t = _type(_temp215)
        if _t == "table" then
          if _rawget(_temp215, "__call_thing") == nil then
            _temp222 = _temp215
          else
                  if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp222 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp222 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp222 =  _temp215(_self)
      end

          end
        elseif _t == "number" then
          _temp222 = _temp215
        elseif _t == "function" then
                if _temp215 == nil then
              if _type(_self._temp215) == "function" or (_type(_self._temp215) == "table" and _rawget(_self._temp215, "__call_thing")) then
        _temp222 =  _self:_temp215()
      elseif _self._temp215 ~= nil then
        _temp222 =  _self._temp215

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp215"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp222 =  _temp215(_self)
      end

        elseif _temp215 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp222)
      if _t == "table" then
                      if _type(_temp222.out) == "function" or (_type(_temp222.out) == "table" and _rawget(_temp222.out, "__call_thing")) then
        _temp222 = _temp222:out()
      elseif _temp222.out ~= nil then
        _temp222 = _temp222.out

        elseif _temp222.no_undermethod ~= nil then
          _temp222 =  _temp222:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp222, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp222)
      if _n.out ~= nil then
        _temp222 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp222 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp222, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp222)
      if _f.out ~= nil then
        _temp222 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp222 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp222, "out"))
      end

      elseif _temp222 == nil then
        _error(exception:null_error("_temp222", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp222))
      end


local _temp223 = nil
    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp223 =  _temp219(_self)

    elseif _temp219 then
      _temp223 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp223 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp223 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp224 = nil
    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp224 =  _temp220(_self)

    elseif _temp220 then
      _temp224 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp224 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp224 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp224 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp224 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp221 = string:new("" .. _tostring(_temp222) .. "\ndo\nlocal " .. _tostring(_temp223) .. ";local " .. _tostring(_temp224) .. "\n")
end

local _temp225
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp225 =  my(_self)

    elseif my then
      _temp225 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp225 =  _self:my()
      elseif _self.my ~= nil then
        _temp225 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp225 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp225 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp217 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp217 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp217 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp217 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp217 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp217 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp217 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp217 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.nodes) == "function" or (_type(_temp217.nodes) == "table" and _rawget(_temp217.nodes, "__call_thing")) then
        _temp217 = _temp217:nodes()
      elseif _temp217.nodes ~= nil then
        _temp217 = _temp217.nodes

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp217, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.nodes ~= nil then
        _temp217 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp217, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.nodes ~= nil then
        _temp217 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp217, "nodes"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end


local _temp239 = function (_self, _temp226)
        if _temp226 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp227
        local _t = _type(_temp225)
        if _t == "table" then
          if _rawget(_temp225, "__call_thing") == nil then
            _temp227 = _temp225
          else
                  if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp227 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp227 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp227 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp227 =  _temp225(_self)
      end

          end
        elseif _t == "number" then
          _temp227 = _temp225
        elseif _t == "function" then
                if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp227 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp227 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp227 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp227 =  _temp225(_self)
      end

        elseif _temp225 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp228 = nil
        local _t = _type(_temp226)
        if _t == "table" then
          if _rawget(_temp226, "__call_thing") == nil then
            _temp228 = _temp226
          else
                  if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp228 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp228 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp228 =  _temp226(_self)
      end

          end
        elseif _t == "number" then
          _temp228 = _temp226
        elseif _t == "function" then
                if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp228 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp228 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp228 =  _temp226(_self)
      end

        elseif _temp226 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp228)
      if _t == "table" then
                      if _type(_temp228.first) == "function" or (_type(_temp228.first) == "table" and _rawget(_temp228.first, "__call_thing")) then
        _temp228 = _temp228:first()
      elseif _temp228.first ~= nil then
        _temp228 = _temp228.first

        elseif _temp228.no_undermethod ~= nil then
          _temp228 =  _temp228:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp228, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp228)
      if _n.first ~= nil then
        _temp228 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp228 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp228, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp228)
      if _f.first ~= nil then
        _temp228 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp228 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp228, "first"))
      end

      elseif _temp228 == nil then
        _error(exception:null_error("_temp228", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp228))
      end


local _temp229 = nil
    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp229 =  _temp219(_self)

    elseif _temp219 then
      _temp229 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp229 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp229 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp229 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp229 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp227)
      if _t == "table" then
                      if _type(_temp227.process) == "function" or (_type(_temp227.process) == "table" and _rawget(_temp227.process, "__call_thing")) then
        _temp227 = _temp227:process(_temp228,_temp229)
      elseif _temp227.process ~= nil then
        _temp227 = _temp227.process

        elseif _temp227.no_undermethod ~= nil then
          _temp227 =  _temp227:no_undermethod(string:new("process") , _temp228,_temp229)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp227)
      if _n.process ~= nil then
        _temp227 = _n:process(_temp228,_temp229)
      elseif _n.no_undermethod ~= nil then
        _temp227 =  _n:no_undermethod(string:new("process") , _temp228,_temp229)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp227)
      if _f.process ~= nil then
        _temp227 = _f:process(_temp228,_temp229)
      elseif _f.no_undermethod ~= nil then
        _temp227 =  _f:no_undermethod(string:new("process") , _temp228,_temp229)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp227 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp227))
      end


local _temp230
        local _t = _type(_temp225)
        if _t == "table" then
          if _rawget(_temp225, "__call_thing") == nil then
            _temp230 = _temp225
          else
                  if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp230 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp230 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp230 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp230 =  _temp225(_self)
      end

          end
        elseif _t == "number" then
          _temp230 = _temp225
        elseif _t == "function" then
                if _temp225 == nil then
              if _type(_self._temp225) == "function" or (_type(_self._temp225) == "table" and _rawget(_self._temp225, "__call_thing")) then
        _temp230 =  _self:_temp225()
      elseif _self._temp225 ~= nil then
        _temp230 =  _self._temp225

        elseif _self.no_undermethod ~= nil then
          _temp230 =  _self:no_undermethod(string:new("_temp225"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp230 =  _temp225(_self)
      end

        elseif _temp225 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp226)
        if _t == "table" then
          if _rawget(_temp226, "__call_thing") == nil then
            _temp229 = _temp226
          else
                  if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp229 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp229 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp229 =  _temp226(_self)
      end

          end
        elseif _t == "number" then
          _temp229 = _temp226
        elseif _t == "function" then
                if _temp226 == nil then
              if _type(_self._temp226) == "function" or (_type(_self._temp226) == "table" and _rawget(_self._temp226, "__call_thing")) then
        _temp229 =  _self:_temp226()
      elseif _self._temp226 ~= nil then
        _temp229 =  _self._temp226

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp226"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp229 =  _temp226(_self)
      end

        elseif _temp226 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp229)
      if _t == "table" then
                      if _type(_temp229.last) == "function" or (_type(_temp229.last) == "table" and _rawget(_temp229.last, "__call_thing")) then
        _temp229 = _temp229:last()
      elseif _temp229.last ~= nil then
        _temp229 = _temp229.last

        elseif _temp229.no_undermethod ~= nil then
          _temp229 =  _temp229:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp229, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp229)
      if _n.last ~= nil then
        _temp229 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp229 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp229, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp229)
      if _f.last ~= nil then
        _temp229 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp229 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp229, "last"))
      end

      elseif _temp229 == nil then
        _error(exception:null_error("_temp229", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp229))
      end


    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp228 =  _temp220(_self)

    elseif _temp220 then
      _temp228 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp228 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp228 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp228 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp228 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp230)
      if _t == "table" then
                      if _type(_temp230.process) == "function" or (_type(_temp230.process) == "table" and _rawget(_temp230.process, "__call_thing")) then
        _temp230 = _temp230:process(_temp229,_temp228)
      elseif _temp230.process ~= nil then
        _temp230 = _temp230.process

        elseif _temp230.no_undermethod ~= nil then
          _temp230 =  _temp230:no_undermethod(string:new("process") , _temp229,_temp228)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp230)
      if _n.process ~= nil then
        _temp230 = _n:process(_temp229,_temp228)
      elseif _n.no_undermethod ~= nil then
        _temp230 =  _n:no_undermethod(string:new("process") , _temp229,_temp228)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp230)
      if _f.process ~= nil then
        _temp230 = _f:process(_temp229,_temp228)
      elseif _f.no_undermethod ~= nil then
        _temp230 =  _f:no_undermethod(string:new("process") , _temp229,_temp228)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp230 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp230))
      end


local _temp228 
do
local _temp231 = nil
_temp231 =  _temp221

local _temp232 = nil
do
local _temp233 = nil
        local _t = _type(_temp227)
        if _t == "table" then
          if _rawget(_temp227, "__call_thing") == nil then
            _temp233 = _temp227
          else
                  if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp233 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp233 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp233 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp233 =  _temp227(_self)
      end

          end
        elseif _t == "number" then
          _temp233 = _temp227
        elseif _t == "function" then
                if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp233 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp233 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp233 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp233 =  _temp227(_self)
      end

        elseif _temp227 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp233)
      if _t == "table" then
                      if _type(_temp233.out) == "function" or (_type(_temp233.out) == "table" and _rawget(_temp233.out, "__call_thing")) then
        _temp233 = _temp233:out()
      elseif _temp233.out ~= nil then
        _temp233 = _temp233.out

        elseif _temp233.no_undermethod ~= nil then
          _temp233 =  _temp233:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp233, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp233)
      if _n.out ~= nil then
        _temp233 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp233 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp233, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp233)
      if _f.out ~= nil then
        _temp233 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp233 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp233, "out"))
      end

      elseif _temp233 == nil then
        _error(exception:null_error("_temp233", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp233))
      end


local _temp234 = nil
        local _t = _type(_temp230)
        if _t == "table" then
          if _rawget(_temp230, "__call_thing") == nil then
            _temp234 = _temp230
          else
                  if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp234 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp234 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp234 =  _temp230(_self)
      end

          end
        elseif _t == "number" then
          _temp234 = _temp230
        elseif _t == "function" then
                if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp234 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp234 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp234 =  _temp230(_self)
      end

        elseif _temp230 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp234)
      if _t == "table" then
                      if _type(_temp234.out) == "function" or (_type(_temp234.out) == "table" and _rawget(_temp234.out, "__call_thing")) then
        _temp234 = _temp234:out()
      elseif _temp234.out ~= nil then
        _temp234 = _temp234.out

        elseif _temp234.no_undermethod ~= nil then
          _temp234 =  _temp234:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp234, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp234)
      if _n.out ~= nil then
        _temp234 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp234 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp234, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp234)
      if _f.out ~= nil then
        _temp234 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp234 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp234, "out"))
      end

      elseif _temp234 == nil then
        _error(exception:null_error("_temp234", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp234))
      end


local _temp235 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp235 =  _temp218(_self)

    elseif _temp218 then
      _temp235 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp235 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp235 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp235 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp235 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp236 = nil
        local _t = _type(_temp227)
        if _t == "table" then
          if _rawget(_temp227, "__call_thing") == nil then
            _temp236 = _temp227
          else
                  if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp236 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp236 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp236 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp236 =  _temp227(_self)
      end

          end
        elseif _t == "number" then
          _temp236 = _temp227
        elseif _t == "function" then
                if _temp227 == nil then
              if _type(_self._temp227) == "function" or (_type(_self._temp227) == "table" and _rawget(_self._temp227, "__call_thing")) then
        _temp236 =  _self:_temp227()
      elseif _self._temp227 ~= nil then
        _temp236 =  _self._temp227

        elseif _self.no_undermethod ~= nil then
          _temp236 =  _self:no_undermethod(string:new("_temp227"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp236 =  _temp227(_self)
      end

        elseif _temp227 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp236)
      if _t == "table" then
                      if _type(_temp236.var) == "function" or (_type(_temp236.var) == "table" and _rawget(_temp236.var, "__call_thing")) then
        _temp236 = _temp236:var()
      elseif _temp236.var ~= nil then
        _temp236 = _temp236.var

        elseif _temp236.no_undermethod ~= nil then
          _temp236 =  _temp236:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp236, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp236)
      if _n.var ~= nil then
        _temp236 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp236 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp236, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp236)
      if _f.var ~= nil then
        _temp236 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp236 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp236, "var"))
      end

      elseif _temp236 == nil then
        _error(exception:null_error("_temp236", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp236))
      end


local _temp237 = nil
        local _t = _type(_temp230)
        if _t == "table" then
          if _rawget(_temp230, "__call_thing") == nil then
            _temp237 = _temp230
          else
                  if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp237 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp237 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp237 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp237 =  _temp230(_self)
      end

          end
        elseif _t == "number" then
          _temp237 = _temp230
        elseif _t == "function" then
                if _temp230 == nil then
              if _type(_self._temp230) == "function" or (_type(_self._temp230) == "table" and _rawget(_self._temp230, "__call_thing")) then
        _temp237 =  _self:_temp230()
      elseif _self._temp230 ~= nil then
        _temp237 =  _self._temp230

        elseif _self.no_undermethod ~= nil then
          _temp237 =  _self:no_undermethod(string:new("_temp230"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp237 =  _temp230(_self)
      end

        elseif _temp230 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp237)
      if _t == "table" then
                      if _type(_temp237.var) == "function" or (_type(_temp237.var) == "table" and _rawget(_temp237.var, "__call_thing")) then
        _temp237 = _temp237:var()
      elseif _temp237.var ~= nil then
        _temp237 = _temp237.var

        elseif _temp237.no_undermethod ~= nil then
          _temp237 =  _temp237:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp237, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp237)
      if _n.var ~= nil then
        _temp237 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp237 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp237, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp237)
      if _f.var ~= nil then
        _temp237 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp237 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp237, "var"))
      end

      elseif _temp237 == nil then
        _error(exception:null_error("_temp237", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp237))
      end


_temp232 = string:new("" .. _tostring(_temp233) .. "\n" .. _tostring(_temp234) .. "\n" .. _tostring(_temp235) .. "[" .. _tostring(_temp236) .. "] = " .. _tostring(_temp237) .. "\n")
end
local _temp238
              if _type(_temp231._less_less) == "function" or (_type(_temp231._less_less) == "table" and _rawget(_temp231._less_less, "__call_thing")) then
        _temp238 = _temp231:_less_less(_temp232)
      elseif _temp231._less_less ~= nil then
        _temp238 = _temp231._less_less

        elseif _temp231.no_undermethod ~= nil then
          _temp238 =  _temp231:no_undermethod(string:new("<<") , _temp232)
        else
          _error(exception:method_error(_temp231, "<<"))
        end

_temp228 = _temp238 
end

return _temp228
end

      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.each) == "function" or (_type(_temp217.each) == "table" and _rawget(_temp217.each, "__call_thing")) then
        _dummy_ = _temp217:each(_temp239)
      elseif _temp217.each ~= nil then
        _dummy_ = _temp217.each

        elseif _temp217.no_undermethod ~= nil then
          _dummy_ =  _temp217:no_undermethod(string:new("each") , _temp239)
        else
          _error(exception:method_error(_temp217, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp239)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp239)
      else
        _error(exception:method_error(_temp217, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp239)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp239)
      else
        _error(exception:method_error(_temp217, "each"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp239 =  _self:my()
      elseif _self.my ~= nil then
        _temp239 =  _self.my

        elseif my ~= nil then
          _temp239 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp239)
      if _t == "table" then
                      if _type(_temp239.env) == "function" or (_type(_temp239.env) == "table" and _rawget(_temp239.env, "__call_thing")) then
        _temp239 = _temp239:env()
      elseif _temp239.env ~= nil then
        _temp239 = _temp239.env

        elseif _temp239.no_undermethod ~= nil then
          _temp239 =  _temp239:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp239, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp239)
      if _n.env ~= nil then
        _temp239 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp239 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp239, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp239)
      if _f.env ~= nil then
        _temp239 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp239 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp239, "env"))
      end

      elseif _temp239 == nil then
        _error(exception:null_error("_temp239", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp239))
      end

    if _type(_temp219) == "function" or (_type(_temp219) == "table" and _rawget(_temp219, "__call_thing")) then
      _temp217 =  _temp219(_self)

    elseif _temp219 then
      _temp217 =  _temp219
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp217 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp217 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp239)
      if _t == "table" then
                      if _type(_temp239.unset) == "function" or (_type(_temp239.unset) == "table" and _rawget(_temp239.unset, "__call_thing")) then
        _dummy_ = _temp239:unset(_temp217)
      elseif _temp239.unset ~= nil then
        _dummy_ = _temp239.unset

        elseif _temp239.no_undermethod ~= nil then
          _dummy_ =  _temp239:no_undermethod(string:new("unset") , _temp217)
        else
          _error(exception:method_error(_temp239, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp239)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp217)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp239, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp239)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp217)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp239, "unset"))
      end

      elseif _temp239 == nil then
        _error(exception:null_error("_temp239", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp239))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp217 =  _self:my()
      elseif _self.my ~= nil then
        _temp217 =  _self.my

        elseif my ~= nil then
          _temp217 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.env) == "function" or (_type(_temp217.env) == "table" and _rawget(_temp217.env, "__call_thing")) then
        _temp217 = _temp217:env()
      elseif _temp217.env ~= nil then
        _temp217 = _temp217.env

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp217, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.env ~= nil then
        _temp217 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.env ~= nil then
        _temp217 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp239 =  _temp220(_self)

    elseif _temp220 then
      _temp239 =  _temp220
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp239 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp239 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp239 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp239 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.unset) == "function" or (_type(_temp217.unset) == "table" and _rawget(_temp217.unset, "__call_thing")) then
        _dummy_ = _temp217:unset(_temp239)
      elseif _temp217.unset ~= nil then
        _dummy_ = _temp217.unset

        elseif _temp217.no_undermethod ~= nil then
          _dummy_ =  _temp217:no_undermethod(string:new("unset") , _temp239)
        else
          _error(exception:method_error(_temp217, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp239)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp239)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp239)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp239)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

do
local _temp240 = nil
_temp240 =  _temp221

local _temp241 = nil
do
local _temp242 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp242 =  _temp218(_self)

    elseif _temp218 then
      _temp242 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp242 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp242 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp242 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp242 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp243 = nil
    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp243 =  _temp218(_self)

    elseif _temp218 then
      _temp243 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp243 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp243 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp243 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp243 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp241 = string:new("\n" .. _tostring(_temp242) .. " = hash:new(" .. _tostring(_temp243) .. ")\nend\n")
end
local _temp244
              if _type(_temp240._less_less) == "function" or (_type(_temp240._less_less) == "table" and _rawget(_temp240._less_less, "__call_thing")) then
        _temp244 = _temp240:_less_less(_temp241)
      elseif _temp240._less_less ~= nil then
        _temp244 = _temp240._less_less

        elseif _temp240.no_undermethod ~= nil then
          _temp244 =  _temp240:no_undermethod(string:new("<<") , _temp241)
        else
          _error(exception:method_error(_temp240, "<<"))
        end

_dummy_ = _temp244 
end

    if _type(_temp218) == "function" or (_type(_temp218) == "table" and _rawget(_temp218, "__call_thing")) then
      _temp239 =  _temp218(_self)

    elseif _temp218 then
      _temp239 =  _temp218
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp239 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp239 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp239 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp239 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp217 =  _temp221

_temp216 = string:new("hash")

local _temp245 = {}
_temp245[string:new("type")] = _temp216
_temp245 = hash:new(_temp245)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp239,_temp217,_temp245)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp239,_temp217,_temp245)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp239,_temp217,_temp245)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp239,_temp217,_temp245)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp209,_temp214,_temp246)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp209,_temp214,_temp246)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp209,_temp214,_temp246)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp209,_temp214,_temp246)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp206)
      if _t == "table" then
                      if _type(_temp206.walk) == "function" or (_type(_temp206.walk) == "table" and _rawget(_temp206.walk, "__call_thing")) then
        _dummy_ = _temp206:walk(_temp4,_temp248)
      elseif _temp206.walk ~= nil then
        _dummy_ = _temp206.walk

        elseif _temp206.no_undermethod ~= nil then
          _dummy_ =  _temp206:no_undermethod(string:new("walk") , _temp4,_temp248)
        else
          _error(exception:method_error(_temp206, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp206)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp248)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp248)
      else
        _error(exception:method_error(_temp206, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp206)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp248)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp248)
      else
        _error(exception:method_error(_temp206, "walk"))
      end

      elseif _temp206 == nil then
        _error(exception:null_error("_temp206", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp206))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp248 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp248 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp248 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp248 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp248 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp248 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp248 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp248 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp265 = function (_self, _temp250,_temp249)
        if _temp250 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp249 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp249 =  null(_self)

    elseif null then
      _temp249 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp249 =  _self:null()
      elseif _self.null ~= nil then
        _temp249 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp249 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp249 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp251 = nil
        local _t = _type(_temp250)
        if _t == "table" then
          if _rawget(_temp250, "__call_thing") == nil then
            _temp251 = _temp250
          else
                  if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp251 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp251 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp251 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp251 =  _temp250(_self)
      end

          end
        elseif _t == "number" then
          _temp251 = _temp250
        elseif _t == "function" then
                if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp251 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp251 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp251 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp251 =  _temp250(_self)
      end

        elseif _temp250 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp251)
      if _t == "table" then
                      if _type(_temp251.nodes) == "function" or (_type(_temp251.nodes) == "table" and _rawget(_temp251.nodes, "__call_thing")) then
        _temp251 = _temp251:nodes()
      elseif _temp251.nodes ~= nil then
        _temp251 = _temp251.nodes

        elseif _temp251.no_undermethod ~= nil then
          _temp251 =  _temp251:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp251, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp251)
      if _n.nodes ~= nil then
        _temp251 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp251 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp251, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp251)
      if _f.nodes ~= nil then
        _temp251 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp251 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp251, "nodes"))
      end

      elseif _temp251 == nil then
        _error(exception:null_error("_temp251", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp251))
      end

      local _t = _type(_temp251)
      if _t == "table" then
                      if _type(_temp251.empty_question) == "function" or (_type(_temp251.empty_question) == "table" and _rawget(_temp251.empty_question, "__call_thing")) then
        _temp251 = _temp251:empty_question()
      elseif _temp251.empty_question ~= nil then
        _temp251 = _temp251.empty_question

        elseif _temp251.no_undermethod ~= nil then
          _temp251 =  _temp251:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp251, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp251)
      if _n.empty_question ~= nil then
        _temp251 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp251 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp251, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp251)
      if _f.empty_question ~= nil then
        _temp251 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp251 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp251, "empty?"))
      end

      elseif _temp251 == nil then
        _error(exception:null_error("_temp251", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp251))
      end



local _temp256 = function (_self)

local _temp252 = nil
    if _type(_temp249) == "function" or (_type(_temp249) == "table" and _rawget(_temp249, "__call_thing")) then
      _temp252 =  _temp249(_self)

    elseif _temp249 then
      _temp252 =  _temp249
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp252 =  _self:var()
      elseif _self.var ~= nil then
        _temp252 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp252 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp252 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp253 = string:new("string:new(\"\")")

local _temp254 = string:new("string")

local _temp255 = {}
_temp255[string:new("type")] = _temp254
_temp255 = hash:new(_temp255)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp252,_temp253,_temp255)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp252,_temp253,_temp255)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp252,_temp253,_temp255)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp252,_temp253,_temp255)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp263 = function (_self)

local _temp257 = nil
    if _type(_temp249) == "function" or (_type(_temp249) == "table" and _rawget(_temp249, "__call_thing")) then
      _temp257 =  _temp249(_self)

    elseif _temp249 then
      _temp257 =  _temp249
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp257 =  _self:var()
      elseif _self.var ~= nil then
        _temp257 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp257 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp257 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp258 = nil
do
local _temp259 = nil
local _temp260 = nil
        local _t = _type(_temp250)
        if _t == "table" then
          if _rawget(_temp250, "__call_thing") == nil then
            _temp260 = _temp250
          else
                  if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp260 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp260 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp260 =  _temp250(_self)
      end

          end
        elseif _t == "number" then
          _temp260 = _temp250
        elseif _t == "function" then
                if _temp250 == nil then
              if _type(_self._temp250) == "function" or (_type(_self._temp250) == "table" and _rawget(_self._temp250, "__call_thing")) then
        _temp260 =  _self:_temp250()
      elseif _self._temp250 ~= nil then
        _temp260 =  _self._temp250

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp250"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp260 =  _temp250(_self)
      end

        elseif _temp250 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp260)
      if _t == "table" then
                      if _type(_temp260.value) == "function" or (_type(_temp260.value) == "table" and _rawget(_temp260.value, "__call_thing")) then
        _temp260 = _temp260:value()
      elseif _temp260.value ~= nil then
        _temp260 = _temp260.value

        elseif _temp260.no_undermethod ~= nil then
          _temp260 =  _temp260:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp260, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp260)
      if _n.value ~= nil then
        _temp260 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp260 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp260, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp260)
      if _f.value ~= nil then
        _temp260 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp260 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp260, "value"))
      end

      elseif _temp260 == nil then
        _error(exception:null_error("_temp260", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp260))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp259 =  escape_understring(_self, _temp260)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp259 =  _self:escape_understring(_temp260)
      elseif _self.escape_understring ~= nil then
        _temp259 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp259 =  _self:no_undermethod(string:new("escape_string") , _temp260)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp259 =  no_undermethod(_self, string:new("escape_string") , _temp260)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp258 = string:new("string:new(\"" .. _tostring(_temp259) .. "\")")
end

local _temp261 = string:new("string")

local _temp262 = {}
_temp262[string:new("type")] = _temp261
_temp262 = hash:new(_temp262)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp257,_temp258,_temp262)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp257,_temp258,_temp262)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp257,_temp258,_temp262)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp257,_temp258,_temp262)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp251,_temp256,_temp263)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp251,_temp256,_temp263)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp251,_temp256,_temp263)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp251,_temp256,_temp263)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp248)
      if _t == "table" then
                      if _type(_temp248.walk) == "function" or (_type(_temp248.walk) == "table" and _rawget(_temp248.walk, "__call_thing")) then
        _dummy_ = _temp248:walk(_temp4,_temp265)
      elseif _temp248.walk ~= nil then
        _dummy_ = _temp248.walk

        elseif _temp248.no_undermethod ~= nil then
          _dummy_ =  _temp248:no_undermethod(string:new("walk") , _temp4,_temp265)
        else
          _error(exception:method_error(_temp248, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp248)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp265)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp265)
      else
        _error(exception:method_error(_temp248, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp248)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp265)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp265)
      else
        _error(exception:method_error(_temp248, "walk"))
      end

      elseif _temp248 == nil then
        _error(exception:null_error("_temp248", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp248))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp265 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp265 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp265 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp265 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp265 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp265 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp265 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp265 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp265 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp265 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp275 = function (_self, _temp267,_temp266)
        if _temp267 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp266 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp266 =  null(_self)

    elseif null then
      _temp266 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp266 =  _self:null()
      elseif _self.null ~= nil then
        _temp266 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp266 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp266 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp268 = nil
    if _type(_temp266) == "function" or (_type(_temp266) == "table" and _rawget(_temp266, "__call_thing")) then
      _temp268 =  _temp266(_self)

    elseif _temp266 then
      _temp268 =  _temp266
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp268 =  _self:var()
      elseif _self.var ~= nil then
        _temp268 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp268 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp268 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp269 = nil
do
local _temp270 = nil
        local _t = _type(_temp267)
        if _t == "table" then
          if _rawget(_temp267, "__call_thing") == nil then
            _temp270 = _temp267
          else
                  if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp270 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp270 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp270 =  _temp267(_self)
      end

          end
        elseif _t == "number" then
          _temp270 = _temp267
        elseif _t == "function" then
                if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp270 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp270 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp270 =  _temp267(_self)
      end

        elseif _temp267 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.value) == "function" or (_type(_temp270.value) == "table" and _rawget(_temp270.value, "__call_thing")) then
        _temp270 = _temp270:value()
      elseif _temp270.value ~= nil then
        _temp270 = _temp270.value

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp270, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.value ~= nil then
        _temp270 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp270, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.value ~= nil then
        _temp270 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp270, "value"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("_temp270", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end

local _temp271 = regex:new("\\n")

local _temp272 = string:new("\\n")

      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.sub) == "function" or (_type(_temp270.sub) == "table" and _rawget(_temp270.sub, "__call_thing")) then
        _temp270 = _temp270:sub(_temp271,_temp272)
      elseif _temp270.sub ~= nil then
        _temp270 = _temp270.sub

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("sub") , _temp271,_temp272)
        else
          _error(exception:method_error(_temp270, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.sub ~= nil then
        _temp270 = _n:sub(_temp271,_temp272)
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("sub") , _temp271,_temp272)
      else
        _error(exception:method_error(_temp270, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.sub ~= nil then
        _temp270 = _f:sub(_temp271,_temp272)
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("sub") , _temp271,_temp272)
      else
        _error(exception:method_error(_temp270, "sub"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("_temp270", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end


_temp269 = string:new("string:new('" .. _tostring(_temp270) .. "')")
end

local _temp273 = string:new("string")

local _temp274 = {}
_temp274[string:new("type")] = _temp273
_temp274 = hash:new(_temp274)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp268,_temp269,_temp274)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp268,_temp269,_temp274)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp268,_temp269,_temp274)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp268,_temp269,_temp274)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp265)
      if _t == "table" then
                      if _type(_temp265.walk) == "function" or (_type(_temp265.walk) == "table" and _rawget(_temp265.walk, "__call_thing")) then
        _dummy_ = _temp265:walk(_temp4,_temp275)
      elseif _temp265.walk ~= nil then
        _dummy_ = _temp265.walk

        elseif _temp265.no_undermethod ~= nil then
          _dummy_ =  _temp265:no_undermethod(string:new("walk") , _temp4,_temp275)
        else
          _error(exception:method_error(_temp265, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp265)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp275)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp275)
      else
        _error(exception:method_error(_temp265, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp265)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp275)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp275)
      else
        _error(exception:method_error(_temp265, "walk"))
      end

      elseif _temp265 == nil then
        _error(exception:null_error("_temp265", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp265))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp275 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp275 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp275 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp275 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp275 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp275 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp275 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp275 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp282 = function (_self, _temp277,_temp276)
        if _temp277 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp276 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp276 =  null(_self)

    elseif null then
      _temp276 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp276 =  _self:null()
      elseif _self.null ~= nil then
        _temp276 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp276 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp276 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp278
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp278 =  my(_self)

    elseif my then
      _temp278 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp278 =  _self:my()
      elseif _self.my ~= nil then
        _temp278 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp278 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp278 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp279 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp279 =  _self:my()
      elseif _self.my ~= nil then
        _temp279 =  _self.my

        elseif my ~= nil then
          _temp279 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.env) == "function" or (_type(_temp279.env) == "table" and _rawget(_temp279.env, "__call_thing")) then
        _temp279 = _temp279:env()
      elseif _temp279.env ~= nil then
        _temp279 = _temp279.env

        elseif _temp279.no_undermethod ~= nil then
          _temp279 =  _temp279:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp279, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.env ~= nil then
        _temp279 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp279 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.env ~= nil then
        _temp279 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp279 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.new_underscope) == "function" or (_type(_temp279.new_underscope) == "table" and _rawget(_temp279.new_underscope, "__call_thing")) then
        _dummy_ = _temp279:new_underscope()
      elseif _temp279.new_underscope ~= nil then
        _dummy_ = _temp279.new_underscope

        elseif _temp279.no_undermethod ~= nil then
          _dummy_ =  _temp279:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp279, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp279, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp279, "new_scope"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

local _temp280
    if _type(_temp277) == "function" or (_type(_temp277) == "table" and _rawget(_temp277, "__call_thing")) then
      _temp279 =  _temp277(_self)

    elseif _temp277 then
      _temp279 =  _temp277
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp279 =  _self:node()
      elseif _self.node ~= nil then
        _temp279 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp280 =  do_underargs(_self, _temp279)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp280 =  _self:do_underargs(_temp279)
      elseif _self.do_underargs ~= nil then
        _temp280 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp280 =  _self:no_undermethod(string:new("do_args") , _temp279)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp280 =  no_undermethod(_self, string:new("do_args") , _temp279)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp281
    if _type(_temp276) == "function" or (_type(_temp276) == "table" and _rawget(_temp276, "__call_thing")) then
      _temp279 =  _temp276(_self)

    elseif _temp276 then
      _temp279 =  _temp276
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp279 =  _self:var()
      elseif _self.var ~= nil then
        _temp279 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp282 = nil
do
local _temp283
do
    if _type(_temp280) == "function" or (_type(_temp280) == "table" and _rawget(_temp280, "__call_thing")) then
      _temp283 =  _temp280(_self)

    elseif _temp280 then
      _temp283 =  _temp280
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp283 =  _self:args()
      elseif _self.args ~= nil then
        _temp283 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp283 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp283 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp284 = string:new("arg_list")


_temp283 = _temp283:get(_temp284)
end

_temp282 = string:new("function(" .. _tostring(_temp283) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp281 =  set_underresult(_self, _temp279,_temp282)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp281 =  _self:set_underresult(_temp279,_temp282)
      elseif _self.set_underresult ~= nil then
        _temp281 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp281 =  _self:no_undermethod(string:new("set_result") , _temp279,_temp282)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp281 =  no_undermethod(_self, string:new("set_result") , _temp279,_temp282)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp285 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp285 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp285 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp285 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp285 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp285 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp285 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp285 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp285 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp285 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp285 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp286 = nil
      local _t = _type(_temp285)
      if _t == "table" then
                      if _type(_temp285.out) == "function" or (_type(_temp285.out) == "table" and _rawget(_temp285.out, "__call_thing")) then
        _temp286 = _temp285:out()
      elseif _temp285.out ~= nil then
        _temp286 = _temp285.out

        elseif _temp285.no_undermethod ~= nil then
          _temp286 =  _temp285:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp285, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp285)
      if _n.out ~= nil then
        _temp286 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp286 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp285, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp285)
      if _f.out ~= nil then
        _temp286 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp286 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp285, "out"))
      end

      elseif _temp285 == nil then
        _error(exception:null_error("_temp285", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp285))
      end

local _temp287
do
    if _type(_temp280) == "function" or (_type(_temp280) == "table" and _rawget(_temp280, "__call_thing")) then
      _temp287 =  _temp280(_self)

    elseif _temp280 then
      _temp287 =  _temp280
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp287 =  _self:args()
      elseif _self.args ~= nil then
        _temp287 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp287 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp287 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp288 = string:new("out")


_temp287 = _temp287:get(_temp288)
end
local _temp289
      local _t = _type(_temp286)
      if _t == "table" then
                      if _type(_temp286._less_less) == "function" or (_type(_temp286._less_less) == "table" and _rawget(_temp286._less_less, "__call_thing")) then
        _temp289 = _temp286:_less_less(_temp287)
      elseif _temp286._less_less ~= nil then
        _temp289 = _temp286._less_less

        elseif _temp286.no_undermethod ~= nil then
          _temp289 =  _temp286:no_undermethod(string:new("<<") , _temp287)
        else
          _error(exception:method_error(_temp286, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp286)
      if _n._less_less ~= nil then
        _temp289 = _n:_less_less(_temp287)
      elseif _n.no_undermethod ~= nil then
        _temp289 =  _n:no_undermethod(string:new("<<") , _temp287)
      else
        _error(exception:method_error(_temp286, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp286)
      if _f._less_less ~= nil then
        _temp289 = _f:_less_less(_temp287)
      elseif _f.no_undermethod ~= nil then
        _temp289 =  _f:no_undermethod(string:new("<<") , _temp287)
      else
        _error(exception:method_error(_temp286, "<<"))
      end

      elseif _temp286 == nil then
        _error(exception:null_error("_temp286", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp286))
      end

_dummy_ = _temp289 
end

local _temp290
        local _t = _type(_temp277)
        if _t == "table" then
          if _rawget(_temp277, "__call_thing") == nil then
            _temp290 = _temp277
          else
                  if _temp277 == nil then
              if _type(_self._temp277) == "function" or (_type(_self._temp277) == "table" and _rawget(_self._temp277, "__call_thing")) then
        _temp290 =  _self:_temp277()
      elseif _self._temp277 ~= nil then
        _temp290 =  _self._temp277

        elseif _self.no_undermethod ~= nil then
          _temp290 =  _self:no_undermethod(string:new("_temp277"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp290 =  _temp277(_self)
      end

          end
        elseif _t == "number" then
          _temp290 = _temp277
        elseif _t == "function" then
                if _temp277 == nil then
              if _type(_self._temp277) == "function" or (_type(_self._temp277) == "table" and _rawget(_self._temp277, "__call_thing")) then
        _temp290 =  _self:_temp277()
      elseif _self._temp277 ~= nil then
        _temp290 =  _self._temp277

        elseif _self.no_undermethod ~= nil then
          _temp290 =  _self:no_undermethod(string:new("_temp277"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp290 =  _temp277(_self)
      end

        elseif _temp277 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290.body) == "function" or (_type(_temp290.body) == "table" and _rawget(_temp290.body, "__call_thing")) then
        _temp290 = _temp290:body()
      elseif _temp290.body ~= nil then
        _temp290 = _temp290.body

        elseif _temp290.no_undermethod ~= nil then
          _temp290 =  _temp290:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n.body ~= nil then
        _temp290 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f.body ~= nil then
        _temp290 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end

      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290.copy) == "function" or (_type(_temp290.copy) == "table" and _rawget(_temp290.copy, "__call_thing")) then
        _temp290 = _temp290:copy()
      elseif _temp290.copy ~= nil then
        _temp290 = _temp290.copy

        elseif _temp290.no_undermethod ~= nil then
          _temp290 =  _temp290:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n.copy ~= nil then
        _temp290 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f.copy ~= nil then
        _temp290 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end


local _temp291
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp291 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp291 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp291)
      if _t == "table" then
                      if _type(_temp291.pop) == "function" or (_type(_temp291.pop) == "table" and _rawget(_temp291.pop, "__call_thing")) then
        _temp291 = _temp291:pop()
      elseif _temp291.pop ~= nil then
        _temp291 = _temp291.pop

        elseif _temp291.no_undermethod ~= nil then
          _temp291 =  _temp291:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp291)
      if _n.pop ~= nil then
        _temp291 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp291)
      if _f.pop ~= nil then
        _temp291 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp291 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp291))
      end


local _temp292
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp292 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp292 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp292 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp292 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp292 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp292 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp292 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp292 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp292 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp292 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp295 = function (_self, _temp293)
        if _temp293 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp294 = nil
        local _t = _type(_temp278)
        if _t == "table" then
          if _rawget(_temp278, "__call_thing") == nil then
            _temp294 = _temp278
          else
                  if _temp278 == nil then
              if _type(_self._temp278) == "function" or (_type(_self._temp278) == "table" and _rawget(_self._temp278, "__call_thing")) then
        _temp294 =  _self:_temp278()
      elseif _self._temp278 ~= nil then
        _temp294 =  _self._temp278

        elseif _self.no_undermethod ~= nil then
          _temp294 =  _self:no_undermethod(string:new("_temp278"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp294 =  _temp278(_self)
      end

          end
        elseif _t == "number" then
          _temp294 = _temp278
        elseif _t == "function" then
                if _temp278 == nil then
              if _type(_self._temp278) == "function" or (_type(_self._temp278) == "table" and _rawget(_self._temp278, "__call_thing")) then
        _temp294 =  _self:_temp278()
      elseif _self._temp278 ~= nil then
        _temp294 =  _self._temp278

        elseif _self.no_undermethod ~= nil then
          _temp294 =  _self:no_undermethod(string:new("_temp278"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp294 =  _temp278(_self)
      end

        elseif _temp278 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp295 = nil
    if _type(_temp293) == "function" or (_type(_temp293) == "table" and _rawget(_temp293, "__call_thing")) then
      _temp295 =  _temp293(_self)

    elseif _temp293 then
      _temp295 =  _temp293
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp295 =  _self:n()
      elseif _self.n ~= nil then
        _temp295 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp295 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp295 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp296 = string:new("_dummy")

      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294.process) == "function" or (_type(_temp294.process) == "table" and _rawget(_temp294.process, "__call_thing")) then
        _temp294 = _temp294:process(_temp295,_temp296)
      elseif _temp294.process ~= nil then
        _temp294 = _temp294.process

        elseif _temp294.no_undermethod ~= nil then
          _temp294 =  _temp294:no_undermethod(string:new("process") , _temp295,_temp296)
        else
          _error(exception:method_error(_temp294, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n.process ~= nil then
        _temp294 = _n:process(_temp295,_temp296)
      elseif _n.no_undermethod ~= nil then
        _temp294 =  _n:no_undermethod(string:new("process") , _temp295,_temp296)
      else
        _error(exception:method_error(_temp294, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f.process ~= nil then
        _temp294 = _f:process(_temp295,_temp296)
      elseif _f.no_undermethod ~= nil then
        _temp294 =  _f:no_undermethod(string:new("process") , _temp295,_temp296)
      else
        _error(exception:method_error(_temp294, "process"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294.out) == "function" or (_type(_temp294.out) == "table" and _rawget(_temp294.out, "__call_thing")) then
        return _temp294:out()
      elseif _temp294.out ~= nil then
        return _temp294.out

        elseif _temp294.no_undermethod ~= nil then
          return  _temp294:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp294, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp294, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp294, "out"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

end

      local _t = _type(_temp292)
      if _t == "table" then
                      if _type(_temp292.map) == "function" or (_type(_temp292.map) == "table" and _rawget(_temp292.map, "__call_thing")) then
        _temp292 = _temp292:map(_temp295)
      elseif _temp292.map ~= nil then
        _temp292 = _temp292.map

        elseif _temp292.no_undermethod ~= nil then
          _temp292 =  _temp292:no_undermethod(string:new("map") , _temp295)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp292)
      if _n.map ~= nil then
        _temp292 = _n:map(_temp295)
      elseif _n.no_undermethod ~= nil then
        _temp292 =  _n:no_undermethod(string:new("map") , _temp295)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp292)
      if _f.map ~= nil then
        _temp292 = _f:map(_temp295)
      elseif _f.no_undermethod ~= nil then
        _temp292 =  _f:no_undermethod(string:new("map") , _temp295)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp292 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp292))
      end

_temp295 = string:new("\n")

      local _t = _type(_temp292)
      if _t == "table" then
                      if _type(_temp292.join) == "function" or (_type(_temp292.join) == "table" and _rawget(_temp292.join, "__call_thing")) then
        _temp292 = _temp292:join(_temp295)
      elseif _temp292.join ~= nil then
        _temp292 = _temp292.join

        elseif _temp292.no_undermethod ~= nil then
          _temp292 =  _temp292:no_undermethod(string:new("join") , _temp295)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp292)
      if _n.join ~= nil then
        _temp292 = _n:join(_temp295)
      elseif _n.no_undermethod ~= nil then
        _temp292 =  _n:no_undermethod(string:new("join") , _temp295)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp292)
      if _f.join ~= nil then
        _temp292 = _f:join(_temp295)
      elseif _f.no_undermethod ~= nil then
        _temp292 =  _f:no_undermethod(string:new("join") , _temp295)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp292 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp292))
      end


do
local _temp297 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp297 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp297 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp297 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp297 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp297 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp297 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp297 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp297 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp298 = nil
      local _t = _type(_temp297)
      if _t == "table" then
                      if _type(_temp297.out) == "function" or (_type(_temp297.out) == "table" and _rawget(_temp297.out, "__call_thing")) then
        _temp298 = _temp297:out()
      elseif _temp297.out ~= nil then
        _temp298 = _temp297.out

        elseif _temp297.no_undermethod ~= nil then
          _temp298 =  _temp297:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp297, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp297)
      if _n.out ~= nil then
        _temp298 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp298 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp297)
      if _f.out ~= nil then
        _temp298 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp298 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _temp297 == nil then
        _error(exception:null_error("_temp297", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp297))
      end

local _temp299 = nil
    if _type(_temp292) == "function" or (_type(_temp292) == "table" and _rawget(_temp292, "__call_thing")) then
      _temp299 =  _temp292(_self)

    elseif _temp292 then
      _temp299 =  _temp292
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp299 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp299 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp299 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp299 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp300
      local _t = _type(_temp298)
      if _t == "table" then
                      if _type(_temp298._less_less) == "function" or (_type(_temp298._less_less) == "table" and _rawget(_temp298._less_less, "__call_thing")) then
        _temp300 = _temp298:_less_less(_temp299)
      elseif _temp298._less_less ~= nil then
        _temp300 = _temp298._less_less

        elseif _temp298.no_undermethod ~= nil then
          _temp300 =  _temp298:no_undermethod(string:new("<<") , _temp299)
        else
          _error(exception:method_error(_temp298, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp298)
      if _n._less_less ~= nil then
        _temp300 = _n:_less_less(_temp299)
      elseif _n.no_undermethod ~= nil then
        _temp300 =  _n:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp298)
      if _f._less_less ~= nil then
        _temp300 = _f:_less_less(_temp299)
      elseif _f.no_undermethod ~= nil then
        _temp300 =  _f:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _temp298 == nil then
        _error(exception:null_error("_temp298", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp298))
      end

_dummy_ = _temp300 
end

    if _type(_temp291) == "function" or (_type(_temp291) == "table" and _rawget(_temp291, "__call_thing")) then
      _temp295 =  _temp291(_self)

    elseif _temp291 then
      _temp295 =  _temp291
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp295 =  _self:last()
      elseif _self.last ~= nil then
        _temp295 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp295 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp295 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp312 = function (_self)

local _temp301
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp301 =  _self:my()
      elseif _self.my ~= nil then
        _temp301 =  _self.my

        elseif my ~= nil then
          _temp301 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp302 = nil
    if _type(_temp291) == "function" or (_type(_temp291) == "table" and _rawget(_temp291, "__call_thing")) then
      _temp302 =  _temp291(_self)

    elseif _temp291 then
      _temp302 =  _temp291
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp302 =  _self:last()
      elseif _self.last ~= nil then
        _temp302 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp302 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp302 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp301)
      if _t == "table" then
                      if _type(_temp301.process) == "function" or (_type(_temp301.process) == "table" and _rawget(_temp301.process, "__call_thing")) then
        _temp301 = _temp301:process(_temp302)
      elseif _temp301.process ~= nil then
        _temp301 = _temp301.process

        elseif _temp301.no_undermethod ~= nil then
          _temp301 =  _temp301:no_undermethod(string:new("process") , _temp302)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp301)
      if _n.process ~= nil then
        _temp301 = _n:process(_temp302)
      elseif _n.no_undermethod ~= nil then
        _temp301 =  _n:no_undermethod(string:new("process") , _temp302)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp301)
      if _f.process ~= nil then
        _temp301 = _f:process(_temp302)
      elseif _f.no_undermethod ~= nil then
        _temp301 =  _f:no_undermethod(string:new("process") , _temp302)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp301 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp301))
      end


local _temp302 
do
local _temp303 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp303 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp303 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp303 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp303 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp303 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp303 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp303 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp303 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp303 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp303 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp304 = nil
      local _t = _type(_temp303)
      if _t == "table" then
                      if _type(_temp303.out) == "function" or (_type(_temp303.out) == "table" and _rawget(_temp303.out, "__call_thing")) then
        _temp304 = _temp303:out()
      elseif _temp303.out ~= nil then
        _temp304 = _temp303.out

        elseif _temp303.no_undermethod ~= nil then
          _temp304 =  _temp303:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp303, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp303)
      if _n.out ~= nil then
        _temp304 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp304 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp303, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp303)
      if _f.out ~= nil then
        _temp304 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp304 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp303, "out"))
      end

      elseif _temp303 == nil then
        _error(exception:null_error("_temp303", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp303))
      end

local _temp305 = nil
        local _t = _type(_temp301)
        if _t == "table" then
          if _rawget(_temp301, "__call_thing") == nil then
            _temp305 = _temp301
          else
                  if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp305 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp305 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp305 =  _temp301(_self)
      end

          end
        elseif _t == "number" then
          _temp305 = _temp301
        elseif _t == "function" then
                if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp305 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp305 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp305 =  _temp301(_self)
      end

        elseif _temp301 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp306 = nil
      local _t = _type(_temp305)
      if _t == "table" then
                      if _type(_temp305.out) == "function" or (_type(_temp305.out) == "table" and _rawget(_temp305.out, "__call_thing")) then
        _temp306 = _temp305:out()
      elseif _temp305.out ~= nil then
        _temp306 = _temp305.out

        elseif _temp305.no_undermethod ~= nil then
          _temp306 =  _temp305:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp305, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp305)
      if _n.out ~= nil then
        _temp306 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp306 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp305, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp305)
      if _f.out ~= nil then
        _temp306 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp306 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp305, "out"))
      end

      elseif _temp305 == nil then
        _error(exception:null_error("_temp305", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp305))
      end

local _temp307 = string:new("\n")

local _temp308 = nil
do
local _temp309 = nil
        local _t = _type(_temp301)
        if _t == "table" then
          if _rawget(_temp301, "__call_thing") == nil then
            _temp309 = _temp301
          else
                  if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp309 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp309 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp309 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp309 =  _temp301(_self)
      end

          end
        elseif _t == "number" then
          _temp309 = _temp301
        elseif _t == "function" then
                if _temp301 == nil then
              if _type(_self._temp301) == "function" or (_type(_self._temp301) == "table" and _rawget(_self._temp301, "__call_thing")) then
        _temp309 =  _self:_temp301()
      elseif _self._temp301 ~= nil then
        _temp309 =  _self._temp301

        elseif _self.no_undermethod ~= nil then
          _temp309 =  _self:no_undermethod(string:new("_temp301"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp309 =  _temp301(_self)
      end

        elseif _temp301 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp309)
      if _t == "table" then
                      if _type(_temp309.var) == "function" or (_type(_temp309.var) == "table" and _rawget(_temp309.var, "__call_thing")) then
        _temp309 = _temp309:var()
      elseif _temp309.var ~= nil then
        _temp309 = _temp309.var

        elseif _temp309.no_undermethod ~= nil then
          _temp309 =  _temp309:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp309, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp309)
      if _n.var ~= nil then
        _temp309 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp309 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp309, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp309)
      if _f.var ~= nil then
        _temp309 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp309 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp309, "var"))
      end

      elseif _temp309 == nil then
        _error(exception:null_error("_temp309", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp309))
      end


_temp308 = string:new("return " .. _tostring(_temp309) .. "\n")
end
local _temp310
      local _t = _type(_temp304)
      if _t == "table" then
                      if _type(_temp304._less_less) == "function" or (_type(_temp304._less_less) == "table" and _rawget(_temp304._less_less, "__call_thing")) then
        _temp310 = _temp304:_less_less(_temp306)
      elseif _temp304._less_less ~= nil then
        _temp310 = _temp304._less_less

        elseif _temp304.no_undermethod ~= nil then
          _temp310 =  _temp304:no_undermethod(string:new("<<") , _temp306)
        else
          _error(exception:method_error(_temp304, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp304)
      if _n._less_less ~= nil then
        _temp310 = _n:_less_less(_temp306)
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("<<") , _temp306)
      else
        _error(exception:method_error(_temp304, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp304)
      if _f._less_less ~= nil then
        _temp310 = _f:_less_less(_temp306)
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("<<") , _temp306)
      else
        _error(exception:method_error(_temp304, "<<"))
      end

      elseif _temp304 == nil then
        _error(exception:null_error("_temp304", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp304))
      end

local _temp306
      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310._less_less) == "function" or (_type(_temp310._less_less) == "table" and _rawget(_temp310._less_less, "__call_thing")) then
        _temp306 = _temp310:_less_less(_temp307)
      elseif _temp310._less_less ~= nil then
        _temp306 = _temp310._less_less

        elseif _temp310.no_undermethod ~= nil then
          _temp306 =  _temp310:no_undermethod(string:new("<<") , _temp307)
        else
          _error(exception:method_error(_temp310, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n._less_less ~= nil then
        _temp306 = _n:_less_less(_temp307)
      elseif _n.no_undermethod ~= nil then
        _temp306 =  _n:no_undermethod(string:new("<<") , _temp307)
      else
        _error(exception:method_error(_temp310, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f._less_less ~= nil then
        _temp306 = _f:_less_less(_temp307)
      elseif _f.no_undermethod ~= nil then
        _temp306 =  _f:no_undermethod(string:new("<<") , _temp307)
      else
        _error(exception:method_error(_temp310, "<<"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end

local _temp307
      local _t = _type(_temp306)
      if _t == "table" then
                      if _type(_temp306._less_less) == "function" or (_type(_temp306._less_less) == "table" and _rawget(_temp306._less_less, "__call_thing")) then
        _temp307 = _temp306:_less_less(_temp308)
      elseif _temp306._less_less ~= nil then
        _temp307 = _temp306._less_less

        elseif _temp306.no_undermethod ~= nil then
          _temp307 =  _temp306:no_undermethod(string:new("<<") , _temp308)
        else
          _error(exception:method_error(_temp306, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp306)
      if _n._less_less ~= nil then
        _temp307 = _n:_less_less(_temp308)
      elseif _n.no_undermethod ~= nil then
        _temp307 =  _n:no_undermethod(string:new("<<") , _temp308)
      else
        _error(exception:method_error(_temp306, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp306)
      if _f._less_less ~= nil then
        _temp307 = _f:_less_less(_temp308)
      elseif _f.no_undermethod ~= nil then
        _temp307 =  _f:no_undermethod(string:new("<<") , _temp308)
      else
        _error(exception:method_error(_temp306, "<<"))
      end

      elseif _temp306 == nil then
        _error(exception:null_error("_temp306", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp306))
      end

_temp302 = _temp307 
end

return _temp302
end


local _temp322 = function (_self)

local _temp313 = nil
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp313 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp313 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp313 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp313 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp313 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp313 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp313 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp313 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp313 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp313 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp313)
      if _t == "table" then
                      if _type(_temp313.empty_question) == "function" or (_type(_temp313.empty_question) == "table" and _rawget(_temp313.empty_question, "__call_thing")) then
        _temp313 = _temp313:empty_question()
      elseif _temp313.empty_question ~= nil then
        _temp313 = _temp313.empty_question

        elseif _temp313.no_undermethod ~= nil then
          _temp313 =  _temp313:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp313, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp313)
      if _n.empty_question ~= nil then
        _temp313 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp313 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp313, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp313)
      if _f.empty_question ~= nil then
        _temp313 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp313 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp313, "empty?"))
      end

      elseif _temp313 == nil then
        _error(exception:null_error("_temp313", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp313))
      end



local _temp320 = function (_self)

local _temp314 
do
local _temp315 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp315 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp315 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp315 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp315 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp315 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp315 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp316 = nil
      local _t = _type(_temp315)
      if _t == "table" then
                      if _type(_temp315.out) == "function" or (_type(_temp315.out) == "table" and _rawget(_temp315.out, "__call_thing")) then
        _temp316 = _temp315:out()
      elseif _temp315.out ~= nil then
        _temp316 = _temp315.out

        elseif _temp315.no_undermethod ~= nil then
          _temp316 =  _temp315:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp315, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp315)
      if _n.out ~= nil then
        _temp316 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp316 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp315)
      if _f.out ~= nil then
        _temp316 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp316 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _temp315 == nil then
        _error(exception:null_error("_temp315", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp315))
      end

local _temp317 = string:new("return object:null()")
local _temp318
      local _t = _type(_temp316)
      if _t == "table" then
                      if _type(_temp316._less_less) == "function" or (_type(_temp316._less_less) == "table" and _rawget(_temp316._less_less, "__call_thing")) then
        _temp318 = _temp316:_less_less(_temp317)
      elseif _temp316._less_less ~= nil then
        _temp318 = _temp316._less_less

        elseif _temp316.no_undermethod ~= nil then
          _temp318 =  _temp316:no_undermethod(string:new("<<") , _temp317)
        else
          _error(exception:method_error(_temp316, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp316)
      if _n._less_less ~= nil then
        _temp318 = _n:_less_less(_temp317)
      elseif _n.no_undermethod ~= nil then
        _temp318 =  _n:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp316)
      if _f._less_less ~= nil then
        _temp318 = _f:_less_less(_temp317)
      elseif _f.no_undermethod ~= nil then
        _temp318 =  _f:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _temp316 == nil then
        _error(exception:null_error("_temp316", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp316))
      end

_temp314 = _temp318 
end

return _temp314
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp313,_temp320)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp313,_temp320)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp313,_temp320)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp313,_temp320)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp295,_temp312,_temp322)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp295,_temp312,_temp322)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp295,_temp312,_temp322)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp295,_temp312,_temp322)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp322 =  _self:my()
      elseif _self.my ~= nil then
        _temp322 =  _self.my

        elseif my ~= nil then
          _temp322 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp322)
      if _t == "table" then
                      if _type(_temp322.env) == "function" or (_type(_temp322.env) == "table" and _rawget(_temp322.env, "__call_thing")) then
        _temp322 = _temp322:env()
      elseif _temp322.env ~= nil then
        _temp322 = _temp322.env

        elseif _temp322.no_undermethod ~= nil then
          _temp322 =  _temp322:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp322, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp322)
      if _n.env ~= nil then
        _temp322 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp322 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp322, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp322)
      if _f.env ~= nil then
        _temp322 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp322 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp322, "env"))
      end

      elseif _temp322 == nil then
        _error(exception:null_error("_temp322", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp322))
      end

      local _t = _type(_temp322)
      if _t == "table" then
                      if _type(_temp322.pop_underscope) == "function" or (_type(_temp322.pop_underscope) == "table" and _rawget(_temp322.pop_underscope, "__call_thing")) then
        _dummy_ = _temp322:pop_underscope()
      elseif _temp322.pop_underscope ~= nil then
        _dummy_ = _temp322.pop_underscope

        elseif _temp322.no_undermethod ~= nil then
          _dummy_ =  _temp322:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp322, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp322)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp322, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp322)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp322, "pop_scope"))
      end

      elseif _temp322 == nil then
        _error(exception:null_error("_temp322", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp322))
      end

do
local _temp323 = nil
        local _t = _type(_temp281)
        if _t == "table" then
          if _rawget(_temp281, "__call_thing") == nil then
            _temp323 = _temp281
          else
                  if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp323 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp323 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp323 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp323 =  _temp281(_self)
      end

          end
        elseif _t == "number" then
          _temp323 = _temp281
        elseif _t == "function" then
                if _temp281 == nil then
              if _type(_self._temp281) == "function" or (_type(_self._temp281) == "table" and _rawget(_self._temp281, "__call_thing")) then
        _temp323 =  _self:_temp281()
      elseif _self._temp281 ~= nil then
        _temp323 =  _self._temp281

        elseif _self.no_undermethod ~= nil then
          _temp323 =  _self:no_undermethod(string:new("_temp281"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp323 =  _temp281(_self)
      end

        elseif _temp281 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp324 = nil
      local _t = _type(_temp323)
      if _t == "table" then
                      if _type(_temp323.out) == "function" or (_type(_temp323.out) == "table" and _rawget(_temp323.out, "__call_thing")) then
        _temp324 = _temp323:out()
      elseif _temp323.out ~= nil then
        _temp324 = _temp323.out

        elseif _temp323.no_undermethod ~= nil then
          _temp324 =  _temp323:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp323, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp323)
      if _n.out ~= nil then
        _temp324 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp324 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp323, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp323)
      if _f.out ~= nil then
        _temp324 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp324 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp323, "out"))
      end

      elseif _temp323 == nil then
        _error(exception:null_error("_temp323", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp323))
      end

local _temp325 = string:new("\nend\n")
local _temp326
      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324._less_less) == "function" or (_type(_temp324._less_less) == "table" and _rawget(_temp324._less_less, "__call_thing")) then
        _temp326 = _temp324:_less_less(_temp325)
      elseif _temp324._less_less ~= nil then
        _temp326 = _temp324._less_less

        elseif _temp324.no_undermethod ~= nil then
          _temp326 =  _temp324:no_undermethod(string:new("<<") , _temp325)
        else
          _error(exception:method_error(_temp324, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n._less_less ~= nil then
        _temp326 = _n:_less_less(_temp325)
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("<<") , _temp325)
      else
        _error(exception:method_error(_temp324, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f._less_less ~= nil then
        _temp326 = _f:_less_less(_temp325)
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("<<") , _temp325)
      else
        _error(exception:method_error(_temp324, "<<"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

_dummy_ = _temp326 
end

do
local _temp312
    if _type(_temp281) == "function" or (_type(_temp281) == "table" and _rawget(_temp281, "__call_thing")) then
      _temp312 =  _temp281(_self)

    elseif _temp281 then
      _temp312 =  _temp281
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp312 =  _self:res()
      elseif _self.res ~= nil then
        _temp312 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp312 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp312 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp327 = string:new("function")

local _temp328 = string:new("type")

_temp312:set(_temp328, _temp327)
end

    if _type(_temp281) == "function" or (_type(_temp281) == "table" and _rawget(_temp281, "__call_thing")) then
      return  _temp281(_self)

    elseif _temp281 then
      return  _temp281
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp275)
      if _t == "table" then
                      if _type(_temp275.walk) == "function" or (_type(_temp275.walk) == "table" and _rawget(_temp275.walk, "__call_thing")) then
        _dummy_ = _temp275:walk(_temp4,_temp282)
      elseif _temp275.walk ~= nil then
        _dummy_ = _temp275.walk

        elseif _temp275.no_undermethod ~= nil then
          _dummy_ =  _temp275:no_undermethod(string:new("walk") , _temp4,_temp282)
        else
          _error(exception:method_error(_temp275, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp275)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp282)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp282)
      else
        _error(exception:method_error(_temp275, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp275)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp282)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp282)
      else
        _error(exception:method_error(_temp275, "walk"))
      end

      elseif _temp275 == nil then
        _error(exception:null_error("_temp275", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp275))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp282 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp282 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp282 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp282 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp282 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp282 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp282 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp282 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp415 = function (_self, _temp330,_temp329)
        if _temp330 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp329 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp329 =  null(_self)

    elseif null then
      _temp329 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp329 =  _self:null()
      elseif _self.null ~= nil then
        _temp329 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp329 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp329 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp331
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp331 =  my(_self)

    elseif my then
      _temp331 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp331 =  _self:my()
      elseif _self.my ~= nil then
        _temp331 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp331 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp331 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp332 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp332 =  _self:my()
      elseif _self.my ~= nil then
        _temp332 =  _self.my

        elseif my ~= nil then
          _temp332 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.env) == "function" or (_type(_temp332.env) == "table" and _rawget(_temp332.env, "__call_thing")) then
        _temp332 = _temp332:env()
      elseif _temp332.env ~= nil then
        _temp332 = _temp332.env

        elseif _temp332.no_undermethod ~= nil then
          _temp332 =  _temp332:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp332, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.env ~= nil then
        _temp332 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp332, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.env ~= nil then
        _temp332 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp332, "env"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.new_underscope) == "function" or (_type(_temp332.new_underscope) == "table" and _rawget(_temp332.new_underscope, "__call_thing")) then
        _dummy_ = _temp332:new_underscope()
      elseif _temp332.new_underscope ~= nil then
        _dummy_ = _temp332.new_underscope

        elseif _temp332.no_undermethod ~= nil then
          _dummy_ =  _temp332:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp332, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp332, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp332, "new_scope"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

local _temp333
    if _type(_temp330) == "function" or (_type(_temp330) == "table" and _rawget(_temp330, "__call_thing")) then
      _temp332 =  _temp330(_self)

    elseif _temp330 then
      _temp332 =  _temp330
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp332 =  _self:node()
      elseif _self.node ~= nil then
        _temp332 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp332 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp332 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp333 =  do_underargs(_self, _temp332)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp333 =  _self:do_underargs(_temp332)
      elseif _self.do_underargs ~= nil then
        _temp333 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp333 =  _self:no_undermethod(string:new("do_args") , _temp332)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp333 =  no_undermethod(_self, string:new("do_args") , _temp332)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp334
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp332 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp332 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp332 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp332 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp332 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp332 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp332 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp332 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.upvars) == "function" or (_type(_temp332.upvars) == "table" and _rawget(_temp332.upvars, "__call_thing")) then
        _temp332 = _temp332:upvars()
      elseif _temp332.upvars ~= nil then
        _temp332 = _temp332.upvars

        elseif _temp332.no_undermethod ~= nil then
          _temp332 =  _temp332:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp332, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.upvars ~= nil then
        _temp332 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp332, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.upvars ~= nil then
        _temp332 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp332, "upvars"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end



local _temp341 = function (_self)

local _temp335 = nil
do
local _temp336 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp336 =  _self:my()
      elseif _self.my ~= nil then
        _temp336 =  _self.my

        elseif my ~= nil then
          _temp336 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp336)
      if _t == "table" then
                      if _type(_temp336.next_underliftable) == "function" or (_type(_temp336.next_underliftable) == "table" and _rawget(_temp336.next_underliftable, "__call_thing")) then
        _temp336 = _temp336:next_underliftable()
      elseif _temp336.next_underliftable ~= nil then
        _temp336 = _temp336.next_underliftable

        elseif _temp336.no_undermethod ~= nil then
          _temp336 =  _temp336:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp336, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp336)
      if _n.next_underliftable ~= nil then
        _temp336 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp336 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp336, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp336)
      if _f.next_underliftable ~= nil then
        _temp336 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp336 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp336, "next_liftable"))
      end

      elseif _temp336 == nil then
        _error(exception:null_error("_temp336", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp336))
      end


_temp335 = string:new("_lifted[" .. _tostring(_temp336) .. "]")
end

local _temp337 = nil
do
local _temp338
do
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp338 =  _temp333(_self)

    elseif _temp333 then
      _temp338 =  _temp333
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp338 =  _self:args()
      elseif _self.args ~= nil then
        _temp338 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp338 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp338 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp339 = string:new("arg_list")


_temp338 = _temp338:get(_temp339)
end

_temp337 = string:new("function(_argtable, " .. _tostring(_temp338) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp335,_temp337)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp335,_temp337)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp335,_temp337)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp335,_temp337)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp348 = function (_self)

local _temp342 = nil
do
local _temp343 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp343 =  _self:my()
      elseif _self.my ~= nil then
        _temp343 =  _self.my

        elseif my ~= nil then
          _temp343 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp343)
      if _t == "table" then
                      if _type(_temp343.next_underliftable) == "function" or (_type(_temp343.next_underliftable) == "table" and _rawget(_temp343.next_underliftable, "__call_thing")) then
        _temp343 = _temp343:next_underliftable()
      elseif _temp343.next_underliftable ~= nil then
        _temp343 = _temp343.next_underliftable

        elseif _temp343.no_undermethod ~= nil then
          _temp343 =  _temp343:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp343, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp343)
      if _n.next_underliftable ~= nil then
        _temp343 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp343 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp343, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp343)
      if _f.next_underliftable ~= nil then
        _temp343 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp343 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp343, "next_liftable"))
      end

      elseif _temp343 == nil then
        _error(exception:null_error("_temp343", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp343))
      end


_temp342 = string:new("_lifted[" .. _tostring(_temp343) .. "]")
end

local _temp344 = nil
do
local _temp345
do
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp345 =  _temp333(_self)

    elseif _temp333 then
      _temp345 =  _temp333
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp345 =  _self:args()
      elseif _self.args ~= nil then
        _temp345 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp345 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp345 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp346 = string:new("arg_list")


_temp345 = _temp345:get(_temp346)
end

_temp344 = string:new("function(" .. _tostring(_temp345) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp342,_temp344)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp342,_temp344)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp342,_temp344)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp342,_temp344)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp334 =  true_question(_self, _temp332,_temp341,_temp348)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp334 =  _self:true_question(_temp332,_temp341,_temp348)
      elseif _self.true_question ~= nil then
        _temp334 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp334 =  _self:no_undermethod(string:new("true?") , _temp332,_temp341,_temp348)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp334 =  no_undermethod(_self, string:new("true?") , _temp332,_temp341,_temp348)
      else
        _error(exception:name_error("true?"))
      end
    end

        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp348 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp348 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp348 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp348 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp348 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp348 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp348 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp348 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp348 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp348 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp348)
      if _t == "table" then
                      if _type(_temp348.upvars) == "function" or (_type(_temp348.upvars) == "table" and _rawget(_temp348.upvars, "__call_thing")) then
        _temp348 = _temp348:upvars()
      elseif _temp348.upvars ~= nil then
        _temp348 = _temp348.upvars

        elseif _temp348.no_undermethod ~= nil then
          _temp348 =  _temp348:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp348, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp348)
      if _n.upvars ~= nil then
        _temp348 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp348 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp348, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp348)
      if _f.upvars ~= nil then
        _temp348 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp348 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp348, "upvars"))
      end

      elseif _temp348 == nil then
        _error(exception:null_error("_temp348", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp348))
      end



local _temp362 = function (_self)

local _temp349 
do
local _temp350 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp350 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp350 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp350 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp350 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp350 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp350 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp350 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp350 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp350 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp350 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp351 = nil
      local _t = _type(_temp350)
      if _t == "table" then
                      if _type(_temp350.out) == "function" or (_type(_temp350.out) == "table" and _rawget(_temp350.out, "__call_thing")) then
        _temp351 = _temp350:out()
      elseif _temp350.out ~= nil then
        _temp351 = _temp350.out

        elseif _temp350.no_undermethod ~= nil then
          _temp351 =  _temp350:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp350, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp350)
      if _n.out ~= nil then
        _temp351 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp351 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp350, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp350)
      if _f.out ~= nil then
        _temp351 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp351 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp350, "out"))
      end

      elseif _temp350 == nil then
        _error(exception:null_error("_temp350", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp350))
      end

local _temp352 = nil
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp352 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp352 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp352 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp352 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp352 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp352 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp352 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp352 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.upvars) == "function" or (_type(_temp352.upvars) == "table" and _rawget(_temp352.upvars, "__call_thing")) then
        _temp352 = _temp352:upvars()
      elseif _temp352.upvars ~= nil then
        _temp352 = _temp352.upvars

        elseif _temp352.no_undermethod ~= nil then
          _temp352 =  _temp352:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp352, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.upvars ~= nil then
        _temp352 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp352, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.upvars ~= nil then
        _temp352 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp352, "upvars"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("_temp352", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end


local _temp360 = function (_self, _temp353)
        if _temp353 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp354 = nil
do
local _temp355
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp355 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp355 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp355 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp355 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp355 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp355 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp355 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp355 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp355)
      if _t == "table" then
                      if _type(_temp355.env) == "function" or (_type(_temp355.env) == "table" and _rawget(_temp355.env, "__call_thing")) then
        _temp355 = _temp355:env()
      elseif _temp355.env ~= nil then
        _temp355 = _temp355.env

        elseif _temp355.no_undermethod ~= nil then
          _temp355 =  _temp355:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp355, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp355)
      if _n.env ~= nil then
        _temp355 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp355 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp355, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp355)
      if _f.env ~= nil then
        _temp355 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp355 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp355, "env"))
      end

      elseif _temp355 == nil then
        _error(exception:null_error("_temp355", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp355))
      end

local _temp356 = nil
    if _type(_temp353) == "function" or (_type(_temp353) == "table" and _rawget(_temp353, "__call_thing")) then
      _temp356 =  _temp353(_self)

    elseif _temp353 then
      _temp356 =  _temp353
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp356 =  _self:u()
      elseif _self.u ~= nil then
        _temp356 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp356 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp356 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp355 = _temp355:get(_temp356)
end

local _temp357
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp357 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp357 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp357 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp357 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp357 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp357 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp357 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp357 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp357)
      if _t == "table" then
                      if _type(_temp357.env) == "function" or (_type(_temp357.env) == "table" and _rawget(_temp357.env, "__call_thing")) then
        _temp357 = _temp357:env()
      elseif _temp357.env ~= nil then
        _temp357 = _temp357.env

        elseif _temp357.no_undermethod ~= nil then
          _temp357 =  _temp357:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp357, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp357)
      if _n.env ~= nil then
        _temp357 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp357 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp357, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp357)
      if _f.env ~= nil then
        _temp357 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp357 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp357, "env"))
      end

      elseif _temp357 == nil then
        _error(exception:null_error("_temp357", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp357))
      end

local _temp358 = nil
    if _type(_temp353) == "function" or (_type(_temp353) == "table" and _rawget(_temp353, "__call_thing")) then
      _temp358 =  _temp353(_self)

    elseif _temp353 then
      _temp358 =  _temp353
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp358 =  _self:u()
      elseif _self.u ~= nil then
        _temp358 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp358 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp358 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp357 = _temp357:get(_temp358)
end

_temp354 = string:new("local " .. _tostring(_temp355) .. " = _argtable['" .. _tostring(_temp357) .. "']")
end

return _temp354
end

      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.map) == "function" or (_type(_temp352.map) == "table" and _rawget(_temp352.map, "__call_thing")) then
        _temp352 = _temp352:map(_temp360)
      elseif _temp352.map ~= nil then
        _temp352 = _temp352.map

        elseif _temp352.no_undermethod ~= nil then
          _temp352 =  _temp352:no_undermethod(string:new("map") , _temp360)
        else
          _error(exception:method_error(_temp352, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.map ~= nil then
        _temp352 = _n:map(_temp360)
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("map") , _temp360)
      else
        _error(exception:method_error(_temp352, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.map ~= nil then
        _temp352 = _f:map(_temp360)
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("map") , _temp360)
      else
        _error(exception:method_error(_temp352, "map"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("_temp352", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end

_temp360 = string:new("\n")

      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.join) == "function" or (_type(_temp352.join) == "table" and _rawget(_temp352.join, "__call_thing")) then
        _temp352 = _temp352:join(_temp360)
      elseif _temp352.join ~= nil then
        _temp352 = _temp352.join

        elseif _temp352.no_undermethod ~= nil then
          _temp352 =  _temp352:no_undermethod(string:new("join") , _temp360)
        else
          _error(exception:method_error(_temp352, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.join ~= nil then
        _temp352 = _n:join(_temp360)
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("join") , _temp360)
      else
        _error(exception:method_error(_temp352, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.join ~= nil then
        _temp352 = _f:join(_temp360)
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("join") , _temp360)
      else
        _error(exception:method_error(_temp352, "join"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("_temp352", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end

local _temp360
      local _t = _type(_temp351)
      if _t == "table" then
                      if _type(_temp351._less_less) == "function" or (_type(_temp351._less_less) == "table" and _rawget(_temp351._less_less, "__call_thing")) then
        _temp360 = _temp351:_less_less(_temp352)
      elseif _temp351._less_less ~= nil then
        _temp360 = _temp351._less_less

        elseif _temp351.no_undermethod ~= nil then
          _temp360 =  _temp351:no_undermethod(string:new("<<") , _temp352)
        else
          _error(exception:method_error(_temp351, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp351)
      if _n._less_less ~= nil then
        _temp360 = _n:_less_less(_temp352)
      elseif _n.no_undermethod ~= nil then
        _temp360 =  _n:no_undermethod(string:new("<<") , _temp352)
      else
        _error(exception:method_error(_temp351, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp351)
      if _f._less_less ~= nil then
        _temp360 = _f:_less_less(_temp352)
      elseif _f.no_undermethod ~= nil then
        _temp360 =  _f:no_undermethod(string:new("<<") , _temp352)
      else
        _error(exception:method_error(_temp351, "<<"))
      end

      elseif _temp351 == nil then
        _error(exception:null_error("_temp351", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp351))
      end

_temp349 = _temp360 
end

return _temp349
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp348,_temp362)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp348,_temp362)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp348,_temp362)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp348,_temp362)
      else
        _error(exception:name_error("true?"))
      end
    end

do
local _temp363 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp363 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp363 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp363 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp363 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp363 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp363 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp364 = nil
      local _t = _type(_temp363)
      if _t == "table" then
                      if _type(_temp363.out) == "function" or (_type(_temp363.out) == "table" and _rawget(_temp363.out, "__call_thing")) then
        _temp364 = _temp363:out()
      elseif _temp363.out ~= nil then
        _temp364 = _temp363.out

        elseif _temp363.no_undermethod ~= nil then
          _temp364 =  _temp363:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp363, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp363)
      if _n.out ~= nil then
        _temp364 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp364 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp363)
      if _f.out ~= nil then
        _temp364 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp364 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _temp363 == nil then
        _error(exception:null_error("_temp363", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp363))
      end

local _temp365
do
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp365 =  _temp333(_self)

    elseif _temp333 then
      _temp365 =  _temp333
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp365 =  _self:args()
      elseif _self.args ~= nil then
        _temp365 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp365 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp365 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp366 = string:new("out")


_temp365 = _temp365:get(_temp366)
end
local _temp367
      local _t = _type(_temp364)
      if _t == "table" then
                      if _type(_temp364._less_less) == "function" or (_type(_temp364._less_less) == "table" and _rawget(_temp364._less_less, "__call_thing")) then
        _temp367 = _temp364:_less_less(_temp365)
      elseif _temp364._less_less ~= nil then
        _temp367 = _temp364._less_less

        elseif _temp364.no_undermethod ~= nil then
          _temp367 =  _temp364:no_undermethod(string:new("<<") , _temp365)
        else
          _error(exception:method_error(_temp364, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp364)
      if _n._less_less ~= nil then
        _temp367 = _n:_less_less(_temp365)
      elseif _n.no_undermethod ~= nil then
        _temp367 =  _n:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp364)
      if _f._less_less ~= nil then
        _temp367 = _f:_less_less(_temp365)
      elseif _f.no_undermethod ~= nil then
        _temp367 =  _f:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _temp364 == nil then
        _error(exception:null_error("_temp364", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp364))
      end

_dummy_ = _temp367 
end

local _temp368
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp368 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp368 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp368 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp368 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp368 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp368 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp368 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp368 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp368 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp368 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp368)
      if _t == "table" then
                      if _type(_temp368.body) == "function" or (_type(_temp368.body) == "table" and _rawget(_temp368.body, "__call_thing")) then
        _temp368 = _temp368:body()
      elseif _temp368.body ~= nil then
        _temp368 = _temp368.body

        elseif _temp368.no_undermethod ~= nil then
          _temp368 =  _temp368:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp368)
      if _n.body ~= nil then
        _temp368 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp368 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp368)
      if _f.body ~= nil then
        _temp368 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp368 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp368 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp368))
      end

      local _t = _type(_temp368)
      if _t == "table" then
                      if _type(_temp368.copy) == "function" or (_type(_temp368.copy) == "table" and _rawget(_temp368.copy, "__call_thing")) then
        _temp368 = _temp368:copy()
      elseif _temp368.copy ~= nil then
        _temp368 = _temp368.copy

        elseif _temp368.no_undermethod ~= nil then
          _temp368 =  _temp368:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp368)
      if _n.copy ~= nil then
        _temp368 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp368 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp368)
      if _f.copy ~= nil then
        _temp368 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp368 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp368 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp368))
      end


local _temp369
        local _t = _type(_temp368)
        if _t == "table" then
          if _rawget(_temp368, "__call_thing") == nil then
            _temp369 = _temp368
          else
                  if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp369 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp369 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp369 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp369 =  _temp368(_self)
      end

          end
        elseif _t == "number" then
          _temp369 = _temp368
        elseif _t == "function" then
                if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp369 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp369 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp369 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp369 =  _temp368(_self)
      end

        elseif _temp368 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp369)
      if _t == "table" then
                      if _type(_temp369.pop) == "function" or (_type(_temp369.pop) == "table" and _rawget(_temp369.pop, "__call_thing")) then
        _temp369 = _temp369:pop()
      elseif _temp369.pop ~= nil then
        _temp369 = _temp369.pop

        elseif _temp369.no_undermethod ~= nil then
          _temp369 =  _temp369:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp369)
      if _n.pop ~= nil then
        _temp369 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp369 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp369)
      if _f.pop ~= nil then
        _temp369 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp369 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp369 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp369))
      end


local _temp370
        local _t = _type(_temp368)
        if _t == "table" then
          if _rawget(_temp368, "__call_thing") == nil then
            _temp370 = _temp368
          else
                  if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp370 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp370 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp370 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp370 =  _temp368(_self)
      end

          end
        elseif _t == "number" then
          _temp370 = _temp368
        elseif _t == "function" then
                if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp370 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp370 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp370 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp370 =  _temp368(_self)
      end

        elseif _temp368 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp373 = function (_self, _temp371)
        if _temp371 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp372 = nil
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp372 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp372 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp372 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp372 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp372 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp372 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp372 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp372 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp373 = nil
    if _type(_temp371) == "function" or (_type(_temp371) == "table" and _rawget(_temp371, "__call_thing")) then
      _temp373 =  _temp371(_self)

    elseif _temp371 then
      _temp373 =  _temp371
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp373 =  _self:n()
      elseif _self.n ~= nil then
        _temp373 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp373 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp373 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp374 = string:new("_dummy")

      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.process) == "function" or (_type(_temp372.process) == "table" and _rawget(_temp372.process, "__call_thing")) then
        _temp372 = _temp372:process(_temp373,_temp374)
      elseif _temp372.process ~= nil then
        _temp372 = _temp372.process

        elseif _temp372.no_undermethod ~= nil then
          _temp372 =  _temp372:no_undermethod(string:new("process") , _temp373,_temp374)
        else
          _error(exception:method_error(_temp372, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.process ~= nil then
        _temp372 = _n:process(_temp373,_temp374)
      elseif _n.no_undermethod ~= nil then
        _temp372 =  _n:no_undermethod(string:new("process") , _temp373,_temp374)
      else
        _error(exception:method_error(_temp372, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.process ~= nil then
        _temp372 = _f:process(_temp373,_temp374)
      elseif _f.no_undermethod ~= nil then
        _temp372 =  _f:no_undermethod(string:new("process") , _temp373,_temp374)
      else
        _error(exception:method_error(_temp372, "process"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.out) == "function" or (_type(_temp372.out) == "table" and _rawget(_temp372.out, "__call_thing")) then
        return _temp372:out()
      elseif _temp372.out ~= nil then
        return _temp372.out

        elseif _temp372.no_undermethod ~= nil then
          return  _temp372:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp372, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp372, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp372, "out"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

end

      local _t = _type(_temp370)
      if _t == "table" then
                      if _type(_temp370.map) == "function" or (_type(_temp370.map) == "table" and _rawget(_temp370.map, "__call_thing")) then
        _temp370 = _temp370:map(_temp373)
      elseif _temp370.map ~= nil then
        _temp370 = _temp370.map

        elseif _temp370.no_undermethod ~= nil then
          _temp370 =  _temp370:no_undermethod(string:new("map") , _temp373)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp370)
      if _n.map ~= nil then
        _temp370 = _n:map(_temp373)
      elseif _n.no_undermethod ~= nil then
        _temp370 =  _n:no_undermethod(string:new("map") , _temp373)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp370)
      if _f.map ~= nil then
        _temp370 = _f:map(_temp373)
      elseif _f.no_undermethod ~= nil then
        _temp370 =  _f:no_undermethod(string:new("map") , _temp373)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp370 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp370))
      end

_temp373 = string:new("\n")

      local _t = _type(_temp370)
      if _t == "table" then
                      if _type(_temp370.join) == "function" or (_type(_temp370.join) == "table" and _rawget(_temp370.join, "__call_thing")) then
        _temp370 = _temp370:join(_temp373)
      elseif _temp370.join ~= nil then
        _temp370 = _temp370.join

        elseif _temp370.no_undermethod ~= nil then
          _temp370 =  _temp370:no_undermethod(string:new("join") , _temp373)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp370)
      if _n.join ~= nil then
        _temp370 = _n:join(_temp373)
      elseif _n.no_undermethod ~= nil then
        _temp370 =  _n:no_undermethod(string:new("join") , _temp373)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp370)
      if _f.join ~= nil then
        _temp370 = _f:join(_temp373)
      elseif _f.no_undermethod ~= nil then
        _temp370 =  _f:no_undermethod(string:new("join") , _temp373)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp370 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp370))
      end


do
local _temp375 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp375 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp375 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp375 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp375 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp375 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp375 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp376 = nil
      local _t = _type(_temp375)
      if _t == "table" then
                      if _type(_temp375.out) == "function" or (_type(_temp375.out) == "table" and _rawget(_temp375.out, "__call_thing")) then
        _temp376 = _temp375:out()
      elseif _temp375.out ~= nil then
        _temp376 = _temp375.out

        elseif _temp375.no_undermethod ~= nil then
          _temp376 =  _temp375:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp375, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp375)
      if _n.out ~= nil then
        _temp376 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp376 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp375)
      if _f.out ~= nil then
        _temp376 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp376 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _temp375 == nil then
        _error(exception:null_error("_temp375", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp375))
      end

local _temp377 = nil
    if _type(_temp370) == "function" or (_type(_temp370) == "table" and _rawget(_temp370, "__call_thing")) then
      _temp377 =  _temp370(_self)

    elseif _temp370 then
      _temp377 =  _temp370
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp377 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp377 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp377 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp377 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp378
      local _t = _type(_temp376)
      if _t == "table" then
                      if _type(_temp376._less_less) == "function" or (_type(_temp376._less_less) == "table" and _rawget(_temp376._less_less, "__call_thing")) then
        _temp378 = _temp376:_less_less(_temp377)
      elseif _temp376._less_less ~= nil then
        _temp378 = _temp376._less_less

        elseif _temp376.no_undermethod ~= nil then
          _temp378 =  _temp376:no_undermethod(string:new("<<") , _temp377)
        else
          _error(exception:method_error(_temp376, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp376)
      if _n._less_less ~= nil then
        _temp378 = _n:_less_less(_temp377)
      elseif _n.no_undermethod ~= nil then
        _temp378 =  _n:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp376)
      if _f._less_less ~= nil then
        _temp378 = _f:_less_less(_temp377)
      elseif _f.no_undermethod ~= nil then
        _temp378 =  _f:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _temp376 == nil then
        _error(exception:null_error("_temp376", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp376))
      end

_dummy_ = _temp378 
end

    if _type(_temp369) == "function" or (_type(_temp369) == "table" and _rawget(_temp369, "__call_thing")) then
      _temp373 =  _temp369(_self)

    elseif _temp369 then
      _temp373 =  _temp369
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp373 =  _self:last()
      elseif _self.last ~= nil then
        _temp373 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp373 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp373 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp390 = function (_self)

local _temp379
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp379 =  _self:my()
      elseif _self.my ~= nil then
        _temp379 =  _self.my

        elseif my ~= nil then
          _temp379 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp380 = nil
    if _type(_temp369) == "function" or (_type(_temp369) == "table" and _rawget(_temp369, "__call_thing")) then
      _temp380 =  _temp369(_self)

    elseif _temp369 then
      _temp380 =  _temp369
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp380 =  _self:last()
      elseif _self.last ~= nil then
        _temp380 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp380 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp380 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp379)
      if _t == "table" then
                      if _type(_temp379.process) == "function" or (_type(_temp379.process) == "table" and _rawget(_temp379.process, "__call_thing")) then
        _temp379 = _temp379:process(_temp380)
      elseif _temp379.process ~= nil then
        _temp379 = _temp379.process

        elseif _temp379.no_undermethod ~= nil then
          _temp379 =  _temp379:no_undermethod(string:new("process") , _temp380)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp379)
      if _n.process ~= nil then
        _temp379 = _n:process(_temp380)
      elseif _n.no_undermethod ~= nil then
        _temp379 =  _n:no_undermethod(string:new("process") , _temp380)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp379)
      if _f.process ~= nil then
        _temp379 = _f:process(_temp380)
      elseif _f.no_undermethod ~= nil then
        _temp379 =  _f:no_undermethod(string:new("process") , _temp380)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp379 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp379))
      end


local _temp380 
do
local _temp381 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp381 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp381 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp381 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp381 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp381 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp381 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp381 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp381 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp381 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp381 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp382 = nil
      local _t = _type(_temp381)
      if _t == "table" then
                      if _type(_temp381.out) == "function" or (_type(_temp381.out) == "table" and _rawget(_temp381.out, "__call_thing")) then
        _temp382 = _temp381:out()
      elseif _temp381.out ~= nil then
        _temp382 = _temp381.out

        elseif _temp381.no_undermethod ~= nil then
          _temp382 =  _temp381:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp381, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp381)
      if _n.out ~= nil then
        _temp382 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp382 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp381, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp381)
      if _f.out ~= nil then
        _temp382 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp382 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp381, "out"))
      end

      elseif _temp381 == nil then
        _error(exception:null_error("_temp381", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp381))
      end

local _temp383 = nil
        local _t = _type(_temp379)
        if _t == "table" then
          if _rawget(_temp379, "__call_thing") == nil then
            _temp383 = _temp379
          else
                  if _temp379 == nil then
              if _type(_self._temp379) == "function" or (_type(_self._temp379) == "table" and _rawget(_self._temp379, "__call_thing")) then
        _temp383 =  _self:_temp379()
      elseif _self._temp379 ~= nil then
        _temp383 =  _self._temp379

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp379"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp383 =  _temp379(_self)
      end

          end
        elseif _t == "number" then
          _temp383 = _temp379
        elseif _t == "function" then
                if _temp379 == nil then
              if _type(_self._temp379) == "function" or (_type(_self._temp379) == "table" and _rawget(_self._temp379, "__call_thing")) then
        _temp383 =  _self:_temp379()
      elseif _self._temp379 ~= nil then
        _temp383 =  _self._temp379

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp379"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp383 =  _temp379(_self)
      end

        elseif _temp379 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp384 = nil
      local _t = _type(_temp383)
      if _t == "table" then
                      if _type(_temp383.out) == "function" or (_type(_temp383.out) == "table" and _rawget(_temp383.out, "__call_thing")) then
        _temp384 = _temp383:out()
      elseif _temp383.out ~= nil then
        _temp384 = _temp383.out

        elseif _temp383.no_undermethod ~= nil then
          _temp384 =  _temp383:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp383, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp383)
      if _n.out ~= nil then
        _temp384 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp384 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp383)
      if _f.out ~= nil then
        _temp384 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp384 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _temp383 == nil then
        _error(exception:null_error("_temp383", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp383))
      end

local _temp385 = string:new("\n")

local _temp386 = nil
do
local _temp387 = nil
        local _t = _type(_temp379)
        if _t == "table" then
          if _rawget(_temp379, "__call_thing") == nil then
            _temp387 = _temp379
          else
                  if _temp379 == nil then
              if _type(_self._temp379) == "function" or (_type(_self._temp379) == "table" and _rawget(_self._temp379, "__call_thing")) then
        _temp387 =  _self:_temp379()
      elseif _self._temp379 ~= nil then
        _temp387 =  _self._temp379

        elseif _self.no_undermethod ~= nil then
          _temp387 =  _self:no_undermethod(string:new("_temp379"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp387 =  _temp379(_self)
      end

          end
        elseif _t == "number" then
          _temp387 = _temp379
        elseif _t == "function" then
                if _temp379 == nil then
              if _type(_self._temp379) == "function" or (_type(_self._temp379) == "table" and _rawget(_self._temp379, "__call_thing")) then
        _temp387 =  _self:_temp379()
      elseif _self._temp379 ~= nil then
        _temp387 =  _self._temp379

        elseif _self.no_undermethod ~= nil then
          _temp387 =  _self:no_undermethod(string:new("_temp379"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp387 =  _temp379(_self)
      end

        elseif _temp379 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp387)
      if _t == "table" then
                      if _type(_temp387.var) == "function" or (_type(_temp387.var) == "table" and _rawget(_temp387.var, "__call_thing")) then
        _temp387 = _temp387:var()
      elseif _temp387.var ~= nil then
        _temp387 = _temp387.var

        elseif _temp387.no_undermethod ~= nil then
          _temp387 =  _temp387:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp387, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp387)
      if _n.var ~= nil then
        _temp387 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp387 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp387, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp387)
      if _f.var ~= nil then
        _temp387 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp387 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp387, "var"))
      end

      elseif _temp387 == nil then
        _error(exception:null_error("_temp387", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp387))
      end


_temp386 = string:new("return " .. _tostring(_temp387) .. "\n")
end
local _temp388
      local _t = _type(_temp382)
      if _t == "table" then
                      if _type(_temp382._less_less) == "function" or (_type(_temp382._less_less) == "table" and _rawget(_temp382._less_less, "__call_thing")) then
        _temp388 = _temp382:_less_less(_temp384)
      elseif _temp382._less_less ~= nil then
        _temp388 = _temp382._less_less

        elseif _temp382.no_undermethod ~= nil then
          _temp388 =  _temp382:no_undermethod(string:new("<<") , _temp384)
        else
          _error(exception:method_error(_temp382, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp382)
      if _n._less_less ~= nil then
        _temp388 = _n:_less_less(_temp384)
      elseif _n.no_undermethod ~= nil then
        _temp388 =  _n:no_undermethod(string:new("<<") , _temp384)
      else
        _error(exception:method_error(_temp382, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp382)
      if _f._less_less ~= nil then
        _temp388 = _f:_less_less(_temp384)
      elseif _f.no_undermethod ~= nil then
        _temp388 =  _f:no_undermethod(string:new("<<") , _temp384)
      else
        _error(exception:method_error(_temp382, "<<"))
      end

      elseif _temp382 == nil then
        _error(exception:null_error("_temp382", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp382))
      end

local _temp384
      local _t = _type(_temp388)
      if _t == "table" then
                      if _type(_temp388._less_less) == "function" or (_type(_temp388._less_less) == "table" and _rawget(_temp388._less_less, "__call_thing")) then
        _temp384 = _temp388:_less_less(_temp385)
      elseif _temp388._less_less ~= nil then
        _temp384 = _temp388._less_less

        elseif _temp388.no_undermethod ~= nil then
          _temp384 =  _temp388:no_undermethod(string:new("<<") , _temp385)
        else
          _error(exception:method_error(_temp388, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp388)
      if _n._less_less ~= nil then
        _temp384 = _n:_less_less(_temp385)
      elseif _n.no_undermethod ~= nil then
        _temp384 =  _n:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp388, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp388)
      if _f._less_less ~= nil then
        _temp384 = _f:_less_less(_temp385)
      elseif _f.no_undermethod ~= nil then
        _temp384 =  _f:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp388, "<<"))
      end

      elseif _temp388 == nil then
        _error(exception:null_error("_temp388", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp388))
      end

local _temp385
      local _t = _type(_temp384)
      if _t == "table" then
                      if _type(_temp384._less_less) == "function" or (_type(_temp384._less_less) == "table" and _rawget(_temp384._less_less, "__call_thing")) then
        _temp385 = _temp384:_less_less(_temp386)
      elseif _temp384._less_less ~= nil then
        _temp385 = _temp384._less_less

        elseif _temp384.no_undermethod ~= nil then
          _temp385 =  _temp384:no_undermethod(string:new("<<") , _temp386)
        else
          _error(exception:method_error(_temp384, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp384)
      if _n._less_less ~= nil then
        _temp385 = _n:_less_less(_temp386)
      elseif _n.no_undermethod ~= nil then
        _temp385 =  _n:no_undermethod(string:new("<<") , _temp386)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp384)
      if _f._less_less ~= nil then
        _temp385 = _f:_less_less(_temp386)
      elseif _f.no_undermethod ~= nil then
        _temp385 =  _f:no_undermethod(string:new("<<") , _temp386)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _temp384 == nil then
        _error(exception:null_error("_temp384", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp384))
      end

_temp380 = _temp385 
end

return _temp380
end


local _temp400 = function (_self)

local _temp391 = nil
        local _t = _type(_temp368)
        if _t == "table" then
          if _rawget(_temp368, "__call_thing") == nil then
            _temp391 = _temp368
          else
                  if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp391 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp391 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp391 =  _temp368(_self)
      end

          end
        elseif _t == "number" then
          _temp391 = _temp368
        elseif _t == "function" then
                if _temp368 == nil then
              if _type(_self._temp368) == "function" or (_type(_self._temp368) == "table" and _rawget(_self._temp368, "__call_thing")) then
        _temp391 =  _self:_temp368()
      elseif _self._temp368 ~= nil then
        _temp391 =  _self._temp368

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp368"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp391 =  _temp368(_self)
      end

        elseif _temp368 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp391)
      if _t == "table" then
                      if _type(_temp391.empty_question) == "function" or (_type(_temp391.empty_question) == "table" and _rawget(_temp391.empty_question, "__call_thing")) then
        _temp391 = _temp391:empty_question()
      elseif _temp391.empty_question ~= nil then
        _temp391 = _temp391.empty_question

        elseif _temp391.no_undermethod ~= nil then
          _temp391 =  _temp391:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp391, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp391)
      if _n.empty_question ~= nil then
        _temp391 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp391 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp391, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp391)
      if _f.empty_question ~= nil then
        _temp391 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp391 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp391, "empty?"))
      end

      elseif _temp391 == nil then
        _error(exception:null_error("_temp391", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp391))
      end



local _temp398 = function (_self)

local _temp392 
do
local _temp393 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp393 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp393 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp393 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp393 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp393 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp393 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp393 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp393 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp393 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp393 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp394 = nil
      local _t = _type(_temp393)
      if _t == "table" then
                      if _type(_temp393.out) == "function" or (_type(_temp393.out) == "table" and _rawget(_temp393.out, "__call_thing")) then
        _temp394 = _temp393:out()
      elseif _temp393.out ~= nil then
        _temp394 = _temp393.out

        elseif _temp393.no_undermethod ~= nil then
          _temp394 =  _temp393:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp393, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp393)
      if _n.out ~= nil then
        _temp394 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp394 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp393, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp393)
      if _f.out ~= nil then
        _temp394 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp394 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp393, "out"))
      end

      elseif _temp393 == nil then
        _error(exception:null_error("_temp393", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp393))
      end

local _temp395 = string:new("return object:null()")
local _temp396
      local _t = _type(_temp394)
      if _t == "table" then
                      if _type(_temp394._less_less) == "function" or (_type(_temp394._less_less) == "table" and _rawget(_temp394._less_less, "__call_thing")) then
        _temp396 = _temp394:_less_less(_temp395)
      elseif _temp394._less_less ~= nil then
        _temp396 = _temp394._less_less

        elseif _temp394.no_undermethod ~= nil then
          _temp396 =  _temp394:no_undermethod(string:new("<<") , _temp395)
        else
          _error(exception:method_error(_temp394, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp394)
      if _n._less_less ~= nil then
        _temp396 = _n:_less_less(_temp395)
      elseif _n.no_undermethod ~= nil then
        _temp396 =  _n:no_undermethod(string:new("<<") , _temp395)
      else
        _error(exception:method_error(_temp394, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp394)
      if _f._less_less ~= nil then
        _temp396 = _f:_less_less(_temp395)
      elseif _f.no_undermethod ~= nil then
        _temp396 =  _f:no_undermethod(string:new("<<") , _temp395)
      else
        _error(exception:method_error(_temp394, "<<"))
      end

      elseif _temp394 == nil then
        _error(exception:null_error("_temp394", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp394))
      end

_temp392 = _temp396 
end

return _temp392
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp391,_temp398)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp391,_temp398)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp391,_temp398)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp391,_temp398)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp373,_temp390,_temp400)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp373,_temp390,_temp400)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp373,_temp390,_temp400)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp373,_temp390,_temp400)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp400 =  _self:my()
      elseif _self.my ~= nil then
        _temp400 =  _self.my

        elseif my ~= nil then
          _temp400 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp400)
      if _t == "table" then
                      if _type(_temp400.env) == "function" or (_type(_temp400.env) == "table" and _rawget(_temp400.env, "__call_thing")) then
        _temp400 = _temp400:env()
      elseif _temp400.env ~= nil then
        _temp400 = _temp400.env

        elseif _temp400.no_undermethod ~= nil then
          _temp400 =  _temp400:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp400, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp400)
      if _n.env ~= nil then
        _temp400 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp400 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp400, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp400)
      if _f.env ~= nil then
        _temp400 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp400 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp400, "env"))
      end

      elseif _temp400 == nil then
        _error(exception:null_error("_temp400", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp400))
      end

      local _t = _type(_temp400)
      if _t == "table" then
                      if _type(_temp400.pop_underscope) == "function" or (_type(_temp400.pop_underscope) == "table" and _rawget(_temp400.pop_underscope, "__call_thing")) then
        _dummy_ = _temp400:pop_underscope()
      elseif _temp400.pop_underscope ~= nil then
        _dummy_ = _temp400.pop_underscope

        elseif _temp400.no_undermethod ~= nil then
          _dummy_ =  _temp400:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp400, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp400)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp400, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp400)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp400, "pop_scope"))
      end

      elseif _temp400 == nil then
        _error(exception:null_error("_temp400", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp400))
      end

do
local _temp401 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp401 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp401 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp401 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp401 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp401 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp401 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp401 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp401 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp401 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp401 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp402 = nil
      local _t = _type(_temp401)
      if _t == "table" then
                      if _type(_temp401.out) == "function" or (_type(_temp401.out) == "table" and _rawget(_temp401.out, "__call_thing")) then
        _temp402 = _temp401:out()
      elseif _temp401.out ~= nil then
        _temp402 = _temp401.out

        elseif _temp401.no_undermethod ~= nil then
          _temp402 =  _temp401:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp401, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp401)
      if _n.out ~= nil then
        _temp402 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp402 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp401, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp401)
      if _f.out ~= nil then
        _temp402 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp402 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp401, "out"))
      end

      elseif _temp401 == nil then
        _error(exception:null_error("_temp401", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp401))
      end

local _temp403 = string:new("\nend\n")
local _temp404
      local _t = _type(_temp402)
      if _t == "table" then
                      if _type(_temp402._less_less) == "function" or (_type(_temp402._less_less) == "table" and _rawget(_temp402._less_less, "__call_thing")) then
        _temp404 = _temp402:_less_less(_temp403)
      elseif _temp402._less_less ~= nil then
        _temp404 = _temp402._less_less

        elseif _temp402.no_undermethod ~= nil then
          _temp404 =  _temp402:no_undermethod(string:new("<<") , _temp403)
        else
          _error(exception:method_error(_temp402, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp402)
      if _n._less_less ~= nil then
        _temp404 = _n:_less_less(_temp403)
      elseif _n.no_undermethod ~= nil then
        _temp404 =  _n:no_undermethod(string:new("<<") , _temp403)
      else
        _error(exception:method_error(_temp402, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp402)
      if _f._less_less ~= nil then
        _temp404 = _f:_less_less(_temp403)
      elseif _f.no_undermethod ~= nil then
        _temp404 =  _f:no_undermethod(string:new("<<") , _temp403)
      else
        _error(exception:method_error(_temp402, "<<"))
      end

      elseif _temp402 == nil then
        _error(exception:null_error("_temp402", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp402))
      end

_dummy_ = _temp404 
end

do
local _temp390
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp390 =  _temp334(_self)

    elseif _temp334 then
      _temp390 =  _temp334
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp390 =  _self:res()
      elseif _self.res ~= nil then
        _temp390 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp390 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp390 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp405 = string:new("function")

local _temp406 = string:new("type")

_temp390:set(_temp406, _temp405)
end

do
local _temp407 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp407 =  _self:my()
      elseif _self.my ~= nil then
        _temp407 =  _self.my

        elseif my ~= nil then
          _temp407 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp408 = nil
      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.liftable_underfunctions) == "function" or (_type(_temp407.liftable_underfunctions) == "table" and _rawget(_temp407.liftable_underfunctions, "__call_thing")) then
        _temp408 = _temp407:liftable_underfunctions()
      elseif _temp407.liftable_underfunctions ~= nil then
        _temp408 = _temp407.liftable_underfunctions

        elseif _temp407.no_undermethod ~= nil then
          _temp408 =  _temp407:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp407, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.liftable_underfunctions ~= nil then
        _temp408 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp408 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp407, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.liftable_underfunctions ~= nil then
        _temp408 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp408 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp407, "liftable_functions"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end

local _temp409 = nil
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp409 =  _temp334(_self)

    elseif _temp334 then
      _temp409 =  _temp334
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp409 =  _self:res()
      elseif _self.res ~= nil then
        _temp409 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp409 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp409 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp410
      local _t = _type(_temp408)
      if _t == "table" then
                      if _type(_temp408._less_less) == "function" or (_type(_temp408._less_less) == "table" and _rawget(_temp408._less_less, "__call_thing")) then
        _temp410 = _temp408:_less_less(_temp409)
      elseif _temp408._less_less ~= nil then
        _temp410 = _temp408._less_less

        elseif _temp408.no_undermethod ~= nil then
          _temp410 =  _temp408:no_undermethod(string:new("<<") , _temp409)
        else
          _error(exception:method_error(_temp408, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp408)
      if _n._less_less ~= nil then
        _temp410 = _n:_less_less(_temp409)
      elseif _n.no_undermethod ~= nil then
        _temp410 =  _n:no_undermethod(string:new("<<") , _temp409)
      else
        _error(exception:method_error(_temp408, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp408)
      if _f._less_less ~= nil then
        _temp410 = _f:_less_less(_temp409)
      elseif _f.no_undermethod ~= nil then
        _temp410 =  _f:no_undermethod(string:new("<<") , _temp409)
      else
        _error(exception:method_error(_temp408, "<<"))
      end

      elseif _temp408 == nil then
        _error(exception:null_error("_temp408", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp408))
      end

_dummy_ = _temp410 
end

local _temp411
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp373 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp373 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp373 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp373 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp373 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp373 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp373 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp373 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp373)
      if _t == "table" then
                      if _type(_temp373.upvars) == "function" or (_type(_temp373.upvars) == "table" and _rawget(_temp373.upvars, "__call_thing")) then
        _temp373 = _temp373:upvars()
      elseif _temp373.upvars ~= nil then
        _temp373 = _temp373.upvars

        elseif _temp373.no_undermethod ~= nil then
          _temp373 =  _temp373:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp373, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp373)
      if _n.upvars ~= nil then
        _temp373 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp373 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp373, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp373)
      if _f.upvars ~= nil then
        _temp373 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp373 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp373, "upvars"))
      end

      elseif _temp373 == nil then
        _error(exception:null_error("_temp373", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp373))
      end



local _temp415 = function (_self)

local _temp412 = nil
do
local _temp413 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp413 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp413 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp413 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp413 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp413 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp413 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp413 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp413 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.var) == "function" or (_type(_temp413.var) == "table" and _rawget(_temp413.var, "__call_thing")) then
        _temp413 = _temp413:var()
      elseif _temp413.var ~= nil then
        _temp413 = _temp413.var

        elseif _temp413.no_undermethod ~= nil then
          _temp413 =  _temp413:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp413, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.var ~= nil then
        _temp413 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp413 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp413, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.var ~= nil then
        _temp413 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp413 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp413, "var"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("_temp413", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end


_temp412 = string:new("_lifted_call(" .. _tostring(_temp413) .. ", {})")
end

return _temp412
end


local _temp418 = function (_self)

local _temp416 = nil
        local _t = _type(_temp334)
        if _t == "table" then
          if _rawget(_temp334, "__call_thing") == nil then
            _temp416 = _temp334
          else
                  if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp416 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp416 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp416 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp416 =  _temp334(_self)
      end

          end
        elseif _t == "number" then
          _temp416 = _temp334
        elseif _t == "function" then
                if _temp334 == nil then
              if _type(_self._temp334) == "function" or (_type(_self._temp334) == "table" and _rawget(_self._temp334, "__call_thing")) then
        _temp416 =  _self:_temp334()
      elseif _self._temp334 ~= nil then
        _temp416 =  _self._temp334

        elseif _self.no_undermethod ~= nil then
          _temp416 =  _self:no_undermethod(string:new("_temp334"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp416 =  _temp334(_self)
      end

        elseif _temp334 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp416)
      if _t == "table" then
                      if _type(_temp416.var) == "function" or (_type(_temp416.var) == "table" and _rawget(_temp416.var, "__call_thing")) then
        return _temp416:var()
      elseif _temp416.var ~= nil then
        return _temp416.var

        elseif _temp416.no_undermethod ~= nil then
          return  _temp416:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp416, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp416)
      if _n.var ~= nil then
        return _n:var()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp416, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp416)
      if _f.var ~= nil then
        return _f:var()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp416, "var"))
      end

      elseif _temp416 == nil then
        _error(exception:null_error("_temp416", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp416))
      end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp411 =  true_question(_self, _temp373,_temp415,_temp418)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp411 =  _self:true_question(_temp373,_temp415,_temp418)
      elseif _self.true_question ~= nil then
        _temp411 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp411 =  _self:no_undermethod(string:new("true?") , _temp373,_temp415,_temp418)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp411 =  no_undermethod(_self, string:new("true?") , _temp373,_temp415,_temp418)
      else
        _error(exception:name_error("true?"))
      end
    end

local _temp419
    if _type(_temp329) == "function" or (_type(_temp329) == "table" and _rawget(_temp329, "__call_thing")) then
      _temp418 =  _temp329(_self)

    elseif _temp329 then
      _temp418 =  _temp329
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp418 =  _self:var()
      elseif _self.var ~= nil then
        _temp418 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp418 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp418 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(_temp411) == "function" or (_type(_temp411) == "table" and _rawget(_temp411, "__call_thing")) then
      _temp415 =  _temp411(_self)

    elseif _temp411 then
      _temp415 =  _temp411
    else
            if _type(_self.lifted_undercall) == "function" or (_type(_self.lifted_undercall) == "table" and _rawget(_self.lifted_undercall, "__call_thing")) then
        _temp415 =  _self:lifted_undercall()
      elseif _self.lifted_undercall ~= nil then
        _temp415 =  _self.lifted_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp415 =  _self:no_undermethod(string:new("lifted_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp415 =  no_undermethod(_self, string:new("lifted_call"))
      else
        _error(exception:name_error("lifted_call"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp419 =  set_underresult(_self, _temp418,_temp415)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp419 =  _self:set_underresult(_temp418,_temp415)
      elseif _self.set_underresult ~= nil then
        _temp419 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp419 =  _self:no_undermethod(string:new("set_result") , _temp418,_temp415)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp419 =  no_undermethod(_self, string:new("set_result") , _temp418,_temp415)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp415 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp415 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp415 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp415 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp415 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp415 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.upvars) == "function" or (_type(_temp415.upvars) == "table" and _rawget(_temp415.upvars, "__call_thing")) then
        _temp415 = _temp415:upvars()
      elseif _temp415.upvars ~= nil then
        _temp415 = _temp415.upvars

        elseif _temp415.no_undermethod ~= nil then
          _temp415 =  _temp415:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp415, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.upvars ~= nil then
        _temp415 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp415 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp415, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.upvars ~= nil then
        _temp415 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp415 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp415, "upvars"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end



local _temp435 = function (_self)

local _temp420
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp420 =  _self:my()
      elseif _self.my ~= nil then
        _temp420 =  _self.my

        elseif my ~= nil then
          _temp420 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp420)
      if _t == "table" then
                      if _type(_temp420.env) == "function" or (_type(_temp420.env) == "table" and _rawget(_temp420.env, "__call_thing")) then
        _temp420 = _temp420:env()
      elseif _temp420.env ~= nil then
        _temp420 = _temp420.env

        elseif _temp420.no_undermethod ~= nil then
          _temp420 =  _temp420:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("e", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp420)
      if _n.env ~= nil then
        _temp420 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp420 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp420)
      if _f.env ~= nil then
        _temp420 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp420 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _temp420 == nil then
        _error(exception:null_error("e", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp420))
      end


local _temp421 
do
local _temp422 = nil
        local _t = _type(_temp419)
        if _t == "table" then
          if _rawget(_temp419, "__call_thing") == nil then
            _temp422 = _temp419
          else
                  if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp422 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp422 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp422 =  _temp419(_self)
      end

          end
        elseif _t == "number" then
          _temp422 = _temp419
        elseif _t == "function" then
                if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp422 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp422 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp422 =  _temp419(_self)
      end

        elseif _temp419 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp423 = nil
      local _t = _type(_temp422)
      if _t == "table" then
                      if _type(_temp422.out) == "function" or (_type(_temp422.out) == "table" and _rawget(_temp422.out, "__call_thing")) then
        _temp423 = _temp422:out()
      elseif _temp422.out ~= nil then
        _temp423 = _temp422.out

        elseif _temp422.no_undermethod ~= nil then
          _temp423 =  _temp422:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp422, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp422)
      if _n.out ~= nil then
        _temp423 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp423 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp422, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp422)
      if _f.out ~= nil then
        _temp423 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp423 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp422, "out"))
      end

      elseif _temp422 == nil then
        _error(exception:null_error("_temp422", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp422))
      end

local _temp424 = nil
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp424 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp424 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp424 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp424 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp424 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp424 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424.upvars) == "function" or (_type(_temp424.upvars) == "table" and _rawget(_temp424.upvars, "__call_thing")) then
        _temp424 = _temp424:upvars()
      elseif _temp424.upvars ~= nil then
        _temp424 = _temp424.upvars

        elseif _temp424.no_undermethod ~= nil then
          _temp424 =  _temp424:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp424, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n.upvars ~= nil then
        _temp424 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp424, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f.upvars ~= nil then
        _temp424 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp424, "upvars"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end


local _temp433 = function (_self, _temp425)
        if _temp425 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp426 = nil
do
local _temp427 = nil
        local _t = _type(_temp419)
        if _t == "table" then
          if _rawget(_temp419, "__call_thing") == nil then
            _temp427 = _temp419
          else
                  if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp427 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp427 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp427 =  _temp419(_self)
      end

          end
        elseif _t == "number" then
          _temp427 = _temp419
        elseif _t == "function" then
                if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp427 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp427 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp427 =  _temp419(_self)
      end

        elseif _temp419 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp427)
      if _t == "table" then
                      if _type(_temp427.var) == "function" or (_type(_temp427.var) == "table" and _rawget(_temp427.var, "__call_thing")) then
        _temp427 = _temp427:var()
      elseif _temp427.var ~= nil then
        _temp427 = _temp427.var

        elseif _temp427.no_undermethod ~= nil then
          _temp427 =  _temp427:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp427, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp427)
      if _n.var ~= nil then
        _temp427 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp427 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp427, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp427)
      if _f.var ~= nil then
        _temp427 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp427 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp427, "var"))
      end

      elseif _temp427 == nil then
        _error(exception:null_error("_temp427", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp427))
      end


local _temp428
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp428 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp428 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp428 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp428 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp428 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp428 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp428 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp428 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp428 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp428 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp428)
      if _t == "table" then
                      if _type(_temp428.env) == "function" or (_type(_temp428.env) == "table" and _rawget(_temp428.env, "__call_thing")) then
        _temp428 = _temp428:env()
      elseif _temp428.env ~= nil then
        _temp428 = _temp428.env

        elseif _temp428.no_undermethod ~= nil then
          _temp428 =  _temp428:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp428, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp428)
      if _n.env ~= nil then
        _temp428 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp428 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp428, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp428)
      if _f.env ~= nil then
        _temp428 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp428 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp428, "env"))
      end

      elseif _temp428 == nil then
        _error(exception:null_error("_temp428", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp428))
      end

local _temp429 = nil
    if _type(_temp425) == "function" or (_type(_temp425) == "table" and _rawget(_temp425, "__call_thing")) then
      _temp429 =  _temp425(_self)

    elseif _temp425 then
      _temp429 =  _temp425
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp429 =  _self:u()
      elseif _self.u ~= nil then
        _temp429 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp429 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp429 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp428 = _temp428:get(_temp429)
end

local _temp430
do
        local _t = _type(_temp331)
        if _t == "table" then
          if _rawget(_temp331, "__call_thing") == nil then
            _temp430 = _temp331
          else
                  if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp430 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp430 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp430 =  _temp331(_self)
      end

          end
        elseif _t == "number" then
          _temp430 = _temp331
        elseif _t == "function" then
                if _temp331 == nil then
              if _type(_self._temp331) == "function" or (_type(_self._temp331) == "table" and _rawget(_self._temp331, "__call_thing")) then
        _temp430 =  _self:_temp331()
      elseif _self._temp331 ~= nil then
        _temp430 =  _self._temp331

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp331"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp430 =  _temp331(_self)
      end

        elseif _temp331 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.env) == "function" or (_type(_temp430.env) == "table" and _rawget(_temp430.env, "__call_thing")) then
        _temp430 = _temp430:env()
      elseif _temp430.env ~= nil then
        _temp430 = _temp430.env

        elseif _temp430.no_undermethod ~= nil then
          _temp430 =  _temp430:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp430, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.env ~= nil then
        _temp430 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp430 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp430, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.env ~= nil then
        _temp430 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp430 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp430, "env"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("_temp430", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end

local _temp431 = nil
    if _type(_temp425) == "function" or (_type(_temp425) == "table" and _rawget(_temp425, "__call_thing")) then
      _temp431 =  _temp425(_self)

    elseif _temp425 then
      _temp431 =  _temp425
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp431 =  _self:u()
      elseif _self.u ~= nil then
        _temp431 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp431 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp431 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp430 = _temp430:get(_temp431)
end

_temp426 = string:new("" .. _tostring(_temp427) .. ".arg_table['" .. _tostring(_temp428) .. "'] = " .. _tostring(_temp430) .. "")
end

return _temp426
end

      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424.map) == "function" or (_type(_temp424.map) == "table" and _rawget(_temp424.map, "__call_thing")) then
        _temp424 = _temp424:map(_temp433)
      elseif _temp424.map ~= nil then
        _temp424 = _temp424.map

        elseif _temp424.no_undermethod ~= nil then
          _temp424 =  _temp424:no_undermethod(string:new("map") , _temp433)
        else
          _error(exception:method_error(_temp424, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n.map ~= nil then
        _temp424 = _n:map(_temp433)
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("map") , _temp433)
      else
        _error(exception:method_error(_temp424, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f.map ~= nil then
        _temp424 = _f:map(_temp433)
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("map") , _temp433)
      else
        _error(exception:method_error(_temp424, "map"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end

_temp433 = string:new("\n")

      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424.join) == "function" or (_type(_temp424.join) == "table" and _rawget(_temp424.join, "__call_thing")) then
        _temp424 = _temp424:join(_temp433)
      elseif _temp424.join ~= nil then
        _temp424 = _temp424.join

        elseif _temp424.no_undermethod ~= nil then
          _temp424 =  _temp424:no_undermethod(string:new("join") , _temp433)
        else
          _error(exception:method_error(_temp424, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n.join ~= nil then
        _temp424 = _n:join(_temp433)
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("join") , _temp433)
      else
        _error(exception:method_error(_temp424, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f.join ~= nil then
        _temp424 = _f:join(_temp433)
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("join") , _temp433)
      else
        _error(exception:method_error(_temp424, "join"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end

local _temp433
      local _t = _type(_temp423)
      if _t == "table" then
                      if _type(_temp423._less_less) == "function" or (_type(_temp423._less_less) == "table" and _rawget(_temp423._less_less, "__call_thing")) then
        _temp433 = _temp423:_less_less(_temp424)
      elseif _temp423._less_less ~= nil then
        _temp433 = _temp423._less_less

        elseif _temp423.no_undermethod ~= nil then
          _temp433 =  _temp423:no_undermethod(string:new("<<") , _temp424)
        else
          _error(exception:method_error(_temp423, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp423)
      if _n._less_less ~= nil then
        _temp433 = _n:_less_less(_temp424)
      elseif _n.no_undermethod ~= nil then
        _temp433 =  _n:no_undermethod(string:new("<<") , _temp424)
      else
        _error(exception:method_error(_temp423, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp423)
      if _f._less_less ~= nil then
        _temp433 = _f:_less_less(_temp424)
      elseif _f.no_undermethod ~= nil then
        _temp433 =  _f:no_undermethod(string:new("<<") , _temp424)
      else
        _error(exception:method_error(_temp423, "<<"))
      end

      elseif _temp423 == nil then
        _error(exception:null_error("_temp423", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp423))
      end

_temp421 = _temp433 
end

return _temp421
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp415,_temp435)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp415,_temp435)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp415,_temp435)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp415,_temp435)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp419) == "function" or (_type(_temp419) == "table" and _rawget(_temp419, "__call_thing")) then
      return  _temp419(_self)

    elseif _temp419 then
      return  _temp419
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282.walk) == "function" or (_type(_temp282.walk) == "table" and _rawget(_temp282.walk, "__call_thing")) then
        _dummy_ = _temp282:walk(_temp4,_temp415)
      elseif _temp282.walk ~= nil then
        _dummy_ = _temp282.walk

        elseif _temp282.no_undermethod ~= nil then
          _dummy_ =  _temp282:no_undermethod(string:new("walk") , _temp4,_temp415)
        else
          _error(exception:method_error(_temp282, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp415)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp415)
      else
        _error(exception:method_error(_temp282, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp415)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp415)
      else
        _error(exception:method_error(_temp282, "walk"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("_temp282", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp415 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp415 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp415 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp415 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp415 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp415 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp415 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp415 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp443 = function (_self, _temp437,_temp436)
        if _temp437 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp436 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp436 =  null(_self)

    elseif null then
      _temp436 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp436 =  _self:null()
      elseif _self.null ~= nil then
        _temp436 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp436 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp436 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp438
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp438 =  _self:my()
      elseif _self.my ~= nil then
        _temp438 =  _self.my

        elseif my ~= nil then
          _temp438 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.env) == "function" or (_type(_temp438.env) == "table" and _rawget(_temp438.env, "__call_thing")) then
        _temp438 = _temp438:env()
      elseif _temp438.env ~= nil then
        _temp438 = _temp438.env

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.env ~= nil then
        _temp438 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.env ~= nil then
        _temp438 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end

local _temp439 = nil
        local _t = _type(_temp437)
        if _t == "table" then
          if _rawget(_temp437, "__call_thing") == nil then
            _temp439 = _temp437
          else
                  if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

          end
        elseif _t == "number" then
          _temp439 = _temp437
        elseif _t == "function" then
                if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

        elseif _temp437 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp439)
      if _t == "table" then
                      if _type(_temp439.id) == "function" or (_type(_temp439.id) == "table" and _rawget(_temp439.id, "__call_thing")) then
        _temp439 = _temp439:id()
      elseif _temp439.id ~= nil then
        _temp439 = _temp439.id

        elseif _temp439.no_undermethod ~= nil then
          _temp439 =  _temp439:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp439, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp439)
      if _n.id ~= nil then
        _temp439 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp439 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp439, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp439)
      if _f.id ~= nil then
        _temp439 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp439 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp439, "id"))
      end

      elseif _temp439 == nil then
        _error(exception:null_error("_temp439", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp439))
      end


      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.new_undervar) == "function" or (_type(_temp438.new_undervar) == "table" and _rawget(_temp438.new_undervar, "__call_thing")) then
        _temp438 = _temp438:new_undervar(_temp439)
      elseif _temp438.new_undervar ~= nil then
        _temp438 = _temp438.new_undervar

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("new_var") , _temp439)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.new_undervar ~= nil then
        _temp438 = _n:new_undervar(_temp439)
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("new_var") , _temp439)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.new_undervar ~= nil then
        _temp438 = _f:new_undervar(_temp439)
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("new_var") , _temp439)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end


    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp439 =  _temp438(_self)

    elseif _temp438 then
      _temp439 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp439 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp439 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp439 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp439 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp440 = string:new("")

local _temp441 = string:new("arg")

local _temp442 = {}
_temp442[string:new("arg_type")] = _temp441
_temp442 = hash:new(_temp442)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp439,_temp440,_temp442)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp439,_temp440,_temp442)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp439,_temp440,_temp442)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp439,_temp440,_temp442)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.walk) == "function" or (_type(_temp415.walk) == "table" and _rawget(_temp415.walk, "__call_thing")) then
        _dummy_ = _temp415:walk(_temp4,_temp443)
      elseif _temp415.walk ~= nil then
        _dummy_ = _temp415.walk

        elseif _temp415.no_undermethod ~= nil then
          _dummy_ =  _temp415:no_undermethod(string:new("walk") , _temp4,_temp443)
        else
          _error(exception:method_error(_temp415, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp443)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp443)
      else
        _error(exception:method_error(_temp415, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp443)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp443)
      else
        _error(exception:method_error(_temp415, "walk"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp443 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp443 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp443 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp443 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp443 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp443 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp443 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp443 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp443 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp443 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp452 = function (_self, _temp445,_temp444)
        if _temp445 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp444 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp444 =  null(_self)

    elseif null then
      _temp444 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp444 =  _self:null()
      elseif _self.null ~= nil then
        _temp444 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp444 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp444 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp446
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp446 =  _self:my()
      elseif _self.my ~= nil then
        _temp446 =  _self.my

        elseif my ~= nil then
          _temp446 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446.env) == "function" or (_type(_temp446.env) == "table" and _rawget(_temp446.env, "__call_thing")) then
        _temp446 = _temp446:env()
      elseif _temp446.env ~= nil then
        _temp446 = _temp446.env

        elseif _temp446.no_undermethod ~= nil then
          _temp446 =  _temp446:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp446)
      if _n.env ~= nil then
        _temp446 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp446 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f.env ~= nil then
        _temp446 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp446 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end

local _temp447 = nil
        local _t = _type(_temp445)
        if _t == "table" then
          if _rawget(_temp445, "__call_thing") == nil then
            _temp447 = _temp445
          else
                  if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

          end
        elseif _t == "number" then
          _temp447 = _temp445
        elseif _t == "function" then
                if _temp445 == nil then
              if _type(_self._temp445) == "function" or (_type(_self._temp445) == "table" and _rawget(_self._temp445, "__call_thing")) then
        _temp447 =  _self:_temp445()
      elseif _self._temp445 ~= nil then
        _temp447 =  _self._temp445

        elseif _self.no_undermethod ~= nil then
          _temp447 =  _self:no_undermethod(string:new("_temp445"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp447 =  _temp445(_self)
      end

        elseif _temp445 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp447)
      if _t == "table" then
                      if _type(_temp447.id) == "function" or (_type(_temp447.id) == "table" and _rawget(_temp447.id, "__call_thing")) then
        _temp447 = _temp447:id()
      elseif _temp447.id ~= nil then
        _temp447 = _temp447.id

        elseif _temp447.no_undermethod ~= nil then
          _temp447 =  _temp447:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp447, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp447)
      if _n.id ~= nil then
        _temp447 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp447 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp447, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp447)
      if _f.id ~= nil then
        _temp447 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp447 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp447, "id"))
      end

      elseif _temp447 == nil then
        _error(exception:null_error("_temp447", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp447))
      end


      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446.new_undervar) == "function" or (_type(_temp446.new_undervar) == "table" and _rawget(_temp446.new_undervar, "__call_thing")) then
        _temp446 = _temp446:new_undervar(_temp447)
      elseif _temp446.new_undervar ~= nil then
        _temp446 = _temp446.new_undervar

        elseif _temp446.no_undermethod ~= nil then
          _temp446 =  _temp446:no_undermethod(string:new("new_var") , _temp447)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp446)
      if _n.new_undervar ~= nil then
        _temp446 = _n:new_undervar(_temp447)
      elseif _n.no_undermethod ~= nil then
        _temp446 =  _n:no_undermethod(string:new("new_var") , _temp447)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f.new_undervar ~= nil then
        _temp446 = _f:new_undervar(_temp447)
      elseif _f.no_undermethod ~= nil then
        _temp446 =  _f:no_undermethod(string:new("new_var") , _temp447)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end


_temp447 = string:new("...")

local _temp448 = nil
do
local _temp449 = nil
    if _type(_temp446) == "function" or (_type(_temp446) == "table" and _rawget(_temp446, "__call_thing")) then
      _temp449 =  _temp446(_self)

    elseif _temp446 then
      _temp449 =  _temp446
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp449 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp449 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp449 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp449 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp448 = string:new("local " .. _tostring(_temp449) .. " = array:new(...)\n")
end

local _temp450 = string:new("var_arg")

local _temp451 = {}
_temp451[string:new("arg_type")] = _temp450
_temp451 = hash:new(_temp451)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp447,_temp448,_temp451)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp447,_temp448,_temp451)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp447,_temp448,_temp451)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp447,_temp448,_temp451)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp443)
      if _t == "table" then
                      if _type(_temp443.walk) == "function" or (_type(_temp443.walk) == "table" and _rawget(_temp443.walk, "__call_thing")) then
        _dummy_ = _temp443:walk(_temp4,_temp452)
      elseif _temp443.walk ~= nil then
        _dummy_ = _temp443.walk

        elseif _temp443.no_undermethod ~= nil then
          _dummy_ =  _temp443:no_undermethod(string:new("walk") , _temp4,_temp452)
        else
          _error(exception:method_error(_temp443, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp443)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp452)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp452)
      else
        _error(exception:method_error(_temp443, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp443)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp452)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp452)
      else
        _error(exception:method_error(_temp443, "walk"))
      end

      elseif _temp443 == nil then
        _error(exception:null_error("_temp443", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp443))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp452 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp452 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp452 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp452 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp452 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp452 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp452 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp452 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp452 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp452 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp478 = function (_self, _temp454,_temp453)
        if _temp454 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp453 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp453 =  null(_self)

    elseif null then
      _temp453 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp453 =  _self:null()
      elseif _self.null ~= nil then
        _temp453 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp453 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp453 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp455
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp455 =  _self:my()
      elseif _self.my ~= nil then
        _temp455 =  _self.my

        elseif my ~= nil then
          _temp455 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp455)
      if _t == "table" then
                      if _type(_temp455.env) == "function" or (_type(_temp455.env) == "table" and _rawget(_temp455.env, "__call_thing")) then
        _temp455 = _temp455:env()
      elseif _temp455.env ~= nil then
        _temp455 = _temp455.env

        elseif _temp455.no_undermethod ~= nil then
          _temp455 =  _temp455:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp455)
      if _n.env ~= nil then
        _temp455 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp455 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp455)
      if _f.env ~= nil then
        _temp455 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp455 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp455 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp455))
      end

local _temp456 = nil
        local _t = _type(_temp454)
        if _t == "table" then
          if _rawget(_temp454, "__call_thing") == nil then
            _temp456 = _temp454
          else
                  if _temp454 == nil then
              if _type(_self._temp454) == "function" or (_type(_self._temp454) == "table" and _rawget(_self._temp454, "__call_thing")) then
        _temp456 =  _self:_temp454()
      elseif _self._temp454 ~= nil then
        _temp456 =  _self._temp454

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp454"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp456 =  _temp454(_self)
      end

          end
        elseif _t == "number" then
          _temp456 = _temp454
        elseif _t == "function" then
                if _temp454 == nil then
              if _type(_self._temp454) == "function" or (_type(_self._temp454) == "table" and _rawget(_self._temp454, "__call_thing")) then
        _temp456 =  _self:_temp454()
      elseif _self._temp454 ~= nil then
        _temp456 =  _self._temp454

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp454"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp456 =  _temp454(_self)
      end

        elseif _temp454 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp456)
      if _t == "table" then
                      if _type(_temp456.id) == "function" or (_type(_temp456.id) == "table" and _rawget(_temp456.id, "__call_thing")) then
        _temp456 = _temp456:id()
      elseif _temp456.id ~= nil then
        _temp456 = _temp456.id

        elseif _temp456.no_undermethod ~= nil then
          _temp456 =  _temp456:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp456, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp456)
      if _n.id ~= nil then
        _temp456 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp456 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp456, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp456)
      if _f.id ~= nil then
        _temp456 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp456 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp456, "id"))
      end

      elseif _temp456 == nil then
        _error(exception:null_error("_temp456", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp456))
      end


      local _t = _type(_temp455)
      if _t == "table" then
                      if _type(_temp455.new_undervar) == "function" or (_type(_temp455.new_undervar) == "table" and _rawget(_temp455.new_undervar, "__call_thing")) then
        _temp455 = _temp455:new_undervar(_temp456)
      elseif _temp455.new_undervar ~= nil then
        _temp455 = _temp455.new_undervar

        elseif _temp455.no_undermethod ~= nil then
          _temp455 =  _temp455:no_undermethod(string:new("new_var") , _temp456)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp455)
      if _n.new_undervar ~= nil then
        _temp455 = _n:new_undervar(_temp456)
      elseif _n.no_undermethod ~= nil then
        _temp455 =  _n:no_undermethod(string:new("new_var") , _temp456)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp455)
      if _f.new_undervar ~= nil then
        _temp455 = _f:new_undervar(_temp456)
      elseif _f.no_undermethod ~= nil then
        _temp455 =  _f:no_undermethod(string:new("new_var") , _temp456)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp455 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp455))
      end


local _temp457
        local _t = _type(_temp454)
        if _t == "table" then
          if _rawget(_temp454, "__call_thing") == nil then
            _temp456 = _temp454
          else
                  if _temp454 == nil then
              if _type(_self._temp454) == "function" or (_type(_self._temp454) == "table" and _rawget(_self._temp454, "__call_thing")) then
        _temp456 =  _self:_temp454()
      elseif _self._temp454 ~= nil then
        _temp456 =  _self._temp454

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp454"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp456 =  _temp454(_self)
      end

          end
        elseif _t == "number" then
          _temp456 = _temp454
        elseif _t == "function" then
                if _temp454 == nil then
              if _type(_self._temp454) == "function" or (_type(_self._temp454) == "table" and _rawget(_self._temp454, "__call_thing")) then
        _temp456 =  _self:_temp454()
      elseif _self._temp454 ~= nil then
        _temp456 =  _self._temp454

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp454"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp456 =  _temp454(_self)
      end

        elseif _temp454 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp456)
      if _t == "table" then
                      if _type(_temp456.value) == "function" or (_type(_temp456.value) == "table" and _rawget(_temp456.value, "__call_thing")) then
        _temp456 = _temp456:value()
      elseif _temp456.value ~= nil then
        _temp456 = _temp456.value

        elseif _temp456.no_undermethod ~= nil then
          _temp456 =  _temp456:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp456, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp456)
      if _n.value ~= nil then
        _temp456 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp456 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp456, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp456)
      if _f.value ~= nil then
        _temp456 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp456 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp456, "value"))
      end

      elseif _temp456 == nil then
        _error(exception:null_error("_temp456", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp456))
      end


local _temp458 = nil
    if _type(_temp455) == "function" or (_type(_temp455) == "table" and _rawget(_temp455, "__call_thing")) then
      _temp458 =  _temp455(_self)

    elseif _temp455 then
      _temp458 =  _temp455
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp458 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp458 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp458 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp458 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp457 =  process(_self, _temp456,_temp458)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp457 =  _self:process(_temp456,_temp458)
      elseif _self.process ~= nil then
        _temp457 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp457 =  _self:no_undermethod(string:new("process") , _temp456,_temp458)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp457 =  no_undermethod(_self, string:new("process") , _temp456,_temp458)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp459
do
local _temp460 = nil
    if _type(_temp455) == "function" or (_type(_temp455) == "table" and _rawget(_temp455, "__call_thing")) then
      _temp460 =  _temp455(_self)

    elseif _temp455 then
      _temp460 =  _temp455
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp460 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp460 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp460 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp460 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp461 = nil
        local _t = _type(_temp457)
        if _t == "table" then
          if _rawget(_temp457, "__call_thing") == nil then
            _temp461 = _temp457
          else
                  if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp461 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp461 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp461 =  _temp457(_self)
      end

          end
        elseif _t == "number" then
          _temp461 = _temp457
        elseif _t == "function" then
                if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp461 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp461 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp461 =  _temp457(_self)
      end

        elseif _temp457 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp461)
      if _t == "table" then
                      if _type(_temp461.out) == "function" or (_type(_temp461.out) == "table" and _rawget(_temp461.out, "__call_thing")) then
        _temp461 = _temp461:out()
      elseif _temp461.out ~= nil then
        _temp461 = _temp461.out

        elseif _temp461.no_undermethod ~= nil then
          _temp461 =  _temp461:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp461, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp461)
      if _n.out ~= nil then
        _temp461 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp461 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp461, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp461)
      if _f.out ~= nil then
        _temp461 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp461 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp461, "out"))
      end

      elseif _temp461 == nil then
        _error(exception:null_error("_temp461", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp461))
      end


_temp459 = string:new("\n    if " .. _tostring(_temp460) .. " == nil then\n      " .. _tostring(_temp461) .. "\n  ")
end

local _temp458 
do
local _temp462 = nil
        local _t = _type(_temp457)
        if _t == "table" then
          if _rawget(_temp457, "__call_thing") == nil then
            _temp462 = _temp457
          else
                  if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp462 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp462 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp462 =  _temp457(_self)
      end

          end
        elseif _t == "number" then
          _temp462 = _temp457
        elseif _t == "function" then
                if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp462 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp462 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp462 =  _temp457(_self)
      end

        elseif _temp457 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp463 = nil
      local _t = _type(_temp462)
      if _t == "table" then
                      if _type(_temp462.var) == "function" or (_type(_temp462.var) == "table" and _rawget(_temp462.var, "__call_thing")) then
        _temp463 = _temp462:var()
      elseif _temp462.var ~= nil then
        _temp463 = _temp462.var

        elseif _temp462.no_undermethod ~= nil then
          _temp463 =  _temp462:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp462, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp462)
      if _n.var ~= nil then
        _temp463 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp463 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp462, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp462)
      if _f.var ~= nil then
        _temp463 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp463 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp462, "var"))
      end

      elseif _temp462 == nil then
        _error(exception:null_error("_temp462", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp462))
      end

local _temp464 = nil
    if _type(_temp455) == "function" or (_type(_temp455) == "table" and _rawget(_temp455, "__call_thing")) then
      _temp464 =  _temp455(_self)

    elseif _temp455 then
      _temp464 =  _temp455
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp464 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp464 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp464 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp464 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp465
      local _t = _type(_temp463)
      if _t == "table" then
                      if _type(_temp463._equal_equal) == "function" or (_type(_temp463._equal_equal) == "table" and _rawget(_temp463._equal_equal, "__call_thing")) then
        _temp465 = _temp463:_equal_equal(_temp464)
      elseif _temp463._equal_equal ~= nil then
        _temp465 = _temp463._equal_equal

        elseif _temp463.no_undermethod ~= nil then
          _temp465 =  _temp463:no_undermethod(string:new("==") , _temp464)
        else
          _error(exception:method_error(_temp463, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp464) == 'number' then
              if _temp463 == _temp464 then
        _temp465 = object.__true
      else
        _temp465 = object.__false
      end

      else
              local _n = number:new(_temp463)
      if _n._equal_equal ~= nil then
        _temp465 = _n:_equal_equal(_temp464)
      elseif _n.no_undermethod ~= nil then
        _temp465 =  _n:no_undermethod(string:new("==") , _temp464)
      else
        _error(exception:method_error(_temp463, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp463)
      if _f._equal_equal ~= nil then
        _temp465 = _f:_equal_equal(_temp464)
      elseif _f.no_undermethod ~= nil then
        _temp465 =  _f:no_undermethod(string:new("==") , _temp464)
      else
        _error(exception:method_error(_temp463, "=="))
      end

      elseif _temp463 == nil then
        _error(exception:null_error("_temp463", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp463))
      end

_temp458 = _temp465 
end


local _temp473 = function (_self)

local _temp466 
do
local _temp467 = nil
_temp467 =  _temp459

local _temp468 = nil
do
local _temp469 = nil
    if _type(_temp455) == "function" or (_type(_temp455) == "table" and _rawget(_temp455, "__call_thing")) then
      _temp469 =  _temp455(_self)

    elseif _temp455 then
      _temp469 =  _temp455
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp469 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp469 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp469 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp469 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp470 = nil
        local _t = _type(_temp457)
        if _t == "table" then
          if _rawget(_temp457, "__call_thing") == nil then
            _temp470 = _temp457
          else
                  if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp470 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp470 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp470 =  _temp457(_self)
      end

          end
        elseif _t == "number" then
          _temp470 = _temp457
        elseif _t == "function" then
                if _temp457 == nil then
              if _type(_self._temp457) == "function" or (_type(_self._temp457) == "table" and _rawget(_self._temp457, "__call_thing")) then
        _temp470 =  _self:_temp457()
      elseif _self._temp457 ~= nil then
        _temp470 =  _self._temp457

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp457"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp470 =  _temp457(_self)
      end

        elseif _temp457 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp470)
      if _t == "table" then
                      if _type(_temp470.var) == "function" or (_type(_temp470.var) == "table" and _rawget(_temp470.var, "__call_thing")) then
        _temp470 = _temp470:var()
      elseif _temp470.var ~= nil then
        _temp470 = _temp470.var

        elseif _temp470.no_undermethod ~= nil then
          _temp470 =  _temp470:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp470, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp470)
      if _n.var ~= nil then
        _temp470 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp470 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp470, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp470)
      if _f.var ~= nil then
        _temp470 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp470 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp470, "var"))
      end

      elseif _temp470 == nil then
        _error(exception:null_error("_temp470", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp470))
      end


_temp468 = string:new("" .. _tostring(_temp469) .. " = " .. _tostring(_temp470) .. "\n")
end
local _temp471
              if _type(_temp467._less_less) == "function" or (_type(_temp467._less_less) == "table" and _rawget(_temp467._less_less, "__call_thing")) then
        _temp471 = _temp467:_less_less(_temp468)
      elseif _temp467._less_less ~= nil then
        _temp471 = _temp467._less_less

        elseif _temp467.no_undermethod ~= nil then
          _temp471 =  _temp467:no_undermethod(string:new("<<") , _temp468)
        else
          _error(exception:method_error(_temp467, "<<"))
        end

_temp466 = _temp471 
end

return _temp466
end

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp458,_temp473)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp458,_temp473)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp458,_temp473)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp458,_temp473)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp474 = nil
_temp474 =  _temp459

local _temp475 = string:new("end\n")
local _temp476
              if _type(_temp474._less_less) == "function" or (_type(_temp474._less_less) == "table" and _rawget(_temp474._less_less, "__call_thing")) then
        _temp476 = _temp474:_less_less(_temp475)
      elseif _temp474._less_less ~= nil then
        _temp476 = _temp474._less_less

        elseif _temp474.no_undermethod ~= nil then
          _temp476 =  _temp474:no_undermethod(string:new("<<") , _temp475)
        else
          _error(exception:method_error(_temp474, "<<"))
        end

_dummy_ = _temp476 
end

    if _type(_temp455) == "function" or (_type(_temp455) == "table" and _rawget(_temp455, "__call_thing")) then
      _temp473 =  _temp455(_self)

    elseif _temp455 then
      _temp473 =  _temp455
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp473 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp473 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp473 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp473 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp458 =  _temp459

_temp456 = string:new("def_arg")

local _temp477 = {}
_temp477[string:new("arg_type")] = _temp456
_temp477 = hash:new(_temp477)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp473,_temp458,_temp477)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp473,_temp458,_temp477)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp473,_temp458,_temp477)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp473,_temp458,_temp477)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp452)
      if _t == "table" then
                      if _type(_temp452.walk) == "function" or (_type(_temp452.walk) == "table" and _rawget(_temp452.walk, "__call_thing")) then
        _dummy_ = _temp452:walk(_temp4,_temp478)
      elseif _temp452.walk ~= nil then
        _dummy_ = _temp452.walk

        elseif _temp452.no_undermethod ~= nil then
          _dummy_ =  _temp452:no_undermethod(string:new("walk") , _temp4,_temp478)
        else
          _error(exception:method_error(_temp452, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp452)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp478)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp478)
      else
        _error(exception:method_error(_temp452, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp452)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp478)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp478)
      else
        _error(exception:method_error(_temp452, "walk"))
      end

      elseif _temp452 == nil then
        _error(exception:null_error("_temp452", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp452))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp478 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp478 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp478 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp478 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp478 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp478 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp478 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp478 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp488 = function (_self, _temp480,_temp479)
        if _temp480 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp479 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp479 =  null(_self)

    elseif null then
      _temp479 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp479 =  _self:null()
      elseif _self.null ~= nil then
        _temp479 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp479 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp479 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp481
local _temp482 = nil
    if _type(_temp479) == "function" or (_type(_temp479) == "table" and _rawget(_temp479, "__call_thing")) then
      _temp482 =  _temp479(_self)

    elseif _temp479 then
      _temp482 =  _temp479
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp482 =  _self:var()
      elseif _self.var ~= nil then
        _temp482 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp482 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp482 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp481 =  set_underresult(_self, _temp482)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp481 =  _self:set_underresult(_temp482)
      elseif _self.set_underresult ~= nil then
        _temp481 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp481 =  _self:no_undermethod(string:new("set_result") , _temp482)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp481 =  no_undermethod(_self, string:new("set_result") , _temp482)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp483 = nil
        local _t = _type(_temp481)
        if _t == "table" then
          if _rawget(_temp481, "__call_thing") == nil then
            _temp483 = _temp481
          else
                  if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp483 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp483 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp483 =  _temp481(_self)
      end

          end
        elseif _t == "number" then
          _temp483 = _temp481
        elseif _t == "function" then
                if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp483 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp483 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp483 =  _temp481(_self)
      end

        elseif _temp481 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp484 = nil
      local _t = _type(_temp483)
      if _t == "table" then
                      if _type(_temp483.out) == "function" or (_type(_temp483.out) == "table" and _rawget(_temp483.out, "__call_thing")) then
        _temp484 = _temp483:out()
      elseif _temp483.out ~= nil then
        _temp484 = _temp483.out

        elseif _temp483.no_undermethod ~= nil then
          _temp484 =  _temp483:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp483, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp483)
      if _n.out ~= nil then
        _temp484 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp484 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp483, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp483)
      if _f.out ~= nil then
        _temp484 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp484 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp483, "out"))
      end

      elseif _temp483 == nil then
        _error(exception:null_error("_temp483", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp483))
      end

local _temp485 = nil
local _temp486 = nil
        local _t = _type(_temp480)
        if _t == "table" then
          if _rawget(_temp480, "__call_thing") == nil then
            _temp486 = _temp480
          else
                  if _temp480 == nil then
              if _type(_self._temp480) == "function" or (_type(_self._temp480) == "table" and _rawget(_self._temp480, "__call_thing")) then
        _temp486 =  _self:_temp480()
      elseif _self._temp480 ~= nil then
        _temp486 =  _self._temp480

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp480"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp486 =  _temp480(_self)
      end

          end
        elseif _t == "number" then
          _temp486 = _temp480
        elseif _t == "function" then
                if _temp480 == nil then
              if _type(_self._temp480) == "function" or (_type(_self._temp480) == "table" and _rawget(_self._temp480, "__call_thing")) then
        _temp486 =  _self:_temp480()
      elseif _self._temp480 ~= nil then
        _temp486 =  _self._temp480

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp480"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp486 =  _temp480(_self)
      end

        elseif _temp480 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp486)
      if _t == "table" then
                      if _type(_temp486.method) == "function" or (_type(_temp486.method) == "table" and _rawget(_temp486.method, "__call_thing")) then
        _temp486 = _temp486:method()
      elseif _temp486.method ~= nil then
        _temp486 = _temp486.method

        elseif _temp486.no_undermethod ~= nil then
          _temp486 =  _temp486:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp486, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp486)
      if _n.method ~= nil then
        _temp486 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp486 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp486, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp486)
      if _f.method ~= nil then
        _temp486 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp486 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp486, "method"))
      end

      elseif _temp486 == nil then
        _error(exception:null_error("_temp486", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp486))
      end


local _temp487 = nil
        local _t = _type(_temp481)
        if _t == "table" then
          if _rawget(_temp481, "__call_thing") == nil then
            _temp487 = _temp481
          else
                  if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp487 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp487 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp487 =  _temp481(_self)
      end

          end
        elseif _t == "number" then
          _temp487 = _temp481
        elseif _t == "function" then
                if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp487 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp487 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp487 =  _temp481(_self)
      end

        elseif _temp481 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487.var) == "function" or (_type(_temp487.var) == "table" and _rawget(_temp487.var, "__call_thing")) then
        _temp487 = _temp487:var()
      elseif _temp487.var ~= nil then
        _temp487 = _temp487.var

        elseif _temp487.no_undermethod ~= nil then
          _temp487 =  _temp487:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp487, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n.var ~= nil then
        _temp487 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp487, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f.var ~= nil then
        _temp487 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp487, "var"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp485 =  get_undermethod_underlocal(_self, _temp486,_temp487)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp485 =  _self:get_undermethod_underlocal(_temp486,_temp487)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp485 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp485 =  _self:no_undermethod(string:new("get_method_local") , _temp486,_temp487)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp485 =  no_undermethod(_self, string:new("get_method_local") , _temp486,_temp487)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp487
      local _t = _type(_temp484)
      if _t == "table" then
                      if _type(_temp484._less_less) == "function" or (_type(_temp484._less_less) == "table" and _rawget(_temp484._less_less, "__call_thing")) then
        _temp487 = _temp484:_less_less(_temp485)
      elseif _temp484._less_less ~= nil then
        _temp487 = _temp484._less_less

        elseif _temp484.no_undermethod ~= nil then
          _temp487 =  _temp484:no_undermethod(string:new("<<") , _temp485)
        else
          _error(exception:method_error(_temp484, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp484)
      if _n._less_less ~= nil then
        _temp487 = _n:_less_less(_temp485)
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("<<") , _temp485)
      else
        _error(exception:method_error(_temp484, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp484)
      if _f._less_less ~= nil then
        _temp487 = _f:_less_less(_temp485)
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("<<") , _temp485)
      else
        _error(exception:method_error(_temp484, "<<"))
      end

      elseif _temp484 == nil then
        _error(exception:null_error("_temp484", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp484))
      end

_dummy_ = _temp487 
end

    if _type(_temp481) == "function" or (_type(_temp481) == "table" and _rawget(_temp481, "__call_thing")) then
      return  _temp481(_self)

    elseif _temp481 then
      return  _temp481
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp478)
      if _t == "table" then
                      if _type(_temp478.walk) == "function" or (_type(_temp478.walk) == "table" and _rawget(_temp478.walk, "__call_thing")) then
        _dummy_ = _temp478:walk(_temp4,_temp488)
      elseif _temp478.walk ~= nil then
        _dummy_ = _temp478.walk

        elseif _temp478.no_undermethod ~= nil then
          _dummy_ =  _temp478:no_undermethod(string:new("walk") , _temp4,_temp488)
        else
          _error(exception:method_error(_temp478, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp478)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp488)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp488)
      else
        _error(exception:method_error(_temp478, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp478)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp488)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp488)
      else
        _error(exception:method_error(_temp478, "walk"))
      end

      elseif _temp478 == nil then
        _error(exception:null_error("_temp478", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp478))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp488 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp488 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp488 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp488 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp488 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp488 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp488 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp488 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp488 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp488 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp498 = function (_self, _temp490,_temp489)
        if _temp490 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp489 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp489 =  null(_self)

    elseif null then
      _temp489 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp489 =  _self:null()
      elseif _self.null ~= nil then
        _temp489 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp489 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp489 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp491
local _temp492 = nil
    if _type(_temp489) == "function" or (_type(_temp489) == "table" and _rawget(_temp489, "__call_thing")) then
      _temp492 =  _temp489(_self)

    elseif _temp489 then
      _temp492 =  _temp489
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp492 =  _self:var()
      elseif _self.var ~= nil then
        _temp492 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp492 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp492 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp491 =  set_underresult(_self, _temp492)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp491 =  _self:set_underresult(_temp492)
      elseif _self.set_underresult ~= nil then
        _temp491 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp491 =  _self:no_undermethod(string:new("set_result") , _temp492)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp491 =  no_undermethod(_self, string:new("set_result") , _temp492)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp493 = nil
        local _t = _type(_temp491)
        if _t == "table" then
          if _rawget(_temp491, "__call_thing") == nil then
            _temp493 = _temp491
          else
                  if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp493 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp493 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp493 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp493 =  _temp491(_self)
      end

          end
        elseif _t == "number" then
          _temp493 = _temp491
        elseif _t == "function" then
                if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp493 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp493 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp493 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp493 =  _temp491(_self)
      end

        elseif _temp491 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp494 = nil
      local _t = _type(_temp493)
      if _t == "table" then
                      if _type(_temp493.out) == "function" or (_type(_temp493.out) == "table" and _rawget(_temp493.out, "__call_thing")) then
        _temp494 = _temp493:out()
      elseif _temp493.out ~= nil then
        _temp494 = _temp493.out

        elseif _temp493.no_undermethod ~= nil then
          _temp494 =  _temp493:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp493, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp493)
      if _n.out ~= nil then
        _temp494 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp494 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp493, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp493)
      if _f.out ~= nil then
        _temp494 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp494 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp493, "out"))
      end

      elseif _temp493 == nil then
        _error(exception:null_error("_temp493", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp493))
      end

local _temp495 = nil
local _temp496 = nil
        local _t = _type(_temp490)
        if _t == "table" then
          if _rawget(_temp490, "__call_thing") == nil then
            _temp496 = _temp490
          else
                  if _temp490 == nil then
              if _type(_self._temp490) == "function" or (_type(_self._temp490) == "table" and _rawget(_self._temp490, "__call_thing")) then
        _temp496 =  _self:_temp490()
      elseif _self._temp490 ~= nil then
        _temp496 =  _self._temp490

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp490"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp490(_self)
      end

          end
        elseif _t == "number" then
          _temp496 = _temp490
        elseif _t == "function" then
                if _temp490 == nil then
              if _type(_self._temp490) == "function" or (_type(_self._temp490) == "table" and _rawget(_self._temp490, "__call_thing")) then
        _temp496 =  _self:_temp490()
      elseif _self._temp490 ~= nil then
        _temp496 =  _self._temp490

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp490"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp490(_self)
      end

        elseif _temp490 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp496)
      if _t == "table" then
                      if _type(_temp496.method) == "function" or (_type(_temp496.method) == "table" and _rawget(_temp496.method, "__call_thing")) then
        _temp496 = _temp496:method()
      elseif _temp496.method ~= nil then
        _temp496 = _temp496.method

        elseif _temp496.no_undermethod ~= nil then
          _temp496 =  _temp496:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp496, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp496)
      if _n.method ~= nil then
        _temp496 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp496 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp496, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp496)
      if _f.method ~= nil then
        _temp496 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp496 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp496, "method"))
      end

      elseif _temp496 == nil then
        _error(exception:null_error("_temp496", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp496))
      end


local _temp497 = nil
        local _t = _type(_temp491)
        if _t == "table" then
          if _rawget(_temp491, "__call_thing") == nil then
            _temp497 = _temp491
          else
                  if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp497 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp497 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp497 =  _temp491(_self)
      end

          end
        elseif _t == "number" then
          _temp497 = _temp491
        elseif _t == "function" then
                if _temp491 == nil then
              if _type(_self._temp491) == "function" or (_type(_self._temp491) == "table" and _rawget(_self._temp491, "__call_thing")) then
        _temp497 =  _self:_temp491()
      elseif _self._temp491 ~= nil then
        _temp497 =  _self._temp491

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp491"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp497 =  _temp491(_self)
      end

        elseif _temp491 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp497)
      if _t == "table" then
                      if _type(_temp497.var) == "function" or (_type(_temp497.var) == "table" and _rawget(_temp497.var, "__call_thing")) then
        _temp497 = _temp497:var()
      elseif _temp497.var ~= nil then
        _temp497 = _temp497.var

        elseif _temp497.no_undermethod ~= nil then
          _temp497 =  _temp497:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp497, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp497)
      if _n.var ~= nil then
        _temp497 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp497 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp497, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp497)
      if _f.var ~= nil then
        _temp497 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp497 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp497, "var"))
      end

      elseif _temp497 == nil then
        _error(exception:null_error("_temp497", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp497))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp495 =  get_undermethod_underlocal(_self, _temp496,_temp497)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp495 =  _self:get_undermethod_underlocal(_temp496,_temp497)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp495 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp495 =  _self:no_undermethod(string:new("get_method_local") , _temp496,_temp497)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp495 =  no_undermethod(_self, string:new("get_method_local") , _temp496,_temp497)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp497
      local _t = _type(_temp494)
      if _t == "table" then
                      if _type(_temp494._less_less) == "function" or (_type(_temp494._less_less) == "table" and _rawget(_temp494._less_less, "__call_thing")) then
        _temp497 = _temp494:_less_less(_temp495)
      elseif _temp494._less_less ~= nil then
        _temp497 = _temp494._less_less

        elseif _temp494.no_undermethod ~= nil then
          _temp497 =  _temp494:no_undermethod(string:new("<<") , _temp495)
        else
          _error(exception:method_error(_temp494, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp494)
      if _n._less_less ~= nil then
        _temp497 = _n:_less_less(_temp495)
      elseif _n.no_undermethod ~= nil then
        _temp497 =  _n:no_undermethod(string:new("<<") , _temp495)
      else
        _error(exception:method_error(_temp494, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp494)
      if _f._less_less ~= nil then
        _temp497 = _f:_less_less(_temp495)
      elseif _f.no_undermethod ~= nil then
        _temp497 =  _f:no_undermethod(string:new("<<") , _temp495)
      else
        _error(exception:method_error(_temp494, "<<"))
      end

      elseif _temp494 == nil then
        _error(exception:null_error("_temp494", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp494))
      end

_dummy_ = _temp497 
end

    if _type(_temp491) == "function" or (_type(_temp491) == "table" and _rawget(_temp491, "__call_thing")) then
      return  _temp491(_self)

    elseif _temp491 then
      return  _temp491
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp488)
      if _t == "table" then
                      if _type(_temp488.walk) == "function" or (_type(_temp488.walk) == "table" and _rawget(_temp488.walk, "__call_thing")) then
        _dummy_ = _temp488:walk(_temp4,_temp498)
      elseif _temp488.walk ~= nil then
        _dummy_ = _temp488.walk

        elseif _temp488.no_undermethod ~= nil then
          _dummy_ =  _temp488:no_undermethod(string:new("walk") , _temp4,_temp498)
        else
          _error(exception:method_error(_temp488, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp488)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp498)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp498)
      else
        _error(exception:method_error(_temp488, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp488)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp498)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp498)
      else
        _error(exception:method_error(_temp488, "walk"))
      end

      elseif _temp488 == nil then
        _error(exception:null_error("_temp488", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp488))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp498 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp498 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp498 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp498 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp498 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp498 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp498 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp498 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp508 = function (_self, _temp500,_temp499)
        if _temp500 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp499 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp499 =  null(_self)

    elseif null then
      _temp499 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp499 =  _self:null()
      elseif _self.null ~= nil then
        _temp499 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp499 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp499 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp501
local _temp502 = nil
    if _type(_temp499) == "function" or (_type(_temp499) == "table" and _rawget(_temp499, "__call_thing")) then
      _temp502 =  _temp499(_self)

    elseif _temp499 then
      _temp502 =  _temp499
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp502 =  _self:var()
      elseif _self.var ~= nil then
        _temp502 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp502 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp502 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp501 =  set_underresult(_self, _temp502)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp501 =  _self:set_underresult(_temp502)
      elseif _self.set_underresult ~= nil then
        _temp501 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp501 =  _self:no_undermethod(string:new("set_result") , _temp502)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp501 =  no_undermethod(_self, string:new("set_result") , _temp502)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp503 = nil
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp503 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp503 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp503 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp503 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp503 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp503 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp503 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp503 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp503 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp503 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp504 = nil
      local _t = _type(_temp503)
      if _t == "table" then
                      if _type(_temp503.out) == "function" or (_type(_temp503.out) == "table" and _rawget(_temp503.out, "__call_thing")) then
        _temp504 = _temp503:out()
      elseif _temp503.out ~= nil then
        _temp504 = _temp503.out

        elseif _temp503.no_undermethod ~= nil then
          _temp504 =  _temp503:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp503, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp503)
      if _n.out ~= nil then
        _temp504 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp504 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp503, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp503)
      if _f.out ~= nil then
        _temp504 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp504 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp503, "out"))
      end

      elseif _temp503 == nil then
        _error(exception:null_error("_temp503", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp503))
      end

local _temp505 = nil
local _temp506 = nil
        local _t = _type(_temp500)
        if _t == "table" then
          if _rawget(_temp500, "__call_thing") == nil then
            _temp506 = _temp500
          else
                  if _temp500 == nil then
              if _type(_self._temp500) == "function" or (_type(_self._temp500) == "table" and _rawget(_self._temp500, "__call_thing")) then
        _temp506 =  _self:_temp500()
      elseif _self._temp500 ~= nil then
        _temp506 =  _self._temp500

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp500"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp506 =  _temp500(_self)
      end

          end
        elseif _t == "number" then
          _temp506 = _temp500
        elseif _t == "function" then
                if _temp500 == nil then
              if _type(_self._temp500) == "function" or (_type(_self._temp500) == "table" and _rawget(_self._temp500, "__call_thing")) then
        _temp506 =  _self:_temp500()
      elseif _self._temp500 ~= nil then
        _temp506 =  _self._temp500

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp500"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp506 =  _temp500(_self)
      end

        elseif _temp500 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506.method) == "function" or (_type(_temp506.method) == "table" and _rawget(_temp506.method, "__call_thing")) then
        _temp506 = _temp506:method()
      elseif _temp506.method ~= nil then
        _temp506 = _temp506.method

        elseif _temp506.no_undermethod ~= nil then
          _temp506 =  _temp506:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp506, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n.method ~= nil then
        _temp506 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp506 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp506, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f.method ~= nil then
        _temp506 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp506 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp506, "method"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end


local _temp507 = nil
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp507 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp507 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp507 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp507 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp507 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp507 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp507 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp507 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp507)
      if _t == "table" then
                      if _type(_temp507.var) == "function" or (_type(_temp507.var) == "table" and _rawget(_temp507.var, "__call_thing")) then
        _temp507 = _temp507:var()
      elseif _temp507.var ~= nil then
        _temp507 = _temp507.var

        elseif _temp507.no_undermethod ~= nil then
          _temp507 =  _temp507:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp507, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp507)
      if _n.var ~= nil then
        _temp507 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp507 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp507, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp507)
      if _f.var ~= nil then
        _temp507 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp507 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp507, "var"))
      end

      elseif _temp507 == nil then
        _error(exception:null_error("_temp507", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp507))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp505 =  get_undermethod_underself(_self, _temp506,_temp507)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp505 =  _self:get_undermethod_underself(_temp506,_temp507)
      elseif _self.get_undermethod_underself ~= nil then
        _temp505 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp505 =  _self:no_undermethod(string:new("get_method_self") , _temp506,_temp507)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp505 =  no_undermethod(_self, string:new("get_method_self") , _temp506,_temp507)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp507
      local _t = _type(_temp504)
      if _t == "table" then
                      if _type(_temp504._less_less) == "function" or (_type(_temp504._less_less) == "table" and _rawget(_temp504._less_less, "__call_thing")) then
        _temp507 = _temp504:_less_less(_temp505)
      elseif _temp504._less_less ~= nil then
        _temp507 = _temp504._less_less

        elseif _temp504.no_undermethod ~= nil then
          _temp507 =  _temp504:no_undermethod(string:new("<<") , _temp505)
        else
          _error(exception:method_error(_temp504, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp504)
      if _n._less_less ~= nil then
        _temp507 = _n:_less_less(_temp505)
      elseif _n.no_undermethod ~= nil then
        _temp507 =  _n:no_undermethod(string:new("<<") , _temp505)
      else
        _error(exception:method_error(_temp504, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp504)
      if _f._less_less ~= nil then
        _temp507 = _f:_less_less(_temp505)
      elseif _f.no_undermethod ~= nil then
        _temp507 =  _f:no_undermethod(string:new("<<") , _temp505)
      else
        _error(exception:method_error(_temp504, "<<"))
      end

      elseif _temp504 == nil then
        _error(exception:null_error("_temp504", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp504))
      end

_dummy_ = _temp507 
end

    if _type(_temp501) == "function" or (_type(_temp501) == "table" and _rawget(_temp501, "__call_thing")) then
      return  _temp501(_self)

    elseif _temp501 then
      return  _temp501
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.walk) == "function" or (_type(_temp498.walk) == "table" and _rawget(_temp498.walk, "__call_thing")) then
        _dummy_ = _temp498:walk(_temp4,_temp508)
      elseif _temp498.walk ~= nil then
        _dummy_ = _temp498.walk

        elseif _temp498.no_undermethod ~= nil then
          _dummy_ =  _temp498:no_undermethod(string:new("walk") , _temp4,_temp508)
        else
          _error(exception:method_error(_temp498, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp508)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp508)
      else
        _error(exception:method_error(_temp498, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp508)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp508)
      else
        _error(exception:method_error(_temp498, "walk"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("_temp498", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp508 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp508 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp508 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp508 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp508 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp508 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp508 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp508 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp508 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp508 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp524 = function (_self, _temp510,_temp509)
        if _temp510 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp509 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp509 =  null(_self)

    elseif null then
      _temp509 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp509 =  _self:null()
      elseif _self.null ~= nil then
        _temp509 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp509 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp509 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp511
local _temp512 = nil
    if _type(_temp509) == "function" or (_type(_temp509) == "table" and _rawget(_temp509, "__call_thing")) then
      _temp512 =  _temp509(_self)

    elseif _temp509 then
      _temp512 =  _temp509
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp512 =  _self:var()
      elseif _self.var ~= nil then
        _temp512 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp512 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp512 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp511 =  set_underresult(_self, _temp512)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp511 =  _self:set_underresult(_temp512)
      elseif _self.set_underresult ~= nil then
        _temp511 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp511 =  _self:no_undermethod(string:new("set_result") , _temp512)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp511 =  no_undermethod(_self, string:new("set_result") , _temp512)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp513
        local _t = _type(_temp510)
        if _t == "table" then
          if _rawget(_temp510, "__call_thing") == nil then
            _temp512 = _temp510
          else
                  if _temp510 == nil then
              if _type(_self._temp510) == "function" or (_type(_self._temp510) == "table" and _rawget(_self._temp510, "__call_thing")) then
        _temp512 =  _self:_temp510()
      elseif _self._temp510 ~= nil then
        _temp512 =  _self._temp510

        elseif _self.no_undermethod ~= nil then
          _temp512 =  _self:no_undermethod(string:new("_temp510"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp512 =  _temp510(_self)
      end

          end
        elseif _t == "number" then
          _temp512 = _temp510
        elseif _t == "function" then
                if _temp510 == nil then
              if _type(_self._temp510) == "function" or (_type(_self._temp510) == "table" and _rawget(_self._temp510, "__call_thing")) then
        _temp512 =  _self:_temp510()
      elseif _self._temp510 ~= nil then
        _temp512 =  _self._temp510

        elseif _self.no_undermethod ~= nil then
          _temp512 =  _self:no_undermethod(string:new("_temp510"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp512 =  _temp510(_self)
      end

        elseif _temp510 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp512)
      if _t == "table" then
                      if _type(_temp512.target) == "function" or (_type(_temp512.target) == "table" and _rawget(_temp512.target, "__call_thing")) then
        _temp512 = _temp512:target()
      elseif _temp512.target ~= nil then
        _temp512 = _temp512.target

        elseif _temp512.no_undermethod ~= nil then
          _temp512 =  _temp512:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp512, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp512)
      if _n.target ~= nil then
        _temp512 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp512 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp512, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp512)
      if _f.target ~= nil then
        _temp512 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp512 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp512, "target"))
      end

      elseif _temp512 == nil then
        _error(exception:null_error("_temp512", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp512))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp513 =  process(_self, _temp512)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp513 =  _self:process(_temp512)
      elseif _self.process ~= nil then
        _temp513 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp513 =  _self:no_undermethod(string:new("process") , _temp512)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp513 =  no_undermethod(_self, string:new("process") , _temp512)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp514 = nil
        local _t = _type(_temp511)
        if _t == "table" then
          if _rawget(_temp511, "__call_thing") == nil then
            _temp514 = _temp511
          else
                  if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp514 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp514 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp514 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp514 =  _temp511(_self)
      end

          end
        elseif _t == "number" then
          _temp514 = _temp511
        elseif _t == "function" then
                if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp514 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp514 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp514 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp514 =  _temp511(_self)
      end

        elseif _temp511 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp515 = nil
      local _t = _type(_temp514)
      if _t == "table" then
                      if _type(_temp514.out) == "function" or (_type(_temp514.out) == "table" and _rawget(_temp514.out, "__call_thing")) then
        _temp515 = _temp514:out()
      elseif _temp514.out ~= nil then
        _temp515 = _temp514.out

        elseif _temp514.no_undermethod ~= nil then
          _temp515 =  _temp514:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp514, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp514)
      if _n.out ~= nil then
        _temp515 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp515 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp514, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp514)
      if _f.out ~= nil then
        _temp515 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp515 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp514, "out"))
      end

      elseif _temp514 == nil then
        _error(exception:null_error("_temp514", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp514))
      end

local _temp516 = nil
        local _t = _type(_temp513)
        if _t == "table" then
          if _rawget(_temp513, "__call_thing") == nil then
            _temp516 = _temp513
          else
                  if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp516 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp516 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp516 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp516 =  _temp513(_self)
      end

          end
        elseif _t == "number" then
          _temp516 = _temp513
        elseif _t == "function" then
                if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp516 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp516 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp516 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp516 =  _temp513(_self)
      end

        elseif _temp513 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp516)
      if _t == "table" then
                      if _type(_temp516.out) == "function" or (_type(_temp516.out) == "table" and _rawget(_temp516.out, "__call_thing")) then
        _temp516 = _temp516:out()
      elseif _temp516.out ~= nil then
        _temp516 = _temp516.out

        elseif _temp516.no_undermethod ~= nil then
          _temp516 =  _temp516:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp516, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp516)
      if _n.out ~= nil then
        _temp516 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp516 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp516, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp516)
      if _f.out ~= nil then
        _temp516 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp516 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp516, "out"))
      end

      elseif _temp516 == nil then
        _error(exception:null_error("_temp516", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp516))
      end

local _temp517
      local _t = _type(_temp515)
      if _t == "table" then
                      if _type(_temp515._less_less) == "function" or (_type(_temp515._less_less) == "table" and _rawget(_temp515._less_less, "__call_thing")) then
        _temp517 = _temp515:_less_less(_temp516)
      elseif _temp515._less_less ~= nil then
        _temp517 = _temp515._less_less

        elseif _temp515.no_undermethod ~= nil then
          _temp517 =  _temp515:no_undermethod(string:new("<<") , _temp516)
        else
          _error(exception:method_error(_temp515, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp515)
      if _n._less_less ~= nil then
        _temp517 = _n:_less_less(_temp516)
      elseif _n.no_undermethod ~= nil then
        _temp517 =  _n:no_undermethod(string:new("<<") , _temp516)
      else
        _error(exception:method_error(_temp515, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp515)
      if _f._less_less ~= nil then
        _temp517 = _f:_less_less(_temp516)
      elseif _f.no_undermethod ~= nil then
        _temp517 =  _f:no_undermethod(string:new("<<") , _temp516)
      else
        _error(exception:method_error(_temp515, "<<"))
      end

      elseif _temp515 == nil then
        _error(exception:null_error("_temp515", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp515))
      end

_dummy_ = _temp517 
end

do
local _temp518 = nil
        local _t = _type(_temp511)
        if _t == "table" then
          if _rawget(_temp511, "__call_thing") == nil then
            _temp518 = _temp511
          else
                  if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp518 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp518 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp518 =  _temp511(_self)
      end

          end
        elseif _t == "number" then
          _temp518 = _temp511
        elseif _t == "function" then
                if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp518 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp518 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp518 =  _temp511(_self)
      end

        elseif _temp511 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp519 = nil
      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518.out) == "function" or (_type(_temp518.out) == "table" and _rawget(_temp518.out, "__call_thing")) then
        _temp519 = _temp518:out()
      elseif _temp518.out ~= nil then
        _temp519 = _temp518.out

        elseif _temp518.no_undermethod ~= nil then
          _temp519 =  _temp518:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp518, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp518)
      if _n.out ~= nil then
        _temp519 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp519 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp518, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f.out ~= nil then
        _temp519 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp519 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp518, "out"))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("_temp518", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end

local _temp520 = nil
local _temp521 = nil
        local _t = _type(_temp513)
        if _t == "table" then
          if _rawget(_temp513, "__call_thing") == nil then
            _temp521 = _temp513
          else
                  if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp521 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp521 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp521 =  _temp513(_self)
      end

          end
        elseif _t == "number" then
          _temp521 = _temp513
        elseif _t == "function" then
                if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp521 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp521 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp521 =  _temp513(_self)
      end

        elseif _temp513 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.var) == "function" or (_type(_temp521.var) == "table" and _rawget(_temp521.var, "__call_thing")) then
        _temp521 = _temp521:var()
      elseif _temp521.var ~= nil then
        _temp521 = _temp521.var

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp521, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.var ~= nil then
        _temp521 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp521, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.var ~= nil then
        _temp521 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp521, "var"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("_temp521", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end


local _temp522 = nil
        local _t = _type(_temp510)
        if _t == "table" then
          if _rawget(_temp510, "__call_thing") == nil then
            _temp522 = _temp510
          else
                  if _temp510 == nil then
              if _type(_self._temp510) == "function" or (_type(_self._temp510) == "table" and _rawget(_self._temp510, "__call_thing")) then
        _temp522 =  _self:_temp510()
      elseif _self._temp510 ~= nil then
        _temp522 =  _self._temp510

        elseif _self.no_undermethod ~= nil then
          _temp522 =  _self:no_undermethod(string:new("_temp510"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp522 =  _temp510(_self)
      end

          end
        elseif _t == "number" then
          _temp522 = _temp510
        elseif _t == "function" then
                if _temp510 == nil then
              if _type(_self._temp510) == "function" or (_type(_self._temp510) == "table" and _rawget(_self._temp510, "__call_thing")) then
        _temp522 =  _self:_temp510()
      elseif _self._temp510 ~= nil then
        _temp522 =  _self._temp510

        elseif _self.no_undermethod ~= nil then
          _temp522 =  _self:no_undermethod(string:new("_temp510"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp522 =  _temp510(_self)
      end

        elseif _temp510 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp522)
      if _t == "table" then
                      if _type(_temp522.method) == "function" or (_type(_temp522.method) == "table" and _rawget(_temp522.method, "__call_thing")) then
        _temp522 = _temp522:method()
      elseif _temp522.method ~= nil then
        _temp522 = _temp522.method

        elseif _temp522.no_undermethod ~= nil then
          _temp522 =  _temp522:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp522, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp522)
      if _n.method ~= nil then
        _temp522 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp522 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp522, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp522)
      if _f.method ~= nil then
        _temp522 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp522 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp522, "method"))
      end

      elseif _temp522 == nil then
        _error(exception:null_error("_temp522", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp522))
      end


local _temp523 = nil
        local _t = _type(_temp511)
        if _t == "table" then
          if _rawget(_temp511, "__call_thing") == nil then
            _temp523 = _temp511
          else
                  if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp523 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp523 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp511(_self)
      end

          end
        elseif _t == "number" then
          _temp523 = _temp511
        elseif _t == "function" then
                if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp523 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp523 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp511(_self)
      end

        elseif _temp511 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp523)
      if _t == "table" then
                      if _type(_temp523.var) == "function" or (_type(_temp523.var) == "table" and _rawget(_temp523.var, "__call_thing")) then
        _temp523 = _temp523:var()
      elseif _temp523.var ~= nil then
        _temp523 = _temp523.var

        elseif _temp523.no_undermethod ~= nil then
          _temp523 =  _temp523:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp523, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp523)
      if _n.var ~= nil then
        _temp523 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp523 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp523, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp523)
      if _f.var ~= nil then
        _temp523 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp523 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp523, "var"))
      end

      elseif _temp523 == nil then
        _error(exception:null_error("_temp523", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp523))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp520 =  get_undermethod(_self, _temp521,_temp522,_temp523)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp520 =  _self:get_undermethod(_temp521,_temp522,_temp523)
      elseif _self.get_undermethod ~= nil then
        _temp520 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp520 =  _self:no_undermethod(string:new("get_method") , _temp521,_temp522,_temp523)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp520 =  no_undermethod(_self, string:new("get_method") , _temp521,_temp522,_temp523)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp523
      local _t = _type(_temp519)
      if _t == "table" then
                      if _type(_temp519._less_less) == "function" or (_type(_temp519._less_less) == "table" and _rawget(_temp519._less_less, "__call_thing")) then
        _temp523 = _temp519:_less_less(_temp520)
      elseif _temp519._less_less ~= nil then
        _temp523 = _temp519._less_less

        elseif _temp519.no_undermethod ~= nil then
          _temp523 =  _temp519:no_undermethod(string:new("<<") , _temp520)
        else
          _error(exception:method_error(_temp519, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp519)
      if _n._less_less ~= nil then
        _temp523 = _n:_less_less(_temp520)
      elseif _n.no_undermethod ~= nil then
        _temp523 =  _n:no_undermethod(string:new("<<") , _temp520)
      else
        _error(exception:method_error(_temp519, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp519)
      if _f._less_less ~= nil then
        _temp523 = _f:_less_less(_temp520)
      elseif _f.no_undermethod ~= nil then
        _temp523 =  _f:no_undermethod(string:new("<<") , _temp520)
      else
        _error(exception:method_error(_temp519, "<<"))
      end

      elseif _temp519 == nil then
        _error(exception:null_error("_temp519", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp519))
      end

_dummy_ = _temp523 
end

    if _type(_temp511) == "function" or (_type(_temp511) == "table" and _rawget(_temp511, "__call_thing")) then
      return  _temp511(_self)

    elseif _temp511 then
      return  _temp511
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp508)
      if _t == "table" then
                      if _type(_temp508.walk) == "function" or (_type(_temp508.walk) == "table" and _rawget(_temp508.walk, "__call_thing")) then
        _dummy_ = _temp508:walk(_temp4,_temp524)
      elseif _temp508.walk ~= nil then
        _dummy_ = _temp508.walk

        elseif _temp508.no_undermethod ~= nil then
          _dummy_ =  _temp508:no_undermethod(string:new("walk") , _temp4,_temp524)
        else
          _error(exception:method_error(_temp508, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp508)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp524)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp524)
      else
        _error(exception:method_error(_temp508, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp508)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp524)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp524)
      else
        _error(exception:method_error(_temp508, "walk"))
      end

      elseif _temp508 == nil then
        _error(exception:null_error("_temp508", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp508))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp524 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp524 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp524 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp524 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp524 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp524 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp524 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp524 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp524 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp524 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp534 = function (_self, _temp526,_temp525)
        if _temp526 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp525 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp525 =  null(_self)

    elseif null then
      _temp525 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp525 =  _self:null()
      elseif _self.null ~= nil then
        _temp525 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp525 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp525 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp527
        local _t = _type(_temp526)
        if _t == "table" then
          if _rawget(_temp526, "__call_thing") == nil then
            _temp527 = _temp526
          else
                  if _temp526 == nil then
              if _type(_self._temp526) == "function" or (_type(_self._temp526) == "table" and _rawget(_self._temp526, "__call_thing")) then
        _temp527 =  _self:_temp526()
      elseif _self._temp526 ~= nil then
        _temp527 =  _self._temp526

        elseif _self.no_undermethod ~= nil then
          _temp527 =  _self:no_undermethod(string:new("_temp526"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp527 =  _temp526(_self)
      end

          end
        elseif _t == "number" then
          _temp527 = _temp526
        elseif _t == "function" then
                if _temp526 == nil then
              if _type(_self._temp526) == "function" or (_type(_self._temp526) == "table" and _rawget(_self._temp526, "__call_thing")) then
        _temp527 =  _self:_temp526()
      elseif _self._temp526 ~= nil then
        _temp527 =  _self._temp526

        elseif _self.no_undermethod ~= nil then
          _temp527 =  _self:no_undermethod(string:new("_temp526"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp527 =  _temp526(_self)
      end

        elseif _temp526 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp527)
      if _t == "table" then
                      if _type(_temp527.body) == "function" or (_type(_temp527.body) == "table" and _rawget(_temp527.body, "__call_thing")) then
        _temp527 = _temp527:body()
      elseif _temp527.body ~= nil then
        _temp527 = _temp527.body

        elseif _temp527.no_undermethod ~= nil then
          _temp527 =  _temp527:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp527)
      if _n.body ~= nil then
        _temp527 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp527)
      if _f.body ~= nil then
        _temp527 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp527 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp527))
      end

local _temp528 = regex:new("[\\\\]")

local _temp529 = string:new("\\\\")

      local _t = _type(_temp527)
      if _t == "table" then
                      if _type(_temp527.sub) == "function" or (_type(_temp527.sub) == "table" and _rawget(_temp527.sub, "__call_thing")) then
        _temp527 = _temp527:sub(_temp528,_temp529)
      elseif _temp527.sub ~= nil then
        _temp527 = _temp527.sub

        elseif _temp527.no_undermethod ~= nil then
          _temp527 =  _temp527:no_undermethod(string:new("sub") , _temp528,_temp529)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp527)
      if _n.sub ~= nil then
        _temp527 = _n:sub(_temp528,_temp529)
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("sub") , _temp528,_temp529)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp527)
      if _f.sub ~= nil then
        _temp527 = _f:sub(_temp528,_temp529)
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("sub") , _temp528,_temp529)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp527 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp527))
      end

local _temp529 = regex:new("\"")

_temp528 = string:new("\\\"")

      local _t = _type(_temp527)
      if _t == "table" then
                      if _type(_temp527.sub) == "function" or (_type(_temp527.sub) == "table" and _rawget(_temp527.sub, "__call_thing")) then
        _temp527 = _temp527:sub(_temp529,_temp528)
      elseif _temp527.sub ~= nil then
        _temp527 = _temp527.sub

        elseif _temp527.no_undermethod ~= nil then
          _temp527 =  _temp527:no_undermethod(string:new("sub") , _temp529,_temp528)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp527)
      if _n.sub ~= nil then
        _temp527 = _n:sub(_temp529,_temp528)
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("sub") , _temp529,_temp528)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp527)
      if _f.sub ~= nil then
        _temp527 = _f:sub(_temp529,_temp528)
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("sub") , _temp529,_temp528)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp527 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp527))
      end


local _temp530
        local _t = _type(_temp526)
        if _t == "table" then
          if _rawget(_temp526, "__call_thing") == nil then
            _temp530 = _temp526
          else
                  if _temp526 == nil then
              if _type(_self._temp526) == "function" or (_type(_self._temp526) == "table" and _rawget(_self._temp526, "__call_thing")) then
        _temp530 =  _self:_temp526()
      elseif _self._temp526 ~= nil then
        _temp530 =  _self._temp526

        elseif _self.no_undermethod ~= nil then
          _temp530 =  _self:no_undermethod(string:new("_temp526"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp530 =  _temp526(_self)
      end

          end
        elseif _t == "number" then
          _temp530 = _temp526
        elseif _t == "function" then
                if _temp526 == nil then
              if _type(_self._temp526) == "function" or (_type(_self._temp526) == "table" and _rawget(_self._temp526, "__call_thing")) then
        _temp530 =  _self:_temp526()
      elseif _self._temp526 ~= nil then
        _temp530 =  _self._temp526

        elseif _self.no_undermethod ~= nil then
          _temp530 =  _self:no_undermethod(string:new("_temp526"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp530 =  _temp526(_self)
      end

        elseif _temp526 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.opts) == "function" or (_type(_temp530.opts) == "table" and _rawget(_temp530.opts, "__call_thing")) then
        _temp530 = _temp530:opts()
      elseif _temp530.opts ~= nil then
        _temp530 = _temp530.opts

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.opts ~= nil then
        _temp530 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.opts ~= nil then
        _temp530 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.dice) == "function" or (_type(_temp530.dice) == "table" and _rawget(_temp530.dice, "__call_thing")) then
        _temp530 = _temp530:dice()
      elseif _temp530.dice ~= nil then
        _temp530 = _temp530.dice

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.dice ~= nil then
        _temp530 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.dice ~= nil then
        _temp530 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.unique) == "function" or (_type(_temp530.unique) == "table" and _rawget(_temp530.unique, "__call_thing")) then
        _temp530 = _temp530:unique()
      elseif _temp530.unique ~= nil then
        _temp530 = _temp530.unique

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.unique ~= nil then
        _temp530 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.unique ~= nil then
        _temp530 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.join) == "function" or (_type(_temp530.join) == "table" and _rawget(_temp530.join, "__call_thing")) then
        _temp530 = _temp530:join()
      elseif _temp530.join ~= nil then
        _temp530 = _temp530.join

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.join ~= nil then
        _temp530 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.join ~= nil then
        _temp530 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

local _temp528 = regex:new("m")

_temp529 = string:new("s")

      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.sub) == "function" or (_type(_temp530.sub) == "table" and _rawget(_temp530.sub, "__call_thing")) then
        _temp530 = _temp530:sub(_temp528,_temp529)
      elseif _temp530.sub ~= nil then
        _temp530 = _temp530.sub

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("sub") , _temp528,_temp529)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.sub ~= nil then
        _temp530 = _n:sub(_temp528,_temp529)
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("sub") , _temp528,_temp529)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.sub ~= nil then
        _temp530 = _f:sub(_temp528,_temp529)
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("sub") , _temp528,_temp529)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end


    if _type(_temp525) == "function" or (_type(_temp525) == "table" and _rawget(_temp525, "__call_thing")) then
      _temp529 =  _temp525(_self)

    elseif _temp525 then
      _temp529 =  _temp525
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp529 =  _self:var()
      elseif _self.var ~= nil then
        _temp529 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp529 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp529 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp531 = nil
    if _type(_temp527) == "function" or (_type(_temp527) == "table" and _rawget(_temp527, "__call_thing")) then
      _temp531 =  _temp527(_self)

    elseif _temp527 then
      _temp531 =  _temp527
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp531 =  _self:body()
      elseif _self.body ~= nil then
        _temp531 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp531 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp531 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp532 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp532 =  _temp530(_self)

    elseif _temp530 then
      _temp532 =  _temp530
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp532 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp532 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp532 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp532 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp528 = string:new("regex:new(\"" .. _tostring(_temp531) .. "\", \"" .. _tostring(_temp532) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp529,_temp528)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp529,_temp528)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp529,_temp528)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp529,_temp528)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp524)
      if _t == "table" then
                      if _type(_temp524.walk) == "function" or (_type(_temp524.walk) == "table" and _rawget(_temp524.walk, "__call_thing")) then
        _dummy_ = _temp524:walk(_temp4,_temp534)
      elseif _temp524.walk ~= nil then
        _dummy_ = _temp524.walk

        elseif _temp524.no_undermethod ~= nil then
          _dummy_ =  _temp524:no_undermethod(string:new("walk") , _temp4,_temp534)
        else
          _error(exception:method_error(_temp524, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp524)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp534)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp534)
      else
        _error(exception:method_error(_temp524, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp524)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp534)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp534)
      else
        _error(exception:method_error(_temp524, "walk"))
      end

      elseif _temp524 == nil then
        _error(exception:null_error("_temp524", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp524))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp534 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp534 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp534 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp534 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp534 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp534 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp534 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp534 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp534 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp534 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp538 = function (_self, _temp536,_temp535)
        if _temp536 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp535 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp535 =  null(_self)

    elseif null then
      _temp535 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp535 =  _self:null()
      elseif _self.null ~= nil then
        _temp535 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp535 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp535 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp537
local _temp538 = nil
    if _type(_temp535) == "function" or (_type(_temp535) == "table" and _rawget(_temp535, "__call_thing")) then
      _temp538 =  _temp535(_self)

    elseif _temp535 then
      _temp538 =  _temp535
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp538 =  _self:var()
      elseif _self.var ~= nil then
        _temp538 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp538 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp538 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp537 =  set_underresult(_self, _temp538)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp537 =  _self:set_underresult(_temp538)
      elseif _self.set_underresult ~= nil then
        _temp537 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp537 =  _self:no_undermethod(string:new("set_result") , _temp538)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp537 =  no_undermethod(_self, string:new("set_result") , _temp538)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp539
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp539 =  _self:my()
      elseif _self.my ~= nil then
        _temp539 =  _self.my

        elseif my ~= nil then
          _temp539 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp539)
      if _t == "table" then
                      if _type(_temp539.env) == "function" or (_type(_temp539.env) == "table" and _rawget(_temp539.env, "__call_thing")) then
        _temp539 = _temp539:env()
      elseif _temp539.env ~= nil then
        _temp539 = _temp539.env

        elseif _temp539.no_undermethod ~= nil then
          _temp539 =  _temp539:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp539)
      if _n.env ~= nil then
        _temp539 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp539 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp539)
      if _f.env ~= nil then
        _temp539 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp539 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp539 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp539))
      end

      local _t = _type(_temp539)
      if _t == "table" then
                      if _type(_temp539.next_undertemp) == "function" or (_type(_temp539.next_undertemp) == "table" and _rawget(_temp539.next_undertemp, "__call_thing")) then
        _temp539 = _temp539:next_undertemp()
      elseif _temp539.next_undertemp ~= nil then
        _temp539 = _temp539.next_undertemp

        elseif _temp539.no_undermethod ~= nil then
          _temp539 =  _temp539:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp539)
      if _n.next_undertemp ~= nil then
        _temp539 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp539 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp539)
      if _f.next_undertemp ~= nil then
        _temp539 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp539 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp539 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp539))
      end


do
local _temp540 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp540 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp540 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp540 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp540 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp540 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp540 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp540 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp540 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp540 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp540 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp541 = nil
      local _t = _type(_temp540)
      if _t == "table" then
                      if _type(_temp540.out) == "function" or (_type(_temp540.out) == "table" and _rawget(_temp540.out, "__call_thing")) then
        _temp541 = _temp540:out()
      elseif _temp540.out ~= nil then
        _temp541 = _temp540.out

        elseif _temp540.no_undermethod ~= nil then
          _temp541 =  _temp540:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp540, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp540)
      if _n.out ~= nil then
        _temp541 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp541 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp540, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp540)
      if _f.out ~= nil then
        _temp541 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp541 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp540, "out"))
      end

      elseif _temp540 == nil then
        _error(exception:null_error("_temp540", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp540))
      end

local _temp542 = nil
do
local _temp543 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp543 =  _temp539(_self)

    elseif _temp539 then
      _temp543 =  _temp539
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp543 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp543 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp543 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp543 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp542 = string:new("\ndo\nlocal " .. _tostring(_temp543) .. " = {}\n")
end
local _temp544
      local _t = _type(_temp541)
      if _t == "table" then
                      if _type(_temp541._less_less) == "function" or (_type(_temp541._less_less) == "table" and _rawget(_temp541._less_less, "__call_thing")) then
        _temp544 = _temp541:_less_less(_temp542)
      elseif _temp541._less_less ~= nil then
        _temp544 = _temp541._less_less

        elseif _temp541.no_undermethod ~= nil then
          _temp544 =  _temp541:no_undermethod(string:new("<<") , _temp542)
        else
          _error(exception:method_error(_temp541, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp541)
      if _n._less_less ~= nil then
        _temp544 = _n:_less_less(_temp542)
      elseif _n.no_undermethod ~= nil then
        _temp544 =  _n:no_undermethod(string:new("<<") , _temp542)
      else
        _error(exception:method_error(_temp541, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp541)
      if _f._less_less ~= nil then
        _temp544 = _f:_less_less(_temp542)
      elseif _f.no_undermethod ~= nil then
        _temp544 =  _f:no_undermethod(string:new("<<") , _temp542)
      else
        _error(exception:method_error(_temp541, "<<"))
      end

      elseif _temp541 == nil then
        _error(exception:null_error("_temp541", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp541))
      end

_dummy_ = _temp544 
end

local _temp545
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp545 =  my(_self)

    elseif my then
      _temp545 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp545 =  _self:my()
      elseif _self.my ~= nil then
        _temp545 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp545 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp545 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp536)
        if _t == "table" then
          if _rawget(_temp536, "__call_thing") == nil then
            _temp538 = _temp536
          else
                  if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp538 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp538 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp538 =  _temp536(_self)
      end

          end
        elseif _t == "number" then
          _temp538 = _temp536
        elseif _t == "function" then
                if _temp536 == nil then
              if _type(_self._temp536) == "function" or (_type(_self._temp536) == "table" and _rawget(_self._temp536, "__call_thing")) then
        _temp538 =  _self:_temp536()
      elseif _self._temp536 ~= nil then
        _temp538 =  _self._temp536

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp536"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp538 =  _temp536(_self)
      end

        elseif _temp536 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp538)
      if _t == "table" then
                      if _type(_temp538.nodes) == "function" or (_type(_temp538.nodes) == "table" and _rawget(_temp538.nodes, "__call_thing")) then
        _temp538 = _temp538:nodes()
      elseif _temp538.nodes ~= nil then
        _temp538 = _temp538.nodes

        elseif _temp538.no_undermethod ~= nil then
          _temp538 =  _temp538:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp538, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp538)
      if _n.nodes ~= nil then
        _temp538 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp538 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp538, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp538)
      if _f.nodes ~= nil then
        _temp538 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp538 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp538, "nodes"))
      end

      elseif _temp538 == nil then
        _error(exception:null_error("_temp538", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp538))
      end


local _temp588 = function (_self, _temp546, _temp547)
        if _temp546 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp547 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp548 
do
local _temp549 = nil
        local _t = _type(_temp546)
        if _t == "table" then
          if _rawget(_temp546, "__call_thing") == nil then
            _temp549 = _temp546
          else
                  if _temp546 == nil then
              if _type(_self._temp546) == "function" or (_type(_self._temp546) == "table" and _rawget(_self._temp546, "__call_thing")) then
        _temp549 =  _self:_temp546()
      elseif _self._temp546 ~= nil then
        _temp549 =  _self._temp546

        elseif _self.no_undermethod ~= nil then
          _temp549 =  _self:no_undermethod(string:new("_temp546"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp549 =  _temp546(_self)
      end

          end
        elseif _t == "number" then
          _temp549 = _temp546
        elseif _t == "function" then
                if _temp546 == nil then
              if _type(_self._temp546) == "function" or (_type(_self._temp546) == "table" and _rawget(_self._temp546, "__call_thing")) then
        _temp549 =  _self:_temp546()
      elseif _self._temp546 ~= nil then
        _temp549 =  _self._temp546

        elseif _self.no_undermethod ~= nil then
          _temp549 =  _self:no_undermethod(string:new("_temp546"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp549 =  _temp546(_self)
      end

        elseif _temp546 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp550 = nil
      local _t = _type(_temp549)
      if _t == "table" then
                      if _type(_temp549.name) == "function" or (_type(_temp549.name) == "table" and _rawget(_temp549.name, "__call_thing")) then
        _temp550 = _temp549:name()
      elseif _temp549.name ~= nil then
        _temp550 = _temp549.name

        elseif _temp549.no_undermethod ~= nil then
          _temp550 =  _temp549:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp549, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp549)
      if _n.name ~= nil then
        _temp550 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp550 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp549, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp549)
      if _f.name ~= nil then
        _temp550 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp550 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp549, "name"))
      end

      elseif _temp549 == nil then
        _error(exception:null_error("_temp549", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp549))
      end

local _temp551 = string:new("string")
local _temp552
      local _t = _type(_temp550)
      if _t == "table" then
                      if _type(_temp550._equal_equal) == "function" or (_type(_temp550._equal_equal) == "table" and _rawget(_temp550._equal_equal, "__call_thing")) then
        _temp552 = _temp550:_equal_equal(_temp551)
      elseif _temp550._equal_equal ~= nil then
        _temp552 = _temp550._equal_equal

        elseif _temp550.no_undermethod ~= nil then
          _temp552 =  _temp550:no_undermethod(string:new("==") , _temp551)
        else
          _error(exception:method_error(_temp550, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp551) == 'number' then
              if _temp550 == _temp551 then
        _temp552 = object.__true
      else
        _temp552 = object.__false
      end

      else
              local _n = number:new(_temp550)
      if _n._equal_equal ~= nil then
        _temp552 = _n:_equal_equal(_temp551)
      elseif _n.no_undermethod ~= nil then
        _temp552 =  _n:no_undermethod(string:new("==") , _temp551)
      else
        _error(exception:method_error(_temp550, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp550)
      if _f._equal_equal ~= nil then
        _temp552 = _f:_equal_equal(_temp551)
      elseif _f.no_undermethod ~= nil then
        _temp552 =  _f:no_undermethod(string:new("==") , _temp551)
      else
        _error(exception:method_error(_temp550, "=="))
      end

      elseif _temp550 == nil then
        _error(exception:null_error("_temp550", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp550))
      end

_temp548 = _temp552 
end


local _temp565 = function (_self)

local _temp553 
do
local _temp554 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp554 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp554 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp554 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp554 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp554 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp554 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp554 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp554 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp554 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp554 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp555 = nil
      local _t = _type(_temp554)
      if _t == "table" then
                      if _type(_temp554.out) == "function" or (_type(_temp554.out) == "table" and _rawget(_temp554.out, "__call_thing")) then
        _temp555 = _temp554:out()
      elseif _temp554.out ~= nil then
        _temp555 = _temp554.out

        elseif _temp554.no_undermethod ~= nil then
          _temp555 =  _temp554:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp554, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp554)
      if _n.out ~= nil then
        _temp555 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp555 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp554, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp554)
      if _f.out ~= nil then
        _temp555 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp555 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp554, "out"))
      end

      elseif _temp554 == nil then
        _error(exception:null_error("_temp554", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp554))
      end

local _temp556 = nil
do
local _temp557 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp557 =  _temp539(_self)

    elseif _temp539 then
      _temp557 =  _temp539
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp557 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp557 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp557 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp557 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp558 
do
local _temp559 = nil
    if _type(_temp547) == "function" or (_type(_temp547) == "table" and _rawget(_temp547, "__call_thing")) then
      _temp559 =  _temp547(_self)

    elseif _temp547 then
      _temp559 =  _temp547
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp559 =  _self:i()
      elseif _self.i ~= nil then
        _temp559 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp559 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp559 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp560
      local _t = _type(_temp559)
      if _t == "table" then
                      if _type(_temp559._plus) == "function" or (_type(_temp559._plus) == "table" and _rawget(_temp559._plus, "__call_thing")) then
        _temp560 = _temp559:_plus(1)
      elseif _temp559._plus ~= nil then
        _temp560 = _temp559._plus

        elseif _temp559.no_undermethod ~= nil then
          _temp560 =  _temp559:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp559, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp560 = _temp559 + 1
      else
              local _n = number:new(_temp559)
      if _n._plus ~= nil then
        _temp560 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp560 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp559, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp559)
      if _f._plus ~= nil then
        _temp560 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp560 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp559, "+"))
      end

      elseif _temp559 == nil then
        _error(exception:null_error("_temp559", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp559))
      end

_temp558 = _temp560 
end

local _temp561 = nil
        local _t = _type(_temp545)
        if _t == "table" then
          if _rawget(_temp545, "__call_thing") == nil then
            _temp561 = _temp545
          else
                  if _temp545 == nil then
              if _type(_self._temp545) == "function" or (_type(_self._temp545) == "table" and _rawget(_self._temp545, "__call_thing")) then
        _temp561 =  _self:_temp545()
      elseif _self._temp545 ~= nil then
        _temp561 =  _self._temp545

        elseif _self.no_undermethod ~= nil then
          _temp561 =  _self:no_undermethod(string:new("_temp545"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp561 =  _temp545(_self)
      end

          end
        elseif _t == "number" then
          _temp561 = _temp545
        elseif _t == "function" then
                if _temp545 == nil then
              if _type(_self._temp545) == "function" or (_type(_self._temp545) == "table" and _rawget(_self._temp545, "__call_thing")) then
        _temp561 =  _self:_temp545()
      elseif _self._temp545 ~= nil then
        _temp561 =  _self._temp545

        elseif _self.no_undermethod ~= nil then
          _temp561 =  _self:no_undermethod(string:new("_temp545"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp561 =  _temp545(_self)
      end

        elseif _temp545 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp562 = nil
        local _t = _type(_temp546)
        if _t == "table" then
          if _rawget(_temp546, "__call_thing") == nil then
            _temp562 = _temp546
          else
                  if _temp546 == nil then
              if _type(_self._temp546) == "function" or (_type(_self._temp546) == "table" and _rawget(_self._temp546, "__call_thing")) then
        _temp562 =  _self:_temp546()
      elseif _self._temp546 ~= nil then
        _temp562 =  _self._temp546

        elseif _self.no_undermethod ~= nil then
          _temp562 =  _self:no_undermethod(string:new("_temp546"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp562 =  _temp546(_self)
      end

          end
        elseif _t == "number" then
          _temp562 = _temp546
        elseif _t == "function" then
                if _temp546 == nil then
              if _type(_self._temp546) == "function" or (_type(_self._temp546) == "table" and _rawget(_self._temp546, "__call_thing")) then
        _temp562 =  _self:_temp546()
      elseif _self._temp546 ~= nil then
        _temp562 =  _self._temp546

        elseif _self.no_undermethod ~= nil then
          _temp562 =  _self:no_undermethod(string:new("_temp546"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp562 =  _temp546(_self)
      end

        elseif _temp546 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp562)
      if _t == "table" then
                      if _type(_temp562.value) == "function" or (_type(_temp562.value) == "table" and _rawget(_temp562.value, "__call_thing")) then
        _temp562 = _temp562:value()
      elseif _temp562.value ~= nil then
        _temp562 = _temp562.value

        elseif _temp562.no_undermethod ~= nil then
          _temp562 =  _temp562:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp562, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp562)
      if _n.value ~= nil then
        _temp562 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp562 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp562, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp562)
      if _f.value ~= nil then
        _temp562 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp562 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp562, "value"))
      end

      elseif _temp562 == nil then
        _error(exception:null_error("_temp562", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp562))
      end


      local _t = _type(_temp561)
      if _t == "table" then
                      if _type(_temp561.escape_understring) == "function" or (_type(_temp561.escape_understring) == "table" and _rawget(_temp561.escape_understring, "__call_thing")) then
        _temp561 = _temp561:escape_understring(_temp562)
      elseif _temp561.escape_understring ~= nil then
        _temp561 = _temp561.escape_understring

        elseif _temp561.no_undermethod ~= nil then
          _temp561 =  _temp561:no_undermethod(string:new("escape_string") , _temp562)
        else
          _error(exception:method_error(_temp561, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp561)
      if _n.escape_understring ~= nil then
        _temp561 = _n:escape_understring(_temp562)
      elseif _n.no_undermethod ~= nil then
        _temp561 =  _n:no_undermethod(string:new("escape_string") , _temp562)
      else
        _error(exception:method_error(_temp561, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp561)
      if _f.escape_understring ~= nil then
        _temp561 = _f:escape_understring(_temp562)
      elseif _f.no_undermethod ~= nil then
        _temp561 =  _f:no_undermethod(string:new("escape_string") , _temp562)
      else
        _error(exception:method_error(_temp561, "escape_string"))
      end

      elseif _temp561 == nil then
        _error(exception:null_error("_temp561", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp561))
      end


_temp556 = string:new("" .. _tostring(_temp557) .. "[" .. _tostring(_temp558) .. "] = \"" .. _tostring(_temp561) .. "\"\n")
end
local _temp563
      local _t = _type(_temp555)
      if _t == "table" then
                      if _type(_temp555._less_less) == "function" or (_type(_temp555._less_less) == "table" and _rawget(_temp555._less_less, "__call_thing")) then
        _temp563 = _temp555:_less_less(_temp556)
      elseif _temp555._less_less ~= nil then
        _temp563 = _temp555._less_less

        elseif _temp555.no_undermethod ~= nil then
          _temp563 =  _temp555:no_undermethod(string:new("<<") , _temp556)
        else
          _error(exception:method_error(_temp555, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp555)
      if _n._less_less ~= nil then
        _temp563 = _n:_less_less(_temp556)
      elseif _n.no_undermethod ~= nil then
        _temp563 =  _n:no_undermethod(string:new("<<") , _temp556)
      else
        _error(exception:method_error(_temp555, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp555)
      if _f._less_less ~= nil then
        _temp563 = _f:_less_less(_temp556)
      elseif _f.no_undermethod ~= nil then
        _temp563 =  _f:no_undermethod(string:new("<<") , _temp556)
      else
        _error(exception:method_error(_temp555, "<<"))
      end

      elseif _temp555 == nil then
        _error(exception:null_error("_temp555", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp555))
      end

_temp553 = _temp563 
end

return _temp553
end


local _temp586 = function (_self)

local _temp566
        local _t = _type(_temp545)
        if _t == "table" then
          if _rawget(_temp545, "__call_thing") == nil then
            _temp566 = _temp545
          else
                  if _temp545 == nil then
              if _type(_self._temp545) == "function" or (_type(_self._temp545) == "table" and _rawget(_self._temp545, "__call_thing")) then
        _temp566 =  _self:_temp545()
      elseif _self._temp545 ~= nil then
        _temp566 =  _self._temp545

        elseif _self.no_undermethod ~= nil then
          _temp566 =  _self:no_undermethod(string:new("_temp545"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp566 =  _temp545(_self)
      end

          end
        elseif _t == "number" then
          _temp566 = _temp545
        elseif _t == "function" then
                if _temp545 == nil then
              if _type(_self._temp545) == "function" or (_type(_self._temp545) == "table" and _rawget(_self._temp545, "__call_thing")) then
        _temp566 =  _self:_temp545()
      elseif _self._temp545 ~= nil then
        _temp566 =  _self._temp545

        elseif _self.no_undermethod ~= nil then
          _temp566 =  _self:no_undermethod(string:new("_temp545"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp566 =  _temp545(_self)
      end

        elseif _temp545 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp567 = nil
    if _type(_temp546) == "function" or (_type(_temp546) == "table" and _rawget(_temp546, "__call_thing")) then
      _temp567 =  _temp546(_self)

    elseif _temp546 then
      _temp567 =  _temp546
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp567 =  _self:n()
      elseif _self.n ~= nil then
        _temp567 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp567 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp567 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp568 = nil
do
local _temp569 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp569 =  _temp539(_self)

    elseif _temp539 then
      _temp569 =  _temp539
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp569 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp569 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp569 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp569 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp570 
do
local _temp571 = nil
    if _type(_temp547) == "function" or (_type(_temp547) == "table" and _rawget(_temp547, "__call_thing")) then
      _temp571 =  _temp547(_self)

    elseif _temp547 then
      _temp571 =  _temp547
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp571 =  _self:i()
      elseif _self.i ~= nil then
        _temp571 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp571 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp571 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp572
      local _t = _type(_temp571)
      if _t == "table" then
                      if _type(_temp571._plus) == "function" or (_type(_temp571._plus) == "table" and _rawget(_temp571._plus, "__call_thing")) then
        _temp572 = _temp571:_plus(1)
      elseif _temp571._plus ~= nil then
        _temp572 = _temp571._plus

        elseif _temp571.no_undermethod ~= nil then
          _temp572 =  _temp571:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp571, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp572 = _temp571 + 1
      else
              local _n = number:new(_temp571)
      if _n._plus ~= nil then
        _temp572 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp572 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp571, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp571)
      if _f._plus ~= nil then
        _temp572 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp572 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp571, "+"))
      end

      elseif _temp571 == nil then
        _error(exception:null_error("_temp571", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp571))
      end

_temp570 = _temp572 
end

_temp568 = string:new("" .. _tostring(_temp569) .. "[" .. _tostring(_temp570) .. "]")
end

      local _t = _type(_temp566)
      if _t == "table" then
                      if _type(_temp566.process) == "function" or (_type(_temp566.process) == "table" and _rawget(_temp566.process, "__call_thing")) then
        _temp566 = _temp566:process(_temp567,_temp568)
      elseif _temp566.process ~= nil then
        _temp566 = _temp566.process

        elseif _temp566.no_undermethod ~= nil then
          _temp566 =  _temp566:no_undermethod(string:new("process") , _temp567,_temp568)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp566)
      if _n.process ~= nil then
        _temp566 = _n:process(_temp567,_temp568)
      elseif _n.no_undermethod ~= nil then
        _temp566 =  _n:no_undermethod(string:new("process") , _temp567,_temp568)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp566)
      if _f.process ~= nil then
        _temp566 = _f:process(_temp567,_temp568)
      elseif _f.no_undermethod ~= nil then
        _temp566 =  _f:no_undermethod(string:new("process") , _temp567,_temp568)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp566 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp566))
      end


do
local _temp573 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp573 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp573 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp573 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp573 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp573 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp573 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp573 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp573 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp573 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp573 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp574 = nil
      local _t = _type(_temp573)
      if _t == "table" then
                      if _type(_temp573.out) == "function" or (_type(_temp573.out) == "table" and _rawget(_temp573.out, "__call_thing")) then
        _temp574 = _temp573:out()
      elseif _temp573.out ~= nil then
        _temp574 = _temp573.out

        elseif _temp573.no_undermethod ~= nil then
          _temp574 =  _temp573:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp573, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp573)
      if _n.out ~= nil then
        _temp574 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp574 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp573, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp573)
      if _f.out ~= nil then
        _temp574 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp574 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp573, "out"))
      end

      elseif _temp573 == nil then
        _error(exception:null_error("_temp573", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp573))
      end

local _temp575 = nil
        local _t = _type(_temp566)
        if _t == "table" then
          if _rawget(_temp566, "__call_thing") == nil then
            _temp575 = _temp566
          else
                  if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp575 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp575 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp575 =  _temp566(_self)
      end

          end
        elseif _t == "number" then
          _temp575 = _temp566
        elseif _t == "function" then
                if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp575 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp575 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp575 =  _temp566(_self)
      end

        elseif _temp566 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.out) == "function" or (_type(_temp575.out) == "table" and _rawget(_temp575.out, "__call_thing")) then
        _temp575 = _temp575:out()
      elseif _temp575.out ~= nil then
        _temp575 = _temp575.out

        elseif _temp575.no_undermethod ~= nil then
          _temp575 =  _temp575:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp575, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.out ~= nil then
        _temp575 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp575 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp575, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.out ~= nil then
        _temp575 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp575 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp575, "out"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("_temp575", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end

local _temp576
      local _t = _type(_temp574)
      if _t == "table" then
                      if _type(_temp574._less_less) == "function" or (_type(_temp574._less_less) == "table" and _rawget(_temp574._less_less, "__call_thing")) then
        _temp576 = _temp574:_less_less(_temp575)
      elseif _temp574._less_less ~= nil then
        _temp576 = _temp574._less_less

        elseif _temp574.no_undermethod ~= nil then
          _temp576 =  _temp574:no_undermethod(string:new("<<") , _temp575)
        else
          _error(exception:method_error(_temp574, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp574)
      if _n._less_less ~= nil then
        _temp576 = _n:_less_less(_temp575)
      elseif _n.no_undermethod ~= nil then
        _temp576 =  _n:no_undermethod(string:new("<<") , _temp575)
      else
        _error(exception:method_error(_temp574, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp574)
      if _f._less_less ~= nil then
        _temp576 = _f:_less_less(_temp575)
      elseif _f.no_undermethod ~= nil then
        _temp576 =  _f:no_undermethod(string:new("<<") , _temp575)
      else
        _error(exception:method_error(_temp574, "<<"))
      end

      elseif _temp574 == nil then
        _error(exception:null_error("_temp574", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp574))
      end

_dummy_ = _temp576 
end

local _temp568 
do
local _temp577 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp577 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp577 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp577 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp577 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp577 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp577 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp577 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp577 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp578 = nil
      local _t = _type(_temp577)
      if _t == "table" then
                      if _type(_temp577.out) == "function" or (_type(_temp577.out) == "table" and _rawget(_temp577.out, "__call_thing")) then
        _temp578 = _temp577:out()
      elseif _temp577.out ~= nil then
        _temp578 = _temp577.out

        elseif _temp577.no_undermethod ~= nil then
          _temp578 =  _temp577:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp577, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp577)
      if _n.out ~= nil then
        _temp578 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp578 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp577, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp577)
      if _f.out ~= nil then
        _temp578 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp578 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp577, "out"))
      end

      elseif _temp577 == nil then
        _error(exception:null_error("_temp577", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp577))
      end

local _temp579 = nil
do
local _temp580 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp580 =  _temp539(_self)

    elseif _temp539 then
      _temp580 =  _temp539
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp580 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp580 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp580 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp580 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp581 
do
local _temp582 = nil
    if _type(_temp547) == "function" or (_type(_temp547) == "table" and _rawget(_temp547, "__call_thing")) then
      _temp582 =  _temp547(_self)

    elseif _temp547 then
      _temp582 =  _temp547
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp582 =  _self:i()
      elseif _self.i ~= nil then
        _temp582 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp582 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp582 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp583
      local _t = _type(_temp582)
      if _t == "table" then
                      if _type(_temp582._plus) == "function" or (_type(_temp582._plus) == "table" and _rawget(_temp582._plus, "__call_thing")) then
        _temp583 = _temp582:_plus(1)
      elseif _temp582._plus ~= nil then
        _temp583 = _temp582._plus

        elseif _temp582.no_undermethod ~= nil then
          _temp583 =  _temp582:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp582, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp583 = _temp582 + 1
      else
              local _n = number:new(_temp582)
      if _n._plus ~= nil then
        _temp583 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp583 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp582, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp582)
      if _f._plus ~= nil then
        _temp583 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp583 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp582, "+"))
      end

      elseif _temp582 == nil then
        _error(exception:null_error("_temp582", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp582))
      end

_temp581 = _temp583 
end

local _temp584 = nil
        local _t = _type(_temp566)
        if _t == "table" then
          if _rawget(_temp566, "__call_thing") == nil then
            _temp584 = _temp566
          else
                  if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp584 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp584 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp584 =  _temp566(_self)
      end

          end
        elseif _t == "number" then
          _temp584 = _temp566
        elseif _t == "function" then
                if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp584 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp584 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp584 =  _temp566(_self)
      end

        elseif _temp566 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp584)
      if _t == "table" then
                      if _type(_temp584.var) == "function" or (_type(_temp584.var) == "table" and _rawget(_temp584.var, "__call_thing")) then
        _temp584 = _temp584:var()
      elseif _temp584.var ~= nil then
        _temp584 = _temp584.var

        elseif _temp584.no_undermethod ~= nil then
          _temp584 =  _temp584:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp584, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp584)
      if _n.var ~= nil then
        _temp584 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp584 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp584, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp584)
      if _f.var ~= nil then
        _temp584 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp584 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp584, "var"))
      end

      elseif _temp584 == nil then
        _error(exception:null_error("_temp584", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp584))
      end


_temp579 = string:new("" .. _tostring(_temp580) .. "[" .. _tostring(_temp581) .. "] = _tostring(" .. _tostring(_temp584) .. ")\n")
end
local _temp585
      local _t = _type(_temp578)
      if _t == "table" then
                      if _type(_temp578._less_less) == "function" or (_type(_temp578._less_less) == "table" and _rawget(_temp578._less_less, "__call_thing")) then
        _temp585 = _temp578:_less_less(_temp579)
      elseif _temp578._less_less ~= nil then
        _temp585 = _temp578._less_less

        elseif _temp578.no_undermethod ~= nil then
          _temp585 =  _temp578:no_undermethod(string:new("<<") , _temp579)
        else
          _error(exception:method_error(_temp578, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp578)
      if _n._less_less ~= nil then
        _temp585 = _n:_less_less(_temp579)
      elseif _n.no_undermethod ~= nil then
        _temp585 =  _n:no_undermethod(string:new("<<") , _temp579)
      else
        _error(exception:method_error(_temp578, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp578)
      if _f._less_less ~= nil then
        _temp585 = _f:_less_less(_temp579)
      elseif _f.no_undermethod ~= nil then
        _temp585 =  _f:no_undermethod(string:new("<<") , _temp579)
      else
        _error(exception:method_error(_temp578, "<<"))
      end

      elseif _temp578 == nil then
        _error(exception:null_error("_temp578", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp578))
      end

_temp568 = _temp585 
end

return _temp568
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp548,_temp565,_temp586)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp548,_temp565,_temp586)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp548,_temp565,_temp586)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp548,_temp565,_temp586)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp538)
      if _t == "table" then
                      if _type(_temp538.each_underwith_underindex) == "function" or (_type(_temp538.each_underwith_underindex) == "table" and _rawget(_temp538.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp538:each_underwith_underindex(_temp588)
      elseif _temp538.each_underwith_underindex ~= nil then
        _dummy_ = _temp538.each_underwith_underindex

        elseif _temp538.no_undermethod ~= nil then
          _dummy_ =  _temp538:no_undermethod(string:new("each_with_index") , _temp588)
        else
          _error(exception:method_error(_temp538, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp538)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp588)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp588)
      else
        _error(exception:method_error(_temp538, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp538)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp588)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp588)
      else
        _error(exception:method_error(_temp538, "each_with_index"))
      end

      elseif _temp538 == nil then
        _error(exception:null_error("_temp538", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp538))
      end

do
local _temp589 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp589 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp589 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp589 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp589 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp589 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp589 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp589 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp589 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp590 = nil
      local _t = _type(_temp589)
      if _t == "table" then
                      if _type(_temp589.out) == "function" or (_type(_temp589.out) == "table" and _rawget(_temp589.out, "__call_thing")) then
        _temp590 = _temp589:out()
      elseif _temp589.out ~= nil then
        _temp590 = _temp589.out

        elseif _temp589.no_undermethod ~= nil then
          _temp590 =  _temp589:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp589, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp589)
      if _n.out ~= nil then
        _temp590 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp590 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp589, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp589)
      if _f.out ~= nil then
        _temp590 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp590 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp589, "out"))
      end

      elseif _temp589 == nil then
        _error(exception:null_error("_temp589", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp589))
      end

local _temp591 = nil
do
local _temp592 = nil
        local _t = _type(_temp537)
        if _t == "table" then
          if _rawget(_temp537, "__call_thing") == nil then
            _temp592 = _temp537
          else
                  if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp592 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp592 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp592 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp592 =  _temp537(_self)
      end

          end
        elseif _t == "number" then
          _temp592 = _temp537
        elseif _t == "function" then
                if _temp537 == nil then
              if _type(_self._temp537) == "function" or (_type(_self._temp537) == "table" and _rawget(_self._temp537, "__call_thing")) then
        _temp592 =  _self:_temp537()
      elseif _self._temp537 ~= nil then
        _temp592 =  _self._temp537

        elseif _self.no_undermethod ~= nil then
          _temp592 =  _self:no_undermethod(string:new("_temp537"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp592 =  _temp537(_self)
      end

        elseif _temp537 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp592)
      if _t == "table" then
                      if _type(_temp592.var) == "function" or (_type(_temp592.var) == "table" and _rawget(_temp592.var, "__call_thing")) then
        _temp592 = _temp592:var()
      elseif _temp592.var ~= nil then
        _temp592 = _temp592.var

        elseif _temp592.no_undermethod ~= nil then
          _temp592 =  _temp592:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp592, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp592)
      if _n.var ~= nil then
        _temp592 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp592 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp592, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp592)
      if _f.var ~= nil then
        _temp592 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp592 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp592, "var"))
      end

      elseif _temp592 == nil then
        _error(exception:null_error("_temp592", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp592))
      end


local _temp593 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp593 =  _temp539(_self)

    elseif _temp539 then
      _temp593 =  _temp539
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp593 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp593 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp593 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp593 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp591 = string:new("" .. _tostring(_temp592) .. " = string:new(_table.concat(" .. _tostring(_temp593) .. "))\nend\n")
end
local _temp594
      local _t = _type(_temp590)
      if _t == "table" then
                      if _type(_temp590._less_less) == "function" or (_type(_temp590._less_less) == "table" and _rawget(_temp590._less_less, "__call_thing")) then
        _temp594 = _temp590:_less_less(_temp591)
      elseif _temp590._less_less ~= nil then
        _temp594 = _temp590._less_less

        elseif _temp590.no_undermethod ~= nil then
          _temp594 =  _temp590:no_undermethod(string:new("<<") , _temp591)
        else
          _error(exception:method_error(_temp590, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp590)
      if _n._less_less ~= nil then
        _temp594 = _n:_less_less(_temp591)
      elseif _n.no_undermethod ~= nil then
        _temp594 =  _n:no_undermethod(string:new("<<") , _temp591)
      else
        _error(exception:method_error(_temp590, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp590)
      if _f._less_less ~= nil then
        _temp594 = _f:_less_less(_temp591)
      elseif _f.no_undermethod ~= nil then
        _temp594 =  _f:no_undermethod(string:new("<<") , _temp591)
      else
        _error(exception:method_error(_temp590, "<<"))
      end

      elseif _temp590 == nil then
        _error(exception:null_error("_temp590", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp590))
      end

_dummy_ = _temp594 
end

    if _type(_temp537) == "function" or (_type(_temp537) == "table" and _rawget(_temp537, "__call_thing")) then
      return  _temp537(_self)

    elseif _temp537 then
      return  _temp537
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp534)
      if _t == "table" then
                      if _type(_temp534.walk) == "function" or (_type(_temp534.walk) == "table" and _rawget(_temp534.walk, "__call_thing")) then
        _dummy_ = _temp534:walk(_temp4,_temp538)
      elseif _temp534.walk ~= nil then
        _dummy_ = _temp534.walk

        elseif _temp534.no_undermethod ~= nil then
          _dummy_ =  _temp534:no_undermethod(string:new("walk") , _temp4,_temp538)
        else
          _error(exception:method_error(_temp534, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp534)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp538)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp538)
      else
        _error(exception:method_error(_temp534, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp534)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp538)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp538)
      else
        _error(exception:method_error(_temp534, "walk"))
      end

      elseif _temp534 == nil then
        _error(exception:null_error("_temp534", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp534))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp538 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp538 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp538 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp538 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp538 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp538 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp538 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp538 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp606 = function (_self, _temp596,_temp595)
        if _temp596 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp595 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp595 =  null(_self)

    elseif null then
      _temp595 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp595 =  _self:null()
      elseif _self.null ~= nil then
        _temp595 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp595 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp595 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp597
local _temp598 = nil
    if _type(_temp595) == "function" or (_type(_temp595) == "table" and _rawget(_temp595, "__call_thing")) then
      _temp598 =  _temp595(_self)

    elseif _temp595 then
      _temp598 =  _temp595
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp598 =  _self:var()
      elseif _self.var ~= nil then
        _temp598 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp598 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp598 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp597 =  set_underresult(_self, _temp598)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp597 =  _self:set_underresult(_temp598)
      elseif _self.set_underresult ~= nil then
        _temp597 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp597 =  _self:no_undermethod(string:new("set_result") , _temp598)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp597 =  no_undermethod(_self, string:new("set_result") , _temp598)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp599
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp599 =  my(_self)

    elseif my then
      _temp599 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp599 =  _self:my()
      elseif _self.my ~= nil then
        _temp599 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp599 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp599 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp600
        local _t = _type(_temp596)
        if _t == "table" then
          if _rawget(_temp596, "__call_thing") == nil then
            _temp600 = _temp596
          else
                  if _temp596 == nil then
              if _type(_self._temp596) == "function" or (_type(_self._temp596) == "table" and _rawget(_self._temp596, "__call_thing")) then
        _temp600 =  _self:_temp596()
      elseif _self._temp596 ~= nil then
        _temp600 =  _self._temp596

        elseif _self.no_undermethod ~= nil then
          _temp600 =  _self:no_undermethod(string:new("_temp596"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp600 =  _temp596(_self)
      end

          end
        elseif _t == "number" then
          _temp600 = _temp596
        elseif _t == "function" then
                if _temp596 == nil then
              if _type(_self._temp596) == "function" or (_type(_self._temp596) == "table" and _rawget(_self._temp596, "__call_thing")) then
        _temp600 =  _self:_temp596()
      elseif _self._temp596 ~= nil then
        _temp600 =  _self._temp596

        elseif _self.no_undermethod ~= nil then
          _temp600 =  _self:no_undermethod(string:new("_temp596"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp600 =  _temp596(_self)
      end

        elseif _temp596 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp600)
      if _t == "table" then
                      if _type(_temp600.nodes) == "function" or (_type(_temp600.nodes) == "table" and _rawget(_temp600.nodes, "__call_thing")) then
        _temp600 = _temp600:nodes()
      elseif _temp600.nodes ~= nil then
        _temp600 = _temp600.nodes

        elseif _temp600.no_undermethod ~= nil then
          _temp600 =  _temp600:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp600)
      if _n.nodes ~= nil then
        _temp600 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp600)
      if _f.nodes ~= nil then
        _temp600 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp600 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp600))
      end


local _temp606 = function (_self, _temp601)
        if _temp601 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp602 = nil
        local _t = _type(_temp599)
        if _t == "table" then
          if _rawget(_temp599, "__call_thing") == nil then
            _temp602 = _temp599
          else
                  if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp602 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp602 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp602 =  _temp599(_self)
      end

          end
        elseif _t == "number" then
          _temp602 = _temp599
        elseif _t == "function" then
                if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp602 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp602 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp602 =  _temp599(_self)
      end

        elseif _temp599 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp603 = nil
    if _type(_temp601) == "function" or (_type(_temp601) == "table" and _rawget(_temp601, "__call_thing")) then
      _temp603 =  _temp601(_self)

    elseif _temp601 then
      _temp603 =  _temp601
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp603 =  _self:n()
      elseif _self.n ~= nil then
        _temp603 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp603 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp603 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp604 = nil
        local _t = _type(_temp597)
        if _t == "table" then
          if _rawget(_temp597, "__call_thing") == nil then
            _temp604 = _temp597
          else
                  if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp604 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp604 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp604 =  _temp597(_self)
      end

          end
        elseif _t == "number" then
          _temp604 = _temp597
        elseif _t == "function" then
                if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp604 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp604 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp604 =  _temp597(_self)
      end

        elseif _temp597 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp604)
      if _t == "table" then
                      if _type(_temp604.var) == "function" or (_type(_temp604.var) == "table" and _rawget(_temp604.var, "__call_thing")) then
        _temp604 = _temp604:var()
      elseif _temp604.var ~= nil then
        _temp604 = _temp604.var

        elseif _temp604.no_undermethod ~= nil then
          _temp604 =  _temp604:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp604, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp604)
      if _n.var ~= nil then
        _temp604 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp604 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp604, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp604)
      if _f.var ~= nil then
        _temp604 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp604 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp604, "var"))
      end

      elseif _temp604 == nil then
        _error(exception:null_error("_temp604", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp604))
      end


      local _t = _type(_temp602)
      if _t == "table" then
                      if _type(_temp602.process) == "function" or (_type(_temp602.process) == "table" and _rawget(_temp602.process, "__call_thing")) then
        return _temp602:process(_temp603,_temp604)
      elseif _temp602.process ~= nil then
        return _temp602.process

        elseif _temp602.no_undermethod ~= nil then
          return  _temp602:no_undermethod(string:new("process") , _temp603,_temp604)
        else
          _error(exception:method_error(_temp602, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp602)
      if _n.process ~= nil then
        return _n:process(_temp603,_temp604)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp603,_temp604)
      else
        _error(exception:method_error(_temp602, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp602)
      if _f.process ~= nil then
        return _f:process(_temp603,_temp604)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp603,_temp604)
      else
        _error(exception:method_error(_temp602, "process"))
      end

      elseif _temp602 == nil then
        _error(exception:null_error("_temp602", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp602))
      end

end

      local _t = _type(_temp600)
      if _t == "table" then
                      if _type(_temp600.map) == "function" or (_type(_temp600.map) == "table" and _rawget(_temp600.map, "__call_thing")) then
        _temp600 = _temp600:map(_temp606)
      elseif _temp600.map ~= nil then
        _temp600 = _temp600.map

        elseif _temp600.no_undermethod ~= nil then
          _temp600 =  _temp600:no_undermethod(string:new("map") , _temp606)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp600)
      if _n.map ~= nil then
        _temp600 = _n:map(_temp606)
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("map") , _temp606)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp600)
      if _f.map ~= nil then
        _temp600 = _f:map(_temp606)
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("map") , _temp606)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp600 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp600))
      end


do
local _temp607 = nil
        local _t = _type(_temp597)
        if _t == "table" then
          if _rawget(_temp597, "__call_thing") == nil then
            _temp607 = _temp597
          else
                  if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp607 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp607 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp607 =  _temp597(_self)
      end

          end
        elseif _t == "number" then
          _temp607 = _temp597
        elseif _t == "function" then
                if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp607 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp607 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp607 =  _temp597(_self)
      end

        elseif _temp597 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp608 = nil
      local _t = _type(_temp607)
      if _t == "table" then
                      if _type(_temp607.out) == "function" or (_type(_temp607.out) == "table" and _rawget(_temp607.out, "__call_thing")) then
        _temp608 = _temp607:out()
      elseif _temp607.out ~= nil then
        _temp608 = _temp607.out

        elseif _temp607.no_undermethod ~= nil then
          _temp608 =  _temp607:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp607, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp607)
      if _n.out ~= nil then
        _temp608 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp608 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp607, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp607)
      if _f.out ~= nil then
        _temp608 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp608 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp607, "out"))
      end

      elseif _temp607 == nil then
        _error(exception:null_error("_temp607", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp607))
      end

local _temp609 = nil
        local _t = _type(_temp600)
        if _t == "table" then
          if _rawget(_temp600, "__call_thing") == nil then
            _temp609 = _temp600
          else
                  if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp609 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp609 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp609 =  _temp600(_self)
      end

          end
        elseif _t == "number" then
          _temp609 = _temp600
        elseif _t == "function" then
                if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp609 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp609 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp609 =  _temp600(_self)
      end

        elseif _temp600 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp610 = string:new("out")

      local _t = _type(_temp609)
      if _t == "table" then
                      if _type(_temp609.map) == "function" or (_type(_temp609.map) == "table" and _rawget(_temp609.map, "__call_thing")) then
        _temp609 = _temp609:map(_temp610)
      elseif _temp609.map ~= nil then
        _temp609 = _temp609.map

        elseif _temp609.no_undermethod ~= nil then
          _temp609 =  _temp609:no_undermethod(string:new("map") , _temp610)
        else
          _error(exception:method_error(_temp609, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp609)
      if _n.map ~= nil then
        _temp609 = _n:map(_temp610)
      elseif _n.no_undermethod ~= nil then
        _temp609 =  _n:no_undermethod(string:new("map") , _temp610)
      else
        _error(exception:method_error(_temp609, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp609)
      if _f.map ~= nil then
        _temp609 = _f:map(_temp610)
      elseif _f.no_undermethod ~= nil then
        _temp609 =  _f:no_undermethod(string:new("map") , _temp610)
      else
        _error(exception:method_error(_temp609, "map"))
      end

      elseif _temp609 == nil then
        _error(exception:null_error("_temp609", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp609))
      end

_temp610 = string:new("\n")

      local _t = _type(_temp609)
      if _t == "table" then
                      if _type(_temp609.join) == "function" or (_type(_temp609.join) == "table" and _rawget(_temp609.join, "__call_thing")) then
        _temp609 = _temp609:join(_temp610)
      elseif _temp609.join ~= nil then
        _temp609 = _temp609.join

        elseif _temp609.no_undermethod ~= nil then
          _temp609 =  _temp609:no_undermethod(string:new("join") , _temp610)
        else
          _error(exception:method_error(_temp609, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp609)
      if _n.join ~= nil then
        _temp609 = _n:join(_temp610)
      elseif _n.no_undermethod ~= nil then
        _temp609 =  _n:no_undermethod(string:new("join") , _temp610)
      else
        _error(exception:method_error(_temp609, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp609)
      if _f.join ~= nil then
        _temp609 = _f:join(_temp610)
      elseif _f.no_undermethod ~= nil then
        _temp609 =  _f:no_undermethod(string:new("join") , _temp610)
      else
        _error(exception:method_error(_temp609, "join"))
      end

      elseif _temp609 == nil then
        _error(exception:null_error("_temp609", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp609))
      end

local _temp610
      local _t = _type(_temp608)
      if _t == "table" then
                      if _type(_temp608._less_less) == "function" or (_type(_temp608._less_less) == "table" and _rawget(_temp608._less_less, "__call_thing")) then
        _temp610 = _temp608:_less_less(_temp609)
      elseif _temp608._less_less ~= nil then
        _temp610 = _temp608._less_less

        elseif _temp608.no_undermethod ~= nil then
          _temp610 =  _temp608:no_undermethod(string:new("<<") , _temp609)
        else
          _error(exception:method_error(_temp608, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp608)
      if _n._less_less ~= nil then
        _temp610 = _n:_less_less(_temp609)
      elseif _n.no_undermethod ~= nil then
        _temp610 =  _n:no_undermethod(string:new("<<") , _temp609)
      else
        _error(exception:method_error(_temp608, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp608)
      if _f._less_less ~= nil then
        _temp610 = _f:_less_less(_temp609)
      elseif _f.no_undermethod ~= nil then
        _temp610 =  _f:no_undermethod(string:new("<<") , _temp609)
      else
        _error(exception:method_error(_temp608, "<<"))
      end

      elseif _temp608 == nil then
        _error(exception:null_error("_temp608", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp608))
      end

_dummy_ = _temp610 
end

local _temp606 
do
local _temp611 = nil
        local _t = _type(_temp597)
        if _t == "table" then
          if _rawget(_temp597, "__call_thing") == nil then
            _temp611 = _temp597
          else
                  if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp611 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp611 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp611 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp611 =  _temp597(_self)
      end

          end
        elseif _t == "number" then
          _temp611 = _temp597
        elseif _t == "function" then
                if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp611 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp611 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp611 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp611 =  _temp597(_self)
      end

        elseif _temp597 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp612 = nil
      local _t = _type(_temp611)
      if _t == "table" then
                      if _type(_temp611.var) == "function" or (_type(_temp611.var) == "table" and _rawget(_temp611.var, "__call_thing")) then
        _temp612 = _temp611:var()
      elseif _temp611.var ~= nil then
        _temp612 = _temp611.var

        elseif _temp611.no_undermethod ~= nil then
          _temp612 =  _temp611:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp611, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp611)
      if _n.var ~= nil then
        _temp612 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp612 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp611, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp611)
      if _f.var ~= nil then
        _temp612 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp612 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp611, "var"))
      end

      elseif _temp611 == nil then
        _error(exception:null_error("_temp611", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp611))
      end

local _temp613 = nil
        local _t = _type(_temp600)
        if _t == "table" then
          if _rawget(_temp600, "__call_thing") == nil then
            _temp613 = _temp600
          else
                  if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp613 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp613 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp613 =  _temp600(_self)
      end

          end
        elseif _t == "number" then
          _temp613 = _temp600
        elseif _t == "function" then
                if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp613 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp613 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp613 =  _temp600(_self)
      end

        elseif _temp600 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp613)
      if _t == "table" then
                      if _type(_temp613.last) == "function" or (_type(_temp613.last) == "table" and _rawget(_temp613.last, "__call_thing")) then
        _temp613 = _temp613:last()
      elseif _temp613.last ~= nil then
        _temp613 = _temp613.last

        elseif _temp613.no_undermethod ~= nil then
          _temp613 =  _temp613:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp613, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp613)
      if _n.last ~= nil then
        _temp613 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp613 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp613, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp613)
      if _f.last ~= nil then
        _temp613 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp613 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp613, "last"))
      end

      elseif _temp613 == nil then
        _error(exception:null_error("_temp613", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp613))
      end

      local _t = _type(_temp613)
      if _t == "table" then
                      if _type(_temp613.var) == "function" or (_type(_temp613.var) == "table" and _rawget(_temp613.var, "__call_thing")) then
        _temp613 = _temp613:var()
      elseif _temp613.var ~= nil then
        _temp613 = _temp613.var

        elseif _temp613.no_undermethod ~= nil then
          _temp613 =  _temp613:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp613, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp613)
      if _n.var ~= nil then
        _temp613 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp613 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp613, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp613)
      if _f.var ~= nil then
        _temp613 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp613 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp613, "var"))
      end

      elseif _temp613 == nil then
        _error(exception:null_error("_temp613", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp613))
      end

local _temp614
      local _t = _type(_temp612)
      if _t == "table" then
                      if _type(_temp612._bang_equal) == "function" or (_type(_temp612._bang_equal) == "table" and _rawget(_temp612._bang_equal, "__call_thing")) then
        _temp614 = _temp612:_bang_equal(_temp613)
      elseif _temp612._bang_equal ~= nil then
        _temp614 = _temp612._bang_equal

        elseif _temp612.no_undermethod ~= nil then
          _temp614 =  _temp612:no_undermethod(string:new("!=") , _temp613)
        else
          _error(exception:method_error(_temp612, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp612)
      if _n._bang_equal ~= nil then
        _temp614 = _n:_bang_equal(_temp613)
      elseif _n.no_undermethod ~= nil then
        _temp614 =  _n:no_undermethod(string:new("!=") , _temp613)
      else
        _error(exception:method_error(_temp612, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp612)
      if _f._bang_equal ~= nil then
        _temp614 = _f:_bang_equal(_temp613)
      elseif _f.no_undermethod ~= nil then
        _temp614 =  _f:no_undermethod(string:new("!=") , _temp613)
      else
        _error(exception:method_error(_temp612, "!="))
      end

      elseif _temp612 == nil then
        _error(exception:null_error("_temp612", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp612))
      end

_temp606 = _temp614 
end


local _temp623 = function (_self)

local _temp615 
do
local _temp616 = nil
        local _t = _type(_temp597)
        if _t == "table" then
          if _rawget(_temp597, "__call_thing") == nil then
            _temp616 = _temp597
          else
                  if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp616 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp616 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp616 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp616 =  _temp597(_self)
      end

          end
        elseif _t == "number" then
          _temp616 = _temp597
        elseif _t == "function" then
                if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp616 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp616 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp616 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp616 =  _temp597(_self)
      end

        elseif _temp597 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp617 = nil
      local _t = _type(_temp616)
      if _t == "table" then
                      if _type(_temp616.out) == "function" or (_type(_temp616.out) == "table" and _rawget(_temp616.out, "__call_thing")) then
        _temp617 = _temp616:out()
      elseif _temp616.out ~= nil then
        _temp617 = _temp616.out

        elseif _temp616.no_undermethod ~= nil then
          _temp617 =  _temp616:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp616, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp616)
      if _n.out ~= nil then
        _temp617 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp617 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp616, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp616)
      if _f.out ~= nil then
        _temp617 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp617 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp616, "out"))
      end

      elseif _temp616 == nil then
        _error(exception:null_error("_temp616", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp616))
      end

local _temp618 = nil
do
local _temp619 = nil
        local _t = _type(_temp597)
        if _t == "table" then
          if _rawget(_temp597, "__call_thing") == nil then
            _temp619 = _temp597
          else
                  if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp619 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp619 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp619 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp619 =  _temp597(_self)
      end

          end
        elseif _t == "number" then
          _temp619 = _temp597
        elseif _t == "function" then
                if _temp597 == nil then
              if _type(_self._temp597) == "function" or (_type(_self._temp597) == "table" and _rawget(_self._temp597, "__call_thing")) then
        _temp619 =  _self:_temp597()
      elseif _self._temp597 ~= nil then
        _temp619 =  _self._temp597

        elseif _self.no_undermethod ~= nil then
          _temp619 =  _self:no_undermethod(string:new("_temp597"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp619 =  _temp597(_self)
      end

        elseif _temp597 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp619)
      if _t == "table" then
                      if _type(_temp619.var) == "function" or (_type(_temp619.var) == "table" and _rawget(_temp619.var, "__call_thing")) then
        _temp619 = _temp619:var()
      elseif _temp619.var ~= nil then
        _temp619 = _temp619.var

        elseif _temp619.no_undermethod ~= nil then
          _temp619 =  _temp619:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp619, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp619)
      if _n.var ~= nil then
        _temp619 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp619 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp619, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp619)
      if _f.var ~= nil then
        _temp619 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp619 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp619, "var"))
      end

      elseif _temp619 == nil then
        _error(exception:null_error("_temp619", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp619))
      end


local _temp620 = nil
        local _t = _type(_temp600)
        if _t == "table" then
          if _rawget(_temp600, "__call_thing") == nil then
            _temp620 = _temp600
          else
                  if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp620 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp620 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp620 =  _temp600(_self)
      end

          end
        elseif _t == "number" then
          _temp620 = _temp600
        elseif _t == "function" then
                if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp620 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp620 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp620 =  _temp600(_self)
      end

        elseif _temp600 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.last) == "function" or (_type(_temp620.last) == "table" and _rawget(_temp620.last, "__call_thing")) then
        _temp620 = _temp620:last()
      elseif _temp620.last ~= nil then
        _temp620 = _temp620.last

        elseif _temp620.no_undermethod ~= nil then
          _temp620 =  _temp620:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp620, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.last ~= nil then
        _temp620 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp620, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.last ~= nil then
        _temp620 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp620, "last"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end

      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.var) == "function" or (_type(_temp620.var) == "table" and _rawget(_temp620.var, "__call_thing")) then
        _temp620 = _temp620:var()
      elseif _temp620.var ~= nil then
        _temp620 = _temp620.var

        elseif _temp620.no_undermethod ~= nil then
          _temp620 =  _temp620:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp620, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.var ~= nil then
        _temp620 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp620, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.var ~= nil then
        _temp620 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp620, "var"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end


_temp618 = string:new("\n" .. _tostring(_temp619) .. " = " .. _tostring(_temp620) .. "\n")
end
local _temp621
      local _t = _type(_temp617)
      if _t == "table" then
                      if _type(_temp617._less_less) == "function" or (_type(_temp617._less_less) == "table" and _rawget(_temp617._less_less, "__call_thing")) then
        _temp621 = _temp617:_less_less(_temp618)
      elseif _temp617._less_less ~= nil then
        _temp621 = _temp617._less_less

        elseif _temp617.no_undermethod ~= nil then
          _temp621 =  _temp617:no_undermethod(string:new("<<") , _temp618)
        else
          _error(exception:method_error(_temp617, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp617)
      if _n._less_less ~= nil then
        _temp621 = _n:_less_less(_temp618)
      elseif _n.no_undermethod ~= nil then
        _temp621 =  _n:no_undermethod(string:new("<<") , _temp618)
      else
        _error(exception:method_error(_temp617, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp617)
      if _f._less_less ~= nil then
        _temp621 = _f:_less_less(_temp618)
      elseif _f.no_undermethod ~= nil then
        _temp621 =  _f:no_undermethod(string:new("<<") , _temp618)
      else
        _error(exception:method_error(_temp617, "<<"))
      end

      elseif _temp617 == nil then
        _error(exception:null_error("_temp617", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp617))
      end

_temp615 = _temp621 
end

return _temp615
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp606,_temp623)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp606,_temp623)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp606,_temp623)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp606,_temp623)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp597) == "function" or (_type(_temp597) == "table" and _rawget(_temp597, "__call_thing")) then
      return  _temp597(_self)

    elseif _temp597 then
      return  _temp597
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp538)
      if _t == "table" then
                      if _type(_temp538.walk) == "function" or (_type(_temp538.walk) == "table" and _rawget(_temp538.walk, "__call_thing")) then
        _dummy_ = _temp538:walk(_temp4,_temp606)
      elseif _temp538.walk ~= nil then
        _dummy_ = _temp538.walk

        elseif _temp538.no_undermethod ~= nil then
          _dummy_ =  _temp538:no_undermethod(string:new("walk") , _temp4,_temp606)
        else
          _error(exception:method_error(_temp538, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp538)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp606)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp606)
      else
        _error(exception:method_error(_temp538, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp538)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp606)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp606)
      else
        _error(exception:method_error(_temp538, "walk"))
      end

      elseif _temp538 == nil then
        _error(exception:null_error("_temp538", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp538))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp606 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp606 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp606 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp606 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp606 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp606 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp606 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp606 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp629 = function (_self, _temp625,_temp624)
        if _temp625 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp624 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp624 =  null(_self)

    elseif null then
      _temp624 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp624 =  _self:null()
      elseif _self.null ~= nil then
        _temp624 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp624 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp624 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp626
local _temp627 = nil
    if _type(_temp625) == "function" or (_type(_temp625) == "table" and _rawget(_temp625, "__call_thing")) then
      _temp627 =  _temp625(_self)

    elseif _temp625 then
      _temp627 =  _temp625
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp627 =  _self:node()
      elseif _self.node ~= nil then
        _temp627 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp627 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp627 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp626 =  reorder_underops(_self, _temp627)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp626 =  _self:reorder_underops(_temp627)
      elseif _self.reorder_underops ~= nil then
        _temp626 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp626 =  _self:no_undermethod(string:new("reorder_ops") , _temp627)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp626 =  no_undermethod(_self, string:new("reorder_ops") , _temp627)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp626) == "function" or (_type(_temp626) == "table" and _rawget(_temp626, "__call_thing")) then
      _temp627 =  _temp626(_self)

    elseif _temp626 then
      _temp627 =  _temp626
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp627 =  _self:res()
      elseif _self.res ~= nil then
        _temp627 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp627 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp627 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp627)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp627)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp627)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp627)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp606)
      if _t == "table" then
                      if _type(_temp606.walk) == "function" or (_type(_temp606.walk) == "table" and _rawget(_temp606.walk, "__call_thing")) then
        _dummy_ = _temp606:walk(_temp4,_temp629)
      elseif _temp606.walk ~= nil then
        _dummy_ = _temp606.walk

        elseif _temp606.no_undermethod ~= nil then
          _dummy_ =  _temp606:no_undermethod(string:new("walk") , _temp4,_temp629)
        else
          _error(exception:method_error(_temp606, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp606)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp629)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp629)
      else
        _error(exception:method_error(_temp606, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp606)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp629)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp629)
      else
        _error(exception:method_error(_temp606, "walk"))
      end

      elseif _temp606 == nil then
        _error(exception:null_error("_temp606", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp606))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp629 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp629 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp629 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp629 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp629 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp629 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp629 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp629 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp641 = function (_self, _temp631,_temp630)
        if _temp631 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp630 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp630 =  null(_self)

    elseif null then
      _temp630 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp630 =  _self:null()
      elseif _self.null ~= nil then
        _temp630 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp630 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp630 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp632
local _temp633 = nil
    if _type(_temp630) == "function" or (_type(_temp630) == "table" and _rawget(_temp630, "__call_thing")) then
      _temp633 =  _temp630(_self)

    elseif _temp630 then
      _temp633 =  _temp630
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp633 =  _self:var()
      elseif _self.var ~= nil then
        _temp633 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp633 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp633 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp632 =  set_underresult(_self, _temp633)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp632 =  _self:set_underresult(_temp633)
      elseif _self.set_underresult ~= nil then
        _temp632 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp632 =  _self:no_undermethod(string:new("set_result") , _temp633)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp632 =  no_undermethod(_self, string:new("set_result") , _temp633)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp634 = nil
        local _t = _type(_temp632)
        if _t == "table" then
          if _rawget(_temp632, "__call_thing") == nil then
            _temp634 = _temp632
          else
                  if _temp632 == nil then
              if _type(_self._temp632) == "function" or (_type(_self._temp632) == "table" and _rawget(_self._temp632, "__call_thing")) then
        _temp634 =  _self:_temp632()
      elseif _self._temp632 ~= nil then
        _temp634 =  _self._temp632

        elseif _self.no_undermethod ~= nil then
          _temp634 =  _self:no_undermethod(string:new("_temp632"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp634 =  _temp632(_self)
      end

          end
        elseif _t == "number" then
          _temp634 = _temp632
        elseif _t == "function" then
                if _temp632 == nil then
              if _type(_self._temp632) == "function" or (_type(_self._temp632) == "table" and _rawget(_self._temp632, "__call_thing")) then
        _temp634 =  _self:_temp632()
      elseif _self._temp632 ~= nil then
        _temp634 =  _self._temp632

        elseif _self.no_undermethod ~= nil then
          _temp634 =  _self:no_undermethod(string:new("_temp632"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp634 =  _temp632(_self)
      end

        elseif _temp632 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp635 = nil
      local _t = _type(_temp634)
      if _t == "table" then
                      if _type(_temp634.out) == "function" or (_type(_temp634.out) == "table" and _rawget(_temp634.out, "__call_thing")) then
        _temp635 = _temp634:out()
      elseif _temp634.out ~= nil then
        _temp635 = _temp634.out

        elseif _temp634.no_undermethod ~= nil then
          _temp635 =  _temp634:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp634, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp634)
      if _n.out ~= nil then
        _temp635 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp635 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp634, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp634)
      if _f.out ~= nil then
        _temp635 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp635 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp634, "out"))
      end

      elseif _temp634 == nil then
        _error(exception:null_error("_temp634", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp634))
      end

local _temp636 = nil
local _temp637 = nil
        local _t = _type(_temp631)
        if _t == "table" then
          if _rawget(_temp631, "__call_thing") == nil then
            _temp637 = _temp631
          else
                  if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp637 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp637 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp637 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp637 =  _temp631(_self)
      end

          end
        elseif _t == "number" then
          _temp637 = _temp631
        elseif _t == "function" then
                if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp637 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp637 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp637 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp637 =  _temp631(_self)
      end

        elseif _temp631 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp637)
      if _t == "table" then
                      if _type(_temp637.lhs) == "function" or (_type(_temp637.lhs) == "table" and _rawget(_temp637.lhs, "__call_thing")) then
        _temp637 = _temp637:lhs()
      elseif _temp637.lhs ~= nil then
        _temp637 = _temp637.lhs

        elseif _temp637.no_undermethod ~= nil then
          _temp637 =  _temp637:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp637, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp637)
      if _n.lhs ~= nil then
        _temp637 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp637 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp637, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp637)
      if _f.lhs ~= nil then
        _temp637 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp637 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp637, "lhs"))
      end

      elseif _temp637 == nil then
        _error(exception:null_error("_temp637", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp637))
      end

      local _t = _type(_temp637)
      if _t == "table" then
                      if _type(_temp637.value) == "function" or (_type(_temp637.value) == "table" and _rawget(_temp637.value, "__call_thing")) then
        _temp637 = _temp637:value()
      elseif _temp637.value ~= nil then
        _temp637 = _temp637.value

        elseif _temp637.no_undermethod ~= nil then
          _temp637 =  _temp637:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp637, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp637)
      if _n.value ~= nil then
        _temp637 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp637 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp637, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp637)
      if _f.value ~= nil then
        _temp637 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp637 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp637, "value"))
      end

      elseif _temp637 == nil then
        _error(exception:null_error("_temp637", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp637))
      end


local _temp638 = nil
        local _t = _type(_temp631)
        if _t == "table" then
          if _rawget(_temp631, "__call_thing") == nil then
            _temp638 = _temp631
          else
                  if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp638 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp638 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp638 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp638 =  _temp631(_self)
      end

          end
        elseif _t == "number" then
          _temp638 = _temp631
        elseif _t == "function" then
                if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp638 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp638 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp638 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp638 =  _temp631(_self)
      end

        elseif _temp631 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp638)
      if _t == "table" then
                      if _type(_temp638.op) == "function" or (_type(_temp638.op) == "table" and _rawget(_temp638.op, "__call_thing")) then
        _temp638 = _temp638:op()
      elseif _temp638.op ~= nil then
        _temp638 = _temp638.op

        elseif _temp638.no_undermethod ~= nil then
          _temp638 =  _temp638:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp638, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp638)
      if _n.op ~= nil then
        _temp638 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp638 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp638, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp638)
      if _f.op ~= nil then
        _temp638 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp638 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp638, "op"))
      end

      elseif _temp638 == nil then
        _error(exception:null_error("_temp638", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp638))
      end


local _temp639 = nil
        local _t = _type(_temp631)
        if _t == "table" then
          if _rawget(_temp631, "__call_thing") == nil then
            _temp639 = _temp631
          else
                  if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp639 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp639 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp631(_self)
      end

          end
        elseif _t == "number" then
          _temp639 = _temp631
        elseif _t == "function" then
                if _temp631 == nil then
              if _type(_self._temp631) == "function" or (_type(_self._temp631) == "table" and _rawget(_self._temp631, "__call_thing")) then
        _temp639 =  _self:_temp631()
      elseif _self._temp631 ~= nil then
        _temp639 =  _self._temp631

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp631"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp631(_self)
      end

        elseif _temp631 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639.rhs) == "function" or (_type(_temp639.rhs) == "table" and _rawget(_temp639.rhs, "__call_thing")) then
        _temp639 = _temp639:rhs()
      elseif _temp639.rhs ~= nil then
        _temp639 = _temp639.rhs

        elseif _temp639.no_undermethod ~= nil then
          _temp639 =  _temp639:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp639, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n.rhs ~= nil then
        _temp639 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp639, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f.rhs ~= nil then
        _temp639 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp639, "rhs"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end

      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639.value) == "function" or (_type(_temp639.value) == "table" and _rawget(_temp639.value, "__call_thing")) then
        _temp639 = _temp639:value()
      elseif _temp639.value ~= nil then
        _temp639 = _temp639.value

        elseif _temp639.no_undermethod ~= nil then
          _temp639 =  _temp639:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp639, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n.value ~= nil then
        _temp639 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp639, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f.value ~= nil then
        _temp639 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp639, "value"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end


local _temp640 = nil
        local _t = _type(_temp632)
        if _t == "table" then
          if _rawget(_temp632, "__call_thing") == nil then
            _temp640 = _temp632
          else
                  if _temp632 == nil then
              if _type(_self._temp632) == "function" or (_type(_self._temp632) == "table" and _rawget(_self._temp632, "__call_thing")) then
        _temp640 =  _self:_temp632()
      elseif _self._temp632 ~= nil then
        _temp640 =  _self._temp632

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp632"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp640 =  _temp632(_self)
      end

          end
        elseif _t == "number" then
          _temp640 = _temp632
        elseif _t == "function" then
                if _temp632 == nil then
              if _type(_self._temp632) == "function" or (_type(_self._temp632) == "table" and _rawget(_self._temp632, "__call_thing")) then
        _temp640 =  _self:_temp632()
      elseif _self._temp632 ~= nil then
        _temp640 =  _self._temp632

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp632"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp640 =  _temp632(_self)
      end

        elseif _temp632 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp640)
      if _t == "table" then
                      if _type(_temp640.var) == "function" or (_type(_temp640.var) == "table" and _rawget(_temp640.var, "__call_thing")) then
        _temp640 = _temp640:var()
      elseif _temp640.var ~= nil then
        _temp640 = _temp640.var

        elseif _temp640.no_undermethod ~= nil then
          _temp640 =  _temp640:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp640, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp640)
      if _n.var ~= nil then
        _temp640 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp640 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp640, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp640)
      if _f.var ~= nil then
        _temp640 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp640 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp640, "var"))
      end

      elseif _temp640 == nil then
        _error(exception:null_error("_temp640", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp640))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp636 =  invoke_undernumbers(_self, _temp637,_temp638,_temp639,_temp640)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp636 =  _self:invoke_undernumbers(_temp637,_temp638,_temp639,_temp640)
      elseif _self.invoke_undernumbers ~= nil then
        _temp636 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp636 =  _self:no_undermethod(string:new("invoke_numbers") , _temp637,_temp638,_temp639,_temp640)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp636 =  no_undermethod(_self, string:new("invoke_numbers") , _temp637,_temp638,_temp639,_temp640)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp640
      local _t = _type(_temp635)
      if _t == "table" then
                      if _type(_temp635._less_less) == "function" or (_type(_temp635._less_less) == "table" and _rawget(_temp635._less_less, "__call_thing")) then
        _temp640 = _temp635:_less_less(_temp636)
      elseif _temp635._less_less ~= nil then
        _temp640 = _temp635._less_less

        elseif _temp635.no_undermethod ~= nil then
          _temp640 =  _temp635:no_undermethod(string:new("<<") , _temp636)
        else
          _error(exception:method_error(_temp635, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp635)
      if _n._less_less ~= nil then
        _temp640 = _n:_less_less(_temp636)
      elseif _n.no_undermethod ~= nil then
        _temp640 =  _n:no_undermethod(string:new("<<") , _temp636)
      else
        _error(exception:method_error(_temp635, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp635)
      if _f._less_less ~= nil then
        _temp640 = _f:_less_less(_temp636)
      elseif _f.no_undermethod ~= nil then
        _temp640 =  _f:no_undermethod(string:new("<<") , _temp636)
      else
        _error(exception:method_error(_temp635, "<<"))
      end

      elseif _temp635 == nil then
        _error(exception:null_error("_temp635", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp635))
      end

_dummy_ = _temp640 
end

    if _type(_temp632) == "function" or (_type(_temp632) == "table" and _rawget(_temp632, "__call_thing")) then
      return  _temp632(_self)

    elseif _temp632 then
      return  _temp632
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp629)
      if _t == "table" then
                      if _type(_temp629.walk) == "function" or (_type(_temp629.walk) == "table" and _rawget(_temp629.walk, "__call_thing")) then
        _dummy_ = _temp629:walk(_temp4,_temp641)
      elseif _temp629.walk ~= nil then
        _dummy_ = _temp629.walk

        elseif _temp629.no_undermethod ~= nil then
          _dummy_ =  _temp629:no_undermethod(string:new("walk") , _temp4,_temp641)
        else
          _error(exception:method_error(_temp629, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp629)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp641)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp641)
      else
        _error(exception:method_error(_temp629, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp629)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp641)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp641)
      else
        _error(exception:method_error(_temp629, "walk"))
      end

      elseif _temp629 == nil then
        _error(exception:null_error("_temp629", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp629))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp641 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp641 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp641 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp641 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp641 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp641 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp641 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp641 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp660 = function (_self, _temp643,_temp642)
        if _temp643 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp642 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp642 =  null(_self)

    elseif null then
      _temp642 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp642 =  _self:null()
      elseif _self.null ~= nil then
        _temp642 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp642 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp642 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp644
local _temp645 = nil
    if _type(_temp642) == "function" or (_type(_temp642) == "table" and _rawget(_temp642, "__call_thing")) then
      _temp645 =  _temp642(_self)

    elseif _temp642 then
      _temp645 =  _temp642
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp645 =  _self:var()
      elseif _self.var ~= nil then
        _temp645 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp645 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp645 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp644 =  set_underresult(_self, _temp645)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp644 =  _self:set_underresult(_temp645)
      elseif _self.set_underresult ~= nil then
        _temp644 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp644 =  _self:no_undermethod(string:new("set_result") , _temp645)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp644 =  no_undermethod(_self, string:new("set_result") , _temp645)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp646
        local _t = _type(_temp643)
        if _t == "table" then
          if _rawget(_temp643, "__call_thing") == nil then
            _temp645 = _temp643
          else
                  if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp645 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp645 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp645 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp645 =  _temp643(_self)
      end

          end
        elseif _t == "number" then
          _temp645 = _temp643
        elseif _t == "function" then
                if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp645 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp645 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp645 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp645 =  _temp643(_self)
      end

        elseif _temp643 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp645)
      if _t == "table" then
                      if _type(_temp645.rhs) == "function" or (_type(_temp645.rhs) == "table" and _rawget(_temp645.rhs, "__call_thing")) then
        _temp645 = _temp645:rhs()
      elseif _temp645.rhs ~= nil then
        _temp645 = _temp645.rhs

        elseif _temp645.no_undermethod ~= nil then
          _temp645 =  _temp645:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp645, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp645)
      if _n.rhs ~= nil then
        _temp645 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp645 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp645, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp645)
      if _f.rhs ~= nil then
        _temp645 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp645 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp645, "rhs"))
      end

      elseif _temp645 == nil then
        _error(exception:null_error("_temp645", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp645))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp646 =  process(_self, _temp645)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp646 =  _self:process(_temp645)
      elseif _self.process ~= nil then
        _temp646 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp646 =  _self:no_undermethod(string:new("process") , _temp645)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp646 =  no_undermethod(_self, string:new("process") , _temp645)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp647 = nil
        local _t = _type(_temp644)
        if _t == "table" then
          if _rawget(_temp644, "__call_thing") == nil then
            _temp647 = _temp644
          else
                  if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp647 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp647 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp644(_self)
      end

          end
        elseif _t == "number" then
          _temp647 = _temp644
        elseif _t == "function" then
                if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp647 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp647 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp644(_self)
      end

        elseif _temp644 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp648 = nil
      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.out) == "function" or (_type(_temp647.out) == "table" and _rawget(_temp647.out, "__call_thing")) then
        _temp648 = _temp647:out()
      elseif _temp647.out ~= nil then
        _temp648 = _temp647.out

        elseif _temp647.no_undermethod ~= nil then
          _temp648 =  _temp647:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp647, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.out ~= nil then
        _temp648 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp648 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.out ~= nil then
        _temp648 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp648 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end

local _temp649 = nil
        local _t = _type(_temp646)
        if _t == "table" then
          if _rawget(_temp646, "__call_thing") == nil then
            _temp649 = _temp646
          else
                  if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp649 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp649 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp649 =  _temp646(_self)
      end

          end
        elseif _t == "number" then
          _temp649 = _temp646
        elseif _t == "function" then
                if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp649 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp649 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp649 =  _temp646(_self)
      end

        elseif _temp646 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp650 = nil
      local _t = _type(_temp649)
      if _t == "table" then
                      if _type(_temp649.out) == "function" or (_type(_temp649.out) == "table" and _rawget(_temp649.out, "__call_thing")) then
        _temp650 = _temp649:out()
      elseif _temp649.out ~= nil then
        _temp650 = _temp649.out

        elseif _temp649.no_undermethod ~= nil then
          _temp650 =  _temp649:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp649, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp649)
      if _n.out ~= nil then
        _temp650 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp649, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp649)
      if _f.out ~= nil then
        _temp650 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp649, "out"))
      end

      elseif _temp649 == nil then
        _error(exception:null_error("_temp649", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp649))
      end

local _temp651 = string:new("\n")
local _temp652
      local _t = _type(_temp648)
      if _t == "table" then
                      if _type(_temp648._less_less) == "function" or (_type(_temp648._less_less) == "table" and _rawget(_temp648._less_less, "__call_thing")) then
        _temp652 = _temp648:_less_less(_temp650)
      elseif _temp648._less_less ~= nil then
        _temp652 = _temp648._less_less

        elseif _temp648.no_undermethod ~= nil then
          _temp652 =  _temp648:no_undermethod(string:new("<<") , _temp650)
        else
          _error(exception:method_error(_temp648, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp648)
      if _n._less_less ~= nil then
        _temp652 = _n:_less_less(_temp650)
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("<<") , _temp650)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp648)
      if _f._less_less ~= nil then
        _temp652 = _f:_less_less(_temp650)
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("<<") , _temp650)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _temp648 == nil then
        _error(exception:null_error("_temp648", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp648))
      end

local _temp650
      local _t = _type(_temp652)
      if _t == "table" then
                      if _type(_temp652._less_less) == "function" or (_type(_temp652._less_less) == "table" and _rawget(_temp652._less_less, "__call_thing")) then
        _temp650 = _temp652:_less_less(_temp651)
      elseif _temp652._less_less ~= nil then
        _temp650 = _temp652._less_less

        elseif _temp652.no_undermethod ~= nil then
          _temp650 =  _temp652:no_undermethod(string:new("<<") , _temp651)
        else
          _error(exception:method_error(_temp652, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp652)
      if _n._less_less ~= nil then
        _temp650 = _n:_less_less(_temp651)
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("<<") , _temp651)
      else
        _error(exception:method_error(_temp652, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp652)
      if _f._less_less ~= nil then
        _temp650 = _f:_less_less(_temp651)
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("<<") , _temp651)
      else
        _error(exception:method_error(_temp652, "<<"))
      end

      elseif _temp652 == nil then
        _error(exception:null_error("_temp652", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp652))
      end

_dummy_ = _temp650 
end

do
local _temp653 = nil
        local _t = _type(_temp644)
        if _t == "table" then
          if _rawget(_temp644, "__call_thing") == nil then
            _temp653 = _temp644
          else
                  if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp653 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp653 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp653 =  _temp644(_self)
      end

          end
        elseif _t == "number" then
          _temp653 = _temp644
        elseif _t == "function" then
                if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp653 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp653 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp653 =  _temp644(_self)
      end

        elseif _temp644 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp654 = nil
      local _t = _type(_temp653)
      if _t == "table" then
                      if _type(_temp653.out) == "function" or (_type(_temp653.out) == "table" and _rawget(_temp653.out, "__call_thing")) then
        _temp654 = _temp653:out()
      elseif _temp653.out ~= nil then
        _temp654 = _temp653.out

        elseif _temp653.no_undermethod ~= nil then
          _temp654 =  _temp653:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp653, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp653)
      if _n.out ~= nil then
        _temp654 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp654 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp653, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp653)
      if _f.out ~= nil then
        _temp654 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp654 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp653, "out"))
      end

      elseif _temp653 == nil then
        _error(exception:null_error("_temp653", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp653))
      end

local _temp655 = nil
local _temp656 = nil
        local _t = _type(_temp643)
        if _t == "table" then
          if _rawget(_temp643, "__call_thing") == nil then
            _temp656 = _temp643
          else
                  if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp656 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp656 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp656 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp656 =  _temp643(_self)
      end

          end
        elseif _t == "number" then
          _temp656 = _temp643
        elseif _t == "function" then
                if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp656 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp656 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp656 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp656 =  _temp643(_self)
      end

        elseif _temp643 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp656)
      if _t == "table" then
                      if _type(_temp656.lhs) == "function" or (_type(_temp656.lhs) == "table" and _rawget(_temp656.lhs, "__call_thing")) then
        _temp656 = _temp656:lhs()
      elseif _temp656.lhs ~= nil then
        _temp656 = _temp656.lhs

        elseif _temp656.no_undermethod ~= nil then
          _temp656 =  _temp656:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp656, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp656)
      if _n.lhs ~= nil then
        _temp656 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp656 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp656, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp656)
      if _f.lhs ~= nil then
        _temp656 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp656 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp656, "lhs"))
      end

      elseif _temp656 == nil then
        _error(exception:null_error("_temp656", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp656))
      end

      local _t = _type(_temp656)
      if _t == "table" then
                      if _type(_temp656.value) == "function" or (_type(_temp656.value) == "table" and _rawget(_temp656.value, "__call_thing")) then
        _temp656 = _temp656:value()
      elseif _temp656.value ~= nil then
        _temp656 = _temp656.value

        elseif _temp656.no_undermethod ~= nil then
          _temp656 =  _temp656:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp656, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp656)
      if _n.value ~= nil then
        _temp656 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp656 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp656, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp656)
      if _f.value ~= nil then
        _temp656 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp656 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp656, "value"))
      end

      elseif _temp656 == nil then
        _error(exception:null_error("_temp656", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp656))
      end


local _temp657 = nil
        local _t = _type(_temp643)
        if _t == "table" then
          if _rawget(_temp643, "__call_thing") == nil then
            _temp657 = _temp643
          else
                  if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp657 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp657 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp657 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp657 =  _temp643(_self)
      end

          end
        elseif _t == "number" then
          _temp657 = _temp643
        elseif _t == "function" then
                if _temp643 == nil then
              if _type(_self._temp643) == "function" or (_type(_self._temp643) == "table" and _rawget(_self._temp643, "__call_thing")) then
        _temp657 =  _self:_temp643()
      elseif _self._temp643 ~= nil then
        _temp657 =  _self._temp643

        elseif _self.no_undermethod ~= nil then
          _temp657 =  _self:no_undermethod(string:new("_temp643"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp657 =  _temp643(_self)
      end

        elseif _temp643 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp657)
      if _t == "table" then
                      if _type(_temp657.op) == "function" or (_type(_temp657.op) == "table" and _rawget(_temp657.op, "__call_thing")) then
        _temp657 = _temp657:op()
      elseif _temp657.op ~= nil then
        _temp657 = _temp657.op

        elseif _temp657.no_undermethod ~= nil then
          _temp657 =  _temp657:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp657, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp657)
      if _n.op ~= nil then
        _temp657 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp657 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp657, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp657)
      if _f.op ~= nil then
        _temp657 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp657 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp657, "op"))
      end

      elseif _temp657 == nil then
        _error(exception:null_error("_temp657", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp657))
      end


local _temp658 = nil
        local _t = _type(_temp646)
        if _t == "table" then
          if _rawget(_temp646, "__call_thing") == nil then
            _temp658 = _temp646
          else
                  if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp658 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp658 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp658 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp658 =  _temp646(_self)
      end

          end
        elseif _t == "number" then
          _temp658 = _temp646
        elseif _t == "function" then
                if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp658 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp658 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp658 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp658 =  _temp646(_self)
      end

        elseif _temp646 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp658)
      if _t == "table" then
                      if _type(_temp658.var) == "function" or (_type(_temp658.var) == "table" and _rawget(_temp658.var, "__call_thing")) then
        _temp658 = _temp658:var()
      elseif _temp658.var ~= nil then
        _temp658 = _temp658.var

        elseif _temp658.no_undermethod ~= nil then
          _temp658 =  _temp658:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp658, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp658)
      if _n.var ~= nil then
        _temp658 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp658 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp658, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp658)
      if _f.var ~= nil then
        _temp658 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp658 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp658, "var"))
      end

      elseif _temp658 == nil then
        _error(exception:null_error("_temp658", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp658))
      end


local _temp659 = nil
        local _t = _type(_temp644)
        if _t == "table" then
          if _rawget(_temp644, "__call_thing") == nil then
            _temp659 = _temp644
          else
                  if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp659 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp659 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp659 =  _temp644(_self)
      end

          end
        elseif _t == "number" then
          _temp659 = _temp644
        elseif _t == "function" then
                if _temp644 == nil then
              if _type(_self._temp644) == "function" or (_type(_self._temp644) == "table" and _rawget(_self._temp644, "__call_thing")) then
        _temp659 =  _self:_temp644()
      elseif _self._temp644 ~= nil then
        _temp659 =  _self._temp644

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp644"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp659 =  _temp644(_self)
      end

        elseif _temp644 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp659)
      if _t == "table" then
                      if _type(_temp659.var) == "function" or (_type(_temp659.var) == "table" and _rawget(_temp659.var, "__call_thing")) then
        _temp659 = _temp659:var()
      elseif _temp659.var ~= nil then
        _temp659 = _temp659.var

        elseif _temp659.no_undermethod ~= nil then
          _temp659 =  _temp659:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp659, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp659)
      if _n.var ~= nil then
        _temp659 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp659 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp659, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp659)
      if _f.var ~= nil then
        _temp659 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp659 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp659, "var"))
      end

      elseif _temp659 == nil then
        _error(exception:null_error("_temp659", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp659))
      end


    if _type(invoke_undernumber_underlhs) == "function" or (_type(invoke_undernumber_underlhs) == "table" and _rawget(invoke_undernumber_underlhs, "__call_thing")) then
      _temp655 =  invoke_undernumber_underlhs(_self, _temp656,_temp657,_temp658,_temp659)

    elseif invoke_undernumber_underlhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_lhs (" .. object.__type(invoke_undernumber_underlhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underlhs) == "function" or (_type(_self.invoke_undernumber_underlhs) == "table" and _rawget(_self.invoke_undernumber_underlhs, "__call_thing")) then
        _temp655 =  _self:invoke_undernumber_underlhs(_temp656,_temp657,_temp658,_temp659)
      elseif _self.invoke_undernumber_underlhs ~= nil then
        _temp655 =  _self.invoke_undernumber_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp655 =  _self:no_undermethod(string:new("invoke_number_lhs") , _temp656,_temp657,_temp658,_temp659)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp655 =  no_undermethod(_self, string:new("invoke_number_lhs") , _temp656,_temp657,_temp658,_temp659)
      else
        _error(exception:name_error("invoke_number_lhs"))
      end
    end
local _temp659
      local _t = _type(_temp654)
      if _t == "table" then
                      if _type(_temp654._less_less) == "function" or (_type(_temp654._less_less) == "table" and _rawget(_temp654._less_less, "__call_thing")) then
        _temp659 = _temp654:_less_less(_temp655)
      elseif _temp654._less_less ~= nil then
        _temp659 = _temp654._less_less

        elseif _temp654.no_undermethod ~= nil then
          _temp659 =  _temp654:no_undermethod(string:new("<<") , _temp655)
        else
          _error(exception:method_error(_temp654, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp654)
      if _n._less_less ~= nil then
        _temp659 = _n:_less_less(_temp655)
      elseif _n.no_undermethod ~= nil then
        _temp659 =  _n:no_undermethod(string:new("<<") , _temp655)
      else
        _error(exception:method_error(_temp654, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp654)
      if _f._less_less ~= nil then
        _temp659 = _f:_less_less(_temp655)
      elseif _f.no_undermethod ~= nil then
        _temp659 =  _f:no_undermethod(string:new("<<") , _temp655)
      else
        _error(exception:method_error(_temp654, "<<"))
      end

      elseif _temp654 == nil then
        _error(exception:null_error("_temp654", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp654))
      end

_dummy_ = _temp659 
end

    if _type(_temp644) == "function" or (_type(_temp644) == "table" and _rawget(_temp644, "__call_thing")) then
      return  _temp644(_self)

    elseif _temp644 then
      return  _temp644
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp641)
      if _t == "table" then
                      if _type(_temp641.walk) == "function" or (_type(_temp641.walk) == "table" and _rawget(_temp641.walk, "__call_thing")) then
        _dummy_ = _temp641:walk(_temp4,_temp660)
      elseif _temp641.walk ~= nil then
        _dummy_ = _temp641.walk

        elseif _temp641.no_undermethod ~= nil then
          _dummy_ =  _temp641:no_undermethod(string:new("walk") , _temp4,_temp660)
        else
          _error(exception:method_error(_temp641, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp641)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp660)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp660)
      else
        _error(exception:method_error(_temp641, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp641)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp660)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp660)
      else
        _error(exception:method_error(_temp641, "walk"))
      end

      elseif _temp641 == nil then
        _error(exception:null_error("_temp641", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp641))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp660 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp660 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp660 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp660 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp660 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp660 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp660 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp660 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number_rhs")

local _temp679 = function (_self, _temp662,_temp661)
        if _temp662 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp661 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp661 =  null(_self)

    elseif null then
      _temp661 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp661 =  _self:null()
      elseif _self.null ~= nil then
        _temp661 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp661 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp661 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp663
local _temp664 = nil
    if _type(_temp661) == "function" or (_type(_temp661) == "table" and _rawget(_temp661, "__call_thing")) then
      _temp664 =  _temp661(_self)

    elseif _temp661 then
      _temp664 =  _temp661
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp664 =  _self:var()
      elseif _self.var ~= nil then
        _temp664 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp664 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp664 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp663 =  set_underresult(_self, _temp664)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp663 =  _self:set_underresult(_temp664)
      elseif _self.set_underresult ~= nil then
        _temp663 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp663 =  _self:no_undermethod(string:new("set_result") , _temp664)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp663 =  no_undermethod(_self, string:new("set_result") , _temp664)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp665
        local _t = _type(_temp662)
        if _t == "table" then
          if _rawget(_temp662, "__call_thing") == nil then
            _temp664 = _temp662
          else
                  if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp664 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp664 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp664 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp664 =  _temp662(_self)
      end

          end
        elseif _t == "number" then
          _temp664 = _temp662
        elseif _t == "function" then
                if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp664 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp664 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp664 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp664 =  _temp662(_self)
      end

        elseif _temp662 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp664)
      if _t == "table" then
                      if _type(_temp664.lhs) == "function" or (_type(_temp664.lhs) == "table" and _rawget(_temp664.lhs, "__call_thing")) then
        _temp664 = _temp664:lhs()
      elseif _temp664.lhs ~= nil then
        _temp664 = _temp664.lhs

        elseif _temp664.no_undermethod ~= nil then
          _temp664 =  _temp664:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp664, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp664)
      if _n.lhs ~= nil then
        _temp664 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp664 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp664, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp664)
      if _f.lhs ~= nil then
        _temp664 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp664 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp664, "lhs"))
      end

      elseif _temp664 == nil then
        _error(exception:null_error("_temp664", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp664))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp665 =  process(_self, _temp664)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp665 =  _self:process(_temp664)
      elseif _self.process ~= nil then
        _temp665 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp665 =  _self:no_undermethod(string:new("process") , _temp664)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp665 =  no_undermethod(_self, string:new("process") , _temp664)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp666 = nil
        local _t = _type(_temp663)
        if _t == "table" then
          if _rawget(_temp663, "__call_thing") == nil then
            _temp666 = _temp663
          else
                  if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp666 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp666 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp666 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp666 =  _temp663(_self)
      end

          end
        elseif _t == "number" then
          _temp666 = _temp663
        elseif _t == "function" then
                if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp666 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp666 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp666 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp666 =  _temp663(_self)
      end

        elseif _temp663 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp667 = nil
      local _t = _type(_temp666)
      if _t == "table" then
                      if _type(_temp666.out) == "function" or (_type(_temp666.out) == "table" and _rawget(_temp666.out, "__call_thing")) then
        _temp667 = _temp666:out()
      elseif _temp666.out ~= nil then
        _temp667 = _temp666.out

        elseif _temp666.no_undermethod ~= nil then
          _temp667 =  _temp666:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp666, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp666)
      if _n.out ~= nil then
        _temp667 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp667 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp666, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp666)
      if _f.out ~= nil then
        _temp667 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp667 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp666, "out"))
      end

      elseif _temp666 == nil then
        _error(exception:null_error("_temp666", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp666))
      end

local _temp668 = nil
        local _t = _type(_temp665)
        if _t == "table" then
          if _rawget(_temp665, "__call_thing") == nil then
            _temp668 = _temp665
          else
                  if _temp665 == nil then
              if _type(_self._temp665) == "function" or (_type(_self._temp665) == "table" and _rawget(_self._temp665, "__call_thing")) then
        _temp668 =  _self:_temp665()
      elseif _self._temp665 ~= nil then
        _temp668 =  _self._temp665

        elseif _self.no_undermethod ~= nil then
          _temp668 =  _self:no_undermethod(string:new("_temp665"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp668 =  _temp665(_self)
      end

          end
        elseif _t == "number" then
          _temp668 = _temp665
        elseif _t == "function" then
                if _temp665 == nil then
              if _type(_self._temp665) == "function" or (_type(_self._temp665) == "table" and _rawget(_self._temp665, "__call_thing")) then
        _temp668 =  _self:_temp665()
      elseif _self._temp665 ~= nil then
        _temp668 =  _self._temp665

        elseif _self.no_undermethod ~= nil then
          _temp668 =  _self:no_undermethod(string:new("_temp665"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp668 =  _temp665(_self)
      end

        elseif _temp665 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp669 = nil
      local _t = _type(_temp668)
      if _t == "table" then
                      if _type(_temp668.out) == "function" or (_type(_temp668.out) == "table" and _rawget(_temp668.out, "__call_thing")) then
        _temp669 = _temp668:out()
      elseif _temp668.out ~= nil then
        _temp669 = _temp668.out

        elseif _temp668.no_undermethod ~= nil then
          _temp669 =  _temp668:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp668, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp668)
      if _n.out ~= nil then
        _temp669 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp669 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp668, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp668)
      if _f.out ~= nil then
        _temp669 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp669 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp668, "out"))
      end

      elseif _temp668 == nil then
        _error(exception:null_error("_temp668", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp668))
      end

local _temp670 = string:new("\n")
local _temp671
      local _t = _type(_temp667)
      if _t == "table" then
                      if _type(_temp667._less_less) == "function" or (_type(_temp667._less_less) == "table" and _rawget(_temp667._less_less, "__call_thing")) then
        _temp671 = _temp667:_less_less(_temp669)
      elseif _temp667._less_less ~= nil then
        _temp671 = _temp667._less_less

        elseif _temp667.no_undermethod ~= nil then
          _temp671 =  _temp667:no_undermethod(string:new("<<") , _temp669)
        else
          _error(exception:method_error(_temp667, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp667)
      if _n._less_less ~= nil then
        _temp671 = _n:_less_less(_temp669)
      elseif _n.no_undermethod ~= nil then
        _temp671 =  _n:no_undermethod(string:new("<<") , _temp669)
      else
        _error(exception:method_error(_temp667, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp667)
      if _f._less_less ~= nil then
        _temp671 = _f:_less_less(_temp669)
      elseif _f.no_undermethod ~= nil then
        _temp671 =  _f:no_undermethod(string:new("<<") , _temp669)
      else
        _error(exception:method_error(_temp667, "<<"))
      end

      elseif _temp667 == nil then
        _error(exception:null_error("_temp667", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp667))
      end

local _temp669
      local _t = _type(_temp671)
      if _t == "table" then
                      if _type(_temp671._less_less) == "function" or (_type(_temp671._less_less) == "table" and _rawget(_temp671._less_less, "__call_thing")) then
        _temp669 = _temp671:_less_less(_temp670)
      elseif _temp671._less_less ~= nil then
        _temp669 = _temp671._less_less

        elseif _temp671.no_undermethod ~= nil then
          _temp669 =  _temp671:no_undermethod(string:new("<<") , _temp670)
        else
          _error(exception:method_error(_temp671, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp671)
      if _n._less_less ~= nil then
        _temp669 = _n:_less_less(_temp670)
      elseif _n.no_undermethod ~= nil then
        _temp669 =  _n:no_undermethod(string:new("<<") , _temp670)
      else
        _error(exception:method_error(_temp671, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp671)
      if _f._less_less ~= nil then
        _temp669 = _f:_less_less(_temp670)
      elseif _f.no_undermethod ~= nil then
        _temp669 =  _f:no_undermethod(string:new("<<") , _temp670)
      else
        _error(exception:method_error(_temp671, "<<"))
      end

      elseif _temp671 == nil then
        _error(exception:null_error("_temp671", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp671))
      end

_dummy_ = _temp669 
end

do
local _temp672 = nil
        local _t = _type(_temp663)
        if _t == "table" then
          if _rawget(_temp663, "__call_thing") == nil then
            _temp672 = _temp663
          else
                  if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp672 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp672 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp672 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp672 =  _temp663(_self)
      end

          end
        elseif _t == "number" then
          _temp672 = _temp663
        elseif _t == "function" then
                if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp672 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp672 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp672 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp672 =  _temp663(_self)
      end

        elseif _temp663 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp673 = nil
      local _t = _type(_temp672)
      if _t == "table" then
                      if _type(_temp672.out) == "function" or (_type(_temp672.out) == "table" and _rawget(_temp672.out, "__call_thing")) then
        _temp673 = _temp672:out()
      elseif _temp672.out ~= nil then
        _temp673 = _temp672.out

        elseif _temp672.no_undermethod ~= nil then
          _temp673 =  _temp672:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp672, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp672)
      if _n.out ~= nil then
        _temp673 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp673 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp672, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp672)
      if _f.out ~= nil then
        _temp673 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp673 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp672, "out"))
      end

      elseif _temp672 == nil then
        _error(exception:null_error("_temp672", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp672))
      end

local _temp674 = nil
local _temp675 = nil
        local _t = _type(_temp665)
        if _t == "table" then
          if _rawget(_temp665, "__call_thing") == nil then
            _temp675 = _temp665
          else
                  if _temp665 == nil then
              if _type(_self._temp665) == "function" or (_type(_self._temp665) == "table" and _rawget(_self._temp665, "__call_thing")) then
        _temp675 =  _self:_temp665()
      elseif _self._temp665 ~= nil then
        _temp675 =  _self._temp665

        elseif _self.no_undermethod ~= nil then
          _temp675 =  _self:no_undermethod(string:new("_temp665"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp675 =  _temp665(_self)
      end

          end
        elseif _t == "number" then
          _temp675 = _temp665
        elseif _t == "function" then
                if _temp665 == nil then
              if _type(_self._temp665) == "function" or (_type(_self._temp665) == "table" and _rawget(_self._temp665, "__call_thing")) then
        _temp675 =  _self:_temp665()
      elseif _self._temp665 ~= nil then
        _temp675 =  _self._temp665

        elseif _self.no_undermethod ~= nil then
          _temp675 =  _self:no_undermethod(string:new("_temp665"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp675 =  _temp665(_self)
      end

        elseif _temp665 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp675)
      if _t == "table" then
                      if _type(_temp675.var) == "function" or (_type(_temp675.var) == "table" and _rawget(_temp675.var, "__call_thing")) then
        _temp675 = _temp675:var()
      elseif _temp675.var ~= nil then
        _temp675 = _temp675.var

        elseif _temp675.no_undermethod ~= nil then
          _temp675 =  _temp675:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp675, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp675)
      if _n.var ~= nil then
        _temp675 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp675 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp675, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp675)
      if _f.var ~= nil then
        _temp675 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp675 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp675, "var"))
      end

      elseif _temp675 == nil then
        _error(exception:null_error("_temp675", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp675))
      end


local _temp676 = nil
        local _t = _type(_temp662)
        if _t == "table" then
          if _rawget(_temp662, "__call_thing") == nil then
            _temp676 = _temp662
          else
                  if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp676 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp676 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp676 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp676 =  _temp662(_self)
      end

          end
        elseif _t == "number" then
          _temp676 = _temp662
        elseif _t == "function" then
                if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp676 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp676 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp676 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp676 =  _temp662(_self)
      end

        elseif _temp662 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp676)
      if _t == "table" then
                      if _type(_temp676.op) == "function" or (_type(_temp676.op) == "table" and _rawget(_temp676.op, "__call_thing")) then
        _temp676 = _temp676:op()
      elseif _temp676.op ~= nil then
        _temp676 = _temp676.op

        elseif _temp676.no_undermethod ~= nil then
          _temp676 =  _temp676:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp676, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp676)
      if _n.op ~= nil then
        _temp676 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp676 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp676, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp676)
      if _f.op ~= nil then
        _temp676 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp676 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp676, "op"))
      end

      elseif _temp676 == nil then
        _error(exception:null_error("_temp676", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp676))
      end


local _temp677 = nil
        local _t = _type(_temp662)
        if _t == "table" then
          if _rawget(_temp662, "__call_thing") == nil then
            _temp677 = _temp662
          else
                  if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp677 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp677 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp677 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp677 =  _temp662(_self)
      end

          end
        elseif _t == "number" then
          _temp677 = _temp662
        elseif _t == "function" then
                if _temp662 == nil then
              if _type(_self._temp662) == "function" or (_type(_self._temp662) == "table" and _rawget(_self._temp662, "__call_thing")) then
        _temp677 =  _self:_temp662()
      elseif _self._temp662 ~= nil then
        _temp677 =  _self._temp662

        elseif _self.no_undermethod ~= nil then
          _temp677 =  _self:no_undermethod(string:new("_temp662"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp677 =  _temp662(_self)
      end

        elseif _temp662 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp677)
      if _t == "table" then
                      if _type(_temp677.rhs) == "function" or (_type(_temp677.rhs) == "table" and _rawget(_temp677.rhs, "__call_thing")) then
        _temp677 = _temp677:rhs()
      elseif _temp677.rhs ~= nil then
        _temp677 = _temp677.rhs

        elseif _temp677.no_undermethod ~= nil then
          _temp677 =  _temp677:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp677, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp677)
      if _n.rhs ~= nil then
        _temp677 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp677 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp677, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp677)
      if _f.rhs ~= nil then
        _temp677 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp677 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp677, "rhs"))
      end

      elseif _temp677 == nil then
        _error(exception:null_error("_temp677", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp677))
      end

      local _t = _type(_temp677)
      if _t == "table" then
                      if _type(_temp677.value) == "function" or (_type(_temp677.value) == "table" and _rawget(_temp677.value, "__call_thing")) then
        _temp677 = _temp677:value()
      elseif _temp677.value ~= nil then
        _temp677 = _temp677.value

        elseif _temp677.no_undermethod ~= nil then
          _temp677 =  _temp677:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp677, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp677)
      if _n.value ~= nil then
        _temp677 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp677 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp677, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp677)
      if _f.value ~= nil then
        _temp677 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp677 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp677, "value"))
      end

      elseif _temp677 == nil then
        _error(exception:null_error("_temp677", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp677))
      end


local _temp678 = nil
        local _t = _type(_temp663)
        if _t == "table" then
          if _rawget(_temp663, "__call_thing") == nil then
            _temp678 = _temp663
          else
                  if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp678 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp678 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp678 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp678 =  _temp663(_self)
      end

          end
        elseif _t == "number" then
          _temp678 = _temp663
        elseif _t == "function" then
                if _temp663 == nil then
              if _type(_self._temp663) == "function" or (_type(_self._temp663) == "table" and _rawget(_self._temp663, "__call_thing")) then
        _temp678 =  _self:_temp663()
      elseif _self._temp663 ~= nil then
        _temp678 =  _self._temp663

        elseif _self.no_undermethod ~= nil then
          _temp678 =  _self:no_undermethod(string:new("_temp663"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp678 =  _temp663(_self)
      end

        elseif _temp663 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp678)
      if _t == "table" then
                      if _type(_temp678.var) == "function" or (_type(_temp678.var) == "table" and _rawget(_temp678.var, "__call_thing")) then
        _temp678 = _temp678:var()
      elseif _temp678.var ~= nil then
        _temp678 = _temp678.var

        elseif _temp678.no_undermethod ~= nil then
          _temp678 =  _temp678:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp678, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp678)
      if _n.var ~= nil then
        _temp678 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp678 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp678, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp678)
      if _f.var ~= nil then
        _temp678 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp678 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp678, "var"))
      end

      elseif _temp678 == nil then
        _error(exception:null_error("_temp678", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp678))
      end


    if _type(invoke_undernumber_underrhs) == "function" or (_type(invoke_undernumber_underrhs) == "table" and _rawget(invoke_undernumber_underrhs, "__call_thing")) then
      _temp674 =  invoke_undernumber_underrhs(_self, _temp675,_temp676,_temp677,_temp678)

    elseif invoke_undernumber_underrhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_rhs (" .. object.__type(invoke_undernumber_underrhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underrhs) == "function" or (_type(_self.invoke_undernumber_underrhs) == "table" and _rawget(_self.invoke_undernumber_underrhs, "__call_thing")) then
        _temp674 =  _self:invoke_undernumber_underrhs(_temp675,_temp676,_temp677,_temp678)
      elseif _self.invoke_undernumber_underrhs ~= nil then
        _temp674 =  _self.invoke_undernumber_underrhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp674 =  _self:no_undermethod(string:new("invoke_number_rhs") , _temp675,_temp676,_temp677,_temp678)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp674 =  no_undermethod(_self, string:new("invoke_number_rhs") , _temp675,_temp676,_temp677,_temp678)
      else
        _error(exception:name_error("invoke_number_rhs"))
      end
    end
local _temp678
      local _t = _type(_temp673)
      if _t == "table" then
                      if _type(_temp673._less_less) == "function" or (_type(_temp673._less_less) == "table" and _rawget(_temp673._less_less, "__call_thing")) then
        _temp678 = _temp673:_less_less(_temp674)
      elseif _temp673._less_less ~= nil then
        _temp678 = _temp673._less_less

        elseif _temp673.no_undermethod ~= nil then
          _temp678 =  _temp673:no_undermethod(string:new("<<") , _temp674)
        else
          _error(exception:method_error(_temp673, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp673)
      if _n._less_less ~= nil then
        _temp678 = _n:_less_less(_temp674)
      elseif _n.no_undermethod ~= nil then
        _temp678 =  _n:no_undermethod(string:new("<<") , _temp674)
      else
        _error(exception:method_error(_temp673, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp673)
      if _f._less_less ~= nil then
        _temp678 = _f:_less_less(_temp674)
      elseif _f.no_undermethod ~= nil then
        _temp678 =  _f:no_undermethod(string:new("<<") , _temp674)
      else
        _error(exception:method_error(_temp673, "<<"))
      end

      elseif _temp673 == nil then
        _error(exception:null_error("_temp673", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp673))
      end

_dummy_ = _temp678 
end

    if _type(_temp663) == "function" or (_type(_temp663) == "table" and _rawget(_temp663, "__call_thing")) then
      return  _temp663(_self)

    elseif _temp663 then
      return  _temp663
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp660)
      if _t == "table" then
                      if _type(_temp660.walk) == "function" or (_type(_temp660.walk) == "table" and _rawget(_temp660.walk, "__call_thing")) then
        _dummy_ = _temp660:walk(_temp4,_temp679)
      elseif _temp660.walk ~= nil then
        _dummy_ = _temp660.walk

        elseif _temp660.no_undermethod ~= nil then
          _dummy_ =  _temp660:no_undermethod(string:new("walk") , _temp4,_temp679)
        else
          _error(exception:method_error(_temp660, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp660)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp679)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp679)
      else
        _error(exception:method_error(_temp660, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp660)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp679)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp679)
      else
        _error(exception:method_error(_temp660, "walk"))
      end

      elseif _temp660 == nil then
        _error(exception:null_error("_temp660", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp660))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp679 =  _temp5(_self)

    elseif _temp5 then
      _temp679 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp679 =  _self:c()
      elseif _self.c ~= nil then
        _temp679 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp679 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp679 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp679,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp679,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp679,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp679,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
