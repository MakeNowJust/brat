              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp17 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

local _temp11

_temp11 = 0

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp16 = function (_self)

local _temp12 
do
local _temp13 = nil
_temp13 =  _temp11

local _temp14
      if number._unchanged('_plus')  then
        _temp14 = _temp13 + 1
      else
              local _n = number:new(_temp13)
      if _n._plus ~= nil then
        _temp14 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp14 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp13, "+"))
      end

      end 

_temp12 = _temp14 
end

_temp11 = _temp12

return _temp11
end

        if _type(_temp7) == "table" then
          _temp7["next_underliftable"] = _temp16
        elseif _type(_temp7) == "number" then
          number["next_underliftable"] =  _temp16
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp16
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp17
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp17
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp31 = function (_self, _temp18)
        if _temp18 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp19 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp19 =  my(_self)

    elseif my then
      _temp19 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp19 =  _self:my()
      elseif _self.my ~= nil then
        _temp19 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp19

local _temp20 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp21 = nil
        local _t = _type(_temp18)
        if _t == "table" then
          if _rawget(_temp18, "__call_thing") == nil then
            _temp21 = _temp18
          else
                  if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

          end
        elseif _t == "number" then
          _temp21 = _temp18
        elseif _t == "function" then
                if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

        elseif _temp18 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.nodes) == "function" or (_type(_temp21.nodes) == "table" and _rawget(_temp21.nodes, "__call_thing")) then
        _temp21 = _temp21:nodes()
      elseif _temp21.nodes ~= nil then
        _temp21 = _temp21.nodes

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp21, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.nodes ~= nil then
        _temp21 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.nodes ~= nil then
        _temp21 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


local _temp26 = function (_self, _temp22)
        if _temp22 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp23 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp23 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp23 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp24 = nil
    if _type(_temp22) == "function" or (_type(_temp22) == "table" and _rawget(_temp22, "__call_thing")) then
      _temp24 =  _temp22(_self)

    elseif _temp22 then
      _temp24 =  _temp22
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp24 =  _self:n()
      elseif _self.n ~= nil then
        _temp24 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.process) == "function" or (_type(_temp23.process) == "table" and _rawget(_temp23.process, "__call_thing")) then
        return _temp23:process(_temp24)
      elseif _temp23.process ~= nil then
        return _temp23.process

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("process") , _temp24)
        else
          _error(exception:method_error(_temp23, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.process ~= nil then
        return _n:process(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.process ~= nil then
        return _f:process(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.map) == "function" or (_type(_temp21.map) == "table" and _rawget(_temp21.map, "__call_thing")) then
        _temp21 = _temp21:map(_temp26)
      elseif _temp21.map ~= nil then
        _temp21 = _temp21.map

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("map") , _temp26)
        else
          _error(exception:method_error(_temp21, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.map ~= nil then
        _temp21 = _n:map(_temp26)
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.map ~= nil then
        _temp21 = _f:map(_temp26)
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


        if _type(_temp20) == "table" then
          _temp20["results"] = _temp21
        elseif _type(_temp20) == "number" then
          number["results"] = _temp21
        else
          _error("Cannot set method on " .. _temp20)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp26 
do
local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp28 = nil
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.liftable_underfunctions) == "function" or (_type(_temp27.liftable_underfunctions) == "table" and _rawget(_temp27.liftable_underfunctions, "__call_thing")) then
        _temp28 = _temp27:liftable_underfunctions()
      elseif _temp27.liftable_underfunctions ~= nil then
        _temp28 = _temp27.liftable_underfunctions

        elseif _temp27.no_undermethod ~= nil then
          _temp28 =  _temp27:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp27, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.liftable_underfunctions ~= nil then
        _temp28 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.liftable_underfunctions ~= nil then
        _temp28 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp29 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp29 =  _self:my()
      elseif _self.my ~= nil then
        _temp29 =  _self.my

        elseif my ~= nil then
          _temp29 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp29)
      if _t == "table" then
                      if _type(_temp29.results) == "function" or (_type(_temp29.results) == "table" and _rawget(_temp29.results, "__call_thing")) then
        _temp29 = _temp29:results()
      elseif _temp29.results ~= nil then
        _temp29 = _temp29.results

        elseif _temp29.no_undermethod ~= nil then
          _temp29 =  _temp29:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp29, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp29)
      if _n.results ~= nil then
        _temp29 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp29 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp29)
      if _f.results ~= nil then
        _temp29 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp29 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _temp29 == nil then
        _error(exception:null_error("_temp29", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp29))
      end

local _temp30
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28._plus) == "function" or (_type(_temp28._plus) == "table" and _rawget(_temp28._plus, "__call_thing")) then
        _temp30 = _temp28:_plus(_temp29)
      elseif _temp28._plus ~= nil then
        _temp30 = _temp28._plus

        elseif _temp28.no_undermethod ~= nil then
          _temp30 =  _temp28:no_undermethod(string:new("+") , _temp29)
        else
          _error(exception:method_error(_temp28, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp29) == 'number' then
        _temp30 = _temp28 + _temp29
      else
              local _n = number:new(_temp28)
      if _n._plus ~= nil then
        _temp30 = _n:_plus(_temp29)
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f._plus ~= nil then
        _temp30 = _f:_plus(_temp29)
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end

_temp26 = _temp30 
end

        if _type(_temp20) == "table" then
          _temp20["results"] = _temp26
        elseif _type(_temp20) == "number" then
          number["results"] = _temp26
        else
          _error("Cannot set method on " .. _temp20)
        end

return _temp26
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp31)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp36 = function (_self, _temp32)
        if _temp32 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp33
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp33 =  _self:my()
      elseif _self.my ~= nil then
        _temp33 =  _self.my

        elseif my ~= nil then
          _temp33 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.env) == "function" or (_type(_temp33.env) == "table" and _rawget(_temp33.env, "__call_thing")) then
        _temp33 = _temp33:env()
      elseif _temp33.env ~= nil then
        _temp33 = _temp33.env

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.env ~= nil then
        _temp33 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.env ~= nil then
        _temp33 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

local _temp34 = nil
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.lhs) == "function" or (_type(_temp34.lhs) == "table" and _rawget(_temp34.lhs, "__call_thing")) then
        _temp34 = _temp34:lhs()
      elseif _temp34.lhs ~= nil then
        _temp34 = _temp34.lhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp34, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.lhs ~= nil then
        _temp34 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.lhs ~= nil then
        _temp34 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.new_undervar) == "function" or (_type(_temp33.new_undervar) == "table" and _rawget(_temp33.new_undervar, "__call_thing")) then
        _temp33 = _temp33:new_undervar(_temp34)
      elseif _temp33.new_undervar ~= nil then
        _temp33 = _temp33.new_undervar

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("new_var") , _temp34)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.new_undervar ~= nil then
        _temp33 = _n:new_undervar(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.new_undervar ~= nil then
        _temp33 = _f:new_undervar(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end


local _temp35
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.rhs) == "function" or (_type(_temp34.rhs) == "table" and _rawget(_temp34.rhs, "__call_thing")) then
        _temp34 = _temp34:rhs()
      elseif _temp34.rhs ~= nil then
        _temp34 = _temp34.rhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp34, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.rhs ~= nil then
        _temp34 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.rhs ~= nil then
        _temp34 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


local _temp36 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp36 =  _temp33(_self)

    elseif _temp33 then
      _temp36 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp35 =  process(_self, _temp34,_temp36)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp35 =  _self:process(_temp34,_temp36)
      elseif _self.process ~= nil then
        _temp35 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("process") , _temp34,_temp36)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("process") , _temp34,_temp36)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.env) == "function" or (_type(_temp36.env) == "table" and _rawget(_temp36.env, "__call_thing")) then
        _temp36 = _temp36:env()
      elseif _temp36.env ~= nil then
        _temp36 = _temp36.env

        elseif _temp36.no_undermethod ~= nil then
          _temp36 =  _temp36:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp36, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.env ~= nil then
        _temp36 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp36 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.env ~= nil then
        _temp36 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp36 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp34 =  _temp33(_self)

    elseif _temp33 then
      _temp34 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp34 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp34 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp34 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp34 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37
do
    if _type(_temp35) == "function" or (_type(_temp35) == "table" and _rawget(_temp35, "__call_thing")) then
      _temp37 =  _temp35(_self)

    elseif _temp35 then
      _temp37 =  _temp35
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp37 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp37 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp38 = string:new("type")


_temp37 = _temp37:get(_temp38)
end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.set_undertype) == "function" or (_type(_temp36.set_undertype) == "table" and _rawget(_temp36.set_undertype, "__call_thing")) then
        _dummy_ = _temp36:set_undertype(_temp34,_temp37)
      elseif _temp36.set_undertype ~= nil then
        _dummy_ = _temp36.set_undertype

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("set_type") , _temp34,_temp37)
        else
          _error(exception:method_error(_temp36, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp34,_temp37)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp34,_temp37)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

local _temp37 
do
local _temp39 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp39 =  _temp33(_self)

    elseif _temp33 then
      _temp39 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp39 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp39 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp40 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp40 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp40 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.var) == "function" or (_type(_temp40.var) == "table" and _rawget(_temp40.var, "__call_thing")) then
        _temp40 = _temp40:var()
      elseif _temp40.var ~= nil then
        _temp40 = _temp40.var

        elseif _temp40.no_undermethod ~= nil then
          _temp40 =  _temp40:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp40, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.var ~= nil then
        _temp40 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp40 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.var ~= nil then
        _temp40 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp40 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

local _temp41
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39._equal_equal) == "function" or (_type(_temp39._equal_equal) == "table" and _rawget(_temp39._equal_equal, "__call_thing")) then
        _temp41 = _temp39:_equal_equal(_temp40)
      elseif _temp39._equal_equal ~= nil then
        _temp41 = _temp39._equal_equal

        elseif _temp39.no_undermethod ~= nil then
          _temp41 =  _temp39:no_undermethod(string:new("==") , _temp40)
        else
          _error(exception:method_error(_temp39, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp40) == 'number' then
              if _temp39 == _temp40 then
        _temp41 = object.__true
      else
        _temp41 = object.__false
      end

      else
              local _n = number:new(_temp39)
      if _n._equal_equal ~= nil then
        _temp41 = _n:_equal_equal(_temp40)
      elseif _n.no_undermethod ~= nil then
        _temp41 =  _n:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f._equal_equal ~= nil then
        _temp41 = _f:_equal_equal(_temp40)
      elseif _f.no_undermethod ~= nil then
        _temp41 =  _f:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end

_temp37 = _temp41 
end


local _temp47 = function (_self)

local _temp42 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp42 =  _temp33(_self)

    elseif _temp33 then
      _temp42 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp44 =  _temp33(_self)

    elseif _temp33 then
      _temp44 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp44 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp44 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp44 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp44 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp45 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp45 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp45 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp45)
      if _t == "table" then
                      if _type(_temp45.out) == "function" or (_type(_temp45.out) == "table" and _rawget(_temp45.out, "__call_thing")) then
        _temp45 = _temp45:out()
      elseif _temp45.out ~= nil then
        _temp45 = _temp45.out

        elseif _temp45.no_undermethod ~= nil then
          _temp45 =  _temp45:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp45, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp45)
      if _n.out ~= nil then
        _temp45 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp45 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp45)
      if _f.out ~= nil then
        _temp45 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp45 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _temp45 == nil then
        _error(exception:null_error("_temp45", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp45))
      end


_temp43 = string:new("local " .. _tostring(_temp44) .. "\n" .. _tostring(_temp45) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end


local _temp54 = function (_self)

local _temp48 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp48 =  _temp33(_self)

    elseif _temp33 then
      _temp48 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp48 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp48 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp48 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp48 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp49 = nil
do
local _temp50 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp50 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp50 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp50)
      if _t == "table" then
                      if _type(_temp50.out) == "function" or (_type(_temp50.out) == "table" and _rawget(_temp50.out, "__call_thing")) then
        _temp50 = _temp50:out()
      elseif _temp50.out ~= nil then
        _temp50 = _temp50.out

        elseif _temp50.no_undermethod ~= nil then
          _temp50 =  _temp50:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp50, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp50)
      if _n.out ~= nil then
        _temp50 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp50 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp50)
      if _f.out ~= nil then
        _temp50 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp50 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _temp50 == nil then
        _error(exception:null_error("_temp50", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp50))
      end


local _temp51 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp51 =  _temp33(_self)

    elseif _temp33 then
      _temp51 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp51 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp51 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp52 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp52 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.var) == "function" or (_type(_temp52.var) == "table" and _rawget(_temp52.var, "__call_thing")) then
        _temp52 = _temp52:var()
      elseif _temp52.var ~= nil then
        _temp52 = _temp52.var

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp52, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.var ~= nil then
        _temp52 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.var ~= nil then
        _temp52 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = string:new("" .. _tostring(_temp50) .. "\nlocal " .. _tostring(_temp51) .. " = " .. _tostring(_temp52) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp48,_temp49)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp48,_temp49)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp48,_temp49)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp48,_temp49)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp37,_temp47,_temp54)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp37,_temp47,_temp54)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp37,_temp47,_temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp37,_temp47,_temp54)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp31 =  _temp5(_self)

    elseif _temp5 then
      _temp31 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp31 =  _self:c()
      elseif _self.c ~= nil then
        _temp31 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp31 = _temp31["var_underreassign"]
        if _temp31 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp31)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["var_underreassign"]
        if _temp36 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp76 = function (_self, _temp56,_temp55)
        if _temp56 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp55 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp55 =  null(_self)

    elseif null then
      _temp55 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp55 =  _self:null()
      elseif _self.null ~= nil then
        _temp55 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp57
local _temp58 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.target) == "function" or (_type(_temp58.target) == "table" and _rawget(_temp58.target, "__call_thing")) then
        _temp58 = _temp58:target()
      elseif _temp58.target ~= nil then
        _temp58 = _temp58.target

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp58, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.target ~= nil then
        _temp58 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.target ~= nil then
        _temp58 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp57 =  process(_self, _temp58)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp57 =  _self:process(_temp58)
      elseif _self.process ~= nil then
        _temp57 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("process") , _temp58)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("process") , _temp58)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.field) == "function" or (_type(_temp58.field) == "table" and _rawget(_temp58.field, "__call_thing")) then
        _temp58 = _temp58:field()
      elseif _temp58.field ~= nil then
        _temp58 = _temp58.field

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp58, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.field ~= nil then
        _temp58 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.field ~= nil then
        _temp58 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


_temp55 = _temp58

local _temp59
local _temp60 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp60 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.rhs) == "function" or (_type(_temp60.rhs) == "table" and _rawget(_temp60.rhs, "__call_thing")) then
        _temp60 = _temp60:rhs()
      elseif _temp60.rhs ~= nil then
        _temp60 = _temp60.rhs

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp60, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.rhs ~= nil then
        _temp60 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.rhs ~= nil then
        _temp60 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp59 =  process(_self, _temp60)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp59 =  _self:process(_temp60)
      elseif _self.process ~= nil then
        _temp59 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("process") , _temp60)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("process") , _temp60)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp61
do
local _temp62 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp62 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp63 = nil
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.out) == "function" or (_type(_temp62.out) == "table" and _rawget(_temp62.out, "__call_thing")) then
        _temp63 = _temp62:out()
      elseif _temp62.out ~= nil then
        _temp63 = _temp62.out

        elseif _temp62.no_undermethod ~= nil then
          _temp63 =  _temp62:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp62, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.out ~= nil then
        _temp63 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.out ~= nil then
        _temp63 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end

local _temp64 = string:new("\n")

local _temp65 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp65 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp66 = nil
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.out) == "function" or (_type(_temp65.out) == "table" and _rawget(_temp65.out, "__call_thing")) then
        _temp66 = _temp65:out()
      elseif _temp65.out ~= nil then
        _temp66 = _temp65.out

        elseif _temp65.no_undermethod ~= nil then
          _temp66 =  _temp65:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp65, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.out ~= nil then
        _temp66 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.out ~= nil then
        _temp66 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end

local _temp67 = nil
do
local _temp68 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp68 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp68 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.var) == "function" or (_type(_temp68.var) == "table" and _rawget(_temp68.var, "__call_thing")) then
        _temp68 = _temp68:var()
      elseif _temp68.var ~= nil then
        _temp68 = _temp68.var

        elseif _temp68.no_undermethod ~= nil then
          _temp68 =  _temp68:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp68, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.var ~= nil then
        _temp68 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp68 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.var ~= nil then
        _temp68 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp68 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end


local _temp69 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp69 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp69 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp69)
      if _t == "table" then
                      if _type(_temp69.var) == "function" or (_type(_temp69.var) == "table" and _rawget(_temp69.var, "__call_thing")) then
        _temp69 = _temp69:var()
      elseif _temp69.var ~= nil then
        _temp69 = _temp69.var

        elseif _temp69.no_undermethod ~= nil then
          _temp69 =  _temp69:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp69, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp69)
      if _n.var ~= nil then
        _temp69 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp69 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp69)
      if _f.var ~= nil then
        _temp69 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp69 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _temp69 == nil then
        _error(exception:null_error("_temp69", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp69))
      end


local _temp70 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp70 =  _temp55(_self)

    elseif _temp55 then
      _temp70 =  _temp55
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp70 =  _self:var()
      elseif _self.var ~= nil then
        _temp70 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp71 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp71 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp71 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp71)
      if _t == "table" then
                      if _type(_temp71.var) == "function" or (_type(_temp71.var) == "table" and _rawget(_temp71.var, "__call_thing")) then
        _temp71 = _temp71:var()
      elseif _temp71.var ~= nil then
        _temp71 = _temp71.var

        elseif _temp71.no_undermethod ~= nil then
          _temp71 =  _temp71:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp71, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp71)
      if _n.var ~= nil then
        _temp71 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp71 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp71)
      if _f.var ~= nil then
        _temp71 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp71 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _temp71 == nil then
        _error(exception:null_error("_temp71", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp71))
      end


local _temp72 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp72 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp72 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.var) == "function" or (_type(_temp72.var) == "table" and _rawget(_temp72.var, "__call_thing")) then
        _temp72 = _temp72:var()
      elseif _temp72.var ~= nil then
        _temp72 = _temp72.var

        elseif _temp72.no_undermethod ~= nil then
          _temp72 =  _temp72:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp72, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.var ~= nil then
        _temp72 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp72 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.var ~= nil then
        _temp72 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp72 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end


_temp67 = string:new("\n    if _type(" .. _tostring(_temp68) .. ") == 'table' then\n      " .. _tostring(_temp69) .. "['" .. _tostring(_temp70) .. "'] = " .. _tostring(_temp71) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp72) .. ")\n    end\n    ")
end
local _temp73
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63._less_less) == "function" or (_type(_temp63._less_less) == "table" and _rawget(_temp63._less_less, "__call_thing")) then
        _temp73 = _temp63:_less_less(_temp64)
      elseif _temp63._less_less ~= nil then
        _temp73 = _temp63._less_less

        elseif _temp63.no_undermethod ~= nil then
          _temp73 =  _temp63:no_undermethod(string:new("<<") , _temp64)
        else
          _error(exception:method_error(_temp63, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n._less_less ~= nil then
        _temp73 = _n:_less_less(_temp64)
      elseif _n.no_undermethod ~= nil then
        _temp73 =  _n:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f._less_less ~= nil then
        _temp73 = _f:_less_less(_temp64)
      elseif _f.no_undermethod ~= nil then
        _temp73 =  _f:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end

local _temp64
      local _t = _type(_temp73)
      if _t == "table" then
                      if _type(_temp73._less_less) == "function" or (_type(_temp73._less_less) == "table" and _rawget(_temp73._less_less, "__call_thing")) then
        _temp64 = _temp73:_less_less(_temp66)
      elseif _temp73._less_less ~= nil then
        _temp64 = _temp73._less_less

        elseif _temp73.no_undermethod ~= nil then
          _temp64 =  _temp73:no_undermethod(string:new("<<") , _temp66)
        else
          _error(exception:method_error(_temp73, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp73)
      if _n._less_less ~= nil then
        _temp64 = _n:_less_less(_temp66)
      elseif _n.no_undermethod ~= nil then
        _temp64 =  _n:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp73)
      if _f._less_less ~= nil then
        _temp64 = _f:_less_less(_temp66)
      elseif _f.no_undermethod ~= nil then
        _temp64 =  _f:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _temp73 == nil then
        _error(exception:null_error("_temp73", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp73))
      end

local _temp66
      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64._less_less) == "function" or (_type(_temp64._less_less) == "table" and _rawget(_temp64._less_less, "__call_thing")) then
        _temp66 = _temp64:_less_less(_temp67)
      elseif _temp64._less_less ~= nil then
        _temp66 = _temp64._less_less

        elseif _temp64.no_undermethod ~= nil then
          _temp66 =  _temp64:no_undermethod(string:new("<<") , _temp67)
        else
          _error(exception:method_error(_temp64, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n._less_less ~= nil then
        _temp66 = _n:_less_less(_temp67)
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f._less_less ~= nil then
        _temp66 = _f:_less_less(_temp67)
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

_temp61 = _temp66 
end

        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp60 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.var) == "function" or (_type(_temp60.var) == "table" and _rawget(_temp60.var, "__call_thing")) then
        _temp60 = _temp60:var()
      elseif _temp60.var ~= nil then
        _temp60 = _temp60.var

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp60, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.var ~= nil then
        _temp60 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.var ~= nil then
        _temp60 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


local _temp74 = nil
    if _type(_temp61) == "function" or (_type(_temp61) == "table" and _rawget(_temp61, "__call_thing")) then
      _temp74 =  _temp61(_self)

    elseif _temp61 then
      _temp74 =  _temp61
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp74 =  _self:out()
      elseif _self.out ~= nil then
        _temp74 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp60,_temp74)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp60,_temp74)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp60,_temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp60,_temp74)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["get_undera_undervalue"]
        if _temp36 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp36)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp76 =  _temp5(_self)

    elseif _temp5 then
      _temp76 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp76 =  _self:c()
      elseif _self.c ~= nil then
        _temp76 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp76 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp76 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp76 = _temp76["get_undera_undervalue"]
        if _temp76 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp86 = function (_self, _temp78,_temp77)
        if _temp78 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp77 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp77 =  null(_self)

    elseif null then
      _temp77 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp77 =  _self:null()
      elseif _self.null ~= nil then
        _temp77 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp79
local _temp80 = nil
    if _type(_temp77) == "function" or (_type(_temp77) == "table" and _rawget(_temp77, "__call_thing")) then
      _temp80 =  _temp77(_self)

    elseif _temp77 then
      _temp80 =  _temp77
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp80 =  _self:var()
      elseif _self.var ~= nil then
        _temp80 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp80 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp80 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp79 =  set_underresult(_self, _temp80)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp79 =  _self:set_underresult(_temp80)
      elseif _self.set_underresult ~= nil then
        _temp79 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("set_result") , _temp80)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("set_result") , _temp80)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp81 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp81 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp81 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp82 = nil
      local _t = _type(_temp81)
      if _t == "table" then
                      if _type(_temp81.out) == "function" or (_type(_temp81.out) == "table" and _rawget(_temp81.out, "__call_thing")) then
        _temp82 = _temp81:out()
      elseif _temp81.out ~= nil then
        _temp82 = _temp81.out

        elseif _temp81.no_undermethod ~= nil then
          _temp82 =  _temp81:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp81, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp81)
      if _n.out ~= nil then
        _temp82 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp82 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp81)
      if _f.out ~= nil then
        _temp82 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp82 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _temp81 == nil then
        _error(exception:null_error("_temp81", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp81))
      end

local _temp83 = nil
local _temp84 = nil
        local _t = _type(_temp78)
        if _t == "table" then
          if _rawget(_temp78, "__call_thing") == nil then
            _temp84 = _temp78
          else
                  if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

          end
        elseif _t == "number" then
          _temp84 = _temp78
        elseif _t == "function" then
                if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

        elseif _temp78 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.value) == "function" or (_type(_temp84.value) == "table" and _rawget(_temp84.value, "__call_thing")) then
        _temp84 = _temp84:value()
      elseif _temp84.value ~= nil then
        _temp84 = _temp84.value

        elseif _temp84.no_undermethod ~= nil then
          _temp84 =  _temp84:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp84, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.value ~= nil then
        _temp84 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp84 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.value ~= nil then
        _temp84 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp84 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end


local _temp85 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp85 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp85 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp85)
      if _t == "table" then
                      if _type(_temp85.var) == "function" or (_type(_temp85.var) == "table" and _rawget(_temp85.var, "__call_thing")) then
        _temp85 = _temp85:var()
      elseif _temp85.var ~= nil then
        _temp85 = _temp85.var

        elseif _temp85.no_undermethod ~= nil then
          _temp85 =  _temp85:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp85, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp85)
      if _n.var ~= nil then
        _temp85 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp85)
      if _f.var ~= nil then
        _temp85 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _temp85 == nil then
        _error(exception:null_error("_temp85", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp85))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp83 =  get_undervalue(_self, _temp84,_temp85)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp83 =  _self:get_undervalue(_temp84,_temp85)
      elseif _self.get_undervalue ~= nil then
        _temp83 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("get_value") , _temp84,_temp85)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("get_value") , _temp84,_temp85)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp85
      local _t = _type(_temp82)
      if _t == "table" then
                      if _type(_temp82._less_less) == "function" or (_type(_temp82._less_less) == "table" and _rawget(_temp82._less_less, "__call_thing")) then
        _temp85 = _temp82:_less_less(_temp83)
      elseif _temp82._less_less ~= nil then
        _temp85 = _temp82._less_less

        elseif _temp82.no_undermethod ~= nil then
          _temp85 =  _temp82:no_undermethod(string:new("<<") , _temp83)
        else
          _error(exception:method_error(_temp82, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp82)
      if _n._less_less ~= nil then
        _temp85 = _n:_less_less(_temp83)
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp82)
      if _f._less_less ~= nil then
        _temp85 = _f:_less_less(_temp83)
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _temp82 == nil then
        _error(exception:null_error("_temp82", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp82))
      end

_dummy_ = _temp85 
end

    if _type(_temp79) == "function" or (_type(_temp79) == "table" and _rawget(_temp79, "__call_thing")) then
      return  _temp79(_self)

    elseif _temp79 then
      return  _temp79
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp86)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp86)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp86)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp86)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp86 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp86 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp94 = function (_self, _temp88,_temp87)
        if _temp88 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp87 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp87 =  null(_self)

    elseif null then
      _temp87 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp87 =  _self:null()
      elseif _self.null ~= nil then
        _temp87 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp89 = nil
    if _type(_temp88) == "function" or (_type(_temp88) == "table" and _rawget(_temp88, "__call_thing")) then
      _temp89 =  _temp88(_self)

    elseif _temp88 then
      _temp89 =  _temp88
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp89 =  _self:node()
      elseif _self.node ~= nil then
        _temp89 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp90 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp90 =  null(_self)

    elseif null then
      _temp90 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp90 =  _self:null()
      elseif _self.null ~= nil then
        _temp90 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp90 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp90 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp91 = nil

        if invoke_underlocal == nil then
          _temp91 = _self["invoke_underlocal"]
          if _temp91 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp91 = invoke_underlocal
        end

local _temp92 = nil
    if _type(_temp87) == "function" or (_type(_temp87) == "table" and _rawget(_temp87, "__call_thing")) then
      _temp92 =  _temp87(_self)

    elseif _temp87 then
      _temp92 =  _temp87
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp92 =  _self:var()
      elseif _self.var ~= nil then
        _temp92 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp89,_temp90,_temp91,_temp92)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp89,_temp90,_temp91,_temp92)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp86)
      if _t == "table" then
                      if _type(_temp86.walk) == "function" or (_type(_temp86.walk) == "table" and _rawget(_temp86.walk, "__call_thing")) then
        _dummy_ = _temp86:walk(_temp4,_temp94)
      elseif _temp86.walk ~= nil then
        _dummy_ = _temp86.walk

        elseif _temp86.no_undermethod ~= nil then
          _dummy_ =  _temp86:no_undermethod(string:new("walk") , _temp4,_temp94)
        else
          _error(exception:method_error(_temp86, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp86)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp94)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp86)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp94)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _temp86 == nil then
        _error(exception:null_error("_temp86", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp86))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp94 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp94 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp102 = function (_self, _temp96,_temp95)
        if _temp96 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp95 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp95 =  null(_self)

    elseif null then
      _temp95 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp95 =  _self:null()
      elseif _self.null ~= nil then
        _temp95 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp97 = nil
    if _type(_temp96) == "function" or (_type(_temp96) == "table" and _rawget(_temp96, "__call_thing")) then
      _temp97 =  _temp96(_self)

    elseif _temp96 then
      _temp97 =  _temp96
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp97 =  _self:node()
      elseif _self.node ~= nil then
        _temp97 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp98 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp98 =  null(_self)

    elseif null then
      _temp98 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp98 =  _self:null()
      elseif _self.null ~= nil then
        _temp98 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp98 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp98 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp99 = nil

        if invoke_underlocal == nil then
          _temp99 = _self["invoke_underlocal"]
          if _temp99 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp99 = invoke_underlocal
        end

local _temp100 = nil
    if _type(_temp95) == "function" or (_type(_temp95) == "table" and _rawget(_temp95, "__call_thing")) then
      _temp100 =  _temp95(_self)

    elseif _temp95 then
      _temp100 =  _temp95
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp100 =  _self:var()
      elseif _self.var ~= nil then
        _temp100 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp97,_temp98,_temp99,_temp100)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp97,_temp98,_temp99,_temp100)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp94)
      if _t == "table" then
                      if _type(_temp94.walk) == "function" or (_type(_temp94.walk) == "table" and _rawget(_temp94.walk, "__call_thing")) then
        _dummy_ = _temp94:walk(_temp4,_temp102)
      elseif _temp94.walk ~= nil then
        _dummy_ = _temp94.walk

        elseif _temp94.no_undermethod ~= nil then
          _dummy_ =  _temp94:no_undermethod(string:new("walk") , _temp4,_temp102)
        else
          _error(exception:method_error(_temp94, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp94)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp102)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp94)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp102)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _temp94 == nil then
        _error(exception:null_error("_temp94", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp94))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp102 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp102 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp110 = function (_self, _temp104,_temp103)
        if _temp104 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp103 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp103 =  null(_self)

    elseif null then
      _temp103 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp103 =  _self:null()
      elseif _self.null ~= nil then
        _temp103 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp105 = nil
    if _type(_temp104) == "function" or (_type(_temp104) == "table" and _rawget(_temp104, "__call_thing")) then
      _temp105 =  _temp104(_self)

    elseif _temp104 then
      _temp105 =  _temp104
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp105 =  _self:node()
      elseif _self.node ~= nil then
        _temp105 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp106 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp106 =  null(_self)

    elseif null then
      _temp106 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp106 =  _self:null()
      elseif _self.null ~= nil then
        _temp106 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp106 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp106 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp107 = nil

        if invoke_underself == nil then
          _temp107 = _self["invoke_underself"]
          if _temp107 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp107 = invoke_underself
        end

local _temp108 = nil
    if _type(_temp103) == "function" or (_type(_temp103) == "table" and _rawget(_temp103, "__call_thing")) then
      _temp108 =  _temp103(_self)

    elseif _temp103 then
      _temp108 =  _temp103
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp108 =  _self:var()
      elseif _self.var ~= nil then
        _temp108 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp108 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp108 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp105,_temp106,_temp107,_temp108)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp105,_temp106,_temp107,_temp108)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp102)
      if _t == "table" then
                      if _type(_temp102.walk) == "function" or (_type(_temp102.walk) == "table" and _rawget(_temp102.walk, "__call_thing")) then
        _dummy_ = _temp102:walk(_temp4,_temp110)
      elseif _temp102.walk ~= nil then
        _dummy_ = _temp102.walk

        elseif _temp102.no_undermethod ~= nil then
          _dummy_ =  _temp102:no_undermethod(string:new("walk") , _temp4,_temp110)
        else
          _error(exception:method_error(_temp102, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp102)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp110)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp102)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp110)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _temp102 == nil then
        _error(exception:null_error("_temp102", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp102))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp110 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp110 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp120 = function (_self, _temp112,_temp111)
        if _temp112 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp111 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp111 =  null(_self)

    elseif null then
      _temp111 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp111 =  _self:null()
      elseif _self.null ~= nil then
        _temp111 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp113
local _temp114 = nil
        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp114 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.target) == "function" or (_type(_temp114.target) == "table" and _rawget(_temp114.target, "__call_thing")) then
        _temp114 = _temp114:target()
      elseif _temp114.target ~= nil then
        _temp114 = _temp114.target

        elseif _temp114.no_undermethod ~= nil then
          _temp114 =  _temp114:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp114, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.target ~= nil then
        _temp114 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp114 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.target ~= nil then
        _temp114 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp114 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end


local _temp115 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp115 =  _temp111(_self)

    elseif _temp111 then
      _temp115 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp115 =  _self:var()
      elseif _self.var ~= nil then
        _temp115 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp113 =  process(_self, _temp114,_temp115)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp113 =  _self:process(_temp114,_temp115)
      elseif _self.process ~= nil then
        _temp113 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp113 =  _self:no_undermethod(string:new("process") , _temp114,_temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp113 =  no_undermethod(_self, string:new("process") , _temp114,_temp115)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp115 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp115 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp114 =  null(_self)

    elseif null then
      _temp114 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp114 =  _self:null()
      elseif _self.null ~= nil then
        _temp114 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp114 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp114 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp115) == "table" then
          _temp115["method"] = _temp114
        elseif _type(_temp115) == "number" then
          number["method"] = _temp114
        else
          _error("Cannot set method on " .. _temp115)
        end

    if _type(_temp112) == "function" or (_type(_temp112) == "table" and _rawget(_temp112, "__call_thing")) then
      _temp115 =  _temp112(_self)

    elseif _temp112 then
      _temp115 =  _temp112
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp115 =  _self:node()
      elseif _self.node ~= nil then
        _temp115 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp116 = nil
    if _type(_temp113) == "function" or (_type(_temp113) == "table" and _rawget(_temp113, "__call_thing")) then
      _temp116 =  _temp113(_self)

    elseif _temp113 then
      _temp116 =  _temp113
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp116 =  _self:target()
      elseif _self.target ~= nil then
        _temp116 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp116 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp116 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp117 = nil

        if invoke_underindex_underget == nil then
          _temp117 = _self["invoke_underindex_underget"]
          if _temp117 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp117 = invoke_underindex_underget
        end

local _temp118 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp118 =  _temp111(_self)

    elseif _temp111 then
      _temp118 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp118 =  _self:var()
      elseif _self.var ~= nil then
        _temp118 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp118 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp118 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp115,_temp116,_temp117,_temp118)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp115,_temp116,_temp117,_temp118)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp110)
      if _t == "table" then
                      if _type(_temp110.walk) == "function" or (_type(_temp110.walk) == "table" and _rawget(_temp110.walk, "__call_thing")) then
        _dummy_ = _temp110:walk(_temp4,_temp120)
      elseif _temp110.walk ~= nil then
        _dummy_ = _temp110.walk

        elseif _temp110.no_undermethod ~= nil then
          _dummy_ =  _temp110:no_undermethod(string:new("walk") , _temp4,_temp120)
        else
          _error(exception:method_error(_temp110, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp110)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp120)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp110)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp120)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _temp110 == nil then
        _error(exception:null_error("_temp110", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp110))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp120 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp120 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp130 = function (_self, _temp122,_temp121)
        if _temp122 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp121 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp121 =  null(_self)

    elseif null then
      _temp121 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp121 =  _self:null()
      elseif _self.null ~= nil then
        _temp121 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp121 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp121 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp123
local _temp124 = nil
        local _t = _type(_temp122)
        if _t == "table" then
          if _rawget(_temp122, "__call_thing") == nil then
            _temp124 = _temp122
          else
                  if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

          end
        elseif _t == "number" then
          _temp124 = _temp122
        elseif _t == "function" then
                if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

        elseif _temp122 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.target) == "function" or (_type(_temp124.target) == "table" and _rawget(_temp124.target, "__call_thing")) then
        _temp124 = _temp124:target()
      elseif _temp124.target ~= nil then
        _temp124 = _temp124.target

        elseif _temp124.no_undermethod ~= nil then
          _temp124 =  _temp124:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp124, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.target ~= nil then
        _temp124 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp124 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.target ~= nil then
        _temp124 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp124 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end


local _temp125 = nil
    if _type(_temp121) == "function" or (_type(_temp121) == "table" and _rawget(_temp121, "__call_thing")) then
      _temp125 =  _temp121(_self)

    elseif _temp121 then
      _temp125 =  _temp121
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp125 =  _self:var()
      elseif _self.var ~= nil then
        _temp125 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp123 =  process(_self, _temp124,_temp125)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp123 =  _self:process(_temp124,_temp125)
      elseif _self.process ~= nil then
        _temp123 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("process") , _temp124,_temp125)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("process") , _temp124,_temp125)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp122)
        if _t == "table" then
          if _rawget(_temp122, "__call_thing") == nil then
            _temp125 = _temp122
          else
                  if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp125 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp125 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp125 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp125 =  _temp122(_self)
      end

          end
        elseif _t == "number" then
          _temp125 = _temp122
        elseif _t == "function" then
                if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp125 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp125 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp125 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp125 =  _temp122(_self)
      end

        elseif _temp122 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp124 =  null(_self)

    elseif null then
      _temp124 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp124 =  _self:null()
      elseif _self.null ~= nil then
        _temp124 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp124 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp124 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp125) == "table" then
          _temp125["method"] = _temp124
        elseif _type(_temp125) == "number" then
          number["method"] = _temp124
        else
          _error("Cannot set method on " .. _temp125)
        end

    if _type(_temp122) == "function" or (_type(_temp122) == "table" and _rawget(_temp122, "__call_thing")) then
      _temp125 =  _temp122(_self)

    elseif _temp122 then
      _temp125 =  _temp122
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp125 =  _self:node()
      elseif _self.node ~= nil then
        _temp125 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp126 = nil
    if _type(_temp123) == "function" or (_type(_temp123) == "table" and _rawget(_temp123, "__call_thing")) then
      _temp126 =  _temp123(_self)

    elseif _temp123 then
      _temp126 =  _temp123
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp126 =  _self:target()
      elseif _self.target ~= nil then
        _temp126 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp126 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp126 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp127 = nil

        if invoke_underfunction == nil then
          _temp127 = _self["invoke_underfunction"]
          if _temp127 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp127 = invoke_underfunction
        end

local _temp128 = nil
    if _type(_temp121) == "function" or (_type(_temp121) == "table" and _rawget(_temp121, "__call_thing")) then
      _temp128 =  _temp121(_self)

    elseif _temp121 then
      _temp128 =  _temp121
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp128 =  _self:var()
      elseif _self.var ~= nil then
        _temp128 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp128 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp128 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp125,_temp126,_temp127,_temp128)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp125,_temp126,_temp127,_temp128)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp125,_temp126,_temp127,_temp128)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp125,_temp126,_temp127,_temp128)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120.walk) == "function" or (_type(_temp120.walk) == "table" and _rawget(_temp120.walk, "__call_thing")) then
        _dummy_ = _temp120:walk(_temp4,_temp130)
      elseif _temp120.walk ~= nil then
        _dummy_ = _temp120.walk

        elseif _temp120.no_undermethod ~= nil then
          _dummy_ =  _temp120:no_undermethod(string:new("walk") , _temp4,_temp130)
        else
          _error(exception:method_error(_temp120, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp130)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp130)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp130)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp130)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp130 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp130 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp130 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp130 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp130 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp130 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp130 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp130 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp130 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp130 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp139 = function (_self, _temp132,_temp131)
        if _temp132 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp131 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp131 =  null(_self)

    elseif null then
      _temp131 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp131 =  _self:null()
      elseif _self.null ~= nil then
        _temp131 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp133
local _temp134 = nil
        local _t = _type(_temp132)
        if _t == "table" then
          if _rawget(_temp132, "__call_thing") == nil then
            _temp134 = _temp132
          else
                  if _temp132 == nil then
              if _type(_self._temp132) == "function" or (_type(_self._temp132) == "table" and _rawget(_self._temp132, "__call_thing")) then
        _temp134 =  _self:_temp132()
      elseif _self._temp132 ~= nil then
        _temp134 =  _self._temp132

        elseif _self.no_undermethod ~= nil then
          _temp134 =  _self:no_undermethod(string:new("_temp132"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp134 =  _temp132(_self)
      end

          end
        elseif _t == "number" then
          _temp134 = _temp132
        elseif _t == "function" then
                if _temp132 == nil then
              if _type(_self._temp132) == "function" or (_type(_self._temp132) == "table" and _rawget(_self._temp132, "__call_thing")) then
        _temp134 =  _self:_temp132()
      elseif _self._temp132 ~= nil then
        _temp134 =  _self._temp132

        elseif _self.no_undermethod ~= nil then
          _temp134 =  _self:no_undermethod(string:new("_temp132"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp134 =  _temp132(_self)
      end

        elseif _temp132 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp134)
      if _t == "table" then
                      if _type(_temp134.target) == "function" or (_type(_temp134.target) == "table" and _rawget(_temp134.target, "__call_thing")) then
        _temp134 = _temp134:target()
      elseif _temp134.target ~= nil then
        _temp134 = _temp134.target

        elseif _temp134.no_undermethod ~= nil then
          _temp134 =  _temp134:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp134, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp134)
      if _n.target ~= nil then
        _temp134 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp134 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp134, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp134)
      if _f.target ~= nil then
        _temp134 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp134 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp134, "target"))
      end

      elseif _temp134 == nil then
        _error(exception:null_error("_temp134", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp134))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp133 =  process(_self, _temp134)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp133 =  _self:process(_temp134)
      elseif _self.process ~= nil then
        _temp133 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("process") , _temp134)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("process") , _temp134)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp132) == "function" or (_type(_temp132) == "table" and _rawget(_temp132, "__call_thing")) then
      _temp134 =  _temp132(_self)

    elseif _temp132 then
      _temp134 =  _temp132
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp134 =  _self:node()
      elseif _self.node ~= nil then
        _temp134 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp134 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp134 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp135 = nil
    if _type(_temp133) == "function" or (_type(_temp133) == "table" and _rawget(_temp133, "__call_thing")) then
      _temp135 =  _temp133(_self)

    elseif _temp133 then
      _temp135 =  _temp133
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp135 =  _self:target()
      elseif _self.target ~= nil then
        _temp135 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp136 = nil

        if invoke_undermethod == nil then
          _temp136 = _self["invoke_undermethod"]
          if _temp136 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp136 = invoke_undermethod
        end

local _temp137 = nil
    if _type(_temp131) == "function" or (_type(_temp131) == "table" and _rawget(_temp131, "__call_thing")) then
      _temp137 =  _temp131(_self)

    elseif _temp131 then
      _temp137 =  _temp131
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp137 =  _self:var()
      elseif _self.var ~= nil then
        _temp137 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp137 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp137 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp134,_temp135,_temp136,_temp137)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp134,_temp135,_temp136,_temp137)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp134,_temp135,_temp136,_temp137)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp134,_temp135,_temp136,_temp137)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp130)
      if _t == "table" then
                      if _type(_temp130.walk) == "function" or (_type(_temp130.walk) == "table" and _rawget(_temp130.walk, "__call_thing")) then
        _dummy_ = _temp130:walk(_temp4,_temp139)
      elseif _temp130.walk ~= nil then
        _dummy_ = _temp130.walk

        elseif _temp130.no_undermethod ~= nil then
          _dummy_ =  _temp130:no_undermethod(string:new("walk") , _temp4,_temp139)
        else
          _error(exception:method_error(_temp130, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp130)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp139)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp139)
      else
        _error(exception:method_error(_temp130, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp130)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp139)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp139)
      else
        _error(exception:method_error(_temp130, "walk"))
      end

      elseif _temp130 == nil then
        _error(exception:null_error("_temp130", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp130))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp139 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp139 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp139 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp139 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp139 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp139 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp139 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp139 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp139 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp139 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp146 = function (_self, _temp140)
        if _temp140 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp141
        local _t = _type(_temp140)
        if _t == "table" then
          if _rawget(_temp140, "__call_thing") == nil then
            _temp141 = _temp140
          else
                  if _temp140 == nil then
              if _type(_self._temp140) == "function" or (_type(_self._temp140) == "table" and _rawget(_self._temp140, "__call_thing")) then
        _temp141 =  _self:_temp140()
      elseif _self._temp140 ~= nil then
        _temp141 =  _self._temp140

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp140"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp140(_self)
      end

          end
        elseif _t == "number" then
          _temp141 = _temp140
        elseif _t == "function" then
                if _temp140 == nil then
              if _type(_self._temp140) == "function" or (_type(_self._temp140) == "table" and _rawget(_self._temp140, "__call_thing")) then
        _temp141 =  _self:_temp140()
      elseif _self._temp140 ~= nil then
        _temp141 =  _self._temp140

        elseif _self.no_undermethod ~= nil then
          _temp141 =  _self:no_undermethod(string:new("_temp140"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp141 =  _temp140(_self)
      end

        elseif _temp140 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp141)
      if _t == "table" then
                      if _type(_temp141.value) == "function" or (_type(_temp141.value) == "table" and _rawget(_temp141.value, "__call_thing")) then
        _temp141 = _temp141:value()
      elseif _temp141.value ~= nil then
        _temp141 = _temp141.value

        elseif _temp141.no_undermethod ~= nil then
          _temp141 =  _temp141:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp141)
      if _n.value ~= nil then
        _temp141 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp141 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp141)
      if _f.value ~= nil then
        _temp141 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp141 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp141 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp141))
      end

      local _t = _type(_temp141)
      if _t == "table" then
                      if _type(_temp141.to_underf) == "function" or (_type(_temp141.to_underf) == "table" and _rawget(_temp141.to_underf, "__call_thing")) then
        _temp141 = _temp141:to_underf()
      elseif _temp141.to_underf ~= nil then
        _temp141 = _temp141.to_underf

        elseif _temp141.no_undermethod ~= nil then
          _temp141 =  _temp141:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp141)
      if _n.to_underf ~= nil then
        _temp141 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp141 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp141)
      if _f.to_underf ~= nil then
        _temp141 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp141 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp141 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp141))
      end


local _temp142 = nil
    if _type(_temp141) == "function" or (_type(_temp141) == "table" and _rawget(_temp141, "__call_thing")) then
      _temp142 =  _temp141(_self)

    elseif _temp141 then
      _temp142 =  _temp141
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp142 =  _self:val()
      elseif _self.val ~= nil then
        _temp142 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp142 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp142 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp143 = string:new("")

local _temp144 = string:new("number")

local _temp145 = {}
_temp145[string:new("type")] = _temp144
_temp145 = hash:new(_temp145)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp142,_temp143,_temp145)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp142,_temp143,_temp145)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp142,_temp143,_temp145)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp142,_temp143,_temp145)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp139)
      if _t == "table" then
                      if _type(_temp139.walk) == "function" or (_type(_temp139.walk) == "table" and _rawget(_temp139.walk, "__call_thing")) then
        _dummy_ = _temp139:walk(_temp4,_temp146)
      elseif _temp139.walk ~= nil then
        _dummy_ = _temp139.walk

        elseif _temp139.no_undermethod ~= nil then
          _dummy_ =  _temp139:no_undermethod(string:new("walk") , _temp4,_temp146)
        else
          _error(exception:method_error(_temp139, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp139)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp146)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp139, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp139)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp146)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp146)
      else
        _error(exception:method_error(_temp139, "walk"))
      end

      elseif _temp139 == nil then
        _error(exception:null_error("_temp139", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp139))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp146 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp146 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp146 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp146 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp146 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp146 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp190 = function (_self, _temp148,_temp147)
        if _temp148 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp147 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp147 =  null(_self)

    elseif null then
      _temp147 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp147 =  _self:null()
      elseif _self.null ~= nil then
        _temp147 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp149 = nil
        local _t = _type(_temp148)
        if _t == "table" then
          if _rawget(_temp148, "__call_thing") == nil then
            _temp149 = _temp148
          else
                  if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp149 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp149 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp149 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp149 =  _temp148(_self)
      end

          end
        elseif _t == "number" then
          _temp149 = _temp148
        elseif _t == "function" then
                if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp149 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp149 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp149 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp149 =  _temp148(_self)
      end

        elseif _temp148 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp149)
      if _t == "table" then
                      if _type(_temp149.nodes) == "function" or (_type(_temp149.nodes) == "table" and _rawget(_temp149.nodes, "__call_thing")) then
        _temp149 = _temp149:nodes()
      elseif _temp149.nodes ~= nil then
        _temp149 = _temp149.nodes

        elseif _temp149.no_undermethod ~= nil then
          _temp149 =  _temp149:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp149, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp149)
      if _n.nodes ~= nil then
        _temp149 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp149 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp149, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp149)
      if _f.nodes ~= nil then
        _temp149 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp149 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp149, "nodes"))
      end

      elseif _temp149 == nil then
        _error(exception:null_error("_temp149", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp149))
      end

      local _t = _type(_temp149)
      if _t == "table" then
                      if _type(_temp149.empty_question) == "function" or (_type(_temp149.empty_question) == "table" and _rawget(_temp149.empty_question, "__call_thing")) then
        _temp149 = _temp149:empty_question()
      elseif _temp149.empty_question ~= nil then
        _temp149 = _temp149.empty_question

        elseif _temp149.no_undermethod ~= nil then
          _temp149 =  _temp149:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp149, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp149)
      if _n.empty_question ~= nil then
        _temp149 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp149 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp149, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp149)
      if _f.empty_question ~= nil then
        _temp149 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp149 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp149, "empty?"))
      end

      elseif _temp149 == nil then
        _error(exception:null_error("_temp149", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp149))
      end



local _temp154 = function (_self)

local _temp150 = nil
    if _type(_temp147) == "function" or (_type(_temp147) == "table" and _rawget(_temp147, "__call_thing")) then
      _temp150 =  _temp147(_self)

    elseif _temp147 then
      _temp150 =  _temp147
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp150 =  _self:var()
      elseif _self.var ~= nil then
        _temp150 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp150 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp150 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp151 = string:new("array:new()")

local _temp152 = string:new("array")

local _temp153 = {}
_temp153[string:new("type")] = _temp152
_temp153 = hash:new(_temp153)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp150,_temp151,_temp153)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp150,_temp151,_temp153)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp150,_temp151,_temp153)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp150,_temp151,_temp153)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp188 = function (_self)

local _temp155
local _temp156 = nil
    if _type(_temp147) == "function" or (_type(_temp147) == "table" and _rawget(_temp147, "__call_thing")) then
      _temp156 =  _temp147(_self)

    elseif _temp147 then
      _temp156 =  _temp147
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp156 =  _self:var()
      elseif _self.var ~= nil then
        _temp156 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp156 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp156 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp155 =  set_underresult(_self, _temp156)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp155 =  _self:set_underresult(_temp156)
      elseif _self.set_underresult ~= nil then
        _temp155 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("set_result") , _temp156)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("set_result") , _temp156)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp157
        local _t = _type(_temp155)
        if _t == "table" then
          if _rawget(_temp155, "__call_thing") == nil then
            _temp157 = _temp155
          else
                  if _temp155 == nil then
              if _type(_self._temp155) == "function" or (_type(_self._temp155) == "table" and _rawget(_self._temp155, "__call_thing")) then
        _temp157 =  _self:_temp155()
      elseif _self._temp155 ~= nil then
        _temp157 =  _self._temp155

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp155"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp157 =  _temp155(_self)
      end

          end
        elseif _t == "number" then
          _temp157 = _temp155
        elseif _t == "function" then
                if _temp155 == nil then
              if _type(_self._temp155) == "function" or (_type(_self._temp155) == "table" and _rawget(_self._temp155, "__call_thing")) then
        _temp157 =  _self:_temp155()
      elseif _self._temp155 ~= nil then
        _temp157 =  _self._temp155

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp155"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp157 =  _temp155(_self)
      end

        elseif _temp155 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.var) == "function" or (_type(_temp157.var) == "table" and _rawget(_temp157.var, "__call_thing")) then
        _temp157 = _temp157:var()
      elseif _temp157.var ~= nil then
        _temp157 = _temp157.var

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.var ~= nil then
        _temp157 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.var ~= nil then
        _temp157 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end


local _temp158
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp158 =  _self:my()
      elseif _self.my ~= nil then
        _temp158 =  _self.my

        elseif my ~= nil then
          _temp158 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp158)
      if _t == "table" then
                      if _type(_temp158.env) == "function" or (_type(_temp158.env) == "table" and _rawget(_temp158.env, "__call_thing")) then
        _temp158 = _temp158:env()
      elseif _temp158.env ~= nil then
        _temp158 = _temp158.env

        elseif _temp158.no_undermethod ~= nil then
          _temp158 =  _temp158:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp158)
      if _n.env ~= nil then
        _temp158 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp158 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp158)
      if _f.env ~= nil then
        _temp158 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp158 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp158 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp158))
      end

      local _t = _type(_temp158)
      if _t == "table" then
                      if _type(_temp158.next_undertemp) == "function" or (_type(_temp158.next_undertemp) == "table" and _rawget(_temp158.next_undertemp, "__call_thing")) then
        _temp158 = _temp158:next_undertemp()
      elseif _temp158.next_undertemp ~= nil then
        _temp158 = _temp158.next_undertemp

        elseif _temp158.no_undermethod ~= nil then
          _temp158 =  _temp158:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp158)
      if _n.next_undertemp ~= nil then
        _temp158 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp158 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp158)
      if _f.next_undertemp ~= nil then
        _temp158 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp158 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp158 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp158))
      end


local _temp159
do
local _temp160 = nil
        local _t = _type(_temp155)
        if _t == "table" then
          if _rawget(_temp155, "__call_thing") == nil then
            _temp160 = _temp155
          else
                  if _temp155 == nil then
              if _type(_self._temp155) == "function" or (_type(_self._temp155) == "table" and _rawget(_self._temp155, "__call_thing")) then
        _temp160 =  _self:_temp155()
      elseif _self._temp155 ~= nil then
        _temp160 =  _self._temp155

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp155"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp160 =  _temp155(_self)
      end

          end
        elseif _t == "number" then
          _temp160 = _temp155
        elseif _t == "function" then
                if _temp155 == nil then
              if _type(_self._temp155) == "function" or (_type(_self._temp155) == "table" and _rawget(_self._temp155, "__call_thing")) then
        _temp160 =  _self:_temp155()
      elseif _self._temp155 ~= nil then
        _temp160 =  _self._temp155

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp155"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp160 =  _temp155(_self)
      end

        elseif _temp155 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp160)
      if _t == "table" then
                      if _type(_temp160.out) == "function" or (_type(_temp160.out) == "table" and _rawget(_temp160.out, "__call_thing")) then
        _temp160 = _temp160:out()
      elseif _temp160.out ~= nil then
        _temp160 = _temp160.out

        elseif _temp160.no_undermethod ~= nil then
          _temp160 =  _temp160:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp160, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp160)
      if _n.out ~= nil then
        _temp160 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp160 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp160, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp160)
      if _f.out ~= nil then
        _temp160 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp160 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp160, "out"))
      end

      elseif _temp160 == nil then
        _error(exception:null_error("_temp160", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp160))
      end


local _temp161 = nil
    if _type(_temp158) == "function" or (_type(_temp158) == "table" and _rawget(_temp158, "__call_thing")) then
      _temp161 =  _temp158(_self)

    elseif _temp158 then
      _temp161 =  _temp158
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp161 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp161 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp161 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp161 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp162 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp162 =  _temp157(_self)

    elseif _temp157 then
      _temp162 =  _temp157
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp162 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp162 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp162 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp162 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp159 = string:new("" .. _tostring(_temp160) .. "\ndo\nlocal " .. _tostring(_temp161) .. "\n" .. _tostring(_temp162) .. " = {}\n")
end

local _temp163
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp163 =  my(_self)

    elseif my then
      _temp163 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp163 =  _self:my()
      elseif _self.my ~= nil then
        _temp163 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp148)
        if _t == "table" then
          if _rawget(_temp148, "__call_thing") == nil then
            _temp156 = _temp148
          else
                  if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp156 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp156 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp156 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp156 =  _temp148(_self)
      end

          end
        elseif _t == "number" then
          _temp156 = _temp148
        elseif _t == "function" then
                if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp156 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp156 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp156 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp156 =  _temp148(_self)
      end

        elseif _temp148 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp156)
      if _t == "table" then
                      if _type(_temp156.nodes) == "function" or (_type(_temp156.nodes) == "table" and _rawget(_temp156.nodes, "__call_thing")) then
        _temp156 = _temp156:nodes()
      elseif _temp156.nodes ~= nil then
        _temp156 = _temp156.nodes

        elseif _temp156.no_undermethod ~= nil then
          _temp156 =  _temp156:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp156, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp156)
      if _n.nodes ~= nil then
        _temp156 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp156 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp156, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp156)
      if _f.nodes ~= nil then
        _temp156 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp156 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp156, "nodes"))
      end

      elseif _temp156 == nil then
        _error(exception:null_error("_temp156", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp156))
      end


local _temp180 = function (_self, _temp164, _temp165)
        if _temp164 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp165 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp166
        local _t = _type(_temp163)
        if _t == "table" then
          if _rawget(_temp163, "__call_thing") == nil then
            _temp166 = _temp163
          else
                  if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp166 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp166 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp166 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp166 =  _temp163(_self)
      end

          end
        elseif _t == "number" then
          _temp166 = _temp163
        elseif _t == "function" then
                if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp166 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp166 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp166 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp166 =  _temp163(_self)
      end

        elseif _temp163 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp167 = nil
    if _type(_temp164) == "function" or (_type(_temp164) == "table" and _rawget(_temp164, "__call_thing")) then
      _temp167 =  _temp164(_self)

    elseif _temp164 then
      _temp167 =  _temp164
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp167 =  _self:n()
      elseif _self.n ~= nil then
        _temp167 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp168 = nil
    if _type(_temp158) == "function" or (_type(_temp158) == "table" and _rawget(_temp158, "__call_thing")) then
      _temp168 =  _temp158(_self)

    elseif _temp158 then
      _temp168 =  _temp158
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp168 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp168 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp168 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp168 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp166)
      if _t == "table" then
                      if _type(_temp166.process) == "function" or (_type(_temp166.process) == "table" and _rawget(_temp166.process, "__call_thing")) then
        _temp166 = _temp166:process(_temp167,_temp168)
      elseif _temp166.process ~= nil then
        _temp166 = _temp166.process

        elseif _temp166.no_undermethod ~= nil then
          _temp166 =  _temp166:no_undermethod(string:new("process") , _temp167,_temp168)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp166)
      if _n.process ~= nil then
        _temp166 = _n:process(_temp167,_temp168)
      elseif _n.no_undermethod ~= nil then
        _temp166 =  _n:no_undermethod(string:new("process") , _temp167,_temp168)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp166)
      if _f.process ~= nil then
        _temp166 = _f:process(_temp167,_temp168)
      elseif _f.no_undermethod ~= nil then
        _temp166 =  _f:no_undermethod(string:new("process") , _temp167,_temp168)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp166 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp166))
      end


local _temp168 
do
local _temp169 = nil
_temp169 =  _temp159

local _temp170 = nil
        local _t = _type(_temp166)
        if _t == "table" then
          if _rawget(_temp166, "__call_thing") == nil then
            _temp170 = _temp166
          else
                  if _temp166 == nil then
              if _type(_self._temp166) == "function" or (_type(_self._temp166) == "table" and _rawget(_self._temp166, "__call_thing")) then
        _temp170 =  _self:_temp166()
      elseif _self._temp166 ~= nil then
        _temp170 =  _self._temp166

        elseif _self.no_undermethod ~= nil then
          _temp170 =  _self:no_undermethod(string:new("_temp166"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp170 =  _temp166(_self)
      end

          end
        elseif _t == "number" then
          _temp170 = _temp166
        elseif _t == "function" then
                if _temp166 == nil then
              if _type(_self._temp166) == "function" or (_type(_self._temp166) == "table" and _rawget(_self._temp166, "__call_thing")) then
        _temp170 =  _self:_temp166()
      elseif _self._temp166 ~= nil then
        _temp170 =  _self._temp166

        elseif _self.no_undermethod ~= nil then
          _temp170 =  _self:no_undermethod(string:new("_temp166"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp170 =  _temp166(_self)
      end

        elseif _temp166 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp171 = nil
      local _t = _type(_temp170)
      if _t == "table" then
                      if _type(_temp170.out) == "function" or (_type(_temp170.out) == "table" and _rawget(_temp170.out, "__call_thing")) then
        _temp171 = _temp170:out()
      elseif _temp170.out ~= nil then
        _temp171 = _temp170.out

        elseif _temp170.no_undermethod ~= nil then
          _temp171 =  _temp170:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp170, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp170)
      if _n.out ~= nil then
        _temp171 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp171 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp170, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp170)
      if _f.out ~= nil then
        _temp171 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp171 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp170, "out"))
      end

      elseif _temp170 == nil then
        _error(exception:null_error("_temp170", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp170))
      end

local _temp172 = string:new("\n")

local _temp173 = nil
do
local _temp174 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp174 =  _temp157(_self)

    elseif _temp157 then
      _temp174 =  _temp157
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp174 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp174 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp174 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp174 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp175 
do
local _temp176 = nil
    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp176 =  _temp165(_self)

    elseif _temp165 then
      _temp176 =  _temp165
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp176 =  _self:i()
      elseif _self.i ~= nil then
        _temp176 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp176 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp176 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp177
      local _t = _type(_temp176)
      if _t == "table" then
                      if _type(_temp176._plus) == "function" or (_type(_temp176._plus) == "table" and _rawget(_temp176._plus, "__call_thing")) then
        _temp177 = _temp176:_plus(1)
      elseif _temp176._plus ~= nil then
        _temp177 = _temp176._plus

        elseif _temp176.no_undermethod ~= nil then
          _temp177 =  _temp176:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp176, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp177 = _temp176 + 1
      else
              local _n = number:new(_temp176)
      if _n._plus ~= nil then
        _temp177 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp177 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp176, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp176)
      if _f._plus ~= nil then
        _temp177 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp177 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp176, "+"))
      end

      elseif _temp176 == nil then
        _error(exception:null_error("_temp176", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp176))
      end

_temp175 = _temp177 
end

local _temp178 = nil
        local _t = _type(_temp166)
        if _t == "table" then
          if _rawget(_temp166, "__call_thing") == nil then
            _temp178 = _temp166
          else
                  if _temp166 == nil then
              if _type(_self._temp166) == "function" or (_type(_self._temp166) == "table" and _rawget(_self._temp166, "__call_thing")) then
        _temp178 =  _self:_temp166()
      elseif _self._temp166 ~= nil then
        _temp178 =  _self._temp166

        elseif _self.no_undermethod ~= nil then
          _temp178 =  _self:no_undermethod(string:new("_temp166"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp178 =  _temp166(_self)
      end

          end
        elseif _t == "number" then
          _temp178 = _temp166
        elseif _t == "function" then
                if _temp166 == nil then
              if _type(_self._temp166) == "function" or (_type(_self._temp166) == "table" and _rawget(_self._temp166, "__call_thing")) then
        _temp178 =  _self:_temp166()
      elseif _self._temp166 ~= nil then
        _temp178 =  _self._temp166

        elseif _self.no_undermethod ~= nil then
          _temp178 =  _self:no_undermethod(string:new("_temp166"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp178 =  _temp166(_self)
      end

        elseif _temp166 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp178)
      if _t == "table" then
                      if _type(_temp178.var) == "function" or (_type(_temp178.var) == "table" and _rawget(_temp178.var, "__call_thing")) then
        _temp178 = _temp178:var()
      elseif _temp178.var ~= nil then
        _temp178 = _temp178.var

        elseif _temp178.no_undermethod ~= nil then
          _temp178 =  _temp178:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp178, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp178)
      if _n.var ~= nil then
        _temp178 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp178 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp178, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp178)
      if _f.var ~= nil then
        _temp178 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp178 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp178, "var"))
      end

      elseif _temp178 == nil then
        _error(exception:null_error("_temp178", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp178))
      end


_temp173 = string:new("" .. _tostring(_temp174) .. "[" .. _tostring(_temp175) .. "] = " .. _tostring(_temp178) .. "\n")
end
local _temp179
              if _type(_temp169._less_less) == "function" or (_type(_temp169._less_less) == "table" and _rawget(_temp169._less_less, "__call_thing")) then
        _temp179 = _temp169:_less_less(_temp171)
      elseif _temp169._less_less ~= nil then
        _temp179 = _temp169._less_less

        elseif _temp169.no_undermethod ~= nil then
          _temp179 =  _temp169:no_undermethod(string:new("<<") , _temp171)
        else
          _error(exception:method_error(_temp169, "<<"))
        end

local _temp171
      local _t = _type(_temp179)
      if _t == "table" then
                      if _type(_temp179._less_less) == "function" or (_type(_temp179._less_less) == "table" and _rawget(_temp179._less_less, "__call_thing")) then
        _temp171 = _temp179:_less_less(_temp172)
      elseif _temp179._less_less ~= nil then
        _temp171 = _temp179._less_less

        elseif _temp179.no_undermethod ~= nil then
          _temp171 =  _temp179:no_undermethod(string:new("<<") , _temp172)
        else
          _error(exception:method_error(_temp179, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp179)
      if _n._less_less ~= nil then
        _temp171 = _n:_less_less(_temp172)
      elseif _n.no_undermethod ~= nil then
        _temp171 =  _n:no_undermethod(string:new("<<") , _temp172)
      else
        _error(exception:method_error(_temp179, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp179)
      if _f._less_less ~= nil then
        _temp171 = _f:_less_less(_temp172)
      elseif _f.no_undermethod ~= nil then
        _temp171 =  _f:no_undermethod(string:new("<<") , _temp172)
      else
        _error(exception:method_error(_temp179, "<<"))
      end

      elseif _temp179 == nil then
        _error(exception:null_error("_temp179", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp179))
      end

local _temp172
      local _t = _type(_temp171)
      if _t == "table" then
                      if _type(_temp171._less_less) == "function" or (_type(_temp171._less_less) == "table" and _rawget(_temp171._less_less, "__call_thing")) then
        _temp172 = _temp171:_less_less(_temp173)
      elseif _temp171._less_less ~= nil then
        _temp172 = _temp171._less_less

        elseif _temp171.no_undermethod ~= nil then
          _temp172 =  _temp171:no_undermethod(string:new("<<") , _temp173)
        else
          _error(exception:method_error(_temp171, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp171)
      if _n._less_less ~= nil then
        _temp172 = _n:_less_less(_temp173)
      elseif _n.no_undermethod ~= nil then
        _temp172 =  _n:no_undermethod(string:new("<<") , _temp173)
      else
        _error(exception:method_error(_temp171, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp171)
      if _f._less_less ~= nil then
        _temp172 = _f:_less_less(_temp173)
      elseif _f.no_undermethod ~= nil then
        _temp172 =  _f:no_undermethod(string:new("<<") , _temp173)
      else
        _error(exception:method_error(_temp171, "<<"))
      end

      elseif _temp171 == nil then
        _error(exception:null_error("_temp171", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp171))
      end

_temp168 = _temp172 
end

return _temp168
end

      local _t = _type(_temp156)
      if _t == "table" then
                      if _type(_temp156.each_underwith_underindex) == "function" or (_type(_temp156.each_underwith_underindex) == "table" and _rawget(_temp156.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp156:each_underwith_underindex(_temp180)
      elseif _temp156.each_underwith_underindex ~= nil then
        _dummy_ = _temp156.each_underwith_underindex

        elseif _temp156.no_undermethod ~= nil then
          _dummy_ =  _temp156:no_undermethod(string:new("each_with_index") , _temp180)
        else
          _error(exception:method_error(_temp156, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp156)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp180)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp180)
      else
        _error(exception:method_error(_temp156, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp156)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp180)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp180)
      else
        _error(exception:method_error(_temp156, "each_with_index"))
      end

      elseif _temp156 == nil then
        _error(exception:null_error("_temp156", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp156))
      end

do
local _temp181 = nil
_temp181 =  _temp159

local _temp182 = nil
do
local _temp183 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp183 =  _temp157(_self)

    elseif _temp157 then
      _temp183 =  _temp157
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp183 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp183 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp184 = nil
    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp184 =  _temp157(_self)

    elseif _temp157 then
      _temp184 =  _temp157
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp184 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp184 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp184 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp184 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp182 = string:new("" .. _tostring(_temp183) .. " = array:new(" .. _tostring(_temp184) .. ")\nend\n")
end
local _temp185
              if _type(_temp181._less_less) == "function" or (_type(_temp181._less_less) == "table" and _rawget(_temp181._less_less, "__call_thing")) then
        _temp185 = _temp181:_less_less(_temp182)
      elseif _temp181._less_less ~= nil then
        _temp185 = _temp181._less_less

        elseif _temp181.no_undermethod ~= nil then
          _temp185 =  _temp181:no_undermethod(string:new("<<") , _temp182)
        else
          _error(exception:method_error(_temp181, "<<"))
        end

_dummy_ = _temp185 
end

    if _type(_temp157) == "function" or (_type(_temp157) == "table" and _rawget(_temp157, "__call_thing")) then
      _temp180 =  _temp157(_self)

    elseif _temp157 then
      _temp180 =  _temp157
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp180 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp180 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp180 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp180 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp156 =  _temp159

local _temp186 = string:new("array")

local _temp187 = {}
_temp187[string:new("type")] = _temp186
_temp187 = hash:new(_temp187)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp180,_temp156,_temp187)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp180,_temp156,_temp187)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp180,_temp156,_temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp180,_temp156,_temp187)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp149,_temp154,_temp188)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp149,_temp154,_temp188)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp149,_temp154,_temp188)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp149,_temp154,_temp188)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp146)
      if _t == "table" then
                      if _type(_temp146.walk) == "function" or (_type(_temp146.walk) == "table" and _rawget(_temp146.walk, "__call_thing")) then
        _dummy_ = _temp146:walk(_temp4,_temp190)
      elseif _temp146.walk ~= nil then
        _dummy_ = _temp146.walk

        elseif _temp146.no_undermethod ~= nil then
          _dummy_ =  _temp146:no_undermethod(string:new("walk") , _temp4,_temp190)
        else
          _error(exception:method_error(_temp146, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp146)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp190)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp190)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp146)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp190)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp190)
      else
        _error(exception:method_error(_temp146, "walk"))
      end

      elseif _temp146 == nil then
        _error(exception:null_error("_temp146", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp146))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp190 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp190 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp190 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp190 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp190 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp190 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp190 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp190 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp190 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp190 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp232 = function (_self, _temp192,_temp191)
        if _temp192 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp191 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp191 =  null(_self)

    elseif null then
      _temp191 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp191 =  _self:null()
      elseif _self.null ~= nil then
        _temp191 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp193 = nil
        local _t = _type(_temp192)
        if _t == "table" then
          if _rawget(_temp192, "__call_thing") == nil then
            _temp193 = _temp192
          else
                  if _temp192 == nil then
              if _type(_self._temp192) == "function" or (_type(_self._temp192) == "table" and _rawget(_self._temp192, "__call_thing")) then
        _temp193 =  _self:_temp192()
      elseif _self._temp192 ~= nil then
        _temp193 =  _self._temp192

        elseif _self.no_undermethod ~= nil then
          _temp193 =  _self:no_undermethod(string:new("_temp192"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp193 =  _temp192(_self)
      end

          end
        elseif _t == "number" then
          _temp193 = _temp192
        elseif _t == "function" then
                if _temp192 == nil then
              if _type(_self._temp192) == "function" or (_type(_self._temp192) == "table" and _rawget(_self._temp192, "__call_thing")) then
        _temp193 =  _self:_temp192()
      elseif _self._temp192 ~= nil then
        _temp193 =  _self._temp192

        elseif _self.no_undermethod ~= nil then
          _temp193 =  _self:no_undermethod(string:new("_temp192"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp193 =  _temp192(_self)
      end

        elseif _temp192 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp193)
      if _t == "table" then
                      if _type(_temp193.nodes) == "function" or (_type(_temp193.nodes) == "table" and _rawget(_temp193.nodes, "__call_thing")) then
        _temp193 = _temp193:nodes()
      elseif _temp193.nodes ~= nil then
        _temp193 = _temp193.nodes

        elseif _temp193.no_undermethod ~= nil then
          _temp193 =  _temp193:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp193, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp193)
      if _n.nodes ~= nil then
        _temp193 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp193 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp193, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp193)
      if _f.nodes ~= nil then
        _temp193 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp193 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp193, "nodes"))
      end

      elseif _temp193 == nil then
        _error(exception:null_error("_temp193", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp193))
      end

      local _t = _type(_temp193)
      if _t == "table" then
                      if _type(_temp193.empty_question) == "function" or (_type(_temp193.empty_question) == "table" and _rawget(_temp193.empty_question, "__call_thing")) then
        _temp193 = _temp193:empty_question()
      elseif _temp193.empty_question ~= nil then
        _temp193 = _temp193.empty_question

        elseif _temp193.no_undermethod ~= nil then
          _temp193 =  _temp193:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp193, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp193)
      if _n.empty_question ~= nil then
        _temp193 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp193 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp193, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp193)
      if _f.empty_question ~= nil then
        _temp193 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp193 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp193, "empty?"))
      end

      elseif _temp193 == nil then
        _error(exception:null_error("_temp193", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp193))
      end



local _temp198 = function (_self)

local _temp194 = nil
    if _type(_temp191) == "function" or (_type(_temp191) == "table" and _rawget(_temp191, "__call_thing")) then
      _temp194 =  _temp191(_self)

    elseif _temp191 then
      _temp194 =  _temp191
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp194 =  _self:var()
      elseif _self.var ~= nil then
        _temp194 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp194 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp194 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp195 = string:new("hash:new()")

local _temp196 = string:new("hash")

local _temp197 = {}
_temp197[string:new("type")] = _temp196
_temp197 = hash:new(_temp197)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp194,_temp195,_temp197)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp194,_temp195,_temp197)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp194,_temp195,_temp197)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp194,_temp195,_temp197)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp230 = function (_self)

local _temp199
local _temp200 = nil
    if _type(_temp191) == "function" or (_type(_temp191) == "table" and _rawget(_temp191, "__call_thing")) then
      _temp200 =  _temp191(_self)

    elseif _temp191 then
      _temp200 =  _temp191
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp200 =  _self:var()
      elseif _self.var ~= nil then
        _temp200 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp200 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp200 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp201 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp199 =  set_underresult(_self, _temp200,_temp201)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp199 =  _self:set_underresult(_temp200,_temp201)
      elseif _self.set_underresult ~= nil then
        _temp199 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("set_result") , _temp200,_temp201)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("set_result") , _temp200,_temp201)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp202
        local _t = _type(_temp199)
        if _t == "table" then
          if _rawget(_temp199, "__call_thing") == nil then
            _temp202 = _temp199
          else
                  if _temp199 == nil then
              if _type(_self._temp199) == "function" or (_type(_self._temp199) == "table" and _rawget(_self._temp199, "__call_thing")) then
        _temp202 =  _self:_temp199()
      elseif _self._temp199 ~= nil then
        _temp202 =  _self._temp199

        elseif _self.no_undermethod ~= nil then
          _temp202 =  _self:no_undermethod(string:new("_temp199"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp202 =  _temp199(_self)
      end

          end
        elseif _t == "number" then
          _temp202 = _temp199
        elseif _t == "function" then
                if _temp199 == nil then
              if _type(_self._temp199) == "function" or (_type(_self._temp199) == "table" and _rawget(_self._temp199, "__call_thing")) then
        _temp202 =  _self:_temp199()
      elseif _self._temp199 ~= nil then
        _temp202 =  _self._temp199

        elseif _self.no_undermethod ~= nil then
          _temp202 =  _self:no_undermethod(string:new("_temp199"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp202 =  _temp199(_self)
      end

        elseif _temp199 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp202)
      if _t == "table" then
                      if _type(_temp202.var) == "function" or (_type(_temp202.var) == "table" and _rawget(_temp202.var, "__call_thing")) then
        _temp202 = _temp202:var()
      elseif _temp202.var ~= nil then
        _temp202 = _temp202.var

        elseif _temp202.no_undermethod ~= nil then
          _temp202 =  _temp202:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp202)
      if _n.var ~= nil then
        _temp202 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp202 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp202)
      if _f.var ~= nil then
        _temp202 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp202 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp202 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp202))
      end


local _temp203
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp203 =  _self:my()
      elseif _self.my ~= nil then
        _temp203 =  _self.my

        elseif my ~= nil then
          _temp203 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp203)
      if _t == "table" then
                      if _type(_temp203.env) == "function" or (_type(_temp203.env) == "table" and _rawget(_temp203.env, "__call_thing")) then
        _temp203 = _temp203:env()
      elseif _temp203.env ~= nil then
        _temp203 = _temp203.env

        elseif _temp203.no_undermethod ~= nil then
          _temp203 =  _temp203:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp203)
      if _n.env ~= nil then
        _temp203 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp203 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp203)
      if _f.env ~= nil then
        _temp203 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp203 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp203 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp203))
      end

      local _t = _type(_temp203)
      if _t == "table" then
                      if _type(_temp203.next_undertemp) == "function" or (_type(_temp203.next_undertemp) == "table" and _rawget(_temp203.next_undertemp, "__call_thing")) then
        _temp203 = _temp203:next_undertemp()
      elseif _temp203.next_undertemp ~= nil then
        _temp203 = _temp203.next_undertemp

        elseif _temp203.no_undermethod ~= nil then
          _temp203 =  _temp203:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp203)
      if _n.next_undertemp ~= nil then
        _temp203 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp203 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp203)
      if _f.next_undertemp ~= nil then
        _temp203 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp203 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp203 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp203))
      end


local _temp204
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp204 =  _self:my()
      elseif _self.my ~= nil then
        _temp204 =  _self.my

        elseif my ~= nil then
          _temp204 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp204)
      if _t == "table" then
                      if _type(_temp204.env) == "function" or (_type(_temp204.env) == "table" and _rawget(_temp204.env, "__call_thing")) then
        _temp204 = _temp204:env()
      elseif _temp204.env ~= nil then
        _temp204 = _temp204.env

        elseif _temp204.no_undermethod ~= nil then
          _temp204 =  _temp204:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp204)
      if _n.env ~= nil then
        _temp204 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp204 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp204)
      if _f.env ~= nil then
        _temp204 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp204 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp204 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp204))
      end

      local _t = _type(_temp204)
      if _t == "table" then
                      if _type(_temp204.next_undertemp) == "function" or (_type(_temp204.next_undertemp) == "table" and _rawget(_temp204.next_undertemp, "__call_thing")) then
        _temp204 = _temp204:next_undertemp()
      elseif _temp204.next_undertemp ~= nil then
        _temp204 = _temp204.next_undertemp

        elseif _temp204.no_undermethod ~= nil then
          _temp204 =  _temp204:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp204)
      if _n.next_undertemp ~= nil then
        _temp204 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp204 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp204)
      if _f.next_undertemp ~= nil then
        _temp204 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp204 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp204 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp204))
      end


local _temp205
do
local _temp206 = nil
        local _t = _type(_temp199)
        if _t == "table" then
          if _rawget(_temp199, "__call_thing") == nil then
            _temp206 = _temp199
          else
                  if _temp199 == nil then
              if _type(_self._temp199) == "function" or (_type(_self._temp199) == "table" and _rawget(_self._temp199, "__call_thing")) then
        _temp206 =  _self:_temp199()
      elseif _self._temp199 ~= nil then
        _temp206 =  _self._temp199

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp199"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp206 =  _temp199(_self)
      end

          end
        elseif _t == "number" then
          _temp206 = _temp199
        elseif _t == "function" then
                if _temp199 == nil then
              if _type(_self._temp199) == "function" or (_type(_self._temp199) == "table" and _rawget(_self._temp199, "__call_thing")) then
        _temp206 =  _self:_temp199()
      elseif _self._temp199 ~= nil then
        _temp206 =  _self._temp199

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp199"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp206 =  _temp199(_self)
      end

        elseif _temp199 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp206)
      if _t == "table" then
                      if _type(_temp206.out) == "function" or (_type(_temp206.out) == "table" and _rawget(_temp206.out, "__call_thing")) then
        _temp206 = _temp206:out()
      elseif _temp206.out ~= nil then
        _temp206 = _temp206.out

        elseif _temp206.no_undermethod ~= nil then
          _temp206 =  _temp206:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp206, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp206)
      if _n.out ~= nil then
        _temp206 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp206 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp206, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp206)
      if _f.out ~= nil then
        _temp206 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp206 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp206, "out"))
      end

      elseif _temp206 == nil then
        _error(exception:null_error("_temp206", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp206))
      end


local _temp207 = nil
    if _type(_temp203) == "function" or (_type(_temp203) == "table" and _rawget(_temp203, "__call_thing")) then
      _temp207 =  _temp203(_self)

    elseif _temp203 then
      _temp207 =  _temp203
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp207 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp207 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp208 = nil
    if _type(_temp204) == "function" or (_type(_temp204) == "table" and _rawget(_temp204, "__call_thing")) then
      _temp208 =  _temp204(_self)

    elseif _temp204 then
      _temp208 =  _temp204
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp208 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp208 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp208 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp208 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp205 = string:new("" .. _tostring(_temp206) .. "\ndo\nlocal " .. _tostring(_temp207) .. ";local " .. _tostring(_temp208) .. "\n")
end

local _temp209
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp209 =  my(_self)

    elseif my then
      _temp209 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp209 =  _self:my()
      elseif _self.my ~= nil then
        _temp209 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp209 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp209 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp192)
        if _t == "table" then
          if _rawget(_temp192, "__call_thing") == nil then
            _temp201 = _temp192
          else
                  if _temp192 == nil then
              if _type(_self._temp192) == "function" or (_type(_self._temp192) == "table" and _rawget(_self._temp192, "__call_thing")) then
        _temp201 =  _self:_temp192()
      elseif _self._temp192 ~= nil then
        _temp201 =  _self._temp192

        elseif _self.no_undermethod ~= nil then
          _temp201 =  _self:no_undermethod(string:new("_temp192"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp201 =  _temp192(_self)
      end

          end
        elseif _t == "number" then
          _temp201 = _temp192
        elseif _t == "function" then
                if _temp192 == nil then
              if _type(_self._temp192) == "function" or (_type(_self._temp192) == "table" and _rawget(_self._temp192, "__call_thing")) then
        _temp201 =  _self:_temp192()
      elseif _self._temp192 ~= nil then
        _temp201 =  _self._temp192

        elseif _self.no_undermethod ~= nil then
          _temp201 =  _self:no_undermethod(string:new("_temp192"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp201 =  _temp192(_self)
      end

        elseif _temp192 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.nodes) == "function" or (_type(_temp201.nodes) == "table" and _rawget(_temp201.nodes, "__call_thing")) then
        _temp201 = _temp201:nodes()
      elseif _temp201.nodes ~= nil then
        _temp201 = _temp201.nodes

        elseif _temp201.no_undermethod ~= nil then
          _temp201 =  _temp201:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp201, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.nodes ~= nil then
        _temp201 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp201 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp201, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.nodes ~= nil then
        _temp201 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp201 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp201, "nodes"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end


local _temp223 = function (_self, _temp210)
        if _temp210 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp211
        local _t = _type(_temp209)
        if _t == "table" then
          if _rawget(_temp209, "__call_thing") == nil then
            _temp211 = _temp209
          else
                  if _temp209 == nil then
              if _type(_self._temp209) == "function" or (_type(_self._temp209) == "table" and _rawget(_self._temp209, "__call_thing")) then
        _temp211 =  _self:_temp209()
      elseif _self._temp209 ~= nil then
        _temp211 =  _self._temp209

        elseif _self.no_undermethod ~= nil then
          _temp211 =  _self:no_undermethod(string:new("_temp209"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp211 =  _temp209(_self)
      end

          end
        elseif _t == "number" then
          _temp211 = _temp209
        elseif _t == "function" then
                if _temp209 == nil then
              if _type(_self._temp209) == "function" or (_type(_self._temp209) == "table" and _rawget(_self._temp209, "__call_thing")) then
        _temp211 =  _self:_temp209()
      elseif _self._temp209 ~= nil then
        _temp211 =  _self._temp209

        elseif _self.no_undermethod ~= nil then
          _temp211 =  _self:no_undermethod(string:new("_temp209"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp211 =  _temp209(_self)
      end

        elseif _temp209 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp212 = nil
        local _t = _type(_temp210)
        if _t == "table" then
          if _rawget(_temp210, "__call_thing") == nil then
            _temp212 = _temp210
          else
                  if _temp210 == nil then
              if _type(_self._temp210) == "function" or (_type(_self._temp210) == "table" and _rawget(_self._temp210, "__call_thing")) then
        _temp212 =  _self:_temp210()
      elseif _self._temp210 ~= nil then
        _temp212 =  _self._temp210

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp210"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp212 =  _temp210(_self)
      end

          end
        elseif _t == "number" then
          _temp212 = _temp210
        elseif _t == "function" then
                if _temp210 == nil then
              if _type(_self._temp210) == "function" or (_type(_self._temp210) == "table" and _rawget(_self._temp210, "__call_thing")) then
        _temp212 =  _self:_temp210()
      elseif _self._temp210 ~= nil then
        _temp212 =  _self._temp210

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp210"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp212 =  _temp210(_self)
      end

        elseif _temp210 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.first) == "function" or (_type(_temp212.first) == "table" and _rawget(_temp212.first, "__call_thing")) then
        _temp212 = _temp212:first()
      elseif _temp212.first ~= nil then
        _temp212 = _temp212.first

        elseif _temp212.no_undermethod ~= nil then
          _temp212 =  _temp212:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp212, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.first ~= nil then
        _temp212 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp212 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp212, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.first ~= nil then
        _temp212 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp212 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp212, "first"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("_temp212", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end


local _temp213 = nil
    if _type(_temp203) == "function" or (_type(_temp203) == "table" and _rawget(_temp203, "__call_thing")) then
      _temp213 =  _temp203(_self)

    elseif _temp203 then
      _temp213 =  _temp203
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp213 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp213 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp213 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp213 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp211)
      if _t == "table" then
                      if _type(_temp211.process) == "function" or (_type(_temp211.process) == "table" and _rawget(_temp211.process, "__call_thing")) then
        _temp211 = _temp211:process(_temp212,_temp213)
      elseif _temp211.process ~= nil then
        _temp211 = _temp211.process

        elseif _temp211.no_undermethod ~= nil then
          _temp211 =  _temp211:no_undermethod(string:new("process") , _temp212,_temp213)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp211)
      if _n.process ~= nil then
        _temp211 = _n:process(_temp212,_temp213)
      elseif _n.no_undermethod ~= nil then
        _temp211 =  _n:no_undermethod(string:new("process") , _temp212,_temp213)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp211)
      if _f.process ~= nil then
        _temp211 = _f:process(_temp212,_temp213)
      elseif _f.no_undermethod ~= nil then
        _temp211 =  _f:no_undermethod(string:new("process") , _temp212,_temp213)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp211 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp211))
      end


local _temp214
        local _t = _type(_temp209)
        if _t == "table" then
          if _rawget(_temp209, "__call_thing") == nil then
            _temp214 = _temp209
          else
                  if _temp209 == nil then
              if _type(_self._temp209) == "function" or (_type(_self._temp209) == "table" and _rawget(_self._temp209, "__call_thing")) then
        _temp214 =  _self:_temp209()
      elseif _self._temp209 ~= nil then
        _temp214 =  _self._temp209

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp209"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp214 =  _temp209(_self)
      end

          end
        elseif _t == "number" then
          _temp214 = _temp209
        elseif _t == "function" then
                if _temp209 == nil then
              if _type(_self._temp209) == "function" or (_type(_self._temp209) == "table" and _rawget(_self._temp209, "__call_thing")) then
        _temp214 =  _self:_temp209()
      elseif _self._temp209 ~= nil then
        _temp214 =  _self._temp209

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp209"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp214 =  _temp209(_self)
      end

        elseif _temp209 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp210)
        if _t == "table" then
          if _rawget(_temp210, "__call_thing") == nil then
            _temp213 = _temp210
          else
                  if _temp210 == nil then
              if _type(_self._temp210) == "function" or (_type(_self._temp210) == "table" and _rawget(_self._temp210, "__call_thing")) then
        _temp213 =  _self:_temp210()
      elseif _self._temp210 ~= nil then
        _temp213 =  _self._temp210

        elseif _self.no_undermethod ~= nil then
          _temp213 =  _self:no_undermethod(string:new("_temp210"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp213 =  _temp210(_self)
      end

          end
        elseif _t == "number" then
          _temp213 = _temp210
        elseif _t == "function" then
                if _temp210 == nil then
              if _type(_self._temp210) == "function" or (_type(_self._temp210) == "table" and _rawget(_self._temp210, "__call_thing")) then
        _temp213 =  _self:_temp210()
      elseif _self._temp210 ~= nil then
        _temp213 =  _self._temp210

        elseif _self.no_undermethod ~= nil then
          _temp213 =  _self:no_undermethod(string:new("_temp210"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp213 =  _temp210(_self)
      end

        elseif _temp210 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp213)
      if _t == "table" then
                      if _type(_temp213.last) == "function" or (_type(_temp213.last) == "table" and _rawget(_temp213.last, "__call_thing")) then
        _temp213 = _temp213:last()
      elseif _temp213.last ~= nil then
        _temp213 = _temp213.last

        elseif _temp213.no_undermethod ~= nil then
          _temp213 =  _temp213:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp213, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp213)
      if _n.last ~= nil then
        _temp213 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp213 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp213, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp213)
      if _f.last ~= nil then
        _temp213 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp213 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp213, "last"))
      end

      elseif _temp213 == nil then
        _error(exception:null_error("_temp213", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp213))
      end


    if _type(_temp204) == "function" or (_type(_temp204) == "table" and _rawget(_temp204, "__call_thing")) then
      _temp212 =  _temp204(_self)

    elseif _temp204 then
      _temp212 =  _temp204
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp212 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp212 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp212 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp212 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp214)
      if _t == "table" then
                      if _type(_temp214.process) == "function" or (_type(_temp214.process) == "table" and _rawget(_temp214.process, "__call_thing")) then
        _temp214 = _temp214:process(_temp213,_temp212)
      elseif _temp214.process ~= nil then
        _temp214 = _temp214.process

        elseif _temp214.no_undermethod ~= nil then
          _temp214 =  _temp214:no_undermethod(string:new("process") , _temp213,_temp212)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp214)
      if _n.process ~= nil then
        _temp214 = _n:process(_temp213,_temp212)
      elseif _n.no_undermethod ~= nil then
        _temp214 =  _n:no_undermethod(string:new("process") , _temp213,_temp212)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp214)
      if _f.process ~= nil then
        _temp214 = _f:process(_temp213,_temp212)
      elseif _f.no_undermethod ~= nil then
        _temp214 =  _f:no_undermethod(string:new("process") , _temp213,_temp212)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp214 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp214))
      end


local _temp212 
do
local _temp215 = nil
_temp215 =  _temp205

local _temp216 = nil
do
local _temp217 = nil
        local _t = _type(_temp211)
        if _t == "table" then
          if _rawget(_temp211, "__call_thing") == nil then
            _temp217 = _temp211
          else
                  if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp217 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp217 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp217 =  _temp211(_self)
      end

          end
        elseif _t == "number" then
          _temp217 = _temp211
        elseif _t == "function" then
                if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp217 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp217 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp217 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp217 =  _temp211(_self)
      end

        elseif _temp211 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.out) == "function" or (_type(_temp217.out) == "table" and _rawget(_temp217.out, "__call_thing")) then
        _temp217 = _temp217:out()
      elseif _temp217.out ~= nil then
        _temp217 = _temp217.out

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp217, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.out ~= nil then
        _temp217 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp217, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.out ~= nil then
        _temp217 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp217, "out"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end


local _temp218 = nil
        local _t = _type(_temp214)
        if _t == "table" then
          if _rawget(_temp214, "__call_thing") == nil then
            _temp218 = _temp214
          else
                  if _temp214 == nil then
              if _type(_self._temp214) == "function" or (_type(_self._temp214) == "table" and _rawget(_self._temp214, "__call_thing")) then
        _temp218 =  _self:_temp214()
      elseif _self._temp214 ~= nil then
        _temp218 =  _self._temp214

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp214"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp218 =  _temp214(_self)
      end

          end
        elseif _t == "number" then
          _temp218 = _temp214
        elseif _t == "function" then
                if _temp214 == nil then
              if _type(_self._temp214) == "function" or (_type(_self._temp214) == "table" and _rawget(_self._temp214, "__call_thing")) then
        _temp218 =  _self:_temp214()
      elseif _self._temp214 ~= nil then
        _temp218 =  _self._temp214

        elseif _self.no_undermethod ~= nil then
          _temp218 =  _self:no_undermethod(string:new("_temp214"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp218 =  _temp214(_self)
      end

        elseif _temp214 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp218)
      if _t == "table" then
                      if _type(_temp218.out) == "function" or (_type(_temp218.out) == "table" and _rawget(_temp218.out, "__call_thing")) then
        _temp218 = _temp218:out()
      elseif _temp218.out ~= nil then
        _temp218 = _temp218.out

        elseif _temp218.no_undermethod ~= nil then
          _temp218 =  _temp218:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp218, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp218)
      if _n.out ~= nil then
        _temp218 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp218 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp218, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp218)
      if _f.out ~= nil then
        _temp218 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp218 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp218, "out"))
      end

      elseif _temp218 == nil then
        _error(exception:null_error("_temp218", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp218))
      end


local _temp219 = nil
    if _type(_temp202) == "function" or (_type(_temp202) == "table" and _rawget(_temp202, "__call_thing")) then
      _temp219 =  _temp202(_self)

    elseif _temp202 then
      _temp219 =  _temp202
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp219 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp219 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp220 = nil
        local _t = _type(_temp211)
        if _t == "table" then
          if _rawget(_temp211, "__call_thing") == nil then
            _temp220 = _temp211
          else
                  if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp220 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp220 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp220 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp220 =  _temp211(_self)
      end

          end
        elseif _t == "number" then
          _temp220 = _temp211
        elseif _t == "function" then
                if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp220 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp220 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp220 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp220 =  _temp211(_self)
      end

        elseif _temp211 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.var) == "function" or (_type(_temp220.var) == "table" and _rawget(_temp220.var, "__call_thing")) then
        _temp220 = _temp220:var()
      elseif _temp220.var ~= nil then
        _temp220 = _temp220.var

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp220, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.var ~= nil then
        _temp220 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp220, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.var ~= nil then
        _temp220 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp220, "var"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("_temp220", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end


local _temp221 = nil
        local _t = _type(_temp214)
        if _t == "table" then
          if _rawget(_temp214, "__call_thing") == nil then
            _temp221 = _temp214
          else
                  if _temp214 == nil then
              if _type(_self._temp214) == "function" or (_type(_self._temp214) == "table" and _rawget(_self._temp214, "__call_thing")) then
        _temp221 =  _self:_temp214()
      elseif _self._temp214 ~= nil then
        _temp221 =  _self._temp214

        elseif _self.no_undermethod ~= nil then
          _temp221 =  _self:no_undermethod(string:new("_temp214"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp221 =  _temp214(_self)
      end

          end
        elseif _t == "number" then
          _temp221 = _temp214
        elseif _t == "function" then
                if _temp214 == nil then
              if _type(_self._temp214) == "function" or (_type(_self._temp214) == "table" and _rawget(_self._temp214, "__call_thing")) then
        _temp221 =  _self:_temp214()
      elseif _self._temp214 ~= nil then
        _temp221 =  _self._temp214

        elseif _self.no_undermethod ~= nil then
          _temp221 =  _self:no_undermethod(string:new("_temp214"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp221 =  _temp214(_self)
      end

        elseif _temp214 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp221)
      if _t == "table" then
                      if _type(_temp221.var) == "function" or (_type(_temp221.var) == "table" and _rawget(_temp221.var, "__call_thing")) then
        _temp221 = _temp221:var()
      elseif _temp221.var ~= nil then
        _temp221 = _temp221.var

        elseif _temp221.no_undermethod ~= nil then
          _temp221 =  _temp221:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp221, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp221)
      if _n.var ~= nil then
        _temp221 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp221 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp221, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp221)
      if _f.var ~= nil then
        _temp221 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp221 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp221, "var"))
      end

      elseif _temp221 == nil then
        _error(exception:null_error("_temp221", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp221))
      end


_temp216 = string:new("" .. _tostring(_temp217) .. "\n" .. _tostring(_temp218) .. "\n" .. _tostring(_temp219) .. "[" .. _tostring(_temp220) .. "] = " .. _tostring(_temp221) .. "\n")
end
local _temp222
              if _type(_temp215._less_less) == "function" or (_type(_temp215._less_less) == "table" and _rawget(_temp215._less_less, "__call_thing")) then
        _temp222 = _temp215:_less_less(_temp216)
      elseif _temp215._less_less ~= nil then
        _temp222 = _temp215._less_less

        elseif _temp215.no_undermethod ~= nil then
          _temp222 =  _temp215:no_undermethod(string:new("<<") , _temp216)
        else
          _error(exception:method_error(_temp215, "<<"))
        end

_temp212 = _temp222 
end

return _temp212
end

      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.each) == "function" or (_type(_temp201.each) == "table" and _rawget(_temp201.each, "__call_thing")) then
        _dummy_ = _temp201:each(_temp223)
      elseif _temp201.each ~= nil then
        _dummy_ = _temp201.each

        elseif _temp201.no_undermethod ~= nil then
          _dummy_ =  _temp201:no_undermethod(string:new("each") , _temp223)
        else
          _error(exception:method_error(_temp201, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp223)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp223)
      else
        _error(exception:method_error(_temp201, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp223)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp223)
      else
        _error(exception:method_error(_temp201, "each"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp223 =  _self:my()
      elseif _self.my ~= nil then
        _temp223 =  _self.my

        elseif my ~= nil then
          _temp223 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp223)
      if _t == "table" then
                      if _type(_temp223.env) == "function" or (_type(_temp223.env) == "table" and _rawget(_temp223.env, "__call_thing")) then
        _temp223 = _temp223:env()
      elseif _temp223.env ~= nil then
        _temp223 = _temp223.env

        elseif _temp223.no_undermethod ~= nil then
          _temp223 =  _temp223:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp223, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp223)
      if _n.env ~= nil then
        _temp223 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp223 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp223, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp223)
      if _f.env ~= nil then
        _temp223 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp223 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp223, "env"))
      end

      elseif _temp223 == nil then
        _error(exception:null_error("_temp223", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp223))
      end

    if _type(_temp203) == "function" or (_type(_temp203) == "table" and _rawget(_temp203, "__call_thing")) then
      _temp201 =  _temp203(_self)

    elseif _temp203 then
      _temp201 =  _temp203
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp201 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp201 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp201 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp201 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp223)
      if _t == "table" then
                      if _type(_temp223.unset) == "function" or (_type(_temp223.unset) == "table" and _rawget(_temp223.unset, "__call_thing")) then
        _dummy_ = _temp223:unset(_temp201)
      elseif _temp223.unset ~= nil then
        _dummy_ = _temp223.unset

        elseif _temp223.no_undermethod ~= nil then
          _dummy_ =  _temp223:no_undermethod(string:new("unset") , _temp201)
        else
          _error(exception:method_error(_temp223, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp223)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp201)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp201)
      else
        _error(exception:method_error(_temp223, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp223)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp201)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp201)
      else
        _error(exception:method_error(_temp223, "unset"))
      end

      elseif _temp223 == nil then
        _error(exception:null_error("_temp223", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp223))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp201 =  _self:my()
      elseif _self.my ~= nil then
        _temp201 =  _self.my

        elseif my ~= nil then
          _temp201 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.env) == "function" or (_type(_temp201.env) == "table" and _rawget(_temp201.env, "__call_thing")) then
        _temp201 = _temp201:env()
      elseif _temp201.env ~= nil then
        _temp201 = _temp201.env

        elseif _temp201.no_undermethod ~= nil then
          _temp201 =  _temp201:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp201, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.env ~= nil then
        _temp201 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp201 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp201, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.env ~= nil then
        _temp201 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp201 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp201, "env"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end

    if _type(_temp204) == "function" or (_type(_temp204) == "table" and _rawget(_temp204, "__call_thing")) then
      _temp223 =  _temp204(_self)

    elseif _temp204 then
      _temp223 =  _temp204
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp223 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp223 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.unset) == "function" or (_type(_temp201.unset) == "table" and _rawget(_temp201.unset, "__call_thing")) then
        _dummy_ = _temp201:unset(_temp223)
      elseif _temp201.unset ~= nil then
        _dummy_ = _temp201.unset

        elseif _temp201.no_undermethod ~= nil then
          _dummy_ =  _temp201:no_undermethod(string:new("unset") , _temp223)
        else
          _error(exception:method_error(_temp201, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp223)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp223)
      else
        _error(exception:method_error(_temp201, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp223)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp223)
      else
        _error(exception:method_error(_temp201, "unset"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end

do
local _temp224 = nil
_temp224 =  _temp205

local _temp225 = nil
do
local _temp226 = nil
    if _type(_temp202) == "function" or (_type(_temp202) == "table" and _rawget(_temp202, "__call_thing")) then
      _temp226 =  _temp202(_self)

    elseif _temp202 then
      _temp226 =  _temp202
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp226 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp226 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp226 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp226 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp227 = nil
    if _type(_temp202) == "function" or (_type(_temp202) == "table" and _rawget(_temp202, "__call_thing")) then
      _temp227 =  _temp202(_self)

    elseif _temp202 then
      _temp227 =  _temp202
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp227 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp227 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp227 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp227 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp225 = string:new("\n" .. _tostring(_temp226) .. " = hash:new(" .. _tostring(_temp227) .. ")\nend\n")
end
local _temp228
              if _type(_temp224._less_less) == "function" or (_type(_temp224._less_less) == "table" and _rawget(_temp224._less_less, "__call_thing")) then
        _temp228 = _temp224:_less_less(_temp225)
      elseif _temp224._less_less ~= nil then
        _temp228 = _temp224._less_less

        elseif _temp224.no_undermethod ~= nil then
          _temp228 =  _temp224:no_undermethod(string:new("<<") , _temp225)
        else
          _error(exception:method_error(_temp224, "<<"))
        end

_dummy_ = _temp228 
end

    if _type(_temp202) == "function" or (_type(_temp202) == "table" and _rawget(_temp202, "__call_thing")) then
      _temp223 =  _temp202(_self)

    elseif _temp202 then
      _temp223 =  _temp202
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp223 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp223 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp201 =  _temp205

_temp200 = string:new("hash")

local _temp229 = {}
_temp229[string:new("type")] = _temp200
_temp229 = hash:new(_temp229)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp223,_temp201,_temp229)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp223,_temp201,_temp229)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp223,_temp201,_temp229)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp223,_temp201,_temp229)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp193,_temp198,_temp230)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp193,_temp198,_temp230)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp193,_temp198,_temp230)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp193,_temp198,_temp230)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp190)
      if _t == "table" then
                      if _type(_temp190.walk) == "function" or (_type(_temp190.walk) == "table" and _rawget(_temp190.walk, "__call_thing")) then
        _dummy_ = _temp190:walk(_temp4,_temp232)
      elseif _temp190.walk ~= nil then
        _dummy_ = _temp190.walk

        elseif _temp190.no_undermethod ~= nil then
          _dummy_ =  _temp190:no_undermethod(string:new("walk") , _temp4,_temp232)
        else
          _error(exception:method_error(_temp190, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp190)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp232)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp232)
      else
        _error(exception:method_error(_temp190, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp190)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp232)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp232)
      else
        _error(exception:method_error(_temp190, "walk"))
      end

      elseif _temp190 == nil then
        _error(exception:null_error("_temp190", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp190))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp232 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp232 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp232 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp232 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp232 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp232 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp232 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp232 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp232 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp232 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp249 = function (_self, _temp234,_temp233)
        if _temp234 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp233 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp233 =  null(_self)

    elseif null then
      _temp233 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp233 =  _self:null()
      elseif _self.null ~= nil then
        _temp233 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp233 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp233 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp235 = nil
        local _t = _type(_temp234)
        if _t == "table" then
          if _rawget(_temp234, "__call_thing") == nil then
            _temp235 = _temp234
          else
                  if _temp234 == nil then
              if _type(_self._temp234) == "function" or (_type(_self._temp234) == "table" and _rawget(_self._temp234, "__call_thing")) then
        _temp235 =  _self:_temp234()
      elseif _self._temp234 ~= nil then
        _temp235 =  _self._temp234

        elseif _self.no_undermethod ~= nil then
          _temp235 =  _self:no_undermethod(string:new("_temp234"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp235 =  _temp234(_self)
      end

          end
        elseif _t == "number" then
          _temp235 = _temp234
        elseif _t == "function" then
                if _temp234 == nil then
              if _type(_self._temp234) == "function" or (_type(_self._temp234) == "table" and _rawget(_self._temp234, "__call_thing")) then
        _temp235 =  _self:_temp234()
      elseif _self._temp234 ~= nil then
        _temp235 =  _self._temp234

        elseif _self.no_undermethod ~= nil then
          _temp235 =  _self:no_undermethod(string:new("_temp234"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp235 =  _temp234(_self)
      end

        elseif _temp234 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp235)
      if _t == "table" then
                      if _type(_temp235.nodes) == "function" or (_type(_temp235.nodes) == "table" and _rawget(_temp235.nodes, "__call_thing")) then
        _temp235 = _temp235:nodes()
      elseif _temp235.nodes ~= nil then
        _temp235 = _temp235.nodes

        elseif _temp235.no_undermethod ~= nil then
          _temp235 =  _temp235:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp235, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp235)
      if _n.nodes ~= nil then
        _temp235 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp235 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp235, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp235)
      if _f.nodes ~= nil then
        _temp235 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp235 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp235, "nodes"))
      end

      elseif _temp235 == nil then
        _error(exception:null_error("_temp235", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp235))
      end

      local _t = _type(_temp235)
      if _t == "table" then
                      if _type(_temp235.empty_question) == "function" or (_type(_temp235.empty_question) == "table" and _rawget(_temp235.empty_question, "__call_thing")) then
        _temp235 = _temp235:empty_question()
      elseif _temp235.empty_question ~= nil then
        _temp235 = _temp235.empty_question

        elseif _temp235.no_undermethod ~= nil then
          _temp235 =  _temp235:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp235, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp235)
      if _n.empty_question ~= nil then
        _temp235 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp235 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp235, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp235)
      if _f.empty_question ~= nil then
        _temp235 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp235 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp235, "empty?"))
      end

      elseif _temp235 == nil then
        _error(exception:null_error("_temp235", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp235))
      end



local _temp240 = function (_self)

local _temp236 = nil
    if _type(_temp233) == "function" or (_type(_temp233) == "table" and _rawget(_temp233, "__call_thing")) then
      _temp236 =  _temp233(_self)

    elseif _temp233 then
      _temp236 =  _temp233
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp236 =  _self:var()
      elseif _self.var ~= nil then
        _temp236 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp236 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp236 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp237 = string:new("string:new(\"\")")

local _temp238 = string:new("string")

local _temp239 = {}
_temp239[string:new("type")] = _temp238
_temp239 = hash:new(_temp239)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp236,_temp237,_temp239)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp236,_temp237,_temp239)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp236,_temp237,_temp239)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp236,_temp237,_temp239)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp247 = function (_self)

local _temp241 = nil
    if _type(_temp233) == "function" or (_type(_temp233) == "table" and _rawget(_temp233, "__call_thing")) then
      _temp241 =  _temp233(_self)

    elseif _temp233 then
      _temp241 =  _temp233
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp241 =  _self:var()
      elseif _self.var ~= nil then
        _temp241 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp241 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp241 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp242 = nil
do
local _temp243 = nil
local _temp244 = nil
        local _t = _type(_temp234)
        if _t == "table" then
          if _rawget(_temp234, "__call_thing") == nil then
            _temp244 = _temp234
          else
                  if _temp234 == nil then
              if _type(_self._temp234) == "function" or (_type(_self._temp234) == "table" and _rawget(_self._temp234, "__call_thing")) then
        _temp244 =  _self:_temp234()
      elseif _self._temp234 ~= nil then
        _temp244 =  _self._temp234

        elseif _self.no_undermethod ~= nil then
          _temp244 =  _self:no_undermethod(string:new("_temp234"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp244 =  _temp234(_self)
      end

          end
        elseif _t == "number" then
          _temp244 = _temp234
        elseif _t == "function" then
                if _temp234 == nil then
              if _type(_self._temp234) == "function" or (_type(_self._temp234) == "table" and _rawget(_self._temp234, "__call_thing")) then
        _temp244 =  _self:_temp234()
      elseif _self._temp234 ~= nil then
        _temp244 =  _self._temp234

        elseif _self.no_undermethod ~= nil then
          _temp244 =  _self:no_undermethod(string:new("_temp234"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp244 =  _temp234(_self)
      end

        elseif _temp234 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp244)
      if _t == "table" then
                      if _type(_temp244.value) == "function" or (_type(_temp244.value) == "table" and _rawget(_temp244.value, "__call_thing")) then
        _temp244 = _temp244:value()
      elseif _temp244.value ~= nil then
        _temp244 = _temp244.value

        elseif _temp244.no_undermethod ~= nil then
          _temp244 =  _temp244:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp244, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp244)
      if _n.value ~= nil then
        _temp244 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp244 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp244, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp244)
      if _f.value ~= nil then
        _temp244 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp244 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp244, "value"))
      end

      elseif _temp244 == nil then
        _error(exception:null_error("_temp244", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp244))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp243 =  escape_understring(_self, _temp244)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp243 =  _self:escape_understring(_temp244)
      elseif _self.escape_understring ~= nil then
        _temp243 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp243 =  _self:no_undermethod(string:new("escape_string") , _temp244)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp243 =  no_undermethod(_self, string:new("escape_string") , _temp244)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp242 = string:new("string:new(\"" .. _tostring(_temp243) .. "\")")
end

local _temp245 = string:new("string")

local _temp246 = {}
_temp246[string:new("type")] = _temp245
_temp246 = hash:new(_temp246)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp241,_temp242,_temp246)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp241,_temp242,_temp246)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp241,_temp242,_temp246)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp241,_temp242,_temp246)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp235,_temp240,_temp247)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp235,_temp240,_temp247)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp235,_temp240,_temp247)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp235,_temp240,_temp247)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp232)
      if _t == "table" then
                      if _type(_temp232.walk) == "function" or (_type(_temp232.walk) == "table" and _rawget(_temp232.walk, "__call_thing")) then
        _dummy_ = _temp232:walk(_temp4,_temp249)
      elseif _temp232.walk ~= nil then
        _dummy_ = _temp232.walk

        elseif _temp232.no_undermethod ~= nil then
          _dummy_ =  _temp232:no_undermethod(string:new("walk") , _temp4,_temp249)
        else
          _error(exception:method_error(_temp232, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp232)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp249)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp249)
      else
        _error(exception:method_error(_temp232, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp232)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp249)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp249)
      else
        _error(exception:method_error(_temp232, "walk"))
      end

      elseif _temp232 == nil then
        _error(exception:null_error("_temp232", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp232))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp249 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp249 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp249 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp249 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp249 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp249 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp249 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp249 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp249 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp249 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp259 = function (_self, _temp251,_temp250)
        if _temp251 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp250 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp250 =  null(_self)

    elseif null then
      _temp250 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp250 =  _self:null()
      elseif _self.null ~= nil then
        _temp250 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp250 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp250 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp252 = nil
    if _type(_temp250) == "function" or (_type(_temp250) == "table" and _rawget(_temp250, "__call_thing")) then
      _temp252 =  _temp250(_self)

    elseif _temp250 then
      _temp252 =  _temp250
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp252 =  _self:var()
      elseif _self.var ~= nil then
        _temp252 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp252 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp252 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp253 = nil
do
local _temp254 = nil
        local _t = _type(_temp251)
        if _t == "table" then
          if _rawget(_temp251, "__call_thing") == nil then
            _temp254 = _temp251
          else
                  if _temp251 == nil then
              if _type(_self._temp251) == "function" or (_type(_self._temp251) == "table" and _rawget(_self._temp251, "__call_thing")) then
        _temp254 =  _self:_temp251()
      elseif _self._temp251 ~= nil then
        _temp254 =  _self._temp251

        elseif _self.no_undermethod ~= nil then
          _temp254 =  _self:no_undermethod(string:new("_temp251"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp254 =  _temp251(_self)
      end

          end
        elseif _t == "number" then
          _temp254 = _temp251
        elseif _t == "function" then
                if _temp251 == nil then
              if _type(_self._temp251) == "function" or (_type(_self._temp251) == "table" and _rawget(_self._temp251, "__call_thing")) then
        _temp254 =  _self:_temp251()
      elseif _self._temp251 ~= nil then
        _temp254 =  _self._temp251

        elseif _self.no_undermethod ~= nil then
          _temp254 =  _self:no_undermethod(string:new("_temp251"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp254 =  _temp251(_self)
      end

        elseif _temp251 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp254)
      if _t == "table" then
                      if _type(_temp254.value) == "function" or (_type(_temp254.value) == "table" and _rawget(_temp254.value, "__call_thing")) then
        _temp254 = _temp254:value()
      elseif _temp254.value ~= nil then
        _temp254 = _temp254.value

        elseif _temp254.no_undermethod ~= nil then
          _temp254 =  _temp254:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp254, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp254)
      if _n.value ~= nil then
        _temp254 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp254 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp254, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp254)
      if _f.value ~= nil then
        _temp254 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp254 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp254, "value"))
      end

      elseif _temp254 == nil then
        _error(exception:null_error("_temp254", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp254))
      end

local _temp255 = regex:new("\\n")

local _temp256 = string:new("\\n")

      local _t = _type(_temp254)
      if _t == "table" then
                      if _type(_temp254.sub) == "function" or (_type(_temp254.sub) == "table" and _rawget(_temp254.sub, "__call_thing")) then
        _temp254 = _temp254:sub(_temp255,_temp256)
      elseif _temp254.sub ~= nil then
        _temp254 = _temp254.sub

        elseif _temp254.no_undermethod ~= nil then
          _temp254 =  _temp254:no_undermethod(string:new("sub") , _temp255,_temp256)
        else
          _error(exception:method_error(_temp254, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp254)
      if _n.sub ~= nil then
        _temp254 = _n:sub(_temp255,_temp256)
      elseif _n.no_undermethod ~= nil then
        _temp254 =  _n:no_undermethod(string:new("sub") , _temp255,_temp256)
      else
        _error(exception:method_error(_temp254, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp254)
      if _f.sub ~= nil then
        _temp254 = _f:sub(_temp255,_temp256)
      elseif _f.no_undermethod ~= nil then
        _temp254 =  _f:no_undermethod(string:new("sub") , _temp255,_temp256)
      else
        _error(exception:method_error(_temp254, "sub"))
      end

      elseif _temp254 == nil then
        _error(exception:null_error("_temp254", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp254))
      end


_temp253 = string:new("string:new('" .. _tostring(_temp254) .. "')")
end

local _temp257 = string:new("string")

local _temp258 = {}
_temp258[string:new("type")] = _temp257
_temp258 = hash:new(_temp258)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp252,_temp253,_temp258)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp252,_temp253,_temp258)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp252,_temp253,_temp258)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp252,_temp253,_temp258)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp249)
      if _t == "table" then
                      if _type(_temp249.walk) == "function" or (_type(_temp249.walk) == "table" and _rawget(_temp249.walk, "__call_thing")) then
        _dummy_ = _temp249:walk(_temp4,_temp259)
      elseif _temp249.walk ~= nil then
        _dummy_ = _temp249.walk

        elseif _temp249.no_undermethod ~= nil then
          _dummy_ =  _temp249:no_undermethod(string:new("walk") , _temp4,_temp259)
        else
          _error(exception:method_error(_temp249, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp249)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp259)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp259)
      else
        _error(exception:method_error(_temp249, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp249)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp259)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp259)
      else
        _error(exception:method_error(_temp249, "walk"))
      end

      elseif _temp249 == nil then
        _error(exception:null_error("_temp249", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp249))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp259 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp259 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp259 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp259 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp259 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp259 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp259 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp259 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp259 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp259 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp266 = function (_self, _temp261,_temp260)
        if _temp261 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp260 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp260 =  null(_self)

    elseif null then
      _temp260 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp260 =  _self:null()
      elseif _self.null ~= nil then
        _temp260 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp260 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp260 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp262
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp262 =  my(_self)

    elseif my then
      _temp262 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp262 =  _self:my()
      elseif _self.my ~= nil then
        _temp262 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp262 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp262 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp263 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp263 =  _self:my()
      elseif _self.my ~= nil then
        _temp263 =  _self.my

        elseif my ~= nil then
          _temp263 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp263)
      if _t == "table" then
                      if _type(_temp263.env) == "function" or (_type(_temp263.env) == "table" and _rawget(_temp263.env, "__call_thing")) then
        _temp263 = _temp263:env()
      elseif _temp263.env ~= nil then
        _temp263 = _temp263.env

        elseif _temp263.no_undermethod ~= nil then
          _temp263 =  _temp263:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp263, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp263)
      if _n.env ~= nil then
        _temp263 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp263 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp263, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp263)
      if _f.env ~= nil then
        _temp263 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp263 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp263, "env"))
      end

      elseif _temp263 == nil then
        _error(exception:null_error("_temp263", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp263))
      end

      local _t = _type(_temp263)
      if _t == "table" then
                      if _type(_temp263.new_underscope) == "function" or (_type(_temp263.new_underscope) == "table" and _rawget(_temp263.new_underscope, "__call_thing")) then
        _dummy_ = _temp263:new_underscope()
      elseif _temp263.new_underscope ~= nil then
        _dummy_ = _temp263.new_underscope

        elseif _temp263.no_undermethod ~= nil then
          _dummy_ =  _temp263:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp263, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp263)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp263, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp263)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp263, "new_scope"))
      end

      elseif _temp263 == nil then
        _error(exception:null_error("_temp263", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp263))
      end

local _temp264
    if _type(_temp261) == "function" or (_type(_temp261) == "table" and _rawget(_temp261, "__call_thing")) then
      _temp263 =  _temp261(_self)

    elseif _temp261 then
      _temp263 =  _temp261
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp263 =  _self:node()
      elseif _self.node ~= nil then
        _temp263 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp263 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp263 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp264 =  do_underargs(_self, _temp263)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp264 =  _self:do_underargs(_temp263)
      elseif _self.do_underargs ~= nil then
        _temp264 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp264 =  _self:no_undermethod(string:new("do_args") , _temp263)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp264 =  no_undermethod(_self, string:new("do_args") , _temp263)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp265
    if _type(_temp260) == "function" or (_type(_temp260) == "table" and _rawget(_temp260, "__call_thing")) then
      _temp263 =  _temp260(_self)

    elseif _temp260 then
      _temp263 =  _temp260
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp263 =  _self:var()
      elseif _self.var ~= nil then
        _temp263 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp263 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp263 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp266 = nil
do
local _temp267
do
    if _type(_temp264) == "function" or (_type(_temp264) == "table" and _rawget(_temp264, "__call_thing")) then
      _temp267 =  _temp264(_self)

    elseif _temp264 then
      _temp267 =  _temp264
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp267 =  _self:args()
      elseif _self.args ~= nil then
        _temp267 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp267 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp267 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp268 = string:new("arg_list")


_temp267 = _temp267:get(_temp268)
end

_temp266 = string:new("function(" .. _tostring(_temp267) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp265 =  set_underresult(_self, _temp263,_temp266)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp265 =  _self:set_underresult(_temp263,_temp266)
      elseif _self.set_underresult ~= nil then
        _temp265 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp265 =  _self:no_undermethod(string:new("set_result") , _temp263,_temp266)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp265 =  no_undermethod(_self, string:new("set_result") , _temp263,_temp266)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp269 = nil
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp269 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp269 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp269 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp269 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp269 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp269 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp269 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp269 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp270 = nil
      local _t = _type(_temp269)
      if _t == "table" then
                      if _type(_temp269.out) == "function" or (_type(_temp269.out) == "table" and _rawget(_temp269.out, "__call_thing")) then
        _temp270 = _temp269:out()
      elseif _temp269.out ~= nil then
        _temp270 = _temp269.out

        elseif _temp269.no_undermethod ~= nil then
          _temp270 =  _temp269:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp269, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp269)
      if _n.out ~= nil then
        _temp270 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp269, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp269)
      if _f.out ~= nil then
        _temp270 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp269, "out"))
      end

      elseif _temp269 == nil then
        _error(exception:null_error("_temp269", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp269))
      end

local _temp271
do
    if _type(_temp264) == "function" or (_type(_temp264) == "table" and _rawget(_temp264, "__call_thing")) then
      _temp271 =  _temp264(_self)

    elseif _temp264 then
      _temp271 =  _temp264
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp271 =  _self:args()
      elseif _self.args ~= nil then
        _temp271 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp271 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp271 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp272 = string:new("out")


_temp271 = _temp271:get(_temp272)
end
local _temp273
      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270._less_less) == "function" or (_type(_temp270._less_less) == "table" and _rawget(_temp270._less_less, "__call_thing")) then
        _temp273 = _temp270:_less_less(_temp271)
      elseif _temp270._less_less ~= nil then
        _temp273 = _temp270._less_less

        elseif _temp270.no_undermethod ~= nil then
          _temp273 =  _temp270:no_undermethod(string:new("<<") , _temp271)
        else
          _error(exception:method_error(_temp270, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n._less_less ~= nil then
        _temp273 = _n:_less_less(_temp271)
      elseif _n.no_undermethod ~= nil then
        _temp273 =  _n:no_undermethod(string:new("<<") , _temp271)
      else
        _error(exception:method_error(_temp270, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f._less_less ~= nil then
        _temp273 = _f:_less_less(_temp271)
      elseif _f.no_undermethod ~= nil then
        _temp273 =  _f:no_undermethod(string:new("<<") , _temp271)
      else
        _error(exception:method_error(_temp270, "<<"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("_temp270", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end

_dummy_ = _temp273 
end

local _temp274
        local _t = _type(_temp261)
        if _t == "table" then
          if _rawget(_temp261, "__call_thing") == nil then
            _temp274 = _temp261
          else
                  if _temp261 == nil then
              if _type(_self._temp261) == "function" or (_type(_self._temp261) == "table" and _rawget(_self._temp261, "__call_thing")) then
        _temp274 =  _self:_temp261()
      elseif _self._temp261 ~= nil then
        _temp274 =  _self._temp261

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp261"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp274 =  _temp261(_self)
      end

          end
        elseif _t == "number" then
          _temp274 = _temp261
        elseif _t == "function" then
                if _temp261 == nil then
              if _type(_self._temp261) == "function" or (_type(_self._temp261) == "table" and _rawget(_self._temp261, "__call_thing")) then
        _temp274 =  _self:_temp261()
      elseif _self._temp261 ~= nil then
        _temp274 =  _self._temp261

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp261"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp274 =  _temp261(_self)
      end

        elseif _temp261 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp274)
      if _t == "table" then
                      if _type(_temp274.body) == "function" or (_type(_temp274.body) == "table" and _rawget(_temp274.body, "__call_thing")) then
        _temp274 = _temp274:body()
      elseif _temp274.body ~= nil then
        _temp274 = _temp274.body

        elseif _temp274.no_undermethod ~= nil then
          _temp274 =  _temp274:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp274)
      if _n.body ~= nil then
        _temp274 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp274 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp274)
      if _f.body ~= nil then
        _temp274 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp274 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp274 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp274))
      end

      local _t = _type(_temp274)
      if _t == "table" then
                      if _type(_temp274.copy) == "function" or (_type(_temp274.copy) == "table" and _rawget(_temp274.copy, "__call_thing")) then
        _temp274 = _temp274:copy()
      elseif _temp274.copy ~= nil then
        _temp274 = _temp274.copy

        elseif _temp274.no_undermethod ~= nil then
          _temp274 =  _temp274:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp274)
      if _n.copy ~= nil then
        _temp274 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp274 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp274)
      if _f.copy ~= nil then
        _temp274 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp274 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp274 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp274))
      end


local _temp275
        local _t = _type(_temp274)
        if _t == "table" then
          if _rawget(_temp274, "__call_thing") == nil then
            _temp275 = _temp274
          else
                  if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp275 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp275 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp275 =  _temp274(_self)
      end

          end
        elseif _t == "number" then
          _temp275 = _temp274
        elseif _t == "function" then
                if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp275 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp275 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp275 =  _temp274(_self)
      end

        elseif _temp274 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp275)
      if _t == "table" then
                      if _type(_temp275.pop) == "function" or (_type(_temp275.pop) == "table" and _rawget(_temp275.pop, "__call_thing")) then
        _temp275 = _temp275:pop()
      elseif _temp275.pop ~= nil then
        _temp275 = _temp275.pop

        elseif _temp275.no_undermethod ~= nil then
          _temp275 =  _temp275:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp275)
      if _n.pop ~= nil then
        _temp275 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp275 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp275)
      if _f.pop ~= nil then
        _temp275 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp275 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp275 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp275))
      end


local _temp276
        local _t = _type(_temp274)
        if _t == "table" then
          if _rawget(_temp274, "__call_thing") == nil then
            _temp276 = _temp274
          else
                  if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp276 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp276 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp276 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp276 =  _temp274(_self)
      end

          end
        elseif _t == "number" then
          _temp276 = _temp274
        elseif _t == "function" then
                if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp276 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp276 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp276 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp276 =  _temp274(_self)
      end

        elseif _temp274 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp279 = function (_self, _temp277)
        if _temp277 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp278 = nil
        local _t = _type(_temp262)
        if _t == "table" then
          if _rawget(_temp262, "__call_thing") == nil then
            _temp278 = _temp262
          else
                  if _temp262 == nil then
              if _type(_self._temp262) == "function" or (_type(_self._temp262) == "table" and _rawget(_self._temp262, "__call_thing")) then
        _temp278 =  _self:_temp262()
      elseif _self._temp262 ~= nil then
        _temp278 =  _self._temp262

        elseif _self.no_undermethod ~= nil then
          _temp278 =  _self:no_undermethod(string:new("_temp262"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp278 =  _temp262(_self)
      end

          end
        elseif _t == "number" then
          _temp278 = _temp262
        elseif _t == "function" then
                if _temp262 == nil then
              if _type(_self._temp262) == "function" or (_type(_self._temp262) == "table" and _rawget(_self._temp262, "__call_thing")) then
        _temp278 =  _self:_temp262()
      elseif _self._temp262 ~= nil then
        _temp278 =  _self._temp262

        elseif _self.no_undermethod ~= nil then
          _temp278 =  _self:no_undermethod(string:new("_temp262"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp278 =  _temp262(_self)
      end

        elseif _temp262 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp279 = nil
    if _type(_temp277) == "function" or (_type(_temp277) == "table" and _rawget(_temp277, "__call_thing")) then
      _temp279 =  _temp277(_self)

    elseif _temp277 then
      _temp279 =  _temp277
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp279 =  _self:n()
      elseif _self.n ~= nil then
        _temp279 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp280 = string:new("_dummy")

      local _t = _type(_temp278)
      if _t == "table" then
                      if _type(_temp278.process) == "function" or (_type(_temp278.process) == "table" and _rawget(_temp278.process, "__call_thing")) then
        _temp278 = _temp278:process(_temp279,_temp280)
      elseif _temp278.process ~= nil then
        _temp278 = _temp278.process

        elseif _temp278.no_undermethod ~= nil then
          _temp278 =  _temp278:no_undermethod(string:new("process") , _temp279,_temp280)
        else
          _error(exception:method_error(_temp278, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp278)
      if _n.process ~= nil then
        _temp278 = _n:process(_temp279,_temp280)
      elseif _n.no_undermethod ~= nil then
        _temp278 =  _n:no_undermethod(string:new("process") , _temp279,_temp280)
      else
        _error(exception:method_error(_temp278, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp278)
      if _f.process ~= nil then
        _temp278 = _f:process(_temp279,_temp280)
      elseif _f.no_undermethod ~= nil then
        _temp278 =  _f:no_undermethod(string:new("process") , _temp279,_temp280)
      else
        _error(exception:method_error(_temp278, "process"))
      end

      elseif _temp278 == nil then
        _error(exception:null_error("_temp278", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp278))
      end

      local _t = _type(_temp278)
      if _t == "table" then
                      if _type(_temp278.out) == "function" or (_type(_temp278.out) == "table" and _rawget(_temp278.out, "__call_thing")) then
        return _temp278:out()
      elseif _temp278.out ~= nil then
        return _temp278.out

        elseif _temp278.no_undermethod ~= nil then
          return  _temp278:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp278, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp278)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp278, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp278)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp278, "out"))
      end

      elseif _temp278 == nil then
        _error(exception:null_error("_temp278", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp278))
      end

end

      local _t = _type(_temp276)
      if _t == "table" then
                      if _type(_temp276.map) == "function" or (_type(_temp276.map) == "table" and _rawget(_temp276.map, "__call_thing")) then
        _temp276 = _temp276:map(_temp279)
      elseif _temp276.map ~= nil then
        _temp276 = _temp276.map

        elseif _temp276.no_undermethod ~= nil then
          _temp276 =  _temp276:no_undermethod(string:new("map") , _temp279)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp276)
      if _n.map ~= nil then
        _temp276 = _n:map(_temp279)
      elseif _n.no_undermethod ~= nil then
        _temp276 =  _n:no_undermethod(string:new("map") , _temp279)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp276)
      if _f.map ~= nil then
        _temp276 = _f:map(_temp279)
      elseif _f.no_undermethod ~= nil then
        _temp276 =  _f:no_undermethod(string:new("map") , _temp279)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp276 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp276))
      end

_temp279 = string:new("\n")

      local _t = _type(_temp276)
      if _t == "table" then
                      if _type(_temp276.join) == "function" or (_type(_temp276.join) == "table" and _rawget(_temp276.join, "__call_thing")) then
        _temp276 = _temp276:join(_temp279)
      elseif _temp276.join ~= nil then
        _temp276 = _temp276.join

        elseif _temp276.no_undermethod ~= nil then
          _temp276 =  _temp276:no_undermethod(string:new("join") , _temp279)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp276)
      if _n.join ~= nil then
        _temp276 = _n:join(_temp279)
      elseif _n.no_undermethod ~= nil then
        _temp276 =  _n:no_undermethod(string:new("join") , _temp279)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp276)
      if _f.join ~= nil then
        _temp276 = _f:join(_temp279)
      elseif _f.no_undermethod ~= nil then
        _temp276 =  _f:no_undermethod(string:new("join") , _temp279)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp276 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp276))
      end


do
local _temp281 = nil
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp281 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp281 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp281 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp281 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp281 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp281 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp281 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp281 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp281 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp281 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp282 = nil
      local _t = _type(_temp281)
      if _t == "table" then
                      if _type(_temp281.out) == "function" or (_type(_temp281.out) == "table" and _rawget(_temp281.out, "__call_thing")) then
        _temp282 = _temp281:out()
      elseif _temp281.out ~= nil then
        _temp282 = _temp281.out

        elseif _temp281.no_undermethod ~= nil then
          _temp282 =  _temp281:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp281, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp281)
      if _n.out ~= nil then
        _temp282 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp282 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp281, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp281)
      if _f.out ~= nil then
        _temp282 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp282 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp281, "out"))
      end

      elseif _temp281 == nil then
        _error(exception:null_error("_temp281", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp281))
      end

local _temp283 = nil
    if _type(_temp276) == "function" or (_type(_temp276) == "table" and _rawget(_temp276, "__call_thing")) then
      _temp283 =  _temp276(_self)

    elseif _temp276 then
      _temp283 =  _temp276
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp283 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp283 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp283 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp283 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp284
      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282._less_less) == "function" or (_type(_temp282._less_less) == "table" and _rawget(_temp282._less_less, "__call_thing")) then
        _temp284 = _temp282:_less_less(_temp283)
      elseif _temp282._less_less ~= nil then
        _temp284 = _temp282._less_less

        elseif _temp282.no_undermethod ~= nil then
          _temp284 =  _temp282:no_undermethod(string:new("<<") , _temp283)
        else
          _error(exception:method_error(_temp282, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n._less_less ~= nil then
        _temp284 = _n:_less_less(_temp283)
      elseif _n.no_undermethod ~= nil then
        _temp284 =  _n:no_undermethod(string:new("<<") , _temp283)
      else
        _error(exception:method_error(_temp282, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f._less_less ~= nil then
        _temp284 = _f:_less_less(_temp283)
      elseif _f.no_undermethod ~= nil then
        _temp284 =  _f:no_undermethod(string:new("<<") , _temp283)
      else
        _error(exception:method_error(_temp282, "<<"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("_temp282", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end

_dummy_ = _temp284 
end

    if _type(_temp275) == "function" or (_type(_temp275) == "table" and _rawget(_temp275, "__call_thing")) then
      _temp279 =  _temp275(_self)

    elseif _temp275 then
      _temp279 =  _temp275
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp279 =  _self:last()
      elseif _self.last ~= nil then
        _temp279 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp296 = function (_self)

local _temp285
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp285 =  _self:my()
      elseif _self.my ~= nil then
        _temp285 =  _self.my

        elseif my ~= nil then
          _temp285 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp286 = nil
    if _type(_temp275) == "function" or (_type(_temp275) == "table" and _rawget(_temp275, "__call_thing")) then
      _temp286 =  _temp275(_self)

    elseif _temp275 then
      _temp286 =  _temp275
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp286 =  _self:last()
      elseif _self.last ~= nil then
        _temp286 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp286 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp286 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp285)
      if _t == "table" then
                      if _type(_temp285.process) == "function" or (_type(_temp285.process) == "table" and _rawget(_temp285.process, "__call_thing")) then
        _temp285 = _temp285:process(_temp286)
      elseif _temp285.process ~= nil then
        _temp285 = _temp285.process

        elseif _temp285.no_undermethod ~= nil then
          _temp285 =  _temp285:no_undermethod(string:new("process") , _temp286)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp285)
      if _n.process ~= nil then
        _temp285 = _n:process(_temp286)
      elseif _n.no_undermethod ~= nil then
        _temp285 =  _n:no_undermethod(string:new("process") , _temp286)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp285)
      if _f.process ~= nil then
        _temp285 = _f:process(_temp286)
      elseif _f.no_undermethod ~= nil then
        _temp285 =  _f:no_undermethod(string:new("process") , _temp286)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp285 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp285))
      end


local _temp286 
do
local _temp287 = nil
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp287 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp287 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp287 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp287 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp287 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp287 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp287 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp287 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp287 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp287 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp288 = nil
      local _t = _type(_temp287)
      if _t == "table" then
                      if _type(_temp287.out) == "function" or (_type(_temp287.out) == "table" and _rawget(_temp287.out, "__call_thing")) then
        _temp288 = _temp287:out()
      elseif _temp287.out ~= nil then
        _temp288 = _temp287.out

        elseif _temp287.no_undermethod ~= nil then
          _temp288 =  _temp287:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp287, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp287)
      if _n.out ~= nil then
        _temp288 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp288 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp287, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp287)
      if _f.out ~= nil then
        _temp288 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp288 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp287, "out"))
      end

      elseif _temp287 == nil then
        _error(exception:null_error("_temp287", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp287))
      end

local _temp289 = nil
        local _t = _type(_temp285)
        if _t == "table" then
          if _rawget(_temp285, "__call_thing") == nil then
            _temp289 = _temp285
          else
                  if _temp285 == nil then
              if _type(_self._temp285) == "function" or (_type(_self._temp285) == "table" and _rawget(_self._temp285, "__call_thing")) then
        _temp289 =  _self:_temp285()
      elseif _self._temp285 ~= nil then
        _temp289 =  _self._temp285

        elseif _self.no_undermethod ~= nil then
          _temp289 =  _self:no_undermethod(string:new("_temp285"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp289 =  _temp285(_self)
      end

          end
        elseif _t == "number" then
          _temp289 = _temp285
        elseif _t == "function" then
                if _temp285 == nil then
              if _type(_self._temp285) == "function" or (_type(_self._temp285) == "table" and _rawget(_self._temp285, "__call_thing")) then
        _temp289 =  _self:_temp285()
      elseif _self._temp285 ~= nil then
        _temp289 =  _self._temp285

        elseif _self.no_undermethod ~= nil then
          _temp289 =  _self:no_undermethod(string:new("_temp285"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp289 =  _temp285(_self)
      end

        elseif _temp285 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp290 = nil
      local _t = _type(_temp289)
      if _t == "table" then
                      if _type(_temp289.out) == "function" or (_type(_temp289.out) == "table" and _rawget(_temp289.out, "__call_thing")) then
        _temp290 = _temp289:out()
      elseif _temp289.out ~= nil then
        _temp290 = _temp289.out

        elseif _temp289.no_undermethod ~= nil then
          _temp290 =  _temp289:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp289, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp289)
      if _n.out ~= nil then
        _temp290 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp289, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp289)
      if _f.out ~= nil then
        _temp290 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp289, "out"))
      end

      elseif _temp289 == nil then
        _error(exception:null_error("_temp289", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp289))
      end

local _temp291 = string:new("\n")

local _temp292 = nil
do
local _temp293 = nil
        local _t = _type(_temp285)
        if _t == "table" then
          if _rawget(_temp285, "__call_thing") == nil then
            _temp293 = _temp285
          else
                  if _temp285 == nil then
              if _type(_self._temp285) == "function" or (_type(_self._temp285) == "table" and _rawget(_self._temp285, "__call_thing")) then
        _temp293 =  _self:_temp285()
      elseif _self._temp285 ~= nil then
        _temp293 =  _self._temp285

        elseif _self.no_undermethod ~= nil then
          _temp293 =  _self:no_undermethod(string:new("_temp285"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp293 =  _temp285(_self)
      end

          end
        elseif _t == "number" then
          _temp293 = _temp285
        elseif _t == "function" then
                if _temp285 == nil then
              if _type(_self._temp285) == "function" or (_type(_self._temp285) == "table" and _rawget(_self._temp285, "__call_thing")) then
        _temp293 =  _self:_temp285()
      elseif _self._temp285 ~= nil then
        _temp293 =  _self._temp285

        elseif _self.no_undermethod ~= nil then
          _temp293 =  _self:no_undermethod(string:new("_temp285"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp293 =  _temp285(_self)
      end

        elseif _temp285 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp293)
      if _t == "table" then
                      if _type(_temp293.var) == "function" or (_type(_temp293.var) == "table" and _rawget(_temp293.var, "__call_thing")) then
        _temp293 = _temp293:var()
      elseif _temp293.var ~= nil then
        _temp293 = _temp293.var

        elseif _temp293.no_undermethod ~= nil then
          _temp293 =  _temp293:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp293, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp293)
      if _n.var ~= nil then
        _temp293 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp293 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp293, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp293)
      if _f.var ~= nil then
        _temp293 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp293 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp293, "var"))
      end

      elseif _temp293 == nil then
        _error(exception:null_error("_temp293", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp293))
      end


_temp292 = string:new("return " .. _tostring(_temp293) .. "\n")
end
local _temp294
      local _t = _type(_temp288)
      if _t == "table" then
                      if _type(_temp288._less_less) == "function" or (_type(_temp288._less_less) == "table" and _rawget(_temp288._less_less, "__call_thing")) then
        _temp294 = _temp288:_less_less(_temp290)
      elseif _temp288._less_less ~= nil then
        _temp294 = _temp288._less_less

        elseif _temp288.no_undermethod ~= nil then
          _temp294 =  _temp288:no_undermethod(string:new("<<") , _temp290)
        else
          _error(exception:method_error(_temp288, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp288)
      if _n._less_less ~= nil then
        _temp294 = _n:_less_less(_temp290)
      elseif _n.no_undermethod ~= nil then
        _temp294 =  _n:no_undermethod(string:new("<<") , _temp290)
      else
        _error(exception:method_error(_temp288, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp288)
      if _f._less_less ~= nil then
        _temp294 = _f:_less_less(_temp290)
      elseif _f.no_undermethod ~= nil then
        _temp294 =  _f:no_undermethod(string:new("<<") , _temp290)
      else
        _error(exception:method_error(_temp288, "<<"))
      end

      elseif _temp288 == nil then
        _error(exception:null_error("_temp288", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp288))
      end

local _temp290
      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294._less_less) == "function" or (_type(_temp294._less_less) == "table" and _rawget(_temp294._less_less, "__call_thing")) then
        _temp290 = _temp294:_less_less(_temp291)
      elseif _temp294._less_less ~= nil then
        _temp290 = _temp294._less_less

        elseif _temp294.no_undermethod ~= nil then
          _temp290 =  _temp294:no_undermethod(string:new("<<") , _temp291)
        else
          _error(exception:method_error(_temp294, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n._less_less ~= nil then
        _temp290 = _n:_less_less(_temp291)
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("<<") , _temp291)
      else
        _error(exception:method_error(_temp294, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f._less_less ~= nil then
        _temp290 = _f:_less_less(_temp291)
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("<<") , _temp291)
      else
        _error(exception:method_error(_temp294, "<<"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

local _temp291
      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290._less_less) == "function" or (_type(_temp290._less_less) == "table" and _rawget(_temp290._less_less, "__call_thing")) then
        _temp291 = _temp290:_less_less(_temp292)
      elseif _temp290._less_less ~= nil then
        _temp291 = _temp290._less_less

        elseif _temp290.no_undermethod ~= nil then
          _temp291 =  _temp290:no_undermethod(string:new("<<") , _temp292)
        else
          _error(exception:method_error(_temp290, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n._less_less ~= nil then
        _temp291 = _n:_less_less(_temp292)
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("<<") , _temp292)
      else
        _error(exception:method_error(_temp290, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f._less_less ~= nil then
        _temp291 = _f:_less_less(_temp292)
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("<<") , _temp292)
      else
        _error(exception:method_error(_temp290, "<<"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("_temp290", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end

_temp286 = _temp291 
end

return _temp286
end


local _temp306 = function (_self)

local _temp297 = nil
        local _t = _type(_temp274)
        if _t == "table" then
          if _rawget(_temp274, "__call_thing") == nil then
            _temp297 = _temp274
          else
                  if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp297 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp297 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp297 =  _temp274(_self)
      end

          end
        elseif _t == "number" then
          _temp297 = _temp274
        elseif _t == "function" then
                if _temp274 == nil then
              if _type(_self._temp274) == "function" or (_type(_self._temp274) == "table" and _rawget(_self._temp274, "__call_thing")) then
        _temp297 =  _self:_temp274()
      elseif _self._temp274 ~= nil then
        _temp297 =  _self._temp274

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp274"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp297 =  _temp274(_self)
      end

        elseif _temp274 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp297)
      if _t == "table" then
                      if _type(_temp297.empty_question) == "function" or (_type(_temp297.empty_question) == "table" and _rawget(_temp297.empty_question, "__call_thing")) then
        _temp297 = _temp297:empty_question()
      elseif _temp297.empty_question ~= nil then
        _temp297 = _temp297.empty_question

        elseif _temp297.no_undermethod ~= nil then
          _temp297 =  _temp297:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp297, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp297)
      if _n.empty_question ~= nil then
        _temp297 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp297 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp297, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp297)
      if _f.empty_question ~= nil then
        _temp297 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp297 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp297, "empty?"))
      end

      elseif _temp297 == nil then
        _error(exception:null_error("_temp297", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp297))
      end



local _temp304 = function (_self)

local _temp298 
do
local _temp299 = nil
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp299 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp299 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp299 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp299 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp299 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp299 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp299 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp299 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp299 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp299 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp300 = nil
      local _t = _type(_temp299)
      if _t == "table" then
                      if _type(_temp299.out) == "function" or (_type(_temp299.out) == "table" and _rawget(_temp299.out, "__call_thing")) then
        _temp300 = _temp299:out()
      elseif _temp299.out ~= nil then
        _temp300 = _temp299.out

        elseif _temp299.no_undermethod ~= nil then
          _temp300 =  _temp299:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp299, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp299)
      if _n.out ~= nil then
        _temp300 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp300 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp299, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp299)
      if _f.out ~= nil then
        _temp300 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp300 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp299, "out"))
      end

      elseif _temp299 == nil then
        _error(exception:null_error("_temp299", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp299))
      end

local _temp301 = string:new("return object:null()")
local _temp302
      local _t = _type(_temp300)
      if _t == "table" then
                      if _type(_temp300._less_less) == "function" or (_type(_temp300._less_less) == "table" and _rawget(_temp300._less_less, "__call_thing")) then
        _temp302 = _temp300:_less_less(_temp301)
      elseif _temp300._less_less ~= nil then
        _temp302 = _temp300._less_less

        elseif _temp300.no_undermethod ~= nil then
          _temp302 =  _temp300:no_undermethod(string:new("<<") , _temp301)
        else
          _error(exception:method_error(_temp300, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp300)
      if _n._less_less ~= nil then
        _temp302 = _n:_less_less(_temp301)
      elseif _n.no_undermethod ~= nil then
        _temp302 =  _n:no_undermethod(string:new("<<") , _temp301)
      else
        _error(exception:method_error(_temp300, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp300)
      if _f._less_less ~= nil then
        _temp302 = _f:_less_less(_temp301)
      elseif _f.no_undermethod ~= nil then
        _temp302 =  _f:no_undermethod(string:new("<<") , _temp301)
      else
        _error(exception:method_error(_temp300, "<<"))
      end

      elseif _temp300 == nil then
        _error(exception:null_error("_temp300", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp300))
      end

_temp298 = _temp302 
end

return _temp298
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp297,_temp304)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp297,_temp304)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp297,_temp304)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp297,_temp304)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp279,_temp296,_temp306)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp279,_temp296,_temp306)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp279,_temp296,_temp306)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp279,_temp296,_temp306)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp306 =  _self:my()
      elseif _self.my ~= nil then
        _temp306 =  _self.my

        elseif my ~= nil then
          _temp306 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp306)
      if _t == "table" then
                      if _type(_temp306.env) == "function" or (_type(_temp306.env) == "table" and _rawget(_temp306.env, "__call_thing")) then
        _temp306 = _temp306:env()
      elseif _temp306.env ~= nil then
        _temp306 = _temp306.env

        elseif _temp306.no_undermethod ~= nil then
          _temp306 =  _temp306:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp306, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp306)
      if _n.env ~= nil then
        _temp306 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp306 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp306, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp306)
      if _f.env ~= nil then
        _temp306 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp306 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp306, "env"))
      end

      elseif _temp306 == nil then
        _error(exception:null_error("_temp306", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp306))
      end

      local _t = _type(_temp306)
      if _t == "table" then
                      if _type(_temp306.pop_underscope) == "function" or (_type(_temp306.pop_underscope) == "table" and _rawget(_temp306.pop_underscope, "__call_thing")) then
        _dummy_ = _temp306:pop_underscope()
      elseif _temp306.pop_underscope ~= nil then
        _dummy_ = _temp306.pop_underscope

        elseif _temp306.no_undermethod ~= nil then
          _dummy_ =  _temp306:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp306, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp306)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp306, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp306)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp306, "pop_scope"))
      end

      elseif _temp306 == nil then
        _error(exception:null_error("_temp306", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp306))
      end

do
local _temp307 = nil
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp307 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp307 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp307 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp307 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp307 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp307 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp307 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp307 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp307 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp307 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp308 = nil
      local _t = _type(_temp307)
      if _t == "table" then
                      if _type(_temp307.out) == "function" or (_type(_temp307.out) == "table" and _rawget(_temp307.out, "__call_thing")) then
        _temp308 = _temp307:out()
      elseif _temp307.out ~= nil then
        _temp308 = _temp307.out

        elseif _temp307.no_undermethod ~= nil then
          _temp308 =  _temp307:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp307, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp307)
      if _n.out ~= nil then
        _temp308 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp308 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp307, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp307)
      if _f.out ~= nil then
        _temp308 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp308 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp307, "out"))
      end

      elseif _temp307 == nil then
        _error(exception:null_error("_temp307", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp307))
      end

local _temp309 = string:new("\nend\n")
local _temp310
      local _t = _type(_temp308)
      if _t == "table" then
                      if _type(_temp308._less_less) == "function" or (_type(_temp308._less_less) == "table" and _rawget(_temp308._less_less, "__call_thing")) then
        _temp310 = _temp308:_less_less(_temp309)
      elseif _temp308._less_less ~= nil then
        _temp310 = _temp308._less_less

        elseif _temp308.no_undermethod ~= nil then
          _temp310 =  _temp308:no_undermethod(string:new("<<") , _temp309)
        else
          _error(exception:method_error(_temp308, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp308)
      if _n._less_less ~= nil then
        _temp310 = _n:_less_less(_temp309)
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("<<") , _temp309)
      else
        _error(exception:method_error(_temp308, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp308)
      if _f._less_less ~= nil then
        _temp310 = _f:_less_less(_temp309)
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("<<") , _temp309)
      else
        _error(exception:method_error(_temp308, "<<"))
      end

      elseif _temp308 == nil then
        _error(exception:null_error("_temp308", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp308))
      end

_dummy_ = _temp310 
end

do
local _temp296
    if _type(_temp265) == "function" or (_type(_temp265) == "table" and _rawget(_temp265, "__call_thing")) then
      _temp296 =  _temp265(_self)

    elseif _temp265 then
      _temp296 =  _temp265
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp296 =  _self:res()
      elseif _self.res ~= nil then
        _temp296 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp296 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp296 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp311 = string:new("function")

local _temp312 = string:new("type")

_temp296:set(_temp312, _temp311)
end

    if _type(_temp265) == "function" or (_type(_temp265) == "table" and _rawget(_temp265, "__call_thing")) then
      return  _temp265(_self)

    elseif _temp265 then
      return  _temp265
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp259)
      if _t == "table" then
                      if _type(_temp259.walk) == "function" or (_type(_temp259.walk) == "table" and _rawget(_temp259.walk, "__call_thing")) then
        _dummy_ = _temp259:walk(_temp4,_temp266)
      elseif _temp259.walk ~= nil then
        _dummy_ = _temp259.walk

        elseif _temp259.no_undermethod ~= nil then
          _dummy_ =  _temp259:no_undermethod(string:new("walk") , _temp4,_temp266)
        else
          _error(exception:method_error(_temp259, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp259)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp266)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp266)
      else
        _error(exception:method_error(_temp259, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp259)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp266)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp266)
      else
        _error(exception:method_error(_temp259, "walk"))
      end

      elseif _temp259 == nil then
        _error(exception:null_error("_temp259", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp259))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp266 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp266 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp266 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp266 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp266 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp266 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp266 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp266 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp266 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp266 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp389 = function (_self, _temp314,_temp313)
        if _temp314 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp313 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp313 =  null(_self)

    elseif null then
      _temp313 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp313 =  _self:null()
      elseif _self.null ~= nil then
        _temp313 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp313 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp313 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp315
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp315 =  my(_self)

    elseif my then
      _temp315 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp315 =  _self:my()
      elseif _self.my ~= nil then
        _temp315 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp315 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp315 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp316 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp316 =  _self:my()
      elseif _self.my ~= nil then
        _temp316 =  _self.my

        elseif my ~= nil then
          _temp316 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp316)
      if _t == "table" then
                      if _type(_temp316.env) == "function" or (_type(_temp316.env) == "table" and _rawget(_temp316.env, "__call_thing")) then
        _temp316 = _temp316:env()
      elseif _temp316.env ~= nil then
        _temp316 = _temp316.env

        elseif _temp316.no_undermethod ~= nil then
          _temp316 =  _temp316:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp316, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp316)
      if _n.env ~= nil then
        _temp316 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp316 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp316, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp316)
      if _f.env ~= nil then
        _temp316 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp316 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp316, "env"))
      end

      elseif _temp316 == nil then
        _error(exception:null_error("_temp316", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp316))
      end

      local _t = _type(_temp316)
      if _t == "table" then
                      if _type(_temp316.new_underscope) == "function" or (_type(_temp316.new_underscope) == "table" and _rawget(_temp316.new_underscope, "__call_thing")) then
        _dummy_ = _temp316:new_underscope()
      elseif _temp316.new_underscope ~= nil then
        _dummy_ = _temp316.new_underscope

        elseif _temp316.no_undermethod ~= nil then
          _dummy_ =  _temp316:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp316, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp316)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp316, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp316)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp316, "new_scope"))
      end

      elseif _temp316 == nil then
        _error(exception:null_error("_temp316", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp316))
      end

local _temp317
    if _type(_temp314) == "function" or (_type(_temp314) == "table" and _rawget(_temp314, "__call_thing")) then
      _temp316 =  _temp314(_self)

    elseif _temp314 then
      _temp316 =  _temp314
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp316 =  _self:node()
      elseif _self.node ~= nil then
        _temp316 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp316 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp316 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp317 =  do_underargs(_self, _temp316)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp317 =  _self:do_underargs(_temp316)
      elseif _self.do_underargs ~= nil then
        _temp317 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp317 =  _self:no_undermethod(string:new("do_args") , _temp316)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp317 =  no_undermethod(_self, string:new("do_args") , _temp316)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp318
do
local _temp319 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp319 =  _self:my()
      elseif _self.my ~= nil then
        _temp319 =  _self.my

        elseif my ~= nil then
          _temp319 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp319)
      if _t == "table" then
                      if _type(_temp319.next_underliftable) == "function" or (_type(_temp319.next_underliftable) == "table" and _rawget(_temp319.next_underliftable, "__call_thing")) then
        _temp319 = _temp319:next_underliftable()
      elseif _temp319.next_underliftable ~= nil then
        _temp319 = _temp319.next_underliftable

        elseif _temp319.no_undermethod ~= nil then
          _temp319 =  _temp319:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp319, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp319)
      if _n.next_underliftable ~= nil then
        _temp319 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp319 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp319, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp319)
      if _f.next_underliftable ~= nil then
        _temp319 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp319 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp319, "next_liftable"))
      end

      elseif _temp319 == nil then
        _error(exception:null_error("_temp319", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp319))
      end


_temp316 = string:new("_lifted[" .. _tostring(_temp319) .. "]")
end

local _temp320 = nil
do
local _temp321
do
    if _type(_temp317) == "function" or (_type(_temp317) == "table" and _rawget(_temp317, "__call_thing")) then
      _temp321 =  _temp317(_self)

    elseif _temp317 then
      _temp321 =  _temp317
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp321 =  _self:args()
      elseif _self.args ~= nil then
        _temp321 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp321 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp321 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp322 = string:new("arg_list")


_temp321 = _temp321:get(_temp322)
end

_temp320 = string:new("function(_argtable, " .. _tostring(_temp321) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp318 =  set_underresult(_self, _temp316,_temp320)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp318 =  _self:set_underresult(_temp316,_temp320)
      elseif _self.set_underresult ~= nil then
        _temp318 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp318 =  _self:no_undermethod(string:new("set_result") , _temp316,_temp320)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp318 =  no_undermethod(_self, string:new("set_result") , _temp316,_temp320)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp320 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp320 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp320 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp320 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp320 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp320 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp320 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp320 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp320 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp320 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp320)
      if _t == "table" then
                      if _type(_temp320.upvars) == "function" or (_type(_temp320.upvars) == "table" and _rawget(_temp320.upvars, "__call_thing")) then
        _temp320 = _temp320:upvars()
      elseif _temp320.upvars ~= nil then
        _temp320 = _temp320.upvars

        elseif _temp320.no_undermethod ~= nil then
          _temp320 =  _temp320:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp320, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp320)
      if _n.upvars ~= nil then
        _temp320 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp320 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp320, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp320)
      if _f.upvars ~= nil then
        _temp320 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp320 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp320, "upvars"))
      end

      elseif _temp320 == nil then
        _error(exception:null_error("_temp320", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp320))
      end



local _temp336 = function (_self)

local _temp323 
do
local _temp324 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp324 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp324 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp324 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp324 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp324 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp324 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp324 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp324 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp324 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp324 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp325 = nil
      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324.out) == "function" or (_type(_temp324.out) == "table" and _rawget(_temp324.out, "__call_thing")) then
        _temp325 = _temp324:out()
      elseif _temp324.out ~= nil then
        _temp325 = _temp324.out

        elseif _temp324.no_undermethod ~= nil then
          _temp325 =  _temp324:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp324, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n.out ~= nil then
        _temp325 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp325 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp324, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f.out ~= nil then
        _temp325 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp325 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp324, "out"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

local _temp326 = nil
        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp326 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp326 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp326 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp326 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp326 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp326 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp326 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp326 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp326 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp326 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp326)
      if _t == "table" then
                      if _type(_temp326.upvars) == "function" or (_type(_temp326.upvars) == "table" and _rawget(_temp326.upvars, "__call_thing")) then
        _temp326 = _temp326:upvars()
      elseif _temp326.upvars ~= nil then
        _temp326 = _temp326.upvars

        elseif _temp326.no_undermethod ~= nil then
          _temp326 =  _temp326:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp326, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp326)
      if _n.upvars ~= nil then
        _temp326 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp326, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp326)
      if _f.upvars ~= nil then
        _temp326 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp326, "upvars"))
      end

      elseif _temp326 == nil then
        _error(exception:null_error("_temp326", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp326))
      end


local _temp334 = function (_self, _temp327)
        if _temp327 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp328 = nil
do
local _temp329
do
        local _t = _type(_temp315)
        if _t == "table" then
          if _rawget(_temp315, "__call_thing") == nil then
            _temp329 = _temp315
          else
                  if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp329 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp329 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp329 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp329 =  _temp315(_self)
      end

          end
        elseif _t == "number" then
          _temp329 = _temp315
        elseif _t == "function" then
                if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp329 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp329 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp329 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp329 =  _temp315(_self)
      end

        elseif _temp315 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp329)
      if _t == "table" then
                      if _type(_temp329.env) == "function" or (_type(_temp329.env) == "table" and _rawget(_temp329.env, "__call_thing")) then
        _temp329 = _temp329:env()
      elseif _temp329.env ~= nil then
        _temp329 = _temp329.env

        elseif _temp329.no_undermethod ~= nil then
          _temp329 =  _temp329:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp329, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp329)
      if _n.env ~= nil then
        _temp329 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp329 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp329, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp329)
      if _f.env ~= nil then
        _temp329 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp329 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp329, "env"))
      end

      elseif _temp329 == nil then
        _error(exception:null_error("_temp329", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp329))
      end

local _temp330 = nil
    if _type(_temp327) == "function" or (_type(_temp327) == "table" and _rawget(_temp327, "__call_thing")) then
      _temp330 =  _temp327(_self)

    elseif _temp327 then
      _temp330 =  _temp327
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp330 =  _self:u()
      elseif _self.u ~= nil then
        _temp330 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp330 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp330 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp329 = _temp329:get(_temp330)
end

local _temp331
do
        local _t = _type(_temp315)
        if _t == "table" then
          if _rawget(_temp315, "__call_thing") == nil then
            _temp331 = _temp315
          else
                  if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp331 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp331 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp331 =  _temp315(_self)
      end

          end
        elseif _t == "number" then
          _temp331 = _temp315
        elseif _t == "function" then
                if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp331 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp331 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp331 =  _temp315(_self)
      end

        elseif _temp315 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp331)
      if _t == "table" then
                      if _type(_temp331.env) == "function" or (_type(_temp331.env) == "table" and _rawget(_temp331.env, "__call_thing")) then
        _temp331 = _temp331:env()
      elseif _temp331.env ~= nil then
        _temp331 = _temp331.env

        elseif _temp331.no_undermethod ~= nil then
          _temp331 =  _temp331:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp331, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp331)
      if _n.env ~= nil then
        _temp331 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp331 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp331, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp331)
      if _f.env ~= nil then
        _temp331 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp331 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp331, "env"))
      end

      elseif _temp331 == nil then
        _error(exception:null_error("_temp331", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp331))
      end

local _temp332 = nil
    if _type(_temp327) == "function" or (_type(_temp327) == "table" and _rawget(_temp327, "__call_thing")) then
      _temp332 =  _temp327(_self)

    elseif _temp327 then
      _temp332 =  _temp327
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp332 =  _self:u()
      elseif _self.u ~= nil then
        _temp332 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp332 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp332 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp331 = _temp331:get(_temp332)
end

_temp328 = string:new("local " .. _tostring(_temp329) .. " = _argtable['" .. _tostring(_temp331) .. "']")
end

return _temp328
end

      local _t = _type(_temp326)
      if _t == "table" then
                      if _type(_temp326.map) == "function" or (_type(_temp326.map) == "table" and _rawget(_temp326.map, "__call_thing")) then
        _temp326 = _temp326:map(_temp334)
      elseif _temp326.map ~= nil then
        _temp326 = _temp326.map

        elseif _temp326.no_undermethod ~= nil then
          _temp326 =  _temp326:no_undermethod(string:new("map") , _temp334)
        else
          _error(exception:method_error(_temp326, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp326)
      if _n.map ~= nil then
        _temp326 = _n:map(_temp334)
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("map") , _temp334)
      else
        _error(exception:method_error(_temp326, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp326)
      if _f.map ~= nil then
        _temp326 = _f:map(_temp334)
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("map") , _temp334)
      else
        _error(exception:method_error(_temp326, "map"))
      end

      elseif _temp326 == nil then
        _error(exception:null_error("_temp326", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp326))
      end

_temp334 = string:new("\n")

      local _t = _type(_temp326)
      if _t == "table" then
                      if _type(_temp326.join) == "function" or (_type(_temp326.join) == "table" and _rawget(_temp326.join, "__call_thing")) then
        _temp326 = _temp326:join(_temp334)
      elseif _temp326.join ~= nil then
        _temp326 = _temp326.join

        elseif _temp326.no_undermethod ~= nil then
          _temp326 =  _temp326:no_undermethod(string:new("join") , _temp334)
        else
          _error(exception:method_error(_temp326, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp326)
      if _n.join ~= nil then
        _temp326 = _n:join(_temp334)
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("join") , _temp334)
      else
        _error(exception:method_error(_temp326, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp326)
      if _f.join ~= nil then
        _temp326 = _f:join(_temp334)
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("join") , _temp334)
      else
        _error(exception:method_error(_temp326, "join"))
      end

      elseif _temp326 == nil then
        _error(exception:null_error("_temp326", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp326))
      end

local _temp334
      local _t = _type(_temp325)
      if _t == "table" then
                      if _type(_temp325._less_less) == "function" or (_type(_temp325._less_less) == "table" and _rawget(_temp325._less_less, "__call_thing")) then
        _temp334 = _temp325:_less_less(_temp326)
      elseif _temp325._less_less ~= nil then
        _temp334 = _temp325._less_less

        elseif _temp325.no_undermethod ~= nil then
          _temp334 =  _temp325:no_undermethod(string:new("<<") , _temp326)
        else
          _error(exception:method_error(_temp325, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp325)
      if _n._less_less ~= nil then
        _temp334 = _n:_less_less(_temp326)
      elseif _n.no_undermethod ~= nil then
        _temp334 =  _n:no_undermethod(string:new("<<") , _temp326)
      else
        _error(exception:method_error(_temp325, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp325)
      if _f._less_less ~= nil then
        _temp334 = _f:_less_less(_temp326)
      elseif _f.no_undermethod ~= nil then
        _temp334 =  _f:no_undermethod(string:new("<<") , _temp326)
      else
        _error(exception:method_error(_temp325, "<<"))
      end

      elseif _temp325 == nil then
        _error(exception:null_error("_temp325", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp325))
      end

_temp323 = _temp334 
end

return _temp323
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp320,_temp336)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp320,_temp336)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp320,_temp336)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp320,_temp336)
      else
        _error(exception:name_error("true?"))
      end
    end

do
local _temp337 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp337 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp337 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp337 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp337 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp337 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp337 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp337 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp337 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp338 = nil
      local _t = _type(_temp337)
      if _t == "table" then
                      if _type(_temp337.out) == "function" or (_type(_temp337.out) == "table" and _rawget(_temp337.out, "__call_thing")) then
        _temp338 = _temp337:out()
      elseif _temp337.out ~= nil then
        _temp338 = _temp337.out

        elseif _temp337.no_undermethod ~= nil then
          _temp338 =  _temp337:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp337, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp337)
      if _n.out ~= nil then
        _temp338 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp338 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp337, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp337)
      if _f.out ~= nil then
        _temp338 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp338 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp337, "out"))
      end

      elseif _temp337 == nil then
        _error(exception:null_error("_temp337", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp337))
      end

local _temp339
do
    if _type(_temp317) == "function" or (_type(_temp317) == "table" and _rawget(_temp317, "__call_thing")) then
      _temp339 =  _temp317(_self)

    elseif _temp317 then
      _temp339 =  _temp317
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp339 =  _self:args()
      elseif _self.args ~= nil then
        _temp339 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp339 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp339 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp340 = string:new("out")


_temp339 = _temp339:get(_temp340)
end
local _temp341
      local _t = _type(_temp338)
      if _t == "table" then
                      if _type(_temp338._less_less) == "function" or (_type(_temp338._less_less) == "table" and _rawget(_temp338._less_less, "__call_thing")) then
        _temp341 = _temp338:_less_less(_temp339)
      elseif _temp338._less_less ~= nil then
        _temp341 = _temp338._less_less

        elseif _temp338.no_undermethod ~= nil then
          _temp341 =  _temp338:no_undermethod(string:new("<<") , _temp339)
        else
          _error(exception:method_error(_temp338, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp338)
      if _n._less_less ~= nil then
        _temp341 = _n:_less_less(_temp339)
      elseif _n.no_undermethod ~= nil then
        _temp341 =  _n:no_undermethod(string:new("<<") , _temp339)
      else
        _error(exception:method_error(_temp338, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp338)
      if _f._less_less ~= nil then
        _temp341 = _f:_less_less(_temp339)
      elseif _f.no_undermethod ~= nil then
        _temp341 =  _f:no_undermethod(string:new("<<") , _temp339)
      else
        _error(exception:method_error(_temp338, "<<"))
      end

      elseif _temp338 == nil then
        _error(exception:null_error("_temp338", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp338))
      end

_dummy_ = _temp341 
end

local _temp342
        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp342 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp342 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp342 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp342 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp342 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp342 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp342 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp342 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.body) == "function" or (_type(_temp342.body) == "table" and _rawget(_temp342.body, "__call_thing")) then
        _temp342 = _temp342:body()
      elseif _temp342.body ~= nil then
        _temp342 = _temp342.body

        elseif _temp342.no_undermethod ~= nil then
          _temp342 =  _temp342:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.body ~= nil then
        _temp342 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.body ~= nil then
        _temp342 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end

      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.copy) == "function" or (_type(_temp342.copy) == "table" and _rawget(_temp342.copy, "__call_thing")) then
        _temp342 = _temp342:copy()
      elseif _temp342.copy ~= nil then
        _temp342 = _temp342.copy

        elseif _temp342.no_undermethod ~= nil then
          _temp342 =  _temp342:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.copy ~= nil then
        _temp342 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.copy ~= nil then
        _temp342 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end


local _temp343
        local _t = _type(_temp342)
        if _t == "table" then
          if _rawget(_temp342, "__call_thing") == nil then
            _temp343 = _temp342
          else
                  if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp343 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp343 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp343 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp343 =  _temp342(_self)
      end

          end
        elseif _t == "number" then
          _temp343 = _temp342
        elseif _t == "function" then
                if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp343 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp343 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp343 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp343 =  _temp342(_self)
      end

        elseif _temp342 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp343)
      if _t == "table" then
                      if _type(_temp343.pop) == "function" or (_type(_temp343.pop) == "table" and _rawget(_temp343.pop, "__call_thing")) then
        _temp343 = _temp343:pop()
      elseif _temp343.pop ~= nil then
        _temp343 = _temp343.pop

        elseif _temp343.no_undermethod ~= nil then
          _temp343 =  _temp343:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp343)
      if _n.pop ~= nil then
        _temp343 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp343 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp343)
      if _f.pop ~= nil then
        _temp343 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp343 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp343 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp343))
      end


local _temp344
        local _t = _type(_temp342)
        if _t == "table" then
          if _rawget(_temp342, "__call_thing") == nil then
            _temp344 = _temp342
          else
                  if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp344 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp344 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp344 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp344 =  _temp342(_self)
      end

          end
        elseif _t == "number" then
          _temp344 = _temp342
        elseif _t == "function" then
                if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp344 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp344 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp344 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp344 =  _temp342(_self)
      end

        elseif _temp342 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp347 = function (_self, _temp345)
        if _temp345 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp346 = nil
        local _t = _type(_temp315)
        if _t == "table" then
          if _rawget(_temp315, "__call_thing") == nil then
            _temp346 = _temp315
          else
                  if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp346 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp346 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp346 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp346 =  _temp315(_self)
      end

          end
        elseif _t == "number" then
          _temp346 = _temp315
        elseif _t == "function" then
                if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp346 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp346 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp346 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp346 =  _temp315(_self)
      end

        elseif _temp315 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp347 = nil
    if _type(_temp345) == "function" or (_type(_temp345) == "table" and _rawget(_temp345, "__call_thing")) then
      _temp347 =  _temp345(_self)

    elseif _temp345 then
      _temp347 =  _temp345
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp347 =  _self:n()
      elseif _self.n ~= nil then
        _temp347 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp347 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp347 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp348 = string:new("_dummy")

      local _t = _type(_temp346)
      if _t == "table" then
                      if _type(_temp346.process) == "function" or (_type(_temp346.process) == "table" and _rawget(_temp346.process, "__call_thing")) then
        _temp346 = _temp346:process(_temp347,_temp348)
      elseif _temp346.process ~= nil then
        _temp346 = _temp346.process

        elseif _temp346.no_undermethod ~= nil then
          _temp346 =  _temp346:no_undermethod(string:new("process") , _temp347,_temp348)
        else
          _error(exception:method_error(_temp346, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp346)
      if _n.process ~= nil then
        _temp346 = _n:process(_temp347,_temp348)
      elseif _n.no_undermethod ~= nil then
        _temp346 =  _n:no_undermethod(string:new("process") , _temp347,_temp348)
      else
        _error(exception:method_error(_temp346, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp346)
      if _f.process ~= nil then
        _temp346 = _f:process(_temp347,_temp348)
      elseif _f.no_undermethod ~= nil then
        _temp346 =  _f:no_undermethod(string:new("process") , _temp347,_temp348)
      else
        _error(exception:method_error(_temp346, "process"))
      end

      elseif _temp346 == nil then
        _error(exception:null_error("_temp346", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp346))
      end

      local _t = _type(_temp346)
      if _t == "table" then
                      if _type(_temp346.out) == "function" or (_type(_temp346.out) == "table" and _rawget(_temp346.out, "__call_thing")) then
        return _temp346:out()
      elseif _temp346.out ~= nil then
        return _temp346.out

        elseif _temp346.no_undermethod ~= nil then
          return  _temp346:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp346, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp346)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp346, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp346)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp346, "out"))
      end

      elseif _temp346 == nil then
        _error(exception:null_error("_temp346", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp346))
      end

end

      local _t = _type(_temp344)
      if _t == "table" then
                      if _type(_temp344.map) == "function" or (_type(_temp344.map) == "table" and _rawget(_temp344.map, "__call_thing")) then
        _temp344 = _temp344:map(_temp347)
      elseif _temp344.map ~= nil then
        _temp344 = _temp344.map

        elseif _temp344.no_undermethod ~= nil then
          _temp344 =  _temp344:no_undermethod(string:new("map") , _temp347)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp344)
      if _n.map ~= nil then
        _temp344 = _n:map(_temp347)
      elseif _n.no_undermethod ~= nil then
        _temp344 =  _n:no_undermethod(string:new("map") , _temp347)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp344)
      if _f.map ~= nil then
        _temp344 = _f:map(_temp347)
      elseif _f.no_undermethod ~= nil then
        _temp344 =  _f:no_undermethod(string:new("map") , _temp347)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp344 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp344))
      end

_temp347 = string:new("\n")

      local _t = _type(_temp344)
      if _t == "table" then
                      if _type(_temp344.join) == "function" or (_type(_temp344.join) == "table" and _rawget(_temp344.join, "__call_thing")) then
        _temp344 = _temp344:join(_temp347)
      elseif _temp344.join ~= nil then
        _temp344 = _temp344.join

        elseif _temp344.no_undermethod ~= nil then
          _temp344 =  _temp344:no_undermethod(string:new("join") , _temp347)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp344)
      if _n.join ~= nil then
        _temp344 = _n:join(_temp347)
      elseif _n.no_undermethod ~= nil then
        _temp344 =  _n:no_undermethod(string:new("join") , _temp347)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp344)
      if _f.join ~= nil then
        _temp344 = _f:join(_temp347)
      elseif _f.no_undermethod ~= nil then
        _temp344 =  _f:no_undermethod(string:new("join") , _temp347)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp344 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp344))
      end


do
local _temp349 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp349 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp349 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp349 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp349 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp349 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp349 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp349 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp349 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp350 = nil
      local _t = _type(_temp349)
      if _t == "table" then
                      if _type(_temp349.out) == "function" or (_type(_temp349.out) == "table" and _rawget(_temp349.out, "__call_thing")) then
        _temp350 = _temp349:out()
      elseif _temp349.out ~= nil then
        _temp350 = _temp349.out

        elseif _temp349.no_undermethod ~= nil then
          _temp350 =  _temp349:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp349, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp349)
      if _n.out ~= nil then
        _temp350 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp350 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp349, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp349)
      if _f.out ~= nil then
        _temp350 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp350 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp349, "out"))
      end

      elseif _temp349 == nil then
        _error(exception:null_error("_temp349", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp349))
      end

local _temp351 = nil
    if _type(_temp344) == "function" or (_type(_temp344) == "table" and _rawget(_temp344, "__call_thing")) then
      _temp351 =  _temp344(_self)

    elseif _temp344 then
      _temp351 =  _temp344
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp351 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp351 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp351 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp351 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp352
      local _t = _type(_temp350)
      if _t == "table" then
                      if _type(_temp350._less_less) == "function" or (_type(_temp350._less_less) == "table" and _rawget(_temp350._less_less, "__call_thing")) then
        _temp352 = _temp350:_less_less(_temp351)
      elseif _temp350._less_less ~= nil then
        _temp352 = _temp350._less_less

        elseif _temp350.no_undermethod ~= nil then
          _temp352 =  _temp350:no_undermethod(string:new("<<") , _temp351)
        else
          _error(exception:method_error(_temp350, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp350)
      if _n._less_less ~= nil then
        _temp352 = _n:_less_less(_temp351)
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("<<") , _temp351)
      else
        _error(exception:method_error(_temp350, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp350)
      if _f._less_less ~= nil then
        _temp352 = _f:_less_less(_temp351)
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("<<") , _temp351)
      else
        _error(exception:method_error(_temp350, "<<"))
      end

      elseif _temp350 == nil then
        _error(exception:null_error("_temp350", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp350))
      end

_dummy_ = _temp352 
end

    if _type(_temp343) == "function" or (_type(_temp343) == "table" and _rawget(_temp343, "__call_thing")) then
      _temp347 =  _temp343(_self)

    elseif _temp343 then
      _temp347 =  _temp343
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp347 =  _self:last()
      elseif _self.last ~= nil then
        _temp347 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp347 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp347 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp364 = function (_self)

local _temp353
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp353 =  _self:my()
      elseif _self.my ~= nil then
        _temp353 =  _self.my

        elseif my ~= nil then
          _temp353 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp354 = nil
    if _type(_temp343) == "function" or (_type(_temp343) == "table" and _rawget(_temp343, "__call_thing")) then
      _temp354 =  _temp343(_self)

    elseif _temp343 then
      _temp354 =  _temp343
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp354 =  _self:last()
      elseif _self.last ~= nil then
        _temp354 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp354 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp354 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp353)
      if _t == "table" then
                      if _type(_temp353.process) == "function" or (_type(_temp353.process) == "table" and _rawget(_temp353.process, "__call_thing")) then
        _temp353 = _temp353:process(_temp354)
      elseif _temp353.process ~= nil then
        _temp353 = _temp353.process

        elseif _temp353.no_undermethod ~= nil then
          _temp353 =  _temp353:no_undermethod(string:new("process") , _temp354)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp353)
      if _n.process ~= nil then
        _temp353 = _n:process(_temp354)
      elseif _n.no_undermethod ~= nil then
        _temp353 =  _n:no_undermethod(string:new("process") , _temp354)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp353)
      if _f.process ~= nil then
        _temp353 = _f:process(_temp354)
      elseif _f.no_undermethod ~= nil then
        _temp353 =  _f:no_undermethod(string:new("process") , _temp354)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp353 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp353))
      end


local _temp354 
do
local _temp355 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp355 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp355 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp355 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp355 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp355 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp355 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp355 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp355 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp356 = nil
      local _t = _type(_temp355)
      if _t == "table" then
                      if _type(_temp355.out) == "function" or (_type(_temp355.out) == "table" and _rawget(_temp355.out, "__call_thing")) then
        _temp356 = _temp355:out()
      elseif _temp355.out ~= nil then
        _temp356 = _temp355.out

        elseif _temp355.no_undermethod ~= nil then
          _temp356 =  _temp355:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp355, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp355)
      if _n.out ~= nil then
        _temp356 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp356 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp355, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp355)
      if _f.out ~= nil then
        _temp356 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp356 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp355, "out"))
      end

      elseif _temp355 == nil then
        _error(exception:null_error("_temp355", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp355))
      end

local _temp357 = nil
        local _t = _type(_temp353)
        if _t == "table" then
          if _rawget(_temp353, "__call_thing") == nil then
            _temp357 = _temp353
          else
                  if _temp353 == nil then
              if _type(_self._temp353) == "function" or (_type(_self._temp353) == "table" and _rawget(_self._temp353, "__call_thing")) then
        _temp357 =  _self:_temp353()
      elseif _self._temp353 ~= nil then
        _temp357 =  _self._temp353

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp353"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp357 =  _temp353(_self)
      end

          end
        elseif _t == "number" then
          _temp357 = _temp353
        elseif _t == "function" then
                if _temp353 == nil then
              if _type(_self._temp353) == "function" or (_type(_self._temp353) == "table" and _rawget(_self._temp353, "__call_thing")) then
        _temp357 =  _self:_temp353()
      elseif _self._temp353 ~= nil then
        _temp357 =  _self._temp353

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp353"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp357 =  _temp353(_self)
      end

        elseif _temp353 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp358 = nil
      local _t = _type(_temp357)
      if _t == "table" then
                      if _type(_temp357.out) == "function" or (_type(_temp357.out) == "table" and _rawget(_temp357.out, "__call_thing")) then
        _temp358 = _temp357:out()
      elseif _temp357.out ~= nil then
        _temp358 = _temp357.out

        elseif _temp357.no_undermethod ~= nil then
          _temp358 =  _temp357:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp357, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp357)
      if _n.out ~= nil then
        _temp358 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp357, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp357)
      if _f.out ~= nil then
        _temp358 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp357, "out"))
      end

      elseif _temp357 == nil then
        _error(exception:null_error("_temp357", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp357))
      end

local _temp359 = string:new("\n")

local _temp360 = nil
do
local _temp361 = nil
        local _t = _type(_temp353)
        if _t == "table" then
          if _rawget(_temp353, "__call_thing") == nil then
            _temp361 = _temp353
          else
                  if _temp353 == nil then
              if _type(_self._temp353) == "function" or (_type(_self._temp353) == "table" and _rawget(_self._temp353, "__call_thing")) then
        _temp361 =  _self:_temp353()
      elseif _self._temp353 ~= nil then
        _temp361 =  _self._temp353

        elseif _self.no_undermethod ~= nil then
          _temp361 =  _self:no_undermethod(string:new("_temp353"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp361 =  _temp353(_self)
      end

          end
        elseif _t == "number" then
          _temp361 = _temp353
        elseif _t == "function" then
                if _temp353 == nil then
              if _type(_self._temp353) == "function" or (_type(_self._temp353) == "table" and _rawget(_self._temp353, "__call_thing")) then
        _temp361 =  _self:_temp353()
      elseif _self._temp353 ~= nil then
        _temp361 =  _self._temp353

        elseif _self.no_undermethod ~= nil then
          _temp361 =  _self:no_undermethod(string:new("_temp353"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp361 =  _temp353(_self)
      end

        elseif _temp353 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp361)
      if _t == "table" then
                      if _type(_temp361.var) == "function" or (_type(_temp361.var) == "table" and _rawget(_temp361.var, "__call_thing")) then
        _temp361 = _temp361:var()
      elseif _temp361.var ~= nil then
        _temp361 = _temp361.var

        elseif _temp361.no_undermethod ~= nil then
          _temp361 =  _temp361:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp361, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp361)
      if _n.var ~= nil then
        _temp361 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp361 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp361, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp361)
      if _f.var ~= nil then
        _temp361 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp361 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp361, "var"))
      end

      elseif _temp361 == nil then
        _error(exception:null_error("_temp361", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp361))
      end


_temp360 = string:new("return " .. _tostring(_temp361) .. "\n")
end
local _temp362
      local _t = _type(_temp356)
      if _t == "table" then
                      if _type(_temp356._less_less) == "function" or (_type(_temp356._less_less) == "table" and _rawget(_temp356._less_less, "__call_thing")) then
        _temp362 = _temp356:_less_less(_temp358)
      elseif _temp356._less_less ~= nil then
        _temp362 = _temp356._less_less

        elseif _temp356.no_undermethod ~= nil then
          _temp362 =  _temp356:no_undermethod(string:new("<<") , _temp358)
        else
          _error(exception:method_error(_temp356, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp356)
      if _n._less_less ~= nil then
        _temp362 = _n:_less_less(_temp358)
      elseif _n.no_undermethod ~= nil then
        _temp362 =  _n:no_undermethod(string:new("<<") , _temp358)
      else
        _error(exception:method_error(_temp356, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp356)
      if _f._less_less ~= nil then
        _temp362 = _f:_less_less(_temp358)
      elseif _f.no_undermethod ~= nil then
        _temp362 =  _f:no_undermethod(string:new("<<") , _temp358)
      else
        _error(exception:method_error(_temp356, "<<"))
      end

      elseif _temp356 == nil then
        _error(exception:null_error("_temp356", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp356))
      end

local _temp358
      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362._less_less) == "function" or (_type(_temp362._less_less) == "table" and _rawget(_temp362._less_less, "__call_thing")) then
        _temp358 = _temp362:_less_less(_temp359)
      elseif _temp362._less_less ~= nil then
        _temp358 = _temp362._less_less

        elseif _temp362.no_undermethod ~= nil then
          _temp358 =  _temp362:no_undermethod(string:new("<<") , _temp359)
        else
          _error(exception:method_error(_temp362, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n._less_less ~= nil then
        _temp358 = _n:_less_less(_temp359)
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("<<") , _temp359)
      else
        _error(exception:method_error(_temp362, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f._less_less ~= nil then
        _temp358 = _f:_less_less(_temp359)
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("<<") , _temp359)
      else
        _error(exception:method_error(_temp362, "<<"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

local _temp359
      local _t = _type(_temp358)
      if _t == "table" then
                      if _type(_temp358._less_less) == "function" or (_type(_temp358._less_less) == "table" and _rawget(_temp358._less_less, "__call_thing")) then
        _temp359 = _temp358:_less_less(_temp360)
      elseif _temp358._less_less ~= nil then
        _temp359 = _temp358._less_less

        elseif _temp358.no_undermethod ~= nil then
          _temp359 =  _temp358:no_undermethod(string:new("<<") , _temp360)
        else
          _error(exception:method_error(_temp358, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp358)
      if _n._less_less ~= nil then
        _temp359 = _n:_less_less(_temp360)
      elseif _n.no_undermethod ~= nil then
        _temp359 =  _n:no_undermethod(string:new("<<") , _temp360)
      else
        _error(exception:method_error(_temp358, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp358)
      if _f._less_less ~= nil then
        _temp359 = _f:_less_less(_temp360)
      elseif _f.no_undermethod ~= nil then
        _temp359 =  _f:no_undermethod(string:new("<<") , _temp360)
      else
        _error(exception:method_error(_temp358, "<<"))
      end

      elseif _temp358 == nil then
        _error(exception:null_error("_temp358", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp358))
      end

_temp354 = _temp359 
end

return _temp354
end


local _temp374 = function (_self)

local _temp365 = nil
        local _t = _type(_temp342)
        if _t == "table" then
          if _rawget(_temp342, "__call_thing") == nil then
            _temp365 = _temp342
          else
                  if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp365 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp365 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp365 =  _temp342(_self)
      end

          end
        elseif _t == "number" then
          _temp365 = _temp342
        elseif _t == "function" then
                if _temp342 == nil then
              if _type(_self._temp342) == "function" or (_type(_self._temp342) == "table" and _rawget(_self._temp342, "__call_thing")) then
        _temp365 =  _self:_temp342()
      elseif _self._temp342 ~= nil then
        _temp365 =  _self._temp342

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp342"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp365 =  _temp342(_self)
      end

        elseif _temp342 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp365)
      if _t == "table" then
                      if _type(_temp365.empty_question) == "function" or (_type(_temp365.empty_question) == "table" and _rawget(_temp365.empty_question, "__call_thing")) then
        _temp365 = _temp365:empty_question()
      elseif _temp365.empty_question ~= nil then
        _temp365 = _temp365.empty_question

        elseif _temp365.no_undermethod ~= nil then
          _temp365 =  _temp365:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp365, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp365)
      if _n.empty_question ~= nil then
        _temp365 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp365 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp365, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp365)
      if _f.empty_question ~= nil then
        _temp365 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp365 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp365, "empty?"))
      end

      elseif _temp365 == nil then
        _error(exception:null_error("_temp365", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp365))
      end



local _temp372 = function (_self)

local _temp366 
do
local _temp367 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp367 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp367 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp367 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp367 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp367 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp367 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp367 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp367 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp367 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp367 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp368 = nil
      local _t = _type(_temp367)
      if _t == "table" then
                      if _type(_temp367.out) == "function" or (_type(_temp367.out) == "table" and _rawget(_temp367.out, "__call_thing")) then
        _temp368 = _temp367:out()
      elseif _temp367.out ~= nil then
        _temp368 = _temp367.out

        elseif _temp367.no_undermethod ~= nil then
          _temp368 =  _temp367:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp367, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp367)
      if _n.out ~= nil then
        _temp368 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp368 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp367, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp367)
      if _f.out ~= nil then
        _temp368 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp368 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp367, "out"))
      end

      elseif _temp367 == nil then
        _error(exception:null_error("_temp367", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp367))
      end

local _temp369 = string:new("return object:null()")
local _temp370
      local _t = _type(_temp368)
      if _t == "table" then
                      if _type(_temp368._less_less) == "function" or (_type(_temp368._less_less) == "table" and _rawget(_temp368._less_less, "__call_thing")) then
        _temp370 = _temp368:_less_less(_temp369)
      elseif _temp368._less_less ~= nil then
        _temp370 = _temp368._less_less

        elseif _temp368.no_undermethod ~= nil then
          _temp370 =  _temp368:no_undermethod(string:new("<<") , _temp369)
        else
          _error(exception:method_error(_temp368, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp368)
      if _n._less_less ~= nil then
        _temp370 = _n:_less_less(_temp369)
      elseif _n.no_undermethod ~= nil then
        _temp370 =  _n:no_undermethod(string:new("<<") , _temp369)
      else
        _error(exception:method_error(_temp368, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp368)
      if _f._less_less ~= nil then
        _temp370 = _f:_less_less(_temp369)
      elseif _f.no_undermethod ~= nil then
        _temp370 =  _f:no_undermethod(string:new("<<") , _temp369)
      else
        _error(exception:method_error(_temp368, "<<"))
      end

      elseif _temp368 == nil then
        _error(exception:null_error("_temp368", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp368))
      end

_temp366 = _temp370 
end

return _temp366
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp365,_temp372)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp365,_temp372)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp365,_temp372)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp365,_temp372)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp347,_temp364,_temp374)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp347,_temp364,_temp374)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp347,_temp364,_temp374)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp347,_temp364,_temp374)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp374 =  _self:my()
      elseif _self.my ~= nil then
        _temp374 =  _self.my

        elseif my ~= nil then
          _temp374 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp374)
      if _t == "table" then
                      if _type(_temp374.env) == "function" or (_type(_temp374.env) == "table" and _rawget(_temp374.env, "__call_thing")) then
        _temp374 = _temp374:env()
      elseif _temp374.env ~= nil then
        _temp374 = _temp374.env

        elseif _temp374.no_undermethod ~= nil then
          _temp374 =  _temp374:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp374, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp374)
      if _n.env ~= nil then
        _temp374 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp374 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp374, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp374)
      if _f.env ~= nil then
        _temp374 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp374 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp374, "env"))
      end

      elseif _temp374 == nil then
        _error(exception:null_error("_temp374", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp374))
      end

      local _t = _type(_temp374)
      if _t == "table" then
                      if _type(_temp374.pop_underscope) == "function" or (_type(_temp374.pop_underscope) == "table" and _rawget(_temp374.pop_underscope, "__call_thing")) then
        _dummy_ = _temp374:pop_underscope()
      elseif _temp374.pop_underscope ~= nil then
        _dummy_ = _temp374.pop_underscope

        elseif _temp374.no_undermethod ~= nil then
          _dummy_ =  _temp374:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp374, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp374)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp374, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp374)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp374, "pop_scope"))
      end

      elseif _temp374 == nil then
        _error(exception:null_error("_temp374", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp374))
      end

do
local _temp375 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp375 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp375 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp375 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp375 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp375 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp375 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp376 = nil
      local _t = _type(_temp375)
      if _t == "table" then
                      if _type(_temp375.out) == "function" or (_type(_temp375.out) == "table" and _rawget(_temp375.out, "__call_thing")) then
        _temp376 = _temp375:out()
      elseif _temp375.out ~= nil then
        _temp376 = _temp375.out

        elseif _temp375.no_undermethod ~= nil then
          _temp376 =  _temp375:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp375, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp375)
      if _n.out ~= nil then
        _temp376 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp376 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp375)
      if _f.out ~= nil then
        _temp376 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp376 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _temp375 == nil then
        _error(exception:null_error("_temp375", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp375))
      end

local _temp377 = string:new("\nend\n")
local _temp378
      local _t = _type(_temp376)
      if _t == "table" then
                      if _type(_temp376._less_less) == "function" or (_type(_temp376._less_less) == "table" and _rawget(_temp376._less_less, "__call_thing")) then
        _temp378 = _temp376:_less_less(_temp377)
      elseif _temp376._less_less ~= nil then
        _temp378 = _temp376._less_less

        elseif _temp376.no_undermethod ~= nil then
          _temp378 =  _temp376:no_undermethod(string:new("<<") , _temp377)
        else
          _error(exception:method_error(_temp376, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp376)
      if _n._less_less ~= nil then
        _temp378 = _n:_less_less(_temp377)
      elseif _n.no_undermethod ~= nil then
        _temp378 =  _n:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp376)
      if _f._less_less ~= nil then
        _temp378 = _f:_less_less(_temp377)
      elseif _f.no_undermethod ~= nil then
        _temp378 =  _f:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _temp376 == nil then
        _error(exception:null_error("_temp376", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp376))
      end

_dummy_ = _temp378 
end

do
local _temp364
    if _type(_temp318) == "function" or (_type(_temp318) == "table" and _rawget(_temp318, "__call_thing")) then
      _temp364 =  _temp318(_self)

    elseif _temp318 then
      _temp364 =  _temp318
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp364 =  _self:res()
      elseif _self.res ~= nil then
        _temp364 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp364 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp364 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp379 = string:new("function")

local _temp380 = string:new("type")

_temp364:set(_temp380, _temp379)
end

do
local _temp381 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp381 =  _self:my()
      elseif _self.my ~= nil then
        _temp381 =  _self.my

        elseif my ~= nil then
          _temp381 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp382 = nil
      local _t = _type(_temp381)
      if _t == "table" then
                      if _type(_temp381.liftable_underfunctions) == "function" or (_type(_temp381.liftable_underfunctions) == "table" and _rawget(_temp381.liftable_underfunctions, "__call_thing")) then
        _temp382 = _temp381:liftable_underfunctions()
      elseif _temp381.liftable_underfunctions ~= nil then
        _temp382 = _temp381.liftable_underfunctions

        elseif _temp381.no_undermethod ~= nil then
          _temp382 =  _temp381:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp381, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp381)
      if _n.liftable_underfunctions ~= nil then
        _temp382 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp382 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp381, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp381)
      if _f.liftable_underfunctions ~= nil then
        _temp382 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp382 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp381, "liftable_functions"))
      end

      elseif _temp381 == nil then
        _error(exception:null_error("_temp381", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp381))
      end

local _temp383 = nil
    if _type(_temp318) == "function" or (_type(_temp318) == "table" and _rawget(_temp318, "__call_thing")) then
      _temp383 =  _temp318(_self)

    elseif _temp318 then
      _temp383 =  _temp318
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp383 =  _self:res()
      elseif _self.res ~= nil then
        _temp383 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp383 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp383 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp384
      local _t = _type(_temp382)
      if _t == "table" then
                      if _type(_temp382._less_less) == "function" or (_type(_temp382._less_less) == "table" and _rawget(_temp382._less_less, "__call_thing")) then
        _temp384 = _temp382:_less_less(_temp383)
      elseif _temp382._less_less ~= nil then
        _temp384 = _temp382._less_less

        elseif _temp382.no_undermethod ~= nil then
          _temp384 =  _temp382:no_undermethod(string:new("<<") , _temp383)
        else
          _error(exception:method_error(_temp382, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp382)
      if _n._less_less ~= nil then
        _temp384 = _n:_less_less(_temp383)
      elseif _n.no_undermethod ~= nil then
        _temp384 =  _n:no_undermethod(string:new("<<") , _temp383)
      else
        _error(exception:method_error(_temp382, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp382)
      if _f._less_less ~= nil then
        _temp384 = _f:_less_less(_temp383)
      elseif _f.no_undermethod ~= nil then
        _temp384 =  _f:no_undermethod(string:new("<<") , _temp383)
      else
        _error(exception:method_error(_temp382, "<<"))
      end

      elseif _temp382 == nil then
        _error(exception:null_error("_temp382", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp382))
      end

_dummy_ = _temp384 
end

local _temp385
        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp347 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp347 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp347 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp347 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp347 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp347 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp347 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp347 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp347)
      if _t == "table" then
                      if _type(_temp347.upvars) == "function" or (_type(_temp347.upvars) == "table" and _rawget(_temp347.upvars, "__call_thing")) then
        _temp347 = _temp347:upvars()
      elseif _temp347.upvars ~= nil then
        _temp347 = _temp347.upvars

        elseif _temp347.no_undermethod ~= nil then
          _temp347 =  _temp347:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp347, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp347)
      if _n.upvars ~= nil then
        _temp347 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp347 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp347, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp347)
      if _f.upvars ~= nil then
        _temp347 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp347 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp347, "upvars"))
      end

      elseif _temp347 == nil then
        _error(exception:null_error("_temp347", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp347))
      end



local _temp389 = function (_self)

local _temp386 = nil
do
local _temp387 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp387 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp387 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp387 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp387 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp387 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp387 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp387 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp387 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp387 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp387 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp387)
      if _t == "table" then
                      if _type(_temp387.var) == "function" or (_type(_temp387.var) == "table" and _rawget(_temp387.var, "__call_thing")) then
        _temp387 = _temp387:var()
      elseif _temp387.var ~= nil then
        _temp387 = _temp387.var

        elseif _temp387.no_undermethod ~= nil then
          _temp387 =  _temp387:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp387, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp387)
      if _n.var ~= nil then
        _temp387 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp387 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp387, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp387)
      if _f.var ~= nil then
        _temp387 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp387 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp387, "var"))
      end

      elseif _temp387 == nil then
        _error(exception:null_error("_temp387", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp387))
      end


_temp386 = string:new("_lifted_call(" .. _tostring(_temp387) .. ", {})")
end

return _temp386
end


local _temp393 = function (_self)

local _temp390 = nil
do
local _temp391 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp391 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp391 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp391 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp391 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp391 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp391 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp391)
      if _t == "table" then
                      if _type(_temp391.var) == "function" or (_type(_temp391.var) == "table" and _rawget(_temp391.var, "__call_thing")) then
        _temp391 = _temp391:var()
      elseif _temp391.var ~= nil then
        _temp391 = _temp391.var

        elseif _temp391.no_undermethod ~= nil then
          _temp391 =  _temp391:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp391, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp391)
      if _n.var ~= nil then
        _temp391 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp391 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp391, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp391)
      if _f.var ~= nil then
        _temp391 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp391 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp391, "var"))
      end

      elseif _temp391 == nil then
        _error(exception:null_error("_temp391", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp391))
      end


_temp390 = string:new("_lifted_call(" .. _tostring(_temp391) .. ")")
end

return _temp390
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp385 =  true_question(_self, _temp347,_temp389,_temp393)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp385 =  _self:true_question(_temp347,_temp389,_temp393)
      elseif _self.true_question ~= nil then
        _temp385 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp385 =  _self:no_undermethod(string:new("true?") , _temp347,_temp389,_temp393)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp385 =  no_undermethod(_self, string:new("true?") , _temp347,_temp389,_temp393)
      else
        _error(exception:name_error("true?"))
      end
    end

local _temp394
    if _type(_temp313) == "function" or (_type(_temp313) == "table" and _rawget(_temp313, "__call_thing")) then
      _temp393 =  _temp313(_self)

    elseif _temp313 then
      _temp393 =  _temp313
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp393 =  _self:var()
      elseif _self.var ~= nil then
        _temp393 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp393 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp393 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(_temp385) == "function" or (_type(_temp385) == "table" and _rawget(_temp385, "__call_thing")) then
      _temp389 =  _temp385(_self)

    elseif _temp385 then
      _temp389 =  _temp385
    else
            if _type(_self.lifted_undercall) == "function" or (_type(_self.lifted_undercall) == "table" and _rawget(_self.lifted_undercall, "__call_thing")) then
        _temp389 =  _self:lifted_undercall()
      elseif _self.lifted_undercall ~= nil then
        _temp389 =  _self.lifted_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp389 =  _self:no_undermethod(string:new("lifted_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp389 =  no_undermethod(_self, string:new("lifted_call"))
      else
        _error(exception:name_error("lifted_call"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp394 =  set_underresult(_self, _temp393,_temp389)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp394 =  _self:set_underresult(_temp393,_temp389)
      elseif _self.set_underresult ~= nil then
        _temp394 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp394 =  _self:no_undermethod(string:new("set_result") , _temp393,_temp389)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp394 =  no_undermethod(_self, string:new("set_result") , _temp393,_temp389)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp389 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp389 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp389 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp389 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp389 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp389 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp389 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp389 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp389 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp389 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp389)
      if _t == "table" then
                      if _type(_temp389.upvars) == "function" or (_type(_temp389.upvars) == "table" and _rawget(_temp389.upvars, "__call_thing")) then
        _temp389 = _temp389:upvars()
      elseif _temp389.upvars ~= nil then
        _temp389 = _temp389.upvars

        elseif _temp389.no_undermethod ~= nil then
          _temp389 =  _temp389:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp389, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp389)
      if _n.upvars ~= nil then
        _temp389 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp389 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp389, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp389)
      if _f.upvars ~= nil then
        _temp389 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp389 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp389, "upvars"))
      end

      elseif _temp389 == nil then
        _error(exception:null_error("_temp389", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp389))
      end



local _temp410 = function (_self)

local _temp395
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp395 =  _self:my()
      elseif _self.my ~= nil then
        _temp395 =  _self.my

        elseif my ~= nil then
          _temp395 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp395)
      if _t == "table" then
                      if _type(_temp395.env) == "function" or (_type(_temp395.env) == "table" and _rawget(_temp395.env, "__call_thing")) then
        _temp395 = _temp395:env()
      elseif _temp395.env ~= nil then
        _temp395 = _temp395.env

        elseif _temp395.no_undermethod ~= nil then
          _temp395 =  _temp395:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("e", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp395)
      if _n.env ~= nil then
        _temp395 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp395 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp395)
      if _f.env ~= nil then
        _temp395 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp395 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _temp395 == nil then
        _error(exception:null_error("e", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp395))
      end


local _temp396 
do
local _temp397 = nil
        local _t = _type(_temp394)
        if _t == "table" then
          if _rawget(_temp394, "__call_thing") == nil then
            _temp397 = _temp394
          else
                  if _temp394 == nil then
              if _type(_self._temp394) == "function" or (_type(_self._temp394) == "table" and _rawget(_self._temp394, "__call_thing")) then
        _temp397 =  _self:_temp394()
      elseif _self._temp394 ~= nil then
        _temp397 =  _self._temp394

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp394"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp397 =  _temp394(_self)
      end

          end
        elseif _t == "number" then
          _temp397 = _temp394
        elseif _t == "function" then
                if _temp394 == nil then
              if _type(_self._temp394) == "function" or (_type(_self._temp394) == "table" and _rawget(_self._temp394, "__call_thing")) then
        _temp397 =  _self:_temp394()
      elseif _self._temp394 ~= nil then
        _temp397 =  _self._temp394

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp394"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp397 =  _temp394(_self)
      end

        elseif _temp394 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp398 = nil
      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.out) == "function" or (_type(_temp397.out) == "table" and _rawget(_temp397.out, "__call_thing")) then
        _temp398 = _temp397:out()
      elseif _temp397.out ~= nil then
        _temp398 = _temp397.out

        elseif _temp397.no_undermethod ~= nil then
          _temp398 =  _temp397:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp397, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.out ~= nil then
        _temp398 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp398 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp397, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.out ~= nil then
        _temp398 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp398 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp397, "out"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end

local _temp399 = nil
        local _t = _type(_temp314)
        if _t == "table" then
          if _rawget(_temp314, "__call_thing") == nil then
            _temp399 = _temp314
          else
                  if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp399 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp399 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp399 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp399 =  _temp314(_self)
      end

          end
        elseif _t == "number" then
          _temp399 = _temp314
        elseif _t == "function" then
                if _temp314 == nil then
              if _type(_self._temp314) == "function" or (_type(_self._temp314) == "table" and _rawget(_self._temp314, "__call_thing")) then
        _temp399 =  _self:_temp314()
      elseif _self._temp314 ~= nil then
        _temp399 =  _self._temp314

        elseif _self.no_undermethod ~= nil then
          _temp399 =  _self:no_undermethod(string:new("_temp314"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp399 =  _temp314(_self)
      end

        elseif _temp314 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp399)
      if _t == "table" then
                      if _type(_temp399.upvars) == "function" or (_type(_temp399.upvars) == "table" and _rawget(_temp399.upvars, "__call_thing")) then
        _temp399 = _temp399:upvars()
      elseif _temp399.upvars ~= nil then
        _temp399 = _temp399.upvars

        elseif _temp399.no_undermethod ~= nil then
          _temp399 =  _temp399:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp399, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp399)
      if _n.upvars ~= nil then
        _temp399 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp399 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp399, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp399)
      if _f.upvars ~= nil then
        _temp399 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp399 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp399, "upvars"))
      end

      elseif _temp399 == nil then
        _error(exception:null_error("_temp399", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp399))
      end


local _temp408 = function (_self, _temp400)
        if _temp400 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp401 = nil
do
local _temp402 = nil
        local _t = _type(_temp394)
        if _t == "table" then
          if _rawget(_temp394, "__call_thing") == nil then
            _temp402 = _temp394
          else
                  if _temp394 == nil then
              if _type(_self._temp394) == "function" or (_type(_self._temp394) == "table" and _rawget(_self._temp394, "__call_thing")) then
        _temp402 =  _self:_temp394()
      elseif _self._temp394 ~= nil then
        _temp402 =  _self._temp394

        elseif _self.no_undermethod ~= nil then
          _temp402 =  _self:no_undermethod(string:new("_temp394"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp402 =  _temp394(_self)
      end

          end
        elseif _t == "number" then
          _temp402 = _temp394
        elseif _t == "function" then
                if _temp394 == nil then
              if _type(_self._temp394) == "function" or (_type(_self._temp394) == "table" and _rawget(_self._temp394, "__call_thing")) then
        _temp402 =  _self:_temp394()
      elseif _self._temp394 ~= nil then
        _temp402 =  _self._temp394

        elseif _self.no_undermethod ~= nil then
          _temp402 =  _self:no_undermethod(string:new("_temp394"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp402 =  _temp394(_self)
      end

        elseif _temp394 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp402)
      if _t == "table" then
                      if _type(_temp402.var) == "function" or (_type(_temp402.var) == "table" and _rawget(_temp402.var, "__call_thing")) then
        _temp402 = _temp402:var()
      elseif _temp402.var ~= nil then
        _temp402 = _temp402.var

        elseif _temp402.no_undermethod ~= nil then
          _temp402 =  _temp402:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp402, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp402)
      if _n.var ~= nil then
        _temp402 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp402 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp402, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp402)
      if _f.var ~= nil then
        _temp402 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp402 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp402, "var"))
      end

      elseif _temp402 == nil then
        _error(exception:null_error("_temp402", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp402))
      end


local _temp403
do
        local _t = _type(_temp315)
        if _t == "table" then
          if _rawget(_temp315, "__call_thing") == nil then
            _temp403 = _temp315
          else
                  if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp403 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp403 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp403 =  _temp315(_self)
      end

          end
        elseif _t == "number" then
          _temp403 = _temp315
        elseif _t == "function" then
                if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp403 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp403 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp403 =  _temp315(_self)
      end

        elseif _temp315 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp403)
      if _t == "table" then
                      if _type(_temp403.env) == "function" or (_type(_temp403.env) == "table" and _rawget(_temp403.env, "__call_thing")) then
        _temp403 = _temp403:env()
      elseif _temp403.env ~= nil then
        _temp403 = _temp403.env

        elseif _temp403.no_undermethod ~= nil then
          _temp403 =  _temp403:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp403, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp403)
      if _n.env ~= nil then
        _temp403 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp403 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp403, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp403)
      if _f.env ~= nil then
        _temp403 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp403 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp403, "env"))
      end

      elseif _temp403 == nil then
        _error(exception:null_error("_temp403", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp403))
      end

local _temp404 = nil
    if _type(_temp400) == "function" or (_type(_temp400) == "table" and _rawget(_temp400, "__call_thing")) then
      _temp404 =  _temp400(_self)

    elseif _temp400 then
      _temp404 =  _temp400
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp404 =  _self:u()
      elseif _self.u ~= nil then
        _temp404 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp404 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp404 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp403 = _temp403:get(_temp404)
end

local _temp405
do
        local _t = _type(_temp315)
        if _t == "table" then
          if _rawget(_temp315, "__call_thing") == nil then
            _temp405 = _temp315
          else
                  if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp405 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp405 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp405 =  _temp315(_self)
      end

          end
        elseif _t == "number" then
          _temp405 = _temp315
        elseif _t == "function" then
                if _temp315 == nil then
              if _type(_self._temp315) == "function" or (_type(_self._temp315) == "table" and _rawget(_self._temp315, "__call_thing")) then
        _temp405 =  _self:_temp315()
      elseif _self._temp315 ~= nil then
        _temp405 =  _self._temp315

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp315"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp405 =  _temp315(_self)
      end

        elseif _temp315 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp405)
      if _t == "table" then
                      if _type(_temp405.env) == "function" or (_type(_temp405.env) == "table" and _rawget(_temp405.env, "__call_thing")) then
        _temp405 = _temp405:env()
      elseif _temp405.env ~= nil then
        _temp405 = _temp405.env

        elseif _temp405.no_undermethod ~= nil then
          _temp405 =  _temp405:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp405, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp405)
      if _n.env ~= nil then
        _temp405 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp405 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp405, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp405)
      if _f.env ~= nil then
        _temp405 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp405 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp405, "env"))
      end

      elseif _temp405 == nil then
        _error(exception:null_error("_temp405", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp405))
      end

local _temp406 = nil
    if _type(_temp400) == "function" or (_type(_temp400) == "table" and _rawget(_temp400, "__call_thing")) then
      _temp406 =  _temp400(_self)

    elseif _temp400 then
      _temp406 =  _temp400
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp406 =  _self:u()
      elseif _self.u ~= nil then
        _temp406 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp406 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp406 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp405 = _temp405:get(_temp406)
end

_temp401 = string:new("" .. _tostring(_temp402) .. ".arg_table['" .. _tostring(_temp403) .. "'] = " .. _tostring(_temp405) .. "")
end

return _temp401
end

      local _t = _type(_temp399)
      if _t == "table" then
                      if _type(_temp399.map) == "function" or (_type(_temp399.map) == "table" and _rawget(_temp399.map, "__call_thing")) then
        _temp399 = _temp399:map(_temp408)
      elseif _temp399.map ~= nil then
        _temp399 = _temp399.map

        elseif _temp399.no_undermethod ~= nil then
          _temp399 =  _temp399:no_undermethod(string:new("map") , _temp408)
        else
          _error(exception:method_error(_temp399, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp399)
      if _n.map ~= nil then
        _temp399 = _n:map(_temp408)
      elseif _n.no_undermethod ~= nil then
        _temp399 =  _n:no_undermethod(string:new("map") , _temp408)
      else
        _error(exception:method_error(_temp399, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp399)
      if _f.map ~= nil then
        _temp399 = _f:map(_temp408)
      elseif _f.no_undermethod ~= nil then
        _temp399 =  _f:no_undermethod(string:new("map") , _temp408)
      else
        _error(exception:method_error(_temp399, "map"))
      end

      elseif _temp399 == nil then
        _error(exception:null_error("_temp399", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp399))
      end

_temp408 = string:new("\n")

      local _t = _type(_temp399)
      if _t == "table" then
                      if _type(_temp399.join) == "function" or (_type(_temp399.join) == "table" and _rawget(_temp399.join, "__call_thing")) then
        _temp399 = _temp399:join(_temp408)
      elseif _temp399.join ~= nil then
        _temp399 = _temp399.join

        elseif _temp399.no_undermethod ~= nil then
          _temp399 =  _temp399:no_undermethod(string:new("join") , _temp408)
        else
          _error(exception:method_error(_temp399, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp399)
      if _n.join ~= nil then
        _temp399 = _n:join(_temp408)
      elseif _n.no_undermethod ~= nil then
        _temp399 =  _n:no_undermethod(string:new("join") , _temp408)
      else
        _error(exception:method_error(_temp399, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp399)
      if _f.join ~= nil then
        _temp399 = _f:join(_temp408)
      elseif _f.no_undermethod ~= nil then
        _temp399 =  _f:no_undermethod(string:new("join") , _temp408)
      else
        _error(exception:method_error(_temp399, "join"))
      end

      elseif _temp399 == nil then
        _error(exception:null_error("_temp399", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp399))
      end

local _temp408
      local _t = _type(_temp398)
      if _t == "table" then
                      if _type(_temp398._less_less) == "function" or (_type(_temp398._less_less) == "table" and _rawget(_temp398._less_less, "__call_thing")) then
        _temp408 = _temp398:_less_less(_temp399)
      elseif _temp398._less_less ~= nil then
        _temp408 = _temp398._less_less

        elseif _temp398.no_undermethod ~= nil then
          _temp408 =  _temp398:no_undermethod(string:new("<<") , _temp399)
        else
          _error(exception:method_error(_temp398, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp398)
      if _n._less_less ~= nil then
        _temp408 = _n:_less_less(_temp399)
      elseif _n.no_undermethod ~= nil then
        _temp408 =  _n:no_undermethod(string:new("<<") , _temp399)
      else
        _error(exception:method_error(_temp398, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp398)
      if _f._less_less ~= nil then
        _temp408 = _f:_less_less(_temp399)
      elseif _f.no_undermethod ~= nil then
        _temp408 =  _f:no_undermethod(string:new("<<") , _temp399)
      else
        _error(exception:method_error(_temp398, "<<"))
      end

      elseif _temp398 == nil then
        _error(exception:null_error("_temp398", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp398))
      end

_temp396 = _temp408 
end

return _temp396
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp389,_temp410)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp389,_temp410)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp389,_temp410)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp389,_temp410)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp394) == "function" or (_type(_temp394) == "table" and _rawget(_temp394, "__call_thing")) then
      return  _temp394(_self)

    elseif _temp394 then
      return  _temp394
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp266)
      if _t == "table" then
                      if _type(_temp266.walk) == "function" or (_type(_temp266.walk) == "table" and _rawget(_temp266.walk, "__call_thing")) then
        _dummy_ = _temp266:walk(_temp4,_temp389)
      elseif _temp266.walk ~= nil then
        _dummy_ = _temp266.walk

        elseif _temp266.no_undermethod ~= nil then
          _dummy_ =  _temp266:no_undermethod(string:new("walk") , _temp4,_temp389)
        else
          _error(exception:method_error(_temp266, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp266)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp389)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp389)
      else
        _error(exception:method_error(_temp266, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp266)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp389)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp389)
      else
        _error(exception:method_error(_temp266, "walk"))
      end

      elseif _temp266 == nil then
        _error(exception:null_error("_temp266", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp266))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp389 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp389 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp389 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp389 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp389 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp389 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp389 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp389 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp389 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp389 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp418 = function (_self, _temp412,_temp411)
        if _temp412 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp411 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp411 =  null(_self)

    elseif null then
      _temp411 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp411 =  _self:null()
      elseif _self.null ~= nil then
        _temp411 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp411 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp411 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp413
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp413 =  _self:my()
      elseif _self.my ~= nil then
        _temp413 =  _self.my

        elseif my ~= nil then
          _temp413 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.env) == "function" or (_type(_temp413.env) == "table" and _rawget(_temp413.env, "__call_thing")) then
        _temp413 = _temp413:env()
      elseif _temp413.env ~= nil then
        _temp413 = _temp413.env

        elseif _temp413.no_undermethod ~= nil then
          _temp413 =  _temp413:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.env ~= nil then
        _temp413 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp413 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.env ~= nil then
        _temp413 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp413 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end

local _temp414 = nil
        local _t = _type(_temp412)
        if _t == "table" then
          if _rawget(_temp412, "__call_thing") == nil then
            _temp414 = _temp412
          else
                  if _temp412 == nil then
              if _type(_self._temp412) == "function" or (_type(_self._temp412) == "table" and _rawget(_self._temp412, "__call_thing")) then
        _temp414 =  _self:_temp412()
      elseif _self._temp412 ~= nil then
        _temp414 =  _self._temp412

        elseif _self.no_undermethod ~= nil then
          _temp414 =  _self:no_undermethod(string:new("_temp412"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp414 =  _temp412(_self)
      end

          end
        elseif _t == "number" then
          _temp414 = _temp412
        elseif _t == "function" then
                if _temp412 == nil then
              if _type(_self._temp412) == "function" or (_type(_self._temp412) == "table" and _rawget(_self._temp412, "__call_thing")) then
        _temp414 =  _self:_temp412()
      elseif _self._temp412 ~= nil then
        _temp414 =  _self._temp412

        elseif _self.no_undermethod ~= nil then
          _temp414 =  _self:no_undermethod(string:new("_temp412"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp414 =  _temp412(_self)
      end

        elseif _temp412 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp414)
      if _t == "table" then
                      if _type(_temp414.id) == "function" or (_type(_temp414.id) == "table" and _rawget(_temp414.id, "__call_thing")) then
        _temp414 = _temp414:id()
      elseif _temp414.id ~= nil then
        _temp414 = _temp414.id

        elseif _temp414.no_undermethod ~= nil then
          _temp414 =  _temp414:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp414, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp414)
      if _n.id ~= nil then
        _temp414 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp414 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp414, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp414)
      if _f.id ~= nil then
        _temp414 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp414 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp414, "id"))
      end

      elseif _temp414 == nil then
        _error(exception:null_error("_temp414", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp414))
      end


      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.new_undervar) == "function" or (_type(_temp413.new_undervar) == "table" and _rawget(_temp413.new_undervar, "__call_thing")) then
        _temp413 = _temp413:new_undervar(_temp414)
      elseif _temp413.new_undervar ~= nil then
        _temp413 = _temp413.new_undervar

        elseif _temp413.no_undermethod ~= nil then
          _temp413 =  _temp413:no_undermethod(string:new("new_var") , _temp414)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.new_undervar ~= nil then
        _temp413 = _n:new_undervar(_temp414)
      elseif _n.no_undermethod ~= nil then
        _temp413 =  _n:no_undermethod(string:new("new_var") , _temp414)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.new_undervar ~= nil then
        _temp413 = _f:new_undervar(_temp414)
      elseif _f.no_undermethod ~= nil then
        _temp413 =  _f:no_undermethod(string:new("new_var") , _temp414)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end


    if _type(_temp413) == "function" or (_type(_temp413) == "table" and _rawget(_temp413, "__call_thing")) then
      _temp414 =  _temp413(_self)

    elseif _temp413 then
      _temp414 =  _temp413
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp414 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp414 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp414 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp414 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp415 = string:new("")

local _temp416 = string:new("arg")

local _temp417 = {}
_temp417[string:new("arg_type")] = _temp416
_temp417 = hash:new(_temp417)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp414,_temp415,_temp417)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp414,_temp415,_temp417)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp414,_temp415,_temp417)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp414,_temp415,_temp417)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp389)
      if _t == "table" then
                      if _type(_temp389.walk) == "function" or (_type(_temp389.walk) == "table" and _rawget(_temp389.walk, "__call_thing")) then
        _dummy_ = _temp389:walk(_temp4,_temp418)
      elseif _temp389.walk ~= nil then
        _dummy_ = _temp389.walk

        elseif _temp389.no_undermethod ~= nil then
          _dummy_ =  _temp389:no_undermethod(string:new("walk") , _temp4,_temp418)
        else
          _error(exception:method_error(_temp389, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp389)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp418)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp418)
      else
        _error(exception:method_error(_temp389, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp389)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp418)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp418)
      else
        _error(exception:method_error(_temp389, "walk"))
      end

      elseif _temp389 == nil then
        _error(exception:null_error("_temp389", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp389))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp418 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp418 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp418 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp418 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp418 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp418 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp418 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp418 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp418 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp418 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp427 = function (_self, _temp420,_temp419)
        if _temp420 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp419 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp419 =  null(_self)

    elseif null then
      _temp419 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp419 =  _self:null()
      elseif _self.null ~= nil then
        _temp419 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp419 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp419 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp421
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp421 =  _self:my()
      elseif _self.my ~= nil then
        _temp421 =  _self.my

        elseif my ~= nil then
          _temp421 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.env) == "function" or (_type(_temp421.env) == "table" and _rawget(_temp421.env, "__call_thing")) then
        _temp421 = _temp421:env()
      elseif _temp421.env ~= nil then
        _temp421 = _temp421.env

        elseif _temp421.no_undermethod ~= nil then
          _temp421 =  _temp421:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.env ~= nil then
        _temp421 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp421 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.env ~= nil then
        _temp421 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp421 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end

local _temp422 = nil
        local _t = _type(_temp420)
        if _t == "table" then
          if _rawget(_temp420, "__call_thing") == nil then
            _temp422 = _temp420
          else
                  if _temp420 == nil then
              if _type(_self._temp420) == "function" or (_type(_self._temp420) == "table" and _rawget(_self._temp420, "__call_thing")) then
        _temp422 =  _self:_temp420()
      elseif _self._temp420 ~= nil then
        _temp422 =  _self._temp420

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp420"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp422 =  _temp420(_self)
      end

          end
        elseif _t == "number" then
          _temp422 = _temp420
        elseif _t == "function" then
                if _temp420 == nil then
              if _type(_self._temp420) == "function" or (_type(_self._temp420) == "table" and _rawget(_self._temp420, "__call_thing")) then
        _temp422 =  _self:_temp420()
      elseif _self._temp420 ~= nil then
        _temp422 =  _self._temp420

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp420"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp422 =  _temp420(_self)
      end

        elseif _temp420 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp422)
      if _t == "table" then
                      if _type(_temp422.id) == "function" or (_type(_temp422.id) == "table" and _rawget(_temp422.id, "__call_thing")) then
        _temp422 = _temp422:id()
      elseif _temp422.id ~= nil then
        _temp422 = _temp422.id

        elseif _temp422.no_undermethod ~= nil then
          _temp422 =  _temp422:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp422, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp422)
      if _n.id ~= nil then
        _temp422 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp422 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp422, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp422)
      if _f.id ~= nil then
        _temp422 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp422 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp422, "id"))
      end

      elseif _temp422 == nil then
        _error(exception:null_error("_temp422", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp422))
      end


      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.new_undervar) == "function" or (_type(_temp421.new_undervar) == "table" and _rawget(_temp421.new_undervar, "__call_thing")) then
        _temp421 = _temp421:new_undervar(_temp422)
      elseif _temp421.new_undervar ~= nil then
        _temp421 = _temp421.new_undervar

        elseif _temp421.no_undermethod ~= nil then
          _temp421 =  _temp421:no_undermethod(string:new("new_var") , _temp422)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.new_undervar ~= nil then
        _temp421 = _n:new_undervar(_temp422)
      elseif _n.no_undermethod ~= nil then
        _temp421 =  _n:no_undermethod(string:new("new_var") , _temp422)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.new_undervar ~= nil then
        _temp421 = _f:new_undervar(_temp422)
      elseif _f.no_undermethod ~= nil then
        _temp421 =  _f:no_undermethod(string:new("new_var") , _temp422)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end


_temp422 = string:new("...")

local _temp423 = nil
do
local _temp424 = nil
    if _type(_temp421) == "function" or (_type(_temp421) == "table" and _rawget(_temp421, "__call_thing")) then
      _temp424 =  _temp421(_self)

    elseif _temp421 then
      _temp424 =  _temp421
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp424 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp424 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp424 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp424 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp423 = string:new("local " .. _tostring(_temp424) .. " = array:new(...)\n")
end

local _temp425 = string:new("var_arg")

local _temp426 = {}
_temp426[string:new("arg_type")] = _temp425
_temp426 = hash:new(_temp426)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp422,_temp423,_temp426)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp422,_temp423,_temp426)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp422,_temp423,_temp426)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp422,_temp423,_temp426)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp418)
      if _t == "table" then
                      if _type(_temp418.walk) == "function" or (_type(_temp418.walk) == "table" and _rawget(_temp418.walk, "__call_thing")) then
        _dummy_ = _temp418:walk(_temp4,_temp427)
      elseif _temp418.walk ~= nil then
        _dummy_ = _temp418.walk

        elseif _temp418.no_undermethod ~= nil then
          _dummy_ =  _temp418:no_undermethod(string:new("walk") , _temp4,_temp427)
        else
          _error(exception:method_error(_temp418, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp418)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp427)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp427)
      else
        _error(exception:method_error(_temp418, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp418)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp427)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp427)
      else
        _error(exception:method_error(_temp418, "walk"))
      end

      elseif _temp418 == nil then
        _error(exception:null_error("_temp418", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp418))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp427 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp427 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp427 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp427 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp427 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp427 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp427 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp427 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp453 = function (_self, _temp429,_temp428)
        if _temp429 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp428 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp428 =  null(_self)

    elseif null then
      _temp428 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp428 =  _self:null()
      elseif _self.null ~= nil then
        _temp428 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp428 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp428 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp430
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp430 =  _self:my()
      elseif _self.my ~= nil then
        _temp430 =  _self.my

        elseif my ~= nil then
          _temp430 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.env) == "function" or (_type(_temp430.env) == "table" and _rawget(_temp430.env, "__call_thing")) then
        _temp430 = _temp430:env()
      elseif _temp430.env ~= nil then
        _temp430 = _temp430.env

        elseif _temp430.no_undermethod ~= nil then
          _temp430 =  _temp430:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.env ~= nil then
        _temp430 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp430 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.env ~= nil then
        _temp430 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp430 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end

local _temp431 = nil
        local _t = _type(_temp429)
        if _t == "table" then
          if _rawget(_temp429, "__call_thing") == nil then
            _temp431 = _temp429
          else
                  if _temp429 == nil then
              if _type(_self._temp429) == "function" or (_type(_self._temp429) == "table" and _rawget(_self._temp429, "__call_thing")) then
        _temp431 =  _self:_temp429()
      elseif _self._temp429 ~= nil then
        _temp431 =  _self._temp429

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp429"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp431 =  _temp429(_self)
      end

          end
        elseif _t == "number" then
          _temp431 = _temp429
        elseif _t == "function" then
                if _temp429 == nil then
              if _type(_self._temp429) == "function" or (_type(_self._temp429) == "table" and _rawget(_self._temp429, "__call_thing")) then
        _temp431 =  _self:_temp429()
      elseif _self._temp429 ~= nil then
        _temp431 =  _self._temp429

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp429"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp431 =  _temp429(_self)
      end

        elseif _temp429 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp431)
      if _t == "table" then
                      if _type(_temp431.id) == "function" or (_type(_temp431.id) == "table" and _rawget(_temp431.id, "__call_thing")) then
        _temp431 = _temp431:id()
      elseif _temp431.id ~= nil then
        _temp431 = _temp431.id

        elseif _temp431.no_undermethod ~= nil then
          _temp431 =  _temp431:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp431, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp431)
      if _n.id ~= nil then
        _temp431 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp431 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp431, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp431)
      if _f.id ~= nil then
        _temp431 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp431 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp431, "id"))
      end

      elseif _temp431 == nil then
        _error(exception:null_error("_temp431", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp431))
      end


      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.new_undervar) == "function" or (_type(_temp430.new_undervar) == "table" and _rawget(_temp430.new_undervar, "__call_thing")) then
        _temp430 = _temp430:new_undervar(_temp431)
      elseif _temp430.new_undervar ~= nil then
        _temp430 = _temp430.new_undervar

        elseif _temp430.no_undermethod ~= nil then
          _temp430 =  _temp430:no_undermethod(string:new("new_var") , _temp431)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.new_undervar ~= nil then
        _temp430 = _n:new_undervar(_temp431)
      elseif _n.no_undermethod ~= nil then
        _temp430 =  _n:no_undermethod(string:new("new_var") , _temp431)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.new_undervar ~= nil then
        _temp430 = _f:new_undervar(_temp431)
      elseif _f.no_undermethod ~= nil then
        _temp430 =  _f:no_undermethod(string:new("new_var") , _temp431)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end


local _temp432
        local _t = _type(_temp429)
        if _t == "table" then
          if _rawget(_temp429, "__call_thing") == nil then
            _temp431 = _temp429
          else
                  if _temp429 == nil then
              if _type(_self._temp429) == "function" or (_type(_self._temp429) == "table" and _rawget(_self._temp429, "__call_thing")) then
        _temp431 =  _self:_temp429()
      elseif _self._temp429 ~= nil then
        _temp431 =  _self._temp429

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp429"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp431 =  _temp429(_self)
      end

          end
        elseif _t == "number" then
          _temp431 = _temp429
        elseif _t == "function" then
                if _temp429 == nil then
              if _type(_self._temp429) == "function" or (_type(_self._temp429) == "table" and _rawget(_self._temp429, "__call_thing")) then
        _temp431 =  _self:_temp429()
      elseif _self._temp429 ~= nil then
        _temp431 =  _self._temp429

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp429"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp431 =  _temp429(_self)
      end

        elseif _temp429 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp431)
      if _t == "table" then
                      if _type(_temp431.value) == "function" or (_type(_temp431.value) == "table" and _rawget(_temp431.value, "__call_thing")) then
        _temp431 = _temp431:value()
      elseif _temp431.value ~= nil then
        _temp431 = _temp431.value

        elseif _temp431.no_undermethod ~= nil then
          _temp431 =  _temp431:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp431, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp431)
      if _n.value ~= nil then
        _temp431 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp431 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp431, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp431)
      if _f.value ~= nil then
        _temp431 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp431 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp431, "value"))
      end

      elseif _temp431 == nil then
        _error(exception:null_error("_temp431", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp431))
      end


local _temp433 = nil
    if _type(_temp430) == "function" or (_type(_temp430) == "table" and _rawget(_temp430, "__call_thing")) then
      _temp433 =  _temp430(_self)

    elseif _temp430 then
      _temp433 =  _temp430
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp433 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp433 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp433 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp433 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp432 =  process(_self, _temp431,_temp433)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp432 =  _self:process(_temp431,_temp433)
      elseif _self.process ~= nil then
        _temp432 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp432 =  _self:no_undermethod(string:new("process") , _temp431,_temp433)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp432 =  no_undermethod(_self, string:new("process") , _temp431,_temp433)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp434
do
local _temp435 = nil
    if _type(_temp430) == "function" or (_type(_temp430) == "table" and _rawget(_temp430, "__call_thing")) then
      _temp435 =  _temp430(_self)

    elseif _temp430 then
      _temp435 =  _temp430
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp435 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp435 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp435 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp435 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp436 = nil
        local _t = _type(_temp432)
        if _t == "table" then
          if _rawget(_temp432, "__call_thing") == nil then
            _temp436 = _temp432
          else
                  if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp436 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp436 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp436 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp436 =  _temp432(_self)
      end

          end
        elseif _t == "number" then
          _temp436 = _temp432
        elseif _t == "function" then
                if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp436 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp436 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp436 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp436 =  _temp432(_self)
      end

        elseif _temp432 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp436)
      if _t == "table" then
                      if _type(_temp436.out) == "function" or (_type(_temp436.out) == "table" and _rawget(_temp436.out, "__call_thing")) then
        _temp436 = _temp436:out()
      elseif _temp436.out ~= nil then
        _temp436 = _temp436.out

        elseif _temp436.no_undermethod ~= nil then
          _temp436 =  _temp436:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp436, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp436)
      if _n.out ~= nil then
        _temp436 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp436 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp436, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp436)
      if _f.out ~= nil then
        _temp436 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp436 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp436, "out"))
      end

      elseif _temp436 == nil then
        _error(exception:null_error("_temp436", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp436))
      end


_temp434 = string:new("\n    if " .. _tostring(_temp435) .. " == nil then\n      " .. _tostring(_temp436) .. "\n  ")
end

local _temp433 
do
local _temp437 = nil
        local _t = _type(_temp432)
        if _t == "table" then
          if _rawget(_temp432, "__call_thing") == nil then
            _temp437 = _temp432
          else
                  if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp437 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp437 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp437 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp437 =  _temp432(_self)
      end

          end
        elseif _t == "number" then
          _temp437 = _temp432
        elseif _t == "function" then
                if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp437 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp437 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp437 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp437 =  _temp432(_self)
      end

        elseif _temp432 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp438 = nil
      local _t = _type(_temp437)
      if _t == "table" then
                      if _type(_temp437.var) == "function" or (_type(_temp437.var) == "table" and _rawget(_temp437.var, "__call_thing")) then
        _temp438 = _temp437:var()
      elseif _temp437.var ~= nil then
        _temp438 = _temp437.var

        elseif _temp437.no_undermethod ~= nil then
          _temp438 =  _temp437:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp437, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp437)
      if _n.var ~= nil then
        _temp438 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp437, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp437)
      if _f.var ~= nil then
        _temp438 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp437, "var"))
      end

      elseif _temp437 == nil then
        _error(exception:null_error("_temp437", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp437))
      end

local _temp439 = nil
    if _type(_temp430) == "function" or (_type(_temp430) == "table" and _rawget(_temp430, "__call_thing")) then
      _temp439 =  _temp430(_self)

    elseif _temp430 then
      _temp439 =  _temp430
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp439 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp439 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp439 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp439 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp440
      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438._equal_equal) == "function" or (_type(_temp438._equal_equal) == "table" and _rawget(_temp438._equal_equal, "__call_thing")) then
        _temp440 = _temp438:_equal_equal(_temp439)
      elseif _temp438._equal_equal ~= nil then
        _temp440 = _temp438._equal_equal

        elseif _temp438.no_undermethod ~= nil then
          _temp440 =  _temp438:no_undermethod(string:new("==") , _temp439)
        else
          _error(exception:method_error(_temp438, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp439) == 'number' then
              if _temp438 == _temp439 then
        _temp440 = object.__true
      else
        _temp440 = object.__false
      end

      else
              local _n = number:new(_temp438)
      if _n._equal_equal ~= nil then
        _temp440 = _n:_equal_equal(_temp439)
      elseif _n.no_undermethod ~= nil then
        _temp440 =  _n:no_undermethod(string:new("==") , _temp439)
      else
        _error(exception:method_error(_temp438, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f._equal_equal ~= nil then
        _temp440 = _f:_equal_equal(_temp439)
      elseif _f.no_undermethod ~= nil then
        _temp440 =  _f:no_undermethod(string:new("==") , _temp439)
      else
        _error(exception:method_error(_temp438, "=="))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("_temp438", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end

_temp433 = _temp440 
end


local _temp448 = function (_self)

local _temp441 
do
local _temp442 = nil
_temp442 =  _temp434

local _temp443 = nil
do
local _temp444 = nil
    if _type(_temp430) == "function" or (_type(_temp430) == "table" and _rawget(_temp430, "__call_thing")) then
      _temp444 =  _temp430(_self)

    elseif _temp430 then
      _temp444 =  _temp430
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp444 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp444 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp444 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp444 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp445 = nil
        local _t = _type(_temp432)
        if _t == "table" then
          if _rawget(_temp432, "__call_thing") == nil then
            _temp445 = _temp432
          else
                  if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp445 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp445 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp445 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp445 =  _temp432(_self)
      end

          end
        elseif _t == "number" then
          _temp445 = _temp432
        elseif _t == "function" then
                if _temp432 == nil then
              if _type(_self._temp432) == "function" or (_type(_self._temp432) == "table" and _rawget(_self._temp432, "__call_thing")) then
        _temp445 =  _self:_temp432()
      elseif _self._temp432 ~= nil then
        _temp445 =  _self._temp432

        elseif _self.no_undermethod ~= nil then
          _temp445 =  _self:no_undermethod(string:new("_temp432"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp445 =  _temp432(_self)
      end

        elseif _temp432 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp445)
      if _t == "table" then
                      if _type(_temp445.var) == "function" or (_type(_temp445.var) == "table" and _rawget(_temp445.var, "__call_thing")) then
        _temp445 = _temp445:var()
      elseif _temp445.var ~= nil then
        _temp445 = _temp445.var

        elseif _temp445.no_undermethod ~= nil then
          _temp445 =  _temp445:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp445, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp445)
      if _n.var ~= nil then
        _temp445 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp445 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp445, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp445)
      if _f.var ~= nil then
        _temp445 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp445 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp445, "var"))
      end

      elseif _temp445 == nil then
        _error(exception:null_error("_temp445", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp445))
      end


_temp443 = string:new("" .. _tostring(_temp444) .. " = " .. _tostring(_temp445) .. "\n")
end
local _temp446
              if _type(_temp442._less_less) == "function" or (_type(_temp442._less_less) == "table" and _rawget(_temp442._less_less, "__call_thing")) then
        _temp446 = _temp442:_less_less(_temp443)
      elseif _temp442._less_less ~= nil then
        _temp446 = _temp442._less_less

        elseif _temp442.no_undermethod ~= nil then
          _temp446 =  _temp442:no_undermethod(string:new("<<") , _temp443)
        else
          _error(exception:method_error(_temp442, "<<"))
        end

_temp441 = _temp446 
end

return _temp441
end

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp433,_temp448)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp433,_temp448)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp433,_temp448)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp433,_temp448)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp449 = nil
_temp449 =  _temp434

local _temp450 = string:new("end\n")
local _temp451
              if _type(_temp449._less_less) == "function" or (_type(_temp449._less_less) == "table" and _rawget(_temp449._less_less, "__call_thing")) then
        _temp451 = _temp449:_less_less(_temp450)
      elseif _temp449._less_less ~= nil then
        _temp451 = _temp449._less_less

        elseif _temp449.no_undermethod ~= nil then
          _temp451 =  _temp449:no_undermethod(string:new("<<") , _temp450)
        else
          _error(exception:method_error(_temp449, "<<"))
        end

_dummy_ = _temp451 
end

    if _type(_temp430) == "function" or (_type(_temp430) == "table" and _rawget(_temp430, "__call_thing")) then
      _temp448 =  _temp430(_self)

    elseif _temp430 then
      _temp448 =  _temp430
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp448 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp448 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp448 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp448 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp433 =  _temp434

_temp431 = string:new("def_arg")

local _temp452 = {}
_temp452[string:new("arg_type")] = _temp431
_temp452 = hash:new(_temp452)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp448,_temp433,_temp452)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp448,_temp433,_temp452)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp448,_temp433,_temp452)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp448,_temp433,_temp452)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp427)
      if _t == "table" then
                      if _type(_temp427.walk) == "function" or (_type(_temp427.walk) == "table" and _rawget(_temp427.walk, "__call_thing")) then
        _dummy_ = _temp427:walk(_temp4,_temp453)
      elseif _temp427.walk ~= nil then
        _dummy_ = _temp427.walk

        elseif _temp427.no_undermethod ~= nil then
          _dummy_ =  _temp427:no_undermethod(string:new("walk") , _temp4,_temp453)
        else
          _error(exception:method_error(_temp427, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp427)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp453)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp453)
      else
        _error(exception:method_error(_temp427, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp427)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp453)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp453)
      else
        _error(exception:method_error(_temp427, "walk"))
      end

      elseif _temp427 == nil then
        _error(exception:null_error("_temp427", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp427))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp453 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp453 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp453 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp453 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp453 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp453 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp453 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp453 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp463 = function (_self, _temp455,_temp454)
        if _temp455 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp454 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp454 =  null(_self)

    elseif null then
      _temp454 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp454 =  _self:null()
      elseif _self.null ~= nil then
        _temp454 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp454 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp454 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp456
local _temp457 = nil
    if _type(_temp454) == "function" or (_type(_temp454) == "table" and _rawget(_temp454, "__call_thing")) then
      _temp457 =  _temp454(_self)

    elseif _temp454 then
      _temp457 =  _temp454
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp457 =  _self:var()
      elseif _self.var ~= nil then
        _temp457 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp457 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp457 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp456 =  set_underresult(_self, _temp457)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp456 =  _self:set_underresult(_temp457)
      elseif _self.set_underresult ~= nil then
        _temp456 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp456 =  _self:no_undermethod(string:new("set_result") , _temp457)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp456 =  no_undermethod(_self, string:new("set_result") , _temp457)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp458 = nil
        local _t = _type(_temp456)
        if _t == "table" then
          if _rawget(_temp456, "__call_thing") == nil then
            _temp458 = _temp456
          else
                  if _temp456 == nil then
              if _type(_self._temp456) == "function" or (_type(_self._temp456) == "table" and _rawget(_self._temp456, "__call_thing")) then
        _temp458 =  _self:_temp456()
      elseif _self._temp456 ~= nil then
        _temp458 =  _self._temp456

        elseif _self.no_undermethod ~= nil then
          _temp458 =  _self:no_undermethod(string:new("_temp456"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp458 =  _temp456(_self)
      end

          end
        elseif _t == "number" then
          _temp458 = _temp456
        elseif _t == "function" then
                if _temp456 == nil then
              if _type(_self._temp456) == "function" or (_type(_self._temp456) == "table" and _rawget(_self._temp456, "__call_thing")) then
        _temp458 =  _self:_temp456()
      elseif _self._temp456 ~= nil then
        _temp458 =  _self._temp456

        elseif _self.no_undermethod ~= nil then
          _temp458 =  _self:no_undermethod(string:new("_temp456"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp458 =  _temp456(_self)
      end

        elseif _temp456 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp459 = nil
      local _t = _type(_temp458)
      if _t == "table" then
                      if _type(_temp458.out) == "function" or (_type(_temp458.out) == "table" and _rawget(_temp458.out, "__call_thing")) then
        _temp459 = _temp458:out()
      elseif _temp458.out ~= nil then
        _temp459 = _temp458.out

        elseif _temp458.no_undermethod ~= nil then
          _temp459 =  _temp458:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp458, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp458)
      if _n.out ~= nil then
        _temp459 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp459 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp458, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp458)
      if _f.out ~= nil then
        _temp459 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp459 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp458, "out"))
      end

      elseif _temp458 == nil then
        _error(exception:null_error("_temp458", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp458))
      end

local _temp460 = nil
local _temp461 = nil
        local _t = _type(_temp455)
        if _t == "table" then
          if _rawget(_temp455, "__call_thing") == nil then
            _temp461 = _temp455
          else
                  if _temp455 == nil then
              if _type(_self._temp455) == "function" or (_type(_self._temp455) == "table" and _rawget(_self._temp455, "__call_thing")) then
        _temp461 =  _self:_temp455()
      elseif _self._temp455 ~= nil then
        _temp461 =  _self._temp455

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp455"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp461 =  _temp455(_self)
      end

          end
        elseif _t == "number" then
          _temp461 = _temp455
        elseif _t == "function" then
                if _temp455 == nil then
              if _type(_self._temp455) == "function" or (_type(_self._temp455) == "table" and _rawget(_self._temp455, "__call_thing")) then
        _temp461 =  _self:_temp455()
      elseif _self._temp455 ~= nil then
        _temp461 =  _self._temp455

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp455"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp461 =  _temp455(_self)
      end

        elseif _temp455 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp461)
      if _t == "table" then
                      if _type(_temp461.method) == "function" or (_type(_temp461.method) == "table" and _rawget(_temp461.method, "__call_thing")) then
        _temp461 = _temp461:method()
      elseif _temp461.method ~= nil then
        _temp461 = _temp461.method

        elseif _temp461.no_undermethod ~= nil then
          _temp461 =  _temp461:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp461, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp461)
      if _n.method ~= nil then
        _temp461 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp461 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp461, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp461)
      if _f.method ~= nil then
        _temp461 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp461 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp461, "method"))
      end

      elseif _temp461 == nil then
        _error(exception:null_error("_temp461", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp461))
      end


local _temp462 = nil
        local _t = _type(_temp456)
        if _t == "table" then
          if _rawget(_temp456, "__call_thing") == nil then
            _temp462 = _temp456
          else
                  if _temp456 == nil then
              if _type(_self._temp456) == "function" or (_type(_self._temp456) == "table" and _rawget(_self._temp456, "__call_thing")) then
        _temp462 =  _self:_temp456()
      elseif _self._temp456 ~= nil then
        _temp462 =  _self._temp456

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp456"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp462 =  _temp456(_self)
      end

          end
        elseif _t == "number" then
          _temp462 = _temp456
        elseif _t == "function" then
                if _temp456 == nil then
              if _type(_self._temp456) == "function" or (_type(_self._temp456) == "table" and _rawget(_self._temp456, "__call_thing")) then
        _temp462 =  _self:_temp456()
      elseif _self._temp456 ~= nil then
        _temp462 =  _self._temp456

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp456"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp462 =  _temp456(_self)
      end

        elseif _temp456 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp462)
      if _t == "table" then
                      if _type(_temp462.var) == "function" or (_type(_temp462.var) == "table" and _rawget(_temp462.var, "__call_thing")) then
        _temp462 = _temp462:var()
      elseif _temp462.var ~= nil then
        _temp462 = _temp462.var

        elseif _temp462.no_undermethod ~= nil then
          _temp462 =  _temp462:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp462, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp462)
      if _n.var ~= nil then
        _temp462 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp462 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp462, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp462)
      if _f.var ~= nil then
        _temp462 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp462 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp462, "var"))
      end

      elseif _temp462 == nil then
        _error(exception:null_error("_temp462", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp462))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp460 =  get_undermethod_underlocal(_self, _temp461,_temp462)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp460 =  _self:get_undermethod_underlocal(_temp461,_temp462)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp460 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp460 =  _self:no_undermethod(string:new("get_method_local") , _temp461,_temp462)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp460 =  no_undermethod(_self, string:new("get_method_local") , _temp461,_temp462)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp462
      local _t = _type(_temp459)
      if _t == "table" then
                      if _type(_temp459._less_less) == "function" or (_type(_temp459._less_less) == "table" and _rawget(_temp459._less_less, "__call_thing")) then
        _temp462 = _temp459:_less_less(_temp460)
      elseif _temp459._less_less ~= nil then
        _temp462 = _temp459._less_less

        elseif _temp459.no_undermethod ~= nil then
          _temp462 =  _temp459:no_undermethod(string:new("<<") , _temp460)
        else
          _error(exception:method_error(_temp459, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp459)
      if _n._less_less ~= nil then
        _temp462 = _n:_less_less(_temp460)
      elseif _n.no_undermethod ~= nil then
        _temp462 =  _n:no_undermethod(string:new("<<") , _temp460)
      else
        _error(exception:method_error(_temp459, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp459)
      if _f._less_less ~= nil then
        _temp462 = _f:_less_less(_temp460)
      elseif _f.no_undermethod ~= nil then
        _temp462 =  _f:no_undermethod(string:new("<<") , _temp460)
      else
        _error(exception:method_error(_temp459, "<<"))
      end

      elseif _temp459 == nil then
        _error(exception:null_error("_temp459", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp459))
      end

_dummy_ = _temp462 
end

    if _type(_temp456) == "function" or (_type(_temp456) == "table" and _rawget(_temp456, "__call_thing")) then
      return  _temp456(_self)

    elseif _temp456 then
      return  _temp456
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp453)
      if _t == "table" then
                      if _type(_temp453.walk) == "function" or (_type(_temp453.walk) == "table" and _rawget(_temp453.walk, "__call_thing")) then
        _dummy_ = _temp453:walk(_temp4,_temp463)
      elseif _temp453.walk ~= nil then
        _dummy_ = _temp453.walk

        elseif _temp453.no_undermethod ~= nil then
          _dummy_ =  _temp453:no_undermethod(string:new("walk") , _temp4,_temp463)
        else
          _error(exception:method_error(_temp453, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp453)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp463)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp463)
      else
        _error(exception:method_error(_temp453, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp453)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp463)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp463)
      else
        _error(exception:method_error(_temp453, "walk"))
      end

      elseif _temp453 == nil then
        _error(exception:null_error("_temp453", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp453))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp463 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp463 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp463 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp463 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp463 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp463 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp463 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp463 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp463 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp463 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp473 = function (_self, _temp465,_temp464)
        if _temp465 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp464 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp464 =  null(_self)

    elseif null then
      _temp464 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp464 =  _self:null()
      elseif _self.null ~= nil then
        _temp464 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp464 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp464 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp466
local _temp467 = nil
    if _type(_temp464) == "function" or (_type(_temp464) == "table" and _rawget(_temp464, "__call_thing")) then
      _temp467 =  _temp464(_self)

    elseif _temp464 then
      _temp467 =  _temp464
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp467 =  _self:var()
      elseif _self.var ~= nil then
        _temp467 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp467 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp467 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp466 =  set_underresult(_self, _temp467)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp466 =  _self:set_underresult(_temp467)
      elseif _self.set_underresult ~= nil then
        _temp466 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp466 =  _self:no_undermethod(string:new("set_result") , _temp467)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp466 =  no_undermethod(_self, string:new("set_result") , _temp467)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp468 = nil
        local _t = _type(_temp466)
        if _t == "table" then
          if _rawget(_temp466, "__call_thing") == nil then
            _temp468 = _temp466
          else
                  if _temp466 == nil then
              if _type(_self._temp466) == "function" or (_type(_self._temp466) == "table" and _rawget(_self._temp466, "__call_thing")) then
        _temp468 =  _self:_temp466()
      elseif _self._temp466 ~= nil then
        _temp468 =  _self._temp466

        elseif _self.no_undermethod ~= nil then
          _temp468 =  _self:no_undermethod(string:new("_temp466"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp468 =  _temp466(_self)
      end

          end
        elseif _t == "number" then
          _temp468 = _temp466
        elseif _t == "function" then
                if _temp466 == nil then
              if _type(_self._temp466) == "function" or (_type(_self._temp466) == "table" and _rawget(_self._temp466, "__call_thing")) then
        _temp468 =  _self:_temp466()
      elseif _self._temp466 ~= nil then
        _temp468 =  _self._temp466

        elseif _self.no_undermethod ~= nil then
          _temp468 =  _self:no_undermethod(string:new("_temp466"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp468 =  _temp466(_self)
      end

        elseif _temp466 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp469 = nil
      local _t = _type(_temp468)
      if _t == "table" then
                      if _type(_temp468.out) == "function" or (_type(_temp468.out) == "table" and _rawget(_temp468.out, "__call_thing")) then
        _temp469 = _temp468:out()
      elseif _temp468.out ~= nil then
        _temp469 = _temp468.out

        elseif _temp468.no_undermethod ~= nil then
          _temp469 =  _temp468:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp468, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp468)
      if _n.out ~= nil then
        _temp469 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp469 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp468, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp468)
      if _f.out ~= nil then
        _temp469 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp469 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp468, "out"))
      end

      elseif _temp468 == nil then
        _error(exception:null_error("_temp468", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp468))
      end

local _temp470 = nil
local _temp471 = nil
        local _t = _type(_temp465)
        if _t == "table" then
          if _rawget(_temp465, "__call_thing") == nil then
            _temp471 = _temp465
          else
                  if _temp465 == nil then
              if _type(_self._temp465) == "function" or (_type(_self._temp465) == "table" and _rawget(_self._temp465, "__call_thing")) then
        _temp471 =  _self:_temp465()
      elseif _self._temp465 ~= nil then
        _temp471 =  _self._temp465

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp465"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp471 =  _temp465(_self)
      end

          end
        elseif _t == "number" then
          _temp471 = _temp465
        elseif _t == "function" then
                if _temp465 == nil then
              if _type(_self._temp465) == "function" or (_type(_self._temp465) == "table" and _rawget(_self._temp465, "__call_thing")) then
        _temp471 =  _self:_temp465()
      elseif _self._temp465 ~= nil then
        _temp471 =  _self._temp465

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp465"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp471 =  _temp465(_self)
      end

        elseif _temp465 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp471)
      if _t == "table" then
                      if _type(_temp471.method) == "function" or (_type(_temp471.method) == "table" and _rawget(_temp471.method, "__call_thing")) then
        _temp471 = _temp471:method()
      elseif _temp471.method ~= nil then
        _temp471 = _temp471.method

        elseif _temp471.no_undermethod ~= nil then
          _temp471 =  _temp471:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp471, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp471)
      if _n.method ~= nil then
        _temp471 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp471 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp471, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp471)
      if _f.method ~= nil then
        _temp471 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp471 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp471, "method"))
      end

      elseif _temp471 == nil then
        _error(exception:null_error("_temp471", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp471))
      end


local _temp472 = nil
        local _t = _type(_temp466)
        if _t == "table" then
          if _rawget(_temp466, "__call_thing") == nil then
            _temp472 = _temp466
          else
                  if _temp466 == nil then
              if _type(_self._temp466) == "function" or (_type(_self._temp466) == "table" and _rawget(_self._temp466, "__call_thing")) then
        _temp472 =  _self:_temp466()
      elseif _self._temp466 ~= nil then
        _temp472 =  _self._temp466

        elseif _self.no_undermethod ~= nil then
          _temp472 =  _self:no_undermethod(string:new("_temp466"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp472 =  _temp466(_self)
      end

          end
        elseif _t == "number" then
          _temp472 = _temp466
        elseif _t == "function" then
                if _temp466 == nil then
              if _type(_self._temp466) == "function" or (_type(_self._temp466) == "table" and _rawget(_self._temp466, "__call_thing")) then
        _temp472 =  _self:_temp466()
      elseif _self._temp466 ~= nil then
        _temp472 =  _self._temp466

        elseif _self.no_undermethod ~= nil then
          _temp472 =  _self:no_undermethod(string:new("_temp466"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp472 =  _temp466(_self)
      end

        elseif _temp466 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp472)
      if _t == "table" then
                      if _type(_temp472.var) == "function" or (_type(_temp472.var) == "table" and _rawget(_temp472.var, "__call_thing")) then
        _temp472 = _temp472:var()
      elseif _temp472.var ~= nil then
        _temp472 = _temp472.var

        elseif _temp472.no_undermethod ~= nil then
          _temp472 =  _temp472:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp472, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp472)
      if _n.var ~= nil then
        _temp472 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp472 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp472, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp472)
      if _f.var ~= nil then
        _temp472 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp472 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp472, "var"))
      end

      elseif _temp472 == nil then
        _error(exception:null_error("_temp472", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp472))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp470 =  get_undermethod_underlocal(_self, _temp471,_temp472)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp470 =  _self:get_undermethod_underlocal(_temp471,_temp472)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp470 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp470 =  _self:no_undermethod(string:new("get_method_local") , _temp471,_temp472)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp470 =  no_undermethod(_self, string:new("get_method_local") , _temp471,_temp472)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp472
      local _t = _type(_temp469)
      if _t == "table" then
                      if _type(_temp469._less_less) == "function" or (_type(_temp469._less_less) == "table" and _rawget(_temp469._less_less, "__call_thing")) then
        _temp472 = _temp469:_less_less(_temp470)
      elseif _temp469._less_less ~= nil then
        _temp472 = _temp469._less_less

        elseif _temp469.no_undermethod ~= nil then
          _temp472 =  _temp469:no_undermethod(string:new("<<") , _temp470)
        else
          _error(exception:method_error(_temp469, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp469)
      if _n._less_less ~= nil then
        _temp472 = _n:_less_less(_temp470)
      elseif _n.no_undermethod ~= nil then
        _temp472 =  _n:no_undermethod(string:new("<<") , _temp470)
      else
        _error(exception:method_error(_temp469, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp469)
      if _f._less_less ~= nil then
        _temp472 = _f:_less_less(_temp470)
      elseif _f.no_undermethod ~= nil then
        _temp472 =  _f:no_undermethod(string:new("<<") , _temp470)
      else
        _error(exception:method_error(_temp469, "<<"))
      end

      elseif _temp469 == nil then
        _error(exception:null_error("_temp469", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp469))
      end

_dummy_ = _temp472 
end

    if _type(_temp466) == "function" or (_type(_temp466) == "table" and _rawget(_temp466, "__call_thing")) then
      return  _temp466(_self)

    elseif _temp466 then
      return  _temp466
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp463)
      if _t == "table" then
                      if _type(_temp463.walk) == "function" or (_type(_temp463.walk) == "table" and _rawget(_temp463.walk, "__call_thing")) then
        _dummy_ = _temp463:walk(_temp4,_temp473)
      elseif _temp463.walk ~= nil then
        _dummy_ = _temp463.walk

        elseif _temp463.no_undermethod ~= nil then
          _dummy_ =  _temp463:no_undermethod(string:new("walk") , _temp4,_temp473)
        else
          _error(exception:method_error(_temp463, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp463)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp473)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp473)
      else
        _error(exception:method_error(_temp463, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp463)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp473)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp473)
      else
        _error(exception:method_error(_temp463, "walk"))
      end

      elseif _temp463 == nil then
        _error(exception:null_error("_temp463", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp463))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp473 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp473 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp473 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp473 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp473 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp473 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp473 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp473 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp473 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp473 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp483 = function (_self, _temp475,_temp474)
        if _temp475 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp474 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp474 =  null(_self)

    elseif null then
      _temp474 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp474 =  _self:null()
      elseif _self.null ~= nil then
        _temp474 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp474 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp474 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp476
local _temp477 = nil
    if _type(_temp474) == "function" or (_type(_temp474) == "table" and _rawget(_temp474, "__call_thing")) then
      _temp477 =  _temp474(_self)

    elseif _temp474 then
      _temp477 =  _temp474
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp477 =  _self:var()
      elseif _self.var ~= nil then
        _temp477 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp477 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp477 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp476 =  set_underresult(_self, _temp477)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp476 =  _self:set_underresult(_temp477)
      elseif _self.set_underresult ~= nil then
        _temp476 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp476 =  _self:no_undermethod(string:new("set_result") , _temp477)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp476 =  no_undermethod(_self, string:new("set_result") , _temp477)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp478 = nil
        local _t = _type(_temp476)
        if _t == "table" then
          if _rawget(_temp476, "__call_thing") == nil then
            _temp478 = _temp476
          else
                  if _temp476 == nil then
              if _type(_self._temp476) == "function" or (_type(_self._temp476) == "table" and _rawget(_self._temp476, "__call_thing")) then
        _temp478 =  _self:_temp476()
      elseif _self._temp476 ~= nil then
        _temp478 =  _self._temp476

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp476"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp478 =  _temp476(_self)
      end

          end
        elseif _t == "number" then
          _temp478 = _temp476
        elseif _t == "function" then
                if _temp476 == nil then
              if _type(_self._temp476) == "function" or (_type(_self._temp476) == "table" and _rawget(_self._temp476, "__call_thing")) then
        _temp478 =  _self:_temp476()
      elseif _self._temp476 ~= nil then
        _temp478 =  _self._temp476

        elseif _self.no_undermethod ~= nil then
          _temp478 =  _self:no_undermethod(string:new("_temp476"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp478 =  _temp476(_self)
      end

        elseif _temp476 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp479 = nil
      local _t = _type(_temp478)
      if _t == "table" then
                      if _type(_temp478.out) == "function" or (_type(_temp478.out) == "table" and _rawget(_temp478.out, "__call_thing")) then
        _temp479 = _temp478:out()
      elseif _temp478.out ~= nil then
        _temp479 = _temp478.out

        elseif _temp478.no_undermethod ~= nil then
          _temp479 =  _temp478:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp478, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp478)
      if _n.out ~= nil then
        _temp479 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp479 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp478, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp478)
      if _f.out ~= nil then
        _temp479 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp479 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp478, "out"))
      end

      elseif _temp478 == nil then
        _error(exception:null_error("_temp478", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp478))
      end

local _temp480 = nil
local _temp481 = nil
        local _t = _type(_temp475)
        if _t == "table" then
          if _rawget(_temp475, "__call_thing") == nil then
            _temp481 = _temp475
          else
                  if _temp475 == nil then
              if _type(_self._temp475) == "function" or (_type(_self._temp475) == "table" and _rawget(_self._temp475, "__call_thing")) then
        _temp481 =  _self:_temp475()
      elseif _self._temp475 ~= nil then
        _temp481 =  _self._temp475

        elseif _self.no_undermethod ~= nil then
          _temp481 =  _self:no_undermethod(string:new("_temp475"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp481 =  _temp475(_self)
      end

          end
        elseif _t == "number" then
          _temp481 = _temp475
        elseif _t == "function" then
                if _temp475 == nil then
              if _type(_self._temp475) == "function" or (_type(_self._temp475) == "table" and _rawget(_self._temp475, "__call_thing")) then
        _temp481 =  _self:_temp475()
      elseif _self._temp475 ~= nil then
        _temp481 =  _self._temp475

        elseif _self.no_undermethod ~= nil then
          _temp481 =  _self:no_undermethod(string:new("_temp475"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp481 =  _temp475(_self)
      end

        elseif _temp475 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp481)
      if _t == "table" then
                      if _type(_temp481.method) == "function" or (_type(_temp481.method) == "table" and _rawget(_temp481.method, "__call_thing")) then
        _temp481 = _temp481:method()
      elseif _temp481.method ~= nil then
        _temp481 = _temp481.method

        elseif _temp481.no_undermethod ~= nil then
          _temp481 =  _temp481:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp481, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp481)
      if _n.method ~= nil then
        _temp481 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp481 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp481, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp481)
      if _f.method ~= nil then
        _temp481 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp481 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp481, "method"))
      end

      elseif _temp481 == nil then
        _error(exception:null_error("_temp481", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp481))
      end


local _temp482 = nil
        local _t = _type(_temp476)
        if _t == "table" then
          if _rawget(_temp476, "__call_thing") == nil then
            _temp482 = _temp476
          else
                  if _temp476 == nil then
              if _type(_self._temp476) == "function" or (_type(_self._temp476) == "table" and _rawget(_self._temp476, "__call_thing")) then
        _temp482 =  _self:_temp476()
      elseif _self._temp476 ~= nil then
        _temp482 =  _self._temp476

        elseif _self.no_undermethod ~= nil then
          _temp482 =  _self:no_undermethod(string:new("_temp476"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp482 =  _temp476(_self)
      end

          end
        elseif _t == "number" then
          _temp482 = _temp476
        elseif _t == "function" then
                if _temp476 == nil then
              if _type(_self._temp476) == "function" or (_type(_self._temp476) == "table" and _rawget(_self._temp476, "__call_thing")) then
        _temp482 =  _self:_temp476()
      elseif _self._temp476 ~= nil then
        _temp482 =  _self._temp476

        elseif _self.no_undermethod ~= nil then
          _temp482 =  _self:no_undermethod(string:new("_temp476"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp482 =  _temp476(_self)
      end

        elseif _temp476 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp482)
      if _t == "table" then
                      if _type(_temp482.var) == "function" or (_type(_temp482.var) == "table" and _rawget(_temp482.var, "__call_thing")) then
        _temp482 = _temp482:var()
      elseif _temp482.var ~= nil then
        _temp482 = _temp482.var

        elseif _temp482.no_undermethod ~= nil then
          _temp482 =  _temp482:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp482, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp482)
      if _n.var ~= nil then
        _temp482 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp482 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp482, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp482)
      if _f.var ~= nil then
        _temp482 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp482 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp482, "var"))
      end

      elseif _temp482 == nil then
        _error(exception:null_error("_temp482", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp482))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp480 =  get_undermethod_underself(_self, _temp481,_temp482)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp480 =  _self:get_undermethod_underself(_temp481,_temp482)
      elseif _self.get_undermethod_underself ~= nil then
        _temp480 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp480 =  _self:no_undermethod(string:new("get_method_self") , _temp481,_temp482)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp480 =  no_undermethod(_self, string:new("get_method_self") , _temp481,_temp482)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp482
      local _t = _type(_temp479)
      if _t == "table" then
                      if _type(_temp479._less_less) == "function" or (_type(_temp479._less_less) == "table" and _rawget(_temp479._less_less, "__call_thing")) then
        _temp482 = _temp479:_less_less(_temp480)
      elseif _temp479._less_less ~= nil then
        _temp482 = _temp479._less_less

        elseif _temp479.no_undermethod ~= nil then
          _temp482 =  _temp479:no_undermethod(string:new("<<") , _temp480)
        else
          _error(exception:method_error(_temp479, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp479)
      if _n._less_less ~= nil then
        _temp482 = _n:_less_less(_temp480)
      elseif _n.no_undermethod ~= nil then
        _temp482 =  _n:no_undermethod(string:new("<<") , _temp480)
      else
        _error(exception:method_error(_temp479, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp479)
      if _f._less_less ~= nil then
        _temp482 = _f:_less_less(_temp480)
      elseif _f.no_undermethod ~= nil then
        _temp482 =  _f:no_undermethod(string:new("<<") , _temp480)
      else
        _error(exception:method_error(_temp479, "<<"))
      end

      elseif _temp479 == nil then
        _error(exception:null_error("_temp479", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp479))
      end

_dummy_ = _temp482 
end

    if _type(_temp476) == "function" or (_type(_temp476) == "table" and _rawget(_temp476, "__call_thing")) then
      return  _temp476(_self)

    elseif _temp476 then
      return  _temp476
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp473)
      if _t == "table" then
                      if _type(_temp473.walk) == "function" or (_type(_temp473.walk) == "table" and _rawget(_temp473.walk, "__call_thing")) then
        _dummy_ = _temp473:walk(_temp4,_temp483)
      elseif _temp473.walk ~= nil then
        _dummy_ = _temp473.walk

        elseif _temp473.no_undermethod ~= nil then
          _dummy_ =  _temp473:no_undermethod(string:new("walk") , _temp4,_temp483)
        else
          _error(exception:method_error(_temp473, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp473)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp483)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp483)
      else
        _error(exception:method_error(_temp473, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp473)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp483)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp483)
      else
        _error(exception:method_error(_temp473, "walk"))
      end

      elseif _temp473 == nil then
        _error(exception:null_error("_temp473", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp473))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp483 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp483 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp483 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp483 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp483 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp483 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp483 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp483 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp499 = function (_self, _temp485,_temp484)
        if _temp485 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp484 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp484 =  null(_self)

    elseif null then
      _temp484 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp484 =  _self:null()
      elseif _self.null ~= nil then
        _temp484 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp484 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp484 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp486
local _temp487 = nil
    if _type(_temp484) == "function" or (_type(_temp484) == "table" and _rawget(_temp484, "__call_thing")) then
      _temp487 =  _temp484(_self)

    elseif _temp484 then
      _temp487 =  _temp484
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp487 =  _self:var()
      elseif _self.var ~= nil then
        _temp487 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp487 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp487 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp486 =  set_underresult(_self, _temp487)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp486 =  _self:set_underresult(_temp487)
      elseif _self.set_underresult ~= nil then
        _temp486 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp486 =  _self:no_undermethod(string:new("set_result") , _temp487)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp486 =  no_undermethod(_self, string:new("set_result") , _temp487)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp488
        local _t = _type(_temp485)
        if _t == "table" then
          if _rawget(_temp485, "__call_thing") == nil then
            _temp487 = _temp485
          else
                  if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp487 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp487 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp485(_self)
      end

          end
        elseif _t == "number" then
          _temp487 = _temp485
        elseif _t == "function" then
                if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp487 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp487 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp485(_self)
      end

        elseif _temp485 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487.target) == "function" or (_type(_temp487.target) == "table" and _rawget(_temp487.target, "__call_thing")) then
        _temp487 = _temp487:target()
      elseif _temp487.target ~= nil then
        _temp487 = _temp487.target

        elseif _temp487.no_undermethod ~= nil then
          _temp487 =  _temp487:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp487, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n.target ~= nil then
        _temp487 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp487, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f.target ~= nil then
        _temp487 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp487, "target"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp488 =  process(_self, _temp487)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp488 =  _self:process(_temp487)
      elseif _self.process ~= nil then
        _temp488 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp488 =  _self:no_undermethod(string:new("process") , _temp487)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp488 =  no_undermethod(_self, string:new("process") , _temp487)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp489 = nil
        local _t = _type(_temp486)
        if _t == "table" then
          if _rawget(_temp486, "__call_thing") == nil then
            _temp489 = _temp486
          else
                  if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp489 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp489 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp489 =  _temp486(_self)
      end

          end
        elseif _t == "number" then
          _temp489 = _temp486
        elseif _t == "function" then
                if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp489 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp489 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp489 =  _temp486(_self)
      end

        elseif _temp486 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp490 = nil
      local _t = _type(_temp489)
      if _t == "table" then
                      if _type(_temp489.out) == "function" or (_type(_temp489.out) == "table" and _rawget(_temp489.out, "__call_thing")) then
        _temp490 = _temp489:out()
      elseif _temp489.out ~= nil then
        _temp490 = _temp489.out

        elseif _temp489.no_undermethod ~= nil then
          _temp490 =  _temp489:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp489, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp489)
      if _n.out ~= nil then
        _temp490 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp490 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp489, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp489)
      if _f.out ~= nil then
        _temp490 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp490 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp489, "out"))
      end

      elseif _temp489 == nil then
        _error(exception:null_error("_temp489", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp489))
      end

local _temp491 = nil
        local _t = _type(_temp488)
        if _t == "table" then
          if _rawget(_temp488, "__call_thing") == nil then
            _temp491 = _temp488
          else
                  if _temp488 == nil then
              if _type(_self._temp488) == "function" or (_type(_self._temp488) == "table" and _rawget(_self._temp488, "__call_thing")) then
        _temp491 =  _self:_temp488()
      elseif _self._temp488 ~= nil then
        _temp491 =  _self._temp488

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp488"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp491 =  _temp488(_self)
      end

          end
        elseif _t == "number" then
          _temp491 = _temp488
        elseif _t == "function" then
                if _temp488 == nil then
              if _type(_self._temp488) == "function" or (_type(_self._temp488) == "table" and _rawget(_self._temp488, "__call_thing")) then
        _temp491 =  _self:_temp488()
      elseif _self._temp488 ~= nil then
        _temp491 =  _self._temp488

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp488"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp491 =  _temp488(_self)
      end

        elseif _temp488 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp491)
      if _t == "table" then
                      if _type(_temp491.out) == "function" or (_type(_temp491.out) == "table" and _rawget(_temp491.out, "__call_thing")) then
        _temp491 = _temp491:out()
      elseif _temp491.out ~= nil then
        _temp491 = _temp491.out

        elseif _temp491.no_undermethod ~= nil then
          _temp491 =  _temp491:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp491, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp491)
      if _n.out ~= nil then
        _temp491 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp491 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp491, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp491)
      if _f.out ~= nil then
        _temp491 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp491 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp491, "out"))
      end

      elseif _temp491 == nil then
        _error(exception:null_error("_temp491", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp491))
      end

local _temp492
      local _t = _type(_temp490)
      if _t == "table" then
                      if _type(_temp490._less_less) == "function" or (_type(_temp490._less_less) == "table" and _rawget(_temp490._less_less, "__call_thing")) then
        _temp492 = _temp490:_less_less(_temp491)
      elseif _temp490._less_less ~= nil then
        _temp492 = _temp490._less_less

        elseif _temp490.no_undermethod ~= nil then
          _temp492 =  _temp490:no_undermethod(string:new("<<") , _temp491)
        else
          _error(exception:method_error(_temp490, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp490)
      if _n._less_less ~= nil then
        _temp492 = _n:_less_less(_temp491)
      elseif _n.no_undermethod ~= nil then
        _temp492 =  _n:no_undermethod(string:new("<<") , _temp491)
      else
        _error(exception:method_error(_temp490, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp490)
      if _f._less_less ~= nil then
        _temp492 = _f:_less_less(_temp491)
      elseif _f.no_undermethod ~= nil then
        _temp492 =  _f:no_undermethod(string:new("<<") , _temp491)
      else
        _error(exception:method_error(_temp490, "<<"))
      end

      elseif _temp490 == nil then
        _error(exception:null_error("_temp490", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp490))
      end

_dummy_ = _temp492 
end

do
local _temp493 = nil
        local _t = _type(_temp486)
        if _t == "table" then
          if _rawget(_temp486, "__call_thing") == nil then
            _temp493 = _temp486
          else
                  if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp493 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp493 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp493 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp493 =  _temp486(_self)
      end

          end
        elseif _t == "number" then
          _temp493 = _temp486
        elseif _t == "function" then
                if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp493 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp493 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp493 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp493 =  _temp486(_self)
      end

        elseif _temp486 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp494 = nil
      local _t = _type(_temp493)
      if _t == "table" then
                      if _type(_temp493.out) == "function" or (_type(_temp493.out) == "table" and _rawget(_temp493.out, "__call_thing")) then
        _temp494 = _temp493:out()
      elseif _temp493.out ~= nil then
        _temp494 = _temp493.out

        elseif _temp493.no_undermethod ~= nil then
          _temp494 =  _temp493:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp493, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp493)
      if _n.out ~= nil then
        _temp494 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp494 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp493, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp493)
      if _f.out ~= nil then
        _temp494 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp494 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp493, "out"))
      end

      elseif _temp493 == nil then
        _error(exception:null_error("_temp493", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp493))
      end

local _temp495 = nil
local _temp496 = nil
        local _t = _type(_temp488)
        if _t == "table" then
          if _rawget(_temp488, "__call_thing") == nil then
            _temp496 = _temp488
          else
                  if _temp488 == nil then
              if _type(_self._temp488) == "function" or (_type(_self._temp488) == "table" and _rawget(_self._temp488, "__call_thing")) then
        _temp496 =  _self:_temp488()
      elseif _self._temp488 ~= nil then
        _temp496 =  _self._temp488

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp488"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp496 =  _temp488(_self)
      end

          end
        elseif _t == "number" then
          _temp496 = _temp488
        elseif _t == "function" then
                if _temp488 == nil then
              if _type(_self._temp488) == "function" or (_type(_self._temp488) == "table" and _rawget(_self._temp488, "__call_thing")) then
        _temp496 =  _self:_temp488()
      elseif _self._temp488 ~= nil then
        _temp496 =  _self._temp488

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp488"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp496 =  _temp488(_self)
      end

        elseif _temp488 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp496)
      if _t == "table" then
                      if _type(_temp496.var) == "function" or (_type(_temp496.var) == "table" and _rawget(_temp496.var, "__call_thing")) then
        _temp496 = _temp496:var()
      elseif _temp496.var ~= nil then
        _temp496 = _temp496.var

        elseif _temp496.no_undermethod ~= nil then
          _temp496 =  _temp496:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp496, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp496)
      if _n.var ~= nil then
        _temp496 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp496 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp496, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp496)
      if _f.var ~= nil then
        _temp496 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp496 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp496, "var"))
      end

      elseif _temp496 == nil then
        _error(exception:null_error("_temp496", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp496))
      end


local _temp497 = nil
        local _t = _type(_temp485)
        if _t == "table" then
          if _rawget(_temp485, "__call_thing") == nil then
            _temp497 = _temp485
          else
                  if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp497 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp497 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp497 =  _temp485(_self)
      end

          end
        elseif _t == "number" then
          _temp497 = _temp485
        elseif _t == "function" then
                if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp497 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp497 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp497 =  _temp485(_self)
      end

        elseif _temp485 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp497)
      if _t == "table" then
                      if _type(_temp497.method) == "function" or (_type(_temp497.method) == "table" and _rawget(_temp497.method, "__call_thing")) then
        _temp497 = _temp497:method()
      elseif _temp497.method ~= nil then
        _temp497 = _temp497.method

        elseif _temp497.no_undermethod ~= nil then
          _temp497 =  _temp497:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp497, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp497)
      if _n.method ~= nil then
        _temp497 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp497 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp497, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp497)
      if _f.method ~= nil then
        _temp497 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp497 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp497, "method"))
      end

      elseif _temp497 == nil then
        _error(exception:null_error("_temp497", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp497))
      end


local _temp498 = nil
        local _t = _type(_temp486)
        if _t == "table" then
          if _rawget(_temp486, "__call_thing") == nil then
            _temp498 = _temp486
          else
                  if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp498 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp498 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp498 =  _temp486(_self)
      end

          end
        elseif _t == "number" then
          _temp498 = _temp486
        elseif _t == "function" then
                if _temp486 == nil then
              if _type(_self._temp486) == "function" or (_type(_self._temp486) == "table" and _rawget(_self._temp486, "__call_thing")) then
        _temp498 =  _self:_temp486()
      elseif _self._temp486 ~= nil then
        _temp498 =  _self._temp486

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp486"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp498 =  _temp486(_self)
      end

        elseif _temp486 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.var) == "function" or (_type(_temp498.var) == "table" and _rawget(_temp498.var, "__call_thing")) then
        _temp498 = _temp498:var()
      elseif _temp498.var ~= nil then
        _temp498 = _temp498.var

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp498, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.var ~= nil then
        _temp498 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp498, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.var ~= nil then
        _temp498 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp498, "var"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("_temp498", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp495 =  get_undermethod(_self, _temp496,_temp497,_temp498)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp495 =  _self:get_undermethod(_temp496,_temp497,_temp498)
      elseif _self.get_undermethod ~= nil then
        _temp495 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp495 =  _self:no_undermethod(string:new("get_method") , _temp496,_temp497,_temp498)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp495 =  no_undermethod(_self, string:new("get_method") , _temp496,_temp497,_temp498)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp498
      local _t = _type(_temp494)
      if _t == "table" then
                      if _type(_temp494._less_less) == "function" or (_type(_temp494._less_less) == "table" and _rawget(_temp494._less_less, "__call_thing")) then
        _temp498 = _temp494:_less_less(_temp495)
      elseif _temp494._less_less ~= nil then
        _temp498 = _temp494._less_less

        elseif _temp494.no_undermethod ~= nil then
          _temp498 =  _temp494:no_undermethod(string:new("<<") , _temp495)
        else
          _error(exception:method_error(_temp494, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp494)
      if _n._less_less ~= nil then
        _temp498 = _n:_less_less(_temp495)
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("<<") , _temp495)
      else
        _error(exception:method_error(_temp494, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp494)
      if _f._less_less ~= nil then
        _temp498 = _f:_less_less(_temp495)
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("<<") , _temp495)
      else
        _error(exception:method_error(_temp494, "<<"))
      end

      elseif _temp494 == nil then
        _error(exception:null_error("_temp494", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp494))
      end

_dummy_ = _temp498 
end

    if _type(_temp486) == "function" or (_type(_temp486) == "table" and _rawget(_temp486, "__call_thing")) then
      return  _temp486(_self)

    elseif _temp486 then
      return  _temp486
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp483)
      if _t == "table" then
                      if _type(_temp483.walk) == "function" or (_type(_temp483.walk) == "table" and _rawget(_temp483.walk, "__call_thing")) then
        _dummy_ = _temp483:walk(_temp4,_temp499)
      elseif _temp483.walk ~= nil then
        _dummy_ = _temp483.walk

        elseif _temp483.no_undermethod ~= nil then
          _dummy_ =  _temp483:no_undermethod(string:new("walk") , _temp4,_temp499)
        else
          _error(exception:method_error(_temp483, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp483)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp499)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp499)
      else
        _error(exception:method_error(_temp483, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp483)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp499)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp499)
      else
        _error(exception:method_error(_temp483, "walk"))
      end

      elseif _temp483 == nil then
        _error(exception:null_error("_temp483", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp483))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp499 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp499 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp499 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp499 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp499 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp499 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp499 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp499 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp509 = function (_self, _temp501,_temp500)
        if _temp501 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp500 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp500 =  null(_self)

    elseif null then
      _temp500 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp500 =  _self:null()
      elseif _self.null ~= nil then
        _temp500 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp500 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp500 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp502
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp502 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp502 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp502 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp502 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp502 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp502 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp502 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp502 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502.body) == "function" or (_type(_temp502.body) == "table" and _rawget(_temp502.body, "__call_thing")) then
        _temp502 = _temp502:body()
      elseif _temp502.body ~= nil then
        _temp502 = _temp502.body

        elseif _temp502.no_undermethod ~= nil then
          _temp502 =  _temp502:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n.body ~= nil then
        _temp502 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp502 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f.body ~= nil then
        _temp502 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp502 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end

local _temp503 = regex:new("[\\\\]")

local _temp504 = string:new("\\\\")

      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502.sub) == "function" or (_type(_temp502.sub) == "table" and _rawget(_temp502.sub, "__call_thing")) then
        _temp502 = _temp502:sub(_temp503,_temp504)
      elseif _temp502.sub ~= nil then
        _temp502 = _temp502.sub

        elseif _temp502.no_undermethod ~= nil then
          _temp502 =  _temp502:no_undermethod(string:new("sub") , _temp503,_temp504)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n.sub ~= nil then
        _temp502 = _n:sub(_temp503,_temp504)
      elseif _n.no_undermethod ~= nil then
        _temp502 =  _n:no_undermethod(string:new("sub") , _temp503,_temp504)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f.sub ~= nil then
        _temp502 = _f:sub(_temp503,_temp504)
      elseif _f.no_undermethod ~= nil then
        _temp502 =  _f:no_undermethod(string:new("sub") , _temp503,_temp504)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end

local _temp504 = regex:new("\"")

_temp503 = string:new("\\\"")

      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502.sub) == "function" or (_type(_temp502.sub) == "table" and _rawget(_temp502.sub, "__call_thing")) then
        _temp502 = _temp502:sub(_temp504,_temp503)
      elseif _temp502.sub ~= nil then
        _temp502 = _temp502.sub

        elseif _temp502.no_undermethod ~= nil then
          _temp502 =  _temp502:no_undermethod(string:new("sub") , _temp504,_temp503)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n.sub ~= nil then
        _temp502 = _n:sub(_temp504,_temp503)
      elseif _n.no_undermethod ~= nil then
        _temp502 =  _n:no_undermethod(string:new("sub") , _temp504,_temp503)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f.sub ~= nil then
        _temp502 = _f:sub(_temp504,_temp503)
      elseif _f.no_undermethod ~= nil then
        _temp502 =  _f:no_undermethod(string:new("sub") , _temp504,_temp503)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end


local _temp505
        local _t = _type(_temp501)
        if _t == "table" then
          if _rawget(_temp501, "__call_thing") == nil then
            _temp505 = _temp501
          else
                  if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp505 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp505 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp505 =  _temp501(_self)
      end

          end
        elseif _t == "number" then
          _temp505 = _temp501
        elseif _t == "function" then
                if _temp501 == nil then
              if _type(_self._temp501) == "function" or (_type(_self._temp501) == "table" and _rawget(_self._temp501, "__call_thing")) then
        _temp505 =  _self:_temp501()
      elseif _self._temp501 ~= nil then
        _temp505 =  _self._temp501

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp501"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp505 =  _temp501(_self)
      end

        elseif _temp501 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.opts) == "function" or (_type(_temp505.opts) == "table" and _rawget(_temp505.opts, "__call_thing")) then
        _temp505 = _temp505:opts()
      elseif _temp505.opts ~= nil then
        _temp505 = _temp505.opts

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.opts ~= nil then
        _temp505 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.opts ~= nil then
        _temp505 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end

      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.dice) == "function" or (_type(_temp505.dice) == "table" and _rawget(_temp505.dice, "__call_thing")) then
        _temp505 = _temp505:dice()
      elseif _temp505.dice ~= nil then
        _temp505 = _temp505.dice

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.dice ~= nil then
        _temp505 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.dice ~= nil then
        _temp505 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end

      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.unique) == "function" or (_type(_temp505.unique) == "table" and _rawget(_temp505.unique, "__call_thing")) then
        _temp505 = _temp505:unique()
      elseif _temp505.unique ~= nil then
        _temp505 = _temp505.unique

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.unique ~= nil then
        _temp505 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.unique ~= nil then
        _temp505 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end

      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.join) == "function" or (_type(_temp505.join) == "table" and _rawget(_temp505.join, "__call_thing")) then
        _temp505 = _temp505:join()
      elseif _temp505.join ~= nil then
        _temp505 = _temp505.join

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.join ~= nil then
        _temp505 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.join ~= nil then
        _temp505 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end

local _temp503 = regex:new("m")

_temp504 = string:new("s")

      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.sub) == "function" or (_type(_temp505.sub) == "table" and _rawget(_temp505.sub, "__call_thing")) then
        _temp505 = _temp505:sub(_temp503,_temp504)
      elseif _temp505.sub ~= nil then
        _temp505 = _temp505.sub

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("sub") , _temp503,_temp504)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.sub ~= nil then
        _temp505 = _n:sub(_temp503,_temp504)
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("sub") , _temp503,_temp504)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.sub ~= nil then
        _temp505 = _f:sub(_temp503,_temp504)
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("sub") , _temp503,_temp504)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end


    if _type(_temp500) == "function" or (_type(_temp500) == "table" and _rawget(_temp500, "__call_thing")) then
      _temp504 =  _temp500(_self)

    elseif _temp500 then
      _temp504 =  _temp500
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp504 =  _self:var()
      elseif _self.var ~= nil then
        _temp504 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp504 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp504 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp506 = nil
    if _type(_temp502) == "function" or (_type(_temp502) == "table" and _rawget(_temp502, "__call_thing")) then
      _temp506 =  _temp502(_self)

    elseif _temp502 then
      _temp506 =  _temp502
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp506 =  _self:body()
      elseif _self.body ~= nil then
        _temp506 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp506 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp506 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp507 = nil
    if _type(_temp505) == "function" or (_type(_temp505) == "table" and _rawget(_temp505, "__call_thing")) then
      _temp507 =  _temp505(_self)

    elseif _temp505 then
      _temp507 =  _temp505
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp507 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp507 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp507 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp507 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp503 = string:new("regex:new(\"" .. _tostring(_temp506) .. "\", \"" .. _tostring(_temp507) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp504,_temp503)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp504,_temp503)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp504,_temp503)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp504,_temp503)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp499)
      if _t == "table" then
                      if _type(_temp499.walk) == "function" or (_type(_temp499.walk) == "table" and _rawget(_temp499.walk, "__call_thing")) then
        _dummy_ = _temp499:walk(_temp4,_temp509)
      elseif _temp499.walk ~= nil then
        _dummy_ = _temp499.walk

        elseif _temp499.no_undermethod ~= nil then
          _dummy_ =  _temp499:no_undermethod(string:new("walk") , _temp4,_temp509)
        else
          _error(exception:method_error(_temp499, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp499)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp509)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp509)
      else
        _error(exception:method_error(_temp499, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp499)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp509)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp509)
      else
        _error(exception:method_error(_temp499, "walk"))
      end

      elseif _temp499 == nil then
        _error(exception:null_error("_temp499", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp499))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp509 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp509 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp509 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp509 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp509 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp509 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp509 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp509 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp509 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp509 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp513 = function (_self, _temp511,_temp510)
        if _temp511 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp510 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp510 =  null(_self)

    elseif null then
      _temp510 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp510 =  _self:null()
      elseif _self.null ~= nil then
        _temp510 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp510 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp510 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp512
local _temp513 = nil
    if _type(_temp510) == "function" or (_type(_temp510) == "table" and _rawget(_temp510, "__call_thing")) then
      _temp513 =  _temp510(_self)

    elseif _temp510 then
      _temp513 =  _temp510
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp513 =  _self:var()
      elseif _self.var ~= nil then
        _temp513 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp513 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp513 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp512 =  set_underresult(_self, _temp513)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp512 =  _self:set_underresult(_temp513)
      elseif _self.set_underresult ~= nil then
        _temp512 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp512 =  _self:no_undermethod(string:new("set_result") , _temp513)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp512 =  no_undermethod(_self, string:new("set_result") , _temp513)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp514
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp514 =  _self:my()
      elseif _self.my ~= nil then
        _temp514 =  _self.my

        elseif my ~= nil then
          _temp514 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp514)
      if _t == "table" then
                      if _type(_temp514.env) == "function" or (_type(_temp514.env) == "table" and _rawget(_temp514.env, "__call_thing")) then
        _temp514 = _temp514:env()
      elseif _temp514.env ~= nil then
        _temp514 = _temp514.env

        elseif _temp514.no_undermethod ~= nil then
          _temp514 =  _temp514:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp514)
      if _n.env ~= nil then
        _temp514 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp514 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp514)
      if _f.env ~= nil then
        _temp514 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp514 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp514 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp514))
      end

      local _t = _type(_temp514)
      if _t == "table" then
                      if _type(_temp514.next_undertemp) == "function" or (_type(_temp514.next_undertemp) == "table" and _rawget(_temp514.next_undertemp, "__call_thing")) then
        _temp514 = _temp514:next_undertemp()
      elseif _temp514.next_undertemp ~= nil then
        _temp514 = _temp514.next_undertemp

        elseif _temp514.no_undermethod ~= nil then
          _temp514 =  _temp514:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp514)
      if _n.next_undertemp ~= nil then
        _temp514 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp514 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp514)
      if _f.next_undertemp ~= nil then
        _temp514 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp514 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp514 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp514))
      end


do
local _temp515 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp515 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp515 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp515 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp515 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp515 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp515 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp515 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp515 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp515 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp515 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp516 = nil
      local _t = _type(_temp515)
      if _t == "table" then
                      if _type(_temp515.out) == "function" or (_type(_temp515.out) == "table" and _rawget(_temp515.out, "__call_thing")) then
        _temp516 = _temp515:out()
      elseif _temp515.out ~= nil then
        _temp516 = _temp515.out

        elseif _temp515.no_undermethod ~= nil then
          _temp516 =  _temp515:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp515, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp515)
      if _n.out ~= nil then
        _temp516 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp516 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp515, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp515)
      if _f.out ~= nil then
        _temp516 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp516 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp515, "out"))
      end

      elseif _temp515 == nil then
        _error(exception:null_error("_temp515", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp515))
      end

local _temp517 = nil
do
local _temp518 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp518 =  _temp514(_self)

    elseif _temp514 then
      _temp518 =  _temp514
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp518 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp518 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp518 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp518 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp517 = string:new("\ndo\nlocal " .. _tostring(_temp518) .. " = {}\n")
end
local _temp519
      local _t = _type(_temp516)
      if _t == "table" then
                      if _type(_temp516._less_less) == "function" or (_type(_temp516._less_less) == "table" and _rawget(_temp516._less_less, "__call_thing")) then
        _temp519 = _temp516:_less_less(_temp517)
      elseif _temp516._less_less ~= nil then
        _temp519 = _temp516._less_less

        elseif _temp516.no_undermethod ~= nil then
          _temp519 =  _temp516:no_undermethod(string:new("<<") , _temp517)
        else
          _error(exception:method_error(_temp516, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp516)
      if _n._less_less ~= nil then
        _temp519 = _n:_less_less(_temp517)
      elseif _n.no_undermethod ~= nil then
        _temp519 =  _n:no_undermethod(string:new("<<") , _temp517)
      else
        _error(exception:method_error(_temp516, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp516)
      if _f._less_less ~= nil then
        _temp519 = _f:_less_less(_temp517)
      elseif _f.no_undermethod ~= nil then
        _temp519 =  _f:no_undermethod(string:new("<<") , _temp517)
      else
        _error(exception:method_error(_temp516, "<<"))
      end

      elseif _temp516 == nil then
        _error(exception:null_error("_temp516", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp516))
      end

_dummy_ = _temp519 
end

local _temp520
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp520 =  my(_self)

    elseif my then
      _temp520 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp520 =  _self:my()
      elseif _self.my ~= nil then
        _temp520 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp520 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp520 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp511)
        if _t == "table" then
          if _rawget(_temp511, "__call_thing") == nil then
            _temp513 = _temp511
          else
                  if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp513 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp513 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp511(_self)
      end

          end
        elseif _t == "number" then
          _temp513 = _temp511
        elseif _t == "function" then
                if _temp511 == nil then
              if _type(_self._temp511) == "function" or (_type(_self._temp511) == "table" and _rawget(_self._temp511, "__call_thing")) then
        _temp513 =  _self:_temp511()
      elseif _self._temp511 ~= nil then
        _temp513 =  _self._temp511

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp511"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp511(_self)
      end

        elseif _temp511 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.nodes) == "function" or (_type(_temp513.nodes) == "table" and _rawget(_temp513.nodes, "__call_thing")) then
        _temp513 = _temp513:nodes()
      elseif _temp513.nodes ~= nil then
        _temp513 = _temp513.nodes

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp513, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.nodes ~= nil then
        _temp513 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp513, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.nodes ~= nil then
        _temp513 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp513, "nodes"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("_temp513", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end


local _temp563 = function (_self, _temp521, _temp522)
        if _temp521 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp522 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp523 
do
local _temp524 = nil
        local _t = _type(_temp521)
        if _t == "table" then
          if _rawget(_temp521, "__call_thing") == nil then
            _temp524 = _temp521
          else
                  if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp524 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp524 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp524 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp524 =  _temp521(_self)
      end

          end
        elseif _t == "number" then
          _temp524 = _temp521
        elseif _t == "function" then
                if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp524 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp524 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp524 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp524 =  _temp521(_self)
      end

        elseif _temp521 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp525 = nil
      local _t = _type(_temp524)
      if _t == "table" then
                      if _type(_temp524.name) == "function" or (_type(_temp524.name) == "table" and _rawget(_temp524.name, "__call_thing")) then
        _temp525 = _temp524:name()
      elseif _temp524.name ~= nil then
        _temp525 = _temp524.name

        elseif _temp524.no_undermethod ~= nil then
          _temp525 =  _temp524:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp524, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp524)
      if _n.name ~= nil then
        _temp525 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp525 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp524, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp524)
      if _f.name ~= nil then
        _temp525 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp525 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp524, "name"))
      end

      elseif _temp524 == nil then
        _error(exception:null_error("_temp524", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp524))
      end

local _temp526 = string:new("string")
local _temp527
      local _t = _type(_temp525)
      if _t == "table" then
                      if _type(_temp525._equal_equal) == "function" or (_type(_temp525._equal_equal) == "table" and _rawget(_temp525._equal_equal, "__call_thing")) then
        _temp527 = _temp525:_equal_equal(_temp526)
      elseif _temp525._equal_equal ~= nil then
        _temp527 = _temp525._equal_equal

        elseif _temp525.no_undermethod ~= nil then
          _temp527 =  _temp525:no_undermethod(string:new("==") , _temp526)
        else
          _error(exception:method_error(_temp525, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp526) == 'number' then
              if _temp525 == _temp526 then
        _temp527 = object.__true
      else
        _temp527 = object.__false
      end

      else
              local _n = number:new(_temp525)
      if _n._equal_equal ~= nil then
        _temp527 = _n:_equal_equal(_temp526)
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("==") , _temp526)
      else
        _error(exception:method_error(_temp525, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp525)
      if _f._equal_equal ~= nil then
        _temp527 = _f:_equal_equal(_temp526)
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("==") , _temp526)
      else
        _error(exception:method_error(_temp525, "=="))
      end

      elseif _temp525 == nil then
        _error(exception:null_error("_temp525", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp525))
      end

_temp523 = _temp527 
end


local _temp540 = function (_self)

local _temp528 
do
local _temp529 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp529 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp529 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp529 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp529 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp529 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp529 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp529 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp529 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp530 = nil
      local _t = _type(_temp529)
      if _t == "table" then
                      if _type(_temp529.out) == "function" or (_type(_temp529.out) == "table" and _rawget(_temp529.out, "__call_thing")) then
        _temp530 = _temp529:out()
      elseif _temp529.out ~= nil then
        _temp530 = _temp529.out

        elseif _temp529.no_undermethod ~= nil then
          _temp530 =  _temp529:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp529, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp529)
      if _n.out ~= nil then
        _temp530 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp529, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp529)
      if _f.out ~= nil then
        _temp530 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp529, "out"))
      end

      elseif _temp529 == nil then
        _error(exception:null_error("_temp529", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp529))
      end

local _temp531 = nil
do
local _temp532 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp532 =  _temp514(_self)

    elseif _temp514 then
      _temp532 =  _temp514
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp532 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp532 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp532 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp532 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp533 
do
local _temp534 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp534 =  _temp522(_self)

    elseif _temp522 then
      _temp534 =  _temp522
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp534 =  _self:i()
      elseif _self.i ~= nil then
        _temp534 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp534 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp534 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp535
      local _t = _type(_temp534)
      if _t == "table" then
                      if _type(_temp534._plus) == "function" or (_type(_temp534._plus) == "table" and _rawget(_temp534._plus, "__call_thing")) then
        _temp535 = _temp534:_plus(1)
      elseif _temp534._plus ~= nil then
        _temp535 = _temp534._plus

        elseif _temp534.no_undermethod ~= nil then
          _temp535 =  _temp534:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp534, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp535 = _temp534 + 1
      else
              local _n = number:new(_temp534)
      if _n._plus ~= nil then
        _temp535 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp535 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp534, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp534)
      if _f._plus ~= nil then
        _temp535 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp535 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp534, "+"))
      end

      elseif _temp534 == nil then
        _error(exception:null_error("_temp534", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp534))
      end

_temp533 = _temp535 
end

local _temp536 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp536 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp536 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp536 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp536 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp536 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp536 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp536 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp536 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp536 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp536 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp537 = nil
        local _t = _type(_temp521)
        if _t == "table" then
          if _rawget(_temp521, "__call_thing") == nil then
            _temp537 = _temp521
          else
                  if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp537 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp537 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp537 =  _temp521(_self)
      end

          end
        elseif _t == "number" then
          _temp537 = _temp521
        elseif _t == "function" then
                if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp537 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp537 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp537 =  _temp521(_self)
      end

        elseif _temp521 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp537)
      if _t == "table" then
                      if _type(_temp537.value) == "function" or (_type(_temp537.value) == "table" and _rawget(_temp537.value, "__call_thing")) then
        _temp537 = _temp537:value()
      elseif _temp537.value ~= nil then
        _temp537 = _temp537.value

        elseif _temp537.no_undermethod ~= nil then
          _temp537 =  _temp537:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp537, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp537)
      if _n.value ~= nil then
        _temp537 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp537 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp537, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp537)
      if _f.value ~= nil then
        _temp537 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp537 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp537, "value"))
      end

      elseif _temp537 == nil then
        _error(exception:null_error("_temp537", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp537))
      end


      local _t = _type(_temp536)
      if _t == "table" then
                      if _type(_temp536.escape_understring) == "function" or (_type(_temp536.escape_understring) == "table" and _rawget(_temp536.escape_understring, "__call_thing")) then
        _temp536 = _temp536:escape_understring(_temp537)
      elseif _temp536.escape_understring ~= nil then
        _temp536 = _temp536.escape_understring

        elseif _temp536.no_undermethod ~= nil then
          _temp536 =  _temp536:no_undermethod(string:new("escape_string") , _temp537)
        else
          _error(exception:method_error(_temp536, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp536)
      if _n.escape_understring ~= nil then
        _temp536 = _n:escape_understring(_temp537)
      elseif _n.no_undermethod ~= nil then
        _temp536 =  _n:no_undermethod(string:new("escape_string") , _temp537)
      else
        _error(exception:method_error(_temp536, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp536)
      if _f.escape_understring ~= nil then
        _temp536 = _f:escape_understring(_temp537)
      elseif _f.no_undermethod ~= nil then
        _temp536 =  _f:no_undermethod(string:new("escape_string") , _temp537)
      else
        _error(exception:method_error(_temp536, "escape_string"))
      end

      elseif _temp536 == nil then
        _error(exception:null_error("_temp536", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp536))
      end


_temp531 = string:new("" .. _tostring(_temp532) .. "[" .. _tostring(_temp533) .. "] = \"" .. _tostring(_temp536) .. "\"\n")
end
local _temp538
      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530._less_less) == "function" or (_type(_temp530._less_less) == "table" and _rawget(_temp530._less_less, "__call_thing")) then
        _temp538 = _temp530:_less_less(_temp531)
      elseif _temp530._less_less ~= nil then
        _temp538 = _temp530._less_less

        elseif _temp530.no_undermethod ~= nil then
          _temp538 =  _temp530:no_undermethod(string:new("<<") , _temp531)
        else
          _error(exception:method_error(_temp530, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n._less_less ~= nil then
        _temp538 = _n:_less_less(_temp531)
      elseif _n.no_undermethod ~= nil then
        _temp538 =  _n:no_undermethod(string:new("<<") , _temp531)
      else
        _error(exception:method_error(_temp530, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f._less_less ~= nil then
        _temp538 = _f:_less_less(_temp531)
      elseif _f.no_undermethod ~= nil then
        _temp538 =  _f:no_undermethod(string:new("<<") , _temp531)
      else
        _error(exception:method_error(_temp530, "<<"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("_temp530", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end

_temp528 = _temp538 
end

return _temp528
end


local _temp561 = function (_self)

local _temp541
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp541 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp541 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp541 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp541 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp541 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp541 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp541 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp541 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp541 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp541 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp542 = nil
    if _type(_temp521) == "function" or (_type(_temp521) == "table" and _rawget(_temp521, "__call_thing")) then
      _temp542 =  _temp521(_self)

    elseif _temp521 then
      _temp542 =  _temp521
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp542 =  _self:n()
      elseif _self.n ~= nil then
        _temp542 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp542 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp542 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp543 = nil
do
local _temp544 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp544 =  _temp514(_self)

    elseif _temp514 then
      _temp544 =  _temp514
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp544 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp544 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp544 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp544 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp545 
do
local _temp546 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp546 =  _temp522(_self)

    elseif _temp522 then
      _temp546 =  _temp522
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp546 =  _self:i()
      elseif _self.i ~= nil then
        _temp546 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp546 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp546 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp547
      local _t = _type(_temp546)
      if _t == "table" then
                      if _type(_temp546._plus) == "function" or (_type(_temp546._plus) == "table" and _rawget(_temp546._plus, "__call_thing")) then
        _temp547 = _temp546:_plus(1)
      elseif _temp546._plus ~= nil then
        _temp547 = _temp546._plus

        elseif _temp546.no_undermethod ~= nil then
          _temp547 =  _temp546:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp546, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp547 = _temp546 + 1
      else
              local _n = number:new(_temp546)
      if _n._plus ~= nil then
        _temp547 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp547 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp546, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp546)
      if _f._plus ~= nil then
        _temp547 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp547 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp546, "+"))
      end

      elseif _temp546 == nil then
        _error(exception:null_error("_temp546", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp546))
      end

_temp545 = _temp547 
end

_temp543 = string:new("" .. _tostring(_temp544) .. "[" .. _tostring(_temp545) .. "]")
end

      local _t = _type(_temp541)
      if _t == "table" then
                      if _type(_temp541.process) == "function" or (_type(_temp541.process) == "table" and _rawget(_temp541.process, "__call_thing")) then
        _temp541 = _temp541:process(_temp542,_temp543)
      elseif _temp541.process ~= nil then
        _temp541 = _temp541.process

        elseif _temp541.no_undermethod ~= nil then
          _temp541 =  _temp541:no_undermethod(string:new("process") , _temp542,_temp543)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp541)
      if _n.process ~= nil then
        _temp541 = _n:process(_temp542,_temp543)
      elseif _n.no_undermethod ~= nil then
        _temp541 =  _n:no_undermethod(string:new("process") , _temp542,_temp543)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp541)
      if _f.process ~= nil then
        _temp541 = _f:process(_temp542,_temp543)
      elseif _f.no_undermethod ~= nil then
        _temp541 =  _f:no_undermethod(string:new("process") , _temp542,_temp543)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp541 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp541))
      end


do
local _temp548 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp548 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp548 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp548 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp548 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp548 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp548 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp548 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp548 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp548 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp548 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp549 = nil
      local _t = _type(_temp548)
      if _t == "table" then
                      if _type(_temp548.out) == "function" or (_type(_temp548.out) == "table" and _rawget(_temp548.out, "__call_thing")) then
        _temp549 = _temp548:out()
      elseif _temp548.out ~= nil then
        _temp549 = _temp548.out

        elseif _temp548.no_undermethod ~= nil then
          _temp549 =  _temp548:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp548, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp548)
      if _n.out ~= nil then
        _temp549 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp549 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp548, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp548)
      if _f.out ~= nil then
        _temp549 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp549 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp548, "out"))
      end

      elseif _temp548 == nil then
        _error(exception:null_error("_temp548", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp548))
      end

local _temp550 = nil
        local _t = _type(_temp541)
        if _t == "table" then
          if _rawget(_temp541, "__call_thing") == nil then
            _temp550 = _temp541
          else
                  if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp550 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp550 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp550 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp550 =  _temp541(_self)
      end

          end
        elseif _t == "number" then
          _temp550 = _temp541
        elseif _t == "function" then
                if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp550 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp550 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp550 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp550 =  _temp541(_self)
      end

        elseif _temp541 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp550)
      if _t == "table" then
                      if _type(_temp550.out) == "function" or (_type(_temp550.out) == "table" and _rawget(_temp550.out, "__call_thing")) then
        _temp550 = _temp550:out()
      elseif _temp550.out ~= nil then
        _temp550 = _temp550.out

        elseif _temp550.no_undermethod ~= nil then
          _temp550 =  _temp550:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp550, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp550)
      if _n.out ~= nil then
        _temp550 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp550 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp550, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp550)
      if _f.out ~= nil then
        _temp550 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp550 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp550, "out"))
      end

      elseif _temp550 == nil then
        _error(exception:null_error("_temp550", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp550))
      end

local _temp551
      local _t = _type(_temp549)
      if _t == "table" then
                      if _type(_temp549._less_less) == "function" or (_type(_temp549._less_less) == "table" and _rawget(_temp549._less_less, "__call_thing")) then
        _temp551 = _temp549:_less_less(_temp550)
      elseif _temp549._less_less ~= nil then
        _temp551 = _temp549._less_less

        elseif _temp549.no_undermethod ~= nil then
          _temp551 =  _temp549:no_undermethod(string:new("<<") , _temp550)
        else
          _error(exception:method_error(_temp549, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp549)
      if _n._less_less ~= nil then
        _temp551 = _n:_less_less(_temp550)
      elseif _n.no_undermethod ~= nil then
        _temp551 =  _n:no_undermethod(string:new("<<") , _temp550)
      else
        _error(exception:method_error(_temp549, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp549)
      if _f._less_less ~= nil then
        _temp551 = _f:_less_less(_temp550)
      elseif _f.no_undermethod ~= nil then
        _temp551 =  _f:no_undermethod(string:new("<<") , _temp550)
      else
        _error(exception:method_error(_temp549, "<<"))
      end

      elseif _temp549 == nil then
        _error(exception:null_error("_temp549", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp549))
      end

_dummy_ = _temp551 
end

local _temp543 
do
local _temp552 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp552 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp552 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp552 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp552 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp552 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp552 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp552 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp552 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp553 = nil
      local _t = _type(_temp552)
      if _t == "table" then
                      if _type(_temp552.out) == "function" or (_type(_temp552.out) == "table" and _rawget(_temp552.out, "__call_thing")) then
        _temp553 = _temp552:out()
      elseif _temp552.out ~= nil then
        _temp553 = _temp552.out

        elseif _temp552.no_undermethod ~= nil then
          _temp553 =  _temp552:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp552, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp552)
      if _n.out ~= nil then
        _temp553 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp553 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp552, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp552)
      if _f.out ~= nil then
        _temp553 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp553 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp552, "out"))
      end

      elseif _temp552 == nil then
        _error(exception:null_error("_temp552", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp552))
      end

local _temp554 = nil
do
local _temp555 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp555 =  _temp514(_self)

    elseif _temp514 then
      _temp555 =  _temp514
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp555 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp555 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp555 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp555 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp556 
do
local _temp557 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp557 =  _temp522(_self)

    elseif _temp522 then
      _temp557 =  _temp522
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp557 =  _self:i()
      elseif _self.i ~= nil then
        _temp557 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp557 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp557 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp558
      local _t = _type(_temp557)
      if _t == "table" then
                      if _type(_temp557._plus) == "function" or (_type(_temp557._plus) == "table" and _rawget(_temp557._plus, "__call_thing")) then
        _temp558 = _temp557:_plus(1)
      elseif _temp557._plus ~= nil then
        _temp558 = _temp557._plus

        elseif _temp557.no_undermethod ~= nil then
          _temp558 =  _temp557:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp557, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp558 = _temp557 + 1
      else
              local _n = number:new(_temp557)
      if _n._plus ~= nil then
        _temp558 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp558 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp557, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp557)
      if _f._plus ~= nil then
        _temp558 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp558 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp557, "+"))
      end

      elseif _temp557 == nil then
        _error(exception:null_error("_temp557", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp557))
      end

_temp556 = _temp558 
end

local _temp559 = nil
        local _t = _type(_temp541)
        if _t == "table" then
          if _rawget(_temp541, "__call_thing") == nil then
            _temp559 = _temp541
          else
                  if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp559 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp559 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp559 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp559 =  _temp541(_self)
      end

          end
        elseif _t == "number" then
          _temp559 = _temp541
        elseif _t == "function" then
                if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp559 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp559 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp559 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp559 =  _temp541(_self)
      end

        elseif _temp541 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp559)
      if _t == "table" then
                      if _type(_temp559.var) == "function" or (_type(_temp559.var) == "table" and _rawget(_temp559.var, "__call_thing")) then
        _temp559 = _temp559:var()
      elseif _temp559.var ~= nil then
        _temp559 = _temp559.var

        elseif _temp559.no_undermethod ~= nil then
          _temp559 =  _temp559:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp559, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp559)
      if _n.var ~= nil then
        _temp559 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp559 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp559, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp559)
      if _f.var ~= nil then
        _temp559 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp559 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp559, "var"))
      end

      elseif _temp559 == nil then
        _error(exception:null_error("_temp559", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp559))
      end


_temp554 = string:new("" .. _tostring(_temp555) .. "[" .. _tostring(_temp556) .. "] = _tostring(" .. _tostring(_temp559) .. ")\n")
end
local _temp560
      local _t = _type(_temp553)
      if _t == "table" then
                      if _type(_temp553._less_less) == "function" or (_type(_temp553._less_less) == "table" and _rawget(_temp553._less_less, "__call_thing")) then
        _temp560 = _temp553:_less_less(_temp554)
      elseif _temp553._less_less ~= nil then
        _temp560 = _temp553._less_less

        elseif _temp553.no_undermethod ~= nil then
          _temp560 =  _temp553:no_undermethod(string:new("<<") , _temp554)
        else
          _error(exception:method_error(_temp553, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp553)
      if _n._less_less ~= nil then
        _temp560 = _n:_less_less(_temp554)
      elseif _n.no_undermethod ~= nil then
        _temp560 =  _n:no_undermethod(string:new("<<") , _temp554)
      else
        _error(exception:method_error(_temp553, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp553)
      if _f._less_less ~= nil then
        _temp560 = _f:_less_less(_temp554)
      elseif _f.no_undermethod ~= nil then
        _temp560 =  _f:no_undermethod(string:new("<<") , _temp554)
      else
        _error(exception:method_error(_temp553, "<<"))
      end

      elseif _temp553 == nil then
        _error(exception:null_error("_temp553", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp553))
      end

_temp543 = _temp560 
end

return _temp543
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp523,_temp540,_temp561)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp523,_temp540,_temp561)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp523,_temp540,_temp561)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp523,_temp540,_temp561)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.each_underwith_underindex) == "function" or (_type(_temp513.each_underwith_underindex) == "table" and _rawget(_temp513.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp513:each_underwith_underindex(_temp563)
      elseif _temp513.each_underwith_underindex ~= nil then
        _dummy_ = _temp513.each_underwith_underindex

        elseif _temp513.no_undermethod ~= nil then
          _dummy_ =  _temp513:no_undermethod(string:new("each_with_index") , _temp563)
        else
          _error(exception:method_error(_temp513, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp563)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp563)
      else
        _error(exception:method_error(_temp513, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp563)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp563)
      else
        _error(exception:method_error(_temp513, "each_with_index"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("_temp513", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

do
local _temp564 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp564 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp564 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp564 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp564 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp564 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp564 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp564 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp564 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp565 = nil
      local _t = _type(_temp564)
      if _t == "table" then
                      if _type(_temp564.out) == "function" or (_type(_temp564.out) == "table" and _rawget(_temp564.out, "__call_thing")) then
        _temp565 = _temp564:out()
      elseif _temp564.out ~= nil then
        _temp565 = _temp564.out

        elseif _temp564.no_undermethod ~= nil then
          _temp565 =  _temp564:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp564, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp564)
      if _n.out ~= nil then
        _temp565 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp565 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp564, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp564)
      if _f.out ~= nil then
        _temp565 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp565 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp564, "out"))
      end

      elseif _temp564 == nil then
        _error(exception:null_error("_temp564", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp564))
      end

local _temp566 = nil
do
local _temp567 = nil
        local _t = _type(_temp512)
        if _t == "table" then
          if _rawget(_temp512, "__call_thing") == nil then
            _temp567 = _temp512
          else
                  if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp567 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp567 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp567 =  _temp512(_self)
      end

          end
        elseif _t == "number" then
          _temp567 = _temp512
        elseif _t == "function" then
                if _temp512 == nil then
              if _type(_self._temp512) == "function" or (_type(_self._temp512) == "table" and _rawget(_self._temp512, "__call_thing")) then
        _temp567 =  _self:_temp512()
      elseif _self._temp512 ~= nil then
        _temp567 =  _self._temp512

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp512"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp567 =  _temp512(_self)
      end

        elseif _temp512 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp567)
      if _t == "table" then
                      if _type(_temp567.var) == "function" or (_type(_temp567.var) == "table" and _rawget(_temp567.var, "__call_thing")) then
        _temp567 = _temp567:var()
      elseif _temp567.var ~= nil then
        _temp567 = _temp567.var

        elseif _temp567.no_undermethod ~= nil then
          _temp567 =  _temp567:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp567, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp567)
      if _n.var ~= nil then
        _temp567 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp567, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp567)
      if _f.var ~= nil then
        _temp567 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp567, "var"))
      end

      elseif _temp567 == nil then
        _error(exception:null_error("_temp567", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp567))
      end


local _temp568 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp568 =  _temp514(_self)

    elseif _temp514 then
      _temp568 =  _temp514
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp568 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp568 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp568 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp568 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp566 = string:new("" .. _tostring(_temp567) .. " = string:new(_table.concat(" .. _tostring(_temp568) .. "))\nend\n")
end
local _temp569
      local _t = _type(_temp565)
      if _t == "table" then
                      if _type(_temp565._less_less) == "function" or (_type(_temp565._less_less) == "table" and _rawget(_temp565._less_less, "__call_thing")) then
        _temp569 = _temp565:_less_less(_temp566)
      elseif _temp565._less_less ~= nil then
        _temp569 = _temp565._less_less

        elseif _temp565.no_undermethod ~= nil then
          _temp569 =  _temp565:no_undermethod(string:new("<<") , _temp566)
        else
          _error(exception:method_error(_temp565, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp565)
      if _n._less_less ~= nil then
        _temp569 = _n:_less_less(_temp566)
      elseif _n.no_undermethod ~= nil then
        _temp569 =  _n:no_undermethod(string:new("<<") , _temp566)
      else
        _error(exception:method_error(_temp565, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp565)
      if _f._less_less ~= nil then
        _temp569 = _f:_less_less(_temp566)
      elseif _f.no_undermethod ~= nil then
        _temp569 =  _f:no_undermethod(string:new("<<") , _temp566)
      else
        _error(exception:method_error(_temp565, "<<"))
      end

      elseif _temp565 == nil then
        _error(exception:null_error("_temp565", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp565))
      end

_dummy_ = _temp569 
end

    if _type(_temp512) == "function" or (_type(_temp512) == "table" and _rawget(_temp512, "__call_thing")) then
      return  _temp512(_self)

    elseif _temp512 then
      return  _temp512
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp509)
      if _t == "table" then
                      if _type(_temp509.walk) == "function" or (_type(_temp509.walk) == "table" and _rawget(_temp509.walk, "__call_thing")) then
        _dummy_ = _temp509:walk(_temp4,_temp513)
      elseif _temp509.walk ~= nil then
        _dummy_ = _temp509.walk

        elseif _temp509.no_undermethod ~= nil then
          _dummy_ =  _temp509:no_undermethod(string:new("walk") , _temp4,_temp513)
        else
          _error(exception:method_error(_temp509, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp509)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp513)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp513)
      else
        _error(exception:method_error(_temp509, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp509)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp513)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp513)
      else
        _error(exception:method_error(_temp509, "walk"))
      end

      elseif _temp509 == nil then
        _error(exception:null_error("_temp509", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp509))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp513 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp513 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp513 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp513 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp513 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp513 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp513 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp513 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp581 = function (_self, _temp571,_temp570)
        if _temp571 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp570 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp570 =  null(_self)

    elseif null then
      _temp570 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp570 =  _self:null()
      elseif _self.null ~= nil then
        _temp570 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp570 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp570 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp572
local _temp573 = nil
    if _type(_temp570) == "function" or (_type(_temp570) == "table" and _rawget(_temp570, "__call_thing")) then
      _temp573 =  _temp570(_self)

    elseif _temp570 then
      _temp573 =  _temp570
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp573 =  _self:var()
      elseif _self.var ~= nil then
        _temp573 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp573 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp573 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp572 =  set_underresult(_self, _temp573)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp572 =  _self:set_underresult(_temp573)
      elseif _self.set_underresult ~= nil then
        _temp572 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp572 =  _self:no_undermethod(string:new("set_result") , _temp573)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp572 =  no_undermethod(_self, string:new("set_result") , _temp573)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp574
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp574 =  my(_self)

    elseif my then
      _temp574 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp574 =  _self:my()
      elseif _self.my ~= nil then
        _temp574 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp574 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp574 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp575
        local _t = _type(_temp571)
        if _t == "table" then
          if _rawget(_temp571, "__call_thing") == nil then
            _temp575 = _temp571
          else
                  if _temp571 == nil then
              if _type(_self._temp571) == "function" or (_type(_self._temp571) == "table" and _rawget(_self._temp571, "__call_thing")) then
        _temp575 =  _self:_temp571()
      elseif _self._temp571 ~= nil then
        _temp575 =  _self._temp571

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp571"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp575 =  _temp571(_self)
      end

          end
        elseif _t == "number" then
          _temp575 = _temp571
        elseif _t == "function" then
                if _temp571 == nil then
              if _type(_self._temp571) == "function" or (_type(_self._temp571) == "table" and _rawget(_self._temp571, "__call_thing")) then
        _temp575 =  _self:_temp571()
      elseif _self._temp571 ~= nil then
        _temp575 =  _self._temp571

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp571"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp575 =  _temp571(_self)
      end

        elseif _temp571 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.nodes) == "function" or (_type(_temp575.nodes) == "table" and _rawget(_temp575.nodes, "__call_thing")) then
        _temp575 = _temp575:nodes()
      elseif _temp575.nodes ~= nil then
        _temp575 = _temp575.nodes

        elseif _temp575.no_undermethod ~= nil then
          _temp575 =  _temp575:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.nodes ~= nil then
        _temp575 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp575 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.nodes ~= nil then
        _temp575 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp575 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end


local _temp581 = function (_self, _temp576)
        if _temp576 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp577 = nil
        local _t = _type(_temp574)
        if _t == "table" then
          if _rawget(_temp574, "__call_thing") == nil then
            _temp577 = _temp574
          else
                  if _temp574 == nil then
              if _type(_self._temp574) == "function" or (_type(_self._temp574) == "table" and _rawget(_self._temp574, "__call_thing")) then
        _temp577 =  _self:_temp574()
      elseif _self._temp574 ~= nil then
        _temp577 =  _self._temp574

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp574"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp577 =  _temp574(_self)
      end

          end
        elseif _t == "number" then
          _temp577 = _temp574
        elseif _t == "function" then
                if _temp574 == nil then
              if _type(_self._temp574) == "function" or (_type(_self._temp574) == "table" and _rawget(_self._temp574, "__call_thing")) then
        _temp577 =  _self:_temp574()
      elseif _self._temp574 ~= nil then
        _temp577 =  _self._temp574

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp574"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp577 =  _temp574(_self)
      end

        elseif _temp574 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp578 = nil
    if _type(_temp576) == "function" or (_type(_temp576) == "table" and _rawget(_temp576, "__call_thing")) then
      _temp578 =  _temp576(_self)

    elseif _temp576 then
      _temp578 =  _temp576
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp578 =  _self:n()
      elseif _self.n ~= nil then
        _temp578 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp578 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp578 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp579 = nil
        local _t = _type(_temp572)
        if _t == "table" then
          if _rawget(_temp572, "__call_thing") == nil then
            _temp579 = _temp572
          else
                  if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp579 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp579 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp579 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp579 =  _temp572(_self)
      end

          end
        elseif _t == "number" then
          _temp579 = _temp572
        elseif _t == "function" then
                if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp579 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp579 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp579 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp579 =  _temp572(_self)
      end

        elseif _temp572 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp579)
      if _t == "table" then
                      if _type(_temp579.var) == "function" or (_type(_temp579.var) == "table" and _rawget(_temp579.var, "__call_thing")) then
        _temp579 = _temp579:var()
      elseif _temp579.var ~= nil then
        _temp579 = _temp579.var

        elseif _temp579.no_undermethod ~= nil then
          _temp579 =  _temp579:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp579, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp579)
      if _n.var ~= nil then
        _temp579 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp579 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp579, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp579)
      if _f.var ~= nil then
        _temp579 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp579 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp579, "var"))
      end

      elseif _temp579 == nil then
        _error(exception:null_error("_temp579", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp579))
      end


      local _t = _type(_temp577)
      if _t == "table" then
                      if _type(_temp577.process) == "function" or (_type(_temp577.process) == "table" and _rawget(_temp577.process, "__call_thing")) then
        return _temp577:process(_temp578,_temp579)
      elseif _temp577.process ~= nil then
        return _temp577.process

        elseif _temp577.no_undermethod ~= nil then
          return  _temp577:no_undermethod(string:new("process") , _temp578,_temp579)
        else
          _error(exception:method_error(_temp577, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp577)
      if _n.process ~= nil then
        return _n:process(_temp578,_temp579)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp578,_temp579)
      else
        _error(exception:method_error(_temp577, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp577)
      if _f.process ~= nil then
        return _f:process(_temp578,_temp579)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp578,_temp579)
      else
        _error(exception:method_error(_temp577, "process"))
      end

      elseif _temp577 == nil then
        _error(exception:null_error("_temp577", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp577))
      end

end

      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.map) == "function" or (_type(_temp575.map) == "table" and _rawget(_temp575.map, "__call_thing")) then
        _temp575 = _temp575:map(_temp581)
      elseif _temp575.map ~= nil then
        _temp575 = _temp575.map

        elseif _temp575.no_undermethod ~= nil then
          _temp575 =  _temp575:no_undermethod(string:new("map") , _temp581)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.map ~= nil then
        _temp575 = _n:map(_temp581)
      elseif _n.no_undermethod ~= nil then
        _temp575 =  _n:no_undermethod(string:new("map") , _temp581)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.map ~= nil then
        _temp575 = _f:map(_temp581)
      elseif _f.no_undermethod ~= nil then
        _temp575 =  _f:no_undermethod(string:new("map") , _temp581)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end


do
local _temp582 = nil
        local _t = _type(_temp572)
        if _t == "table" then
          if _rawget(_temp572, "__call_thing") == nil then
            _temp582 = _temp572
          else
                  if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp582 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp582 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp582 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp582 =  _temp572(_self)
      end

          end
        elseif _t == "number" then
          _temp582 = _temp572
        elseif _t == "function" then
                if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp582 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp582 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp582 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp582 =  _temp572(_self)
      end

        elseif _temp572 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp583 = nil
      local _t = _type(_temp582)
      if _t == "table" then
                      if _type(_temp582.out) == "function" or (_type(_temp582.out) == "table" and _rawget(_temp582.out, "__call_thing")) then
        _temp583 = _temp582:out()
      elseif _temp582.out ~= nil then
        _temp583 = _temp582.out

        elseif _temp582.no_undermethod ~= nil then
          _temp583 =  _temp582:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp582, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp582)
      if _n.out ~= nil then
        _temp583 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp583 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp582, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp582)
      if _f.out ~= nil then
        _temp583 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp583 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp582, "out"))
      end

      elseif _temp582 == nil then
        _error(exception:null_error("_temp582", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp582))
      end

local _temp584 = nil
        local _t = _type(_temp575)
        if _t == "table" then
          if _rawget(_temp575, "__call_thing") == nil then
            _temp584 = _temp575
          else
                  if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp584 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp584 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp584 =  _temp575(_self)
      end

          end
        elseif _t == "number" then
          _temp584 = _temp575
        elseif _t == "function" then
                if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp584 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp584 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp584 =  _temp575(_self)
      end

        elseif _temp575 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp585 = string:new("out")

      local _t = _type(_temp584)
      if _t == "table" then
                      if _type(_temp584.map) == "function" or (_type(_temp584.map) == "table" and _rawget(_temp584.map, "__call_thing")) then
        _temp584 = _temp584:map(_temp585)
      elseif _temp584.map ~= nil then
        _temp584 = _temp584.map

        elseif _temp584.no_undermethod ~= nil then
          _temp584 =  _temp584:no_undermethod(string:new("map") , _temp585)
        else
          _error(exception:method_error(_temp584, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp584)
      if _n.map ~= nil then
        _temp584 = _n:map(_temp585)
      elseif _n.no_undermethod ~= nil then
        _temp584 =  _n:no_undermethod(string:new("map") , _temp585)
      else
        _error(exception:method_error(_temp584, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp584)
      if _f.map ~= nil then
        _temp584 = _f:map(_temp585)
      elseif _f.no_undermethod ~= nil then
        _temp584 =  _f:no_undermethod(string:new("map") , _temp585)
      else
        _error(exception:method_error(_temp584, "map"))
      end

      elseif _temp584 == nil then
        _error(exception:null_error("_temp584", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp584))
      end

_temp585 = string:new("\n")

      local _t = _type(_temp584)
      if _t == "table" then
                      if _type(_temp584.join) == "function" or (_type(_temp584.join) == "table" and _rawget(_temp584.join, "__call_thing")) then
        _temp584 = _temp584:join(_temp585)
      elseif _temp584.join ~= nil then
        _temp584 = _temp584.join

        elseif _temp584.no_undermethod ~= nil then
          _temp584 =  _temp584:no_undermethod(string:new("join") , _temp585)
        else
          _error(exception:method_error(_temp584, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp584)
      if _n.join ~= nil then
        _temp584 = _n:join(_temp585)
      elseif _n.no_undermethod ~= nil then
        _temp584 =  _n:no_undermethod(string:new("join") , _temp585)
      else
        _error(exception:method_error(_temp584, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp584)
      if _f.join ~= nil then
        _temp584 = _f:join(_temp585)
      elseif _f.no_undermethod ~= nil then
        _temp584 =  _f:no_undermethod(string:new("join") , _temp585)
      else
        _error(exception:method_error(_temp584, "join"))
      end

      elseif _temp584 == nil then
        _error(exception:null_error("_temp584", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp584))
      end

local _temp585
      local _t = _type(_temp583)
      if _t == "table" then
                      if _type(_temp583._less_less) == "function" or (_type(_temp583._less_less) == "table" and _rawget(_temp583._less_less, "__call_thing")) then
        _temp585 = _temp583:_less_less(_temp584)
      elseif _temp583._less_less ~= nil then
        _temp585 = _temp583._less_less

        elseif _temp583.no_undermethod ~= nil then
          _temp585 =  _temp583:no_undermethod(string:new("<<") , _temp584)
        else
          _error(exception:method_error(_temp583, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp583)
      if _n._less_less ~= nil then
        _temp585 = _n:_less_less(_temp584)
      elseif _n.no_undermethod ~= nil then
        _temp585 =  _n:no_undermethod(string:new("<<") , _temp584)
      else
        _error(exception:method_error(_temp583, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp583)
      if _f._less_less ~= nil then
        _temp585 = _f:_less_less(_temp584)
      elseif _f.no_undermethod ~= nil then
        _temp585 =  _f:no_undermethod(string:new("<<") , _temp584)
      else
        _error(exception:method_error(_temp583, "<<"))
      end

      elseif _temp583 == nil then
        _error(exception:null_error("_temp583", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp583))
      end

_dummy_ = _temp585 
end

local _temp581 
do
local _temp586 = nil
        local _t = _type(_temp572)
        if _t == "table" then
          if _rawget(_temp572, "__call_thing") == nil then
            _temp586 = _temp572
          else
                  if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp586 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp586 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp586 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp586 =  _temp572(_self)
      end

          end
        elseif _t == "number" then
          _temp586 = _temp572
        elseif _t == "function" then
                if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp586 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp586 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp586 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp586 =  _temp572(_self)
      end

        elseif _temp572 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp587 = nil
      local _t = _type(_temp586)
      if _t == "table" then
                      if _type(_temp586.var) == "function" or (_type(_temp586.var) == "table" and _rawget(_temp586.var, "__call_thing")) then
        _temp587 = _temp586:var()
      elseif _temp586.var ~= nil then
        _temp587 = _temp586.var

        elseif _temp586.no_undermethod ~= nil then
          _temp587 =  _temp586:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp586, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp586)
      if _n.var ~= nil then
        _temp587 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp587 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp586, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp586)
      if _f.var ~= nil then
        _temp587 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp587 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp586, "var"))
      end

      elseif _temp586 == nil then
        _error(exception:null_error("_temp586", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp586))
      end

local _temp588 = nil
        local _t = _type(_temp575)
        if _t == "table" then
          if _rawget(_temp575, "__call_thing") == nil then
            _temp588 = _temp575
          else
                  if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp588 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp588 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp588 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp588 =  _temp575(_self)
      end

          end
        elseif _t == "number" then
          _temp588 = _temp575
        elseif _t == "function" then
                if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp588 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp588 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp588 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp588 =  _temp575(_self)
      end

        elseif _temp575 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp588)
      if _t == "table" then
                      if _type(_temp588.last) == "function" or (_type(_temp588.last) == "table" and _rawget(_temp588.last, "__call_thing")) then
        _temp588 = _temp588:last()
      elseif _temp588.last ~= nil then
        _temp588 = _temp588.last

        elseif _temp588.no_undermethod ~= nil then
          _temp588 =  _temp588:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp588, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp588)
      if _n.last ~= nil then
        _temp588 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp588 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp588, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp588)
      if _f.last ~= nil then
        _temp588 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp588 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp588, "last"))
      end

      elseif _temp588 == nil then
        _error(exception:null_error("_temp588", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp588))
      end

      local _t = _type(_temp588)
      if _t == "table" then
                      if _type(_temp588.var) == "function" or (_type(_temp588.var) == "table" and _rawget(_temp588.var, "__call_thing")) then
        _temp588 = _temp588:var()
      elseif _temp588.var ~= nil then
        _temp588 = _temp588.var

        elseif _temp588.no_undermethod ~= nil then
          _temp588 =  _temp588:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp588, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp588)
      if _n.var ~= nil then
        _temp588 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp588 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp588, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp588)
      if _f.var ~= nil then
        _temp588 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp588 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp588, "var"))
      end

      elseif _temp588 == nil then
        _error(exception:null_error("_temp588", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp588))
      end

local _temp589
      local _t = _type(_temp587)
      if _t == "table" then
                      if _type(_temp587._bang_equal) == "function" or (_type(_temp587._bang_equal) == "table" and _rawget(_temp587._bang_equal, "__call_thing")) then
        _temp589 = _temp587:_bang_equal(_temp588)
      elseif _temp587._bang_equal ~= nil then
        _temp589 = _temp587._bang_equal

        elseif _temp587.no_undermethod ~= nil then
          _temp589 =  _temp587:no_undermethod(string:new("!=") , _temp588)
        else
          _error(exception:method_error(_temp587, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp587)
      if _n._bang_equal ~= nil then
        _temp589 = _n:_bang_equal(_temp588)
      elseif _n.no_undermethod ~= nil then
        _temp589 =  _n:no_undermethod(string:new("!=") , _temp588)
      else
        _error(exception:method_error(_temp587, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp587)
      if _f._bang_equal ~= nil then
        _temp589 = _f:_bang_equal(_temp588)
      elseif _f.no_undermethod ~= nil then
        _temp589 =  _f:no_undermethod(string:new("!=") , _temp588)
      else
        _error(exception:method_error(_temp587, "!="))
      end

      elseif _temp587 == nil then
        _error(exception:null_error("_temp587", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp587))
      end

_temp581 = _temp589 
end


local _temp598 = function (_self)

local _temp590 
do
local _temp591 = nil
        local _t = _type(_temp572)
        if _t == "table" then
          if _rawget(_temp572, "__call_thing") == nil then
            _temp591 = _temp572
          else
                  if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp591 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp591 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp591 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp591 =  _temp572(_self)
      end

          end
        elseif _t == "number" then
          _temp591 = _temp572
        elseif _t == "function" then
                if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp591 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp591 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp591 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp591 =  _temp572(_self)
      end

        elseif _temp572 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp592 = nil
      local _t = _type(_temp591)
      if _t == "table" then
                      if _type(_temp591.out) == "function" or (_type(_temp591.out) == "table" and _rawget(_temp591.out, "__call_thing")) then
        _temp592 = _temp591:out()
      elseif _temp591.out ~= nil then
        _temp592 = _temp591.out

        elseif _temp591.no_undermethod ~= nil then
          _temp592 =  _temp591:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp591, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp591)
      if _n.out ~= nil then
        _temp592 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp592 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp591, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp591)
      if _f.out ~= nil then
        _temp592 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp592 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp591, "out"))
      end

      elseif _temp591 == nil then
        _error(exception:null_error("_temp591", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp591))
      end

local _temp593 = nil
do
local _temp594 = nil
        local _t = _type(_temp572)
        if _t == "table" then
          if _rawget(_temp572, "__call_thing") == nil then
            _temp594 = _temp572
          else
                  if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp594 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp594 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp572(_self)
      end

          end
        elseif _t == "number" then
          _temp594 = _temp572
        elseif _t == "function" then
                if _temp572 == nil then
              if _type(_self._temp572) == "function" or (_type(_self._temp572) == "table" and _rawget(_self._temp572, "__call_thing")) then
        _temp594 =  _self:_temp572()
      elseif _self._temp572 ~= nil then
        _temp594 =  _self._temp572

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp572"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp572(_self)
      end

        elseif _temp572 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp594)
      if _t == "table" then
                      if _type(_temp594.var) == "function" or (_type(_temp594.var) == "table" and _rawget(_temp594.var, "__call_thing")) then
        _temp594 = _temp594:var()
      elseif _temp594.var ~= nil then
        _temp594 = _temp594.var

        elseif _temp594.no_undermethod ~= nil then
          _temp594 =  _temp594:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp594, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp594)
      if _n.var ~= nil then
        _temp594 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp594 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp594, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp594)
      if _f.var ~= nil then
        _temp594 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp594 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp594, "var"))
      end

      elseif _temp594 == nil then
        _error(exception:null_error("_temp594", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp594))
      end


local _temp595 = nil
        local _t = _type(_temp575)
        if _t == "table" then
          if _rawget(_temp575, "__call_thing") == nil then
            _temp595 = _temp575
          else
                  if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp595 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp595 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp595 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp595 =  _temp575(_self)
      end

          end
        elseif _t == "number" then
          _temp595 = _temp575
        elseif _t == "function" then
                if _temp575 == nil then
              if _type(_self._temp575) == "function" or (_type(_self._temp575) == "table" and _rawget(_self._temp575, "__call_thing")) then
        _temp595 =  _self:_temp575()
      elseif _self._temp575 ~= nil then
        _temp595 =  _self._temp575

        elseif _self.no_undermethod ~= nil then
          _temp595 =  _self:no_undermethod(string:new("_temp575"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp595 =  _temp575(_self)
      end

        elseif _temp575 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp595)
      if _t == "table" then
                      if _type(_temp595.last) == "function" or (_type(_temp595.last) == "table" and _rawget(_temp595.last, "__call_thing")) then
        _temp595 = _temp595:last()
      elseif _temp595.last ~= nil then
        _temp595 = _temp595.last

        elseif _temp595.no_undermethod ~= nil then
          _temp595 =  _temp595:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp595, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp595)
      if _n.last ~= nil then
        _temp595 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp595 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp595, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp595)
      if _f.last ~= nil then
        _temp595 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp595 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp595, "last"))
      end

      elseif _temp595 == nil then
        _error(exception:null_error("_temp595", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp595))
      end

      local _t = _type(_temp595)
      if _t == "table" then
                      if _type(_temp595.var) == "function" or (_type(_temp595.var) == "table" and _rawget(_temp595.var, "__call_thing")) then
        _temp595 = _temp595:var()
      elseif _temp595.var ~= nil then
        _temp595 = _temp595.var

        elseif _temp595.no_undermethod ~= nil then
          _temp595 =  _temp595:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp595, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp595)
      if _n.var ~= nil then
        _temp595 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp595 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp595, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp595)
      if _f.var ~= nil then
        _temp595 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp595 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp595, "var"))
      end

      elseif _temp595 == nil then
        _error(exception:null_error("_temp595", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp595))
      end


_temp593 = string:new("\n" .. _tostring(_temp594) .. " = " .. _tostring(_temp595) .. "\n")
end
local _temp596
      local _t = _type(_temp592)
      if _t == "table" then
                      if _type(_temp592._less_less) == "function" or (_type(_temp592._less_less) == "table" and _rawget(_temp592._less_less, "__call_thing")) then
        _temp596 = _temp592:_less_less(_temp593)
      elseif _temp592._less_less ~= nil then
        _temp596 = _temp592._less_less

        elseif _temp592.no_undermethod ~= nil then
          _temp596 =  _temp592:no_undermethod(string:new("<<") , _temp593)
        else
          _error(exception:method_error(_temp592, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp592)
      if _n._less_less ~= nil then
        _temp596 = _n:_less_less(_temp593)
      elseif _n.no_undermethod ~= nil then
        _temp596 =  _n:no_undermethod(string:new("<<") , _temp593)
      else
        _error(exception:method_error(_temp592, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp592)
      if _f._less_less ~= nil then
        _temp596 = _f:_less_less(_temp593)
      elseif _f.no_undermethod ~= nil then
        _temp596 =  _f:no_undermethod(string:new("<<") , _temp593)
      else
        _error(exception:method_error(_temp592, "<<"))
      end

      elseif _temp592 == nil then
        _error(exception:null_error("_temp592", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp592))
      end

_temp590 = _temp596 
end

return _temp590
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp581,_temp598)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp581,_temp598)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp581,_temp598)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp581,_temp598)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp572) == "function" or (_type(_temp572) == "table" and _rawget(_temp572, "__call_thing")) then
      return  _temp572(_self)

    elseif _temp572 then
      return  _temp572
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.walk) == "function" or (_type(_temp513.walk) == "table" and _rawget(_temp513.walk, "__call_thing")) then
        _dummy_ = _temp513:walk(_temp4,_temp581)
      elseif _temp513.walk ~= nil then
        _dummy_ = _temp513.walk

        elseif _temp513.no_undermethod ~= nil then
          _dummy_ =  _temp513:no_undermethod(string:new("walk") , _temp4,_temp581)
        else
          _error(exception:method_error(_temp513, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp581)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp581)
      else
        _error(exception:method_error(_temp513, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp581)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp581)
      else
        _error(exception:method_error(_temp513, "walk"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("_temp513", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp581 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp581 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp581 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp581 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp581 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp581 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp581 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp581 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp581 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp581 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp604 = function (_self, _temp600,_temp599)
        if _temp600 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp599 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp599 =  null(_self)

    elseif null then
      _temp599 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp599 =  _self:null()
      elseif _self.null ~= nil then
        _temp599 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp599 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp599 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp601
local _temp602 = nil
    if _type(_temp600) == "function" or (_type(_temp600) == "table" and _rawget(_temp600, "__call_thing")) then
      _temp602 =  _temp600(_self)

    elseif _temp600 then
      _temp602 =  _temp600
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp602 =  _self:node()
      elseif _self.node ~= nil then
        _temp602 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp602 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp602 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp601 =  reorder_underops(_self, _temp602)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp601 =  _self:reorder_underops(_temp602)
      elseif _self.reorder_underops ~= nil then
        _temp601 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp601 =  _self:no_undermethod(string:new("reorder_ops") , _temp602)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp601 =  no_undermethod(_self, string:new("reorder_ops") , _temp602)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp601) == "function" or (_type(_temp601) == "table" and _rawget(_temp601, "__call_thing")) then
      _temp602 =  _temp601(_self)

    elseif _temp601 then
      _temp602 =  _temp601
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp602 =  _self:res()
      elseif _self.res ~= nil then
        _temp602 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp602 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp602 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp602)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp602)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp602)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp602)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp581)
      if _t == "table" then
                      if _type(_temp581.walk) == "function" or (_type(_temp581.walk) == "table" and _rawget(_temp581.walk, "__call_thing")) then
        _dummy_ = _temp581:walk(_temp4,_temp604)
      elseif _temp581.walk ~= nil then
        _dummy_ = _temp581.walk

        elseif _temp581.no_undermethod ~= nil then
          _dummy_ =  _temp581:no_undermethod(string:new("walk") , _temp4,_temp604)
        else
          _error(exception:method_error(_temp581, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp581)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp604)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp604)
      else
        _error(exception:method_error(_temp581, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp581)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp604)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp604)
      else
        _error(exception:method_error(_temp581, "walk"))
      end

      elseif _temp581 == nil then
        _error(exception:null_error("_temp581", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp581))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp604 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp604 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp604 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp604 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp604 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp604 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp604 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp604 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp604 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp616 = function (_self, _temp606,_temp605)
        if _temp606 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp605 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp605 =  null(_self)

    elseif null then
      _temp605 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp605 =  _self:null()
      elseif _self.null ~= nil then
        _temp605 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp605 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp605 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp607
local _temp608 = nil
    if _type(_temp605) == "function" or (_type(_temp605) == "table" and _rawget(_temp605, "__call_thing")) then
      _temp608 =  _temp605(_self)

    elseif _temp605 then
      _temp608 =  _temp605
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp608 =  _self:var()
      elseif _self.var ~= nil then
        _temp608 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp608 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp608 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp607 =  set_underresult(_self, _temp608)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp607 =  _self:set_underresult(_temp608)
      elseif _self.set_underresult ~= nil then
        _temp607 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp607 =  _self:no_undermethod(string:new("set_result") , _temp608)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp607 =  no_undermethod(_self, string:new("set_result") , _temp608)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp609 = nil
        local _t = _type(_temp607)
        if _t == "table" then
          if _rawget(_temp607, "__call_thing") == nil then
            _temp609 = _temp607
          else
                  if _temp607 == nil then
              if _type(_self._temp607) == "function" or (_type(_self._temp607) == "table" and _rawget(_self._temp607, "__call_thing")) then
        _temp609 =  _self:_temp607()
      elseif _self._temp607 ~= nil then
        _temp609 =  _self._temp607

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp607"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp609 =  _temp607(_self)
      end

          end
        elseif _t == "number" then
          _temp609 = _temp607
        elseif _t == "function" then
                if _temp607 == nil then
              if _type(_self._temp607) == "function" or (_type(_self._temp607) == "table" and _rawget(_self._temp607, "__call_thing")) then
        _temp609 =  _self:_temp607()
      elseif _self._temp607 ~= nil then
        _temp609 =  _self._temp607

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp607"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp609 =  _temp607(_self)
      end

        elseif _temp607 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp610 = nil
      local _t = _type(_temp609)
      if _t == "table" then
                      if _type(_temp609.out) == "function" or (_type(_temp609.out) == "table" and _rawget(_temp609.out, "__call_thing")) then
        _temp610 = _temp609:out()
      elseif _temp609.out ~= nil then
        _temp610 = _temp609.out

        elseif _temp609.no_undermethod ~= nil then
          _temp610 =  _temp609:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp609, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp609)
      if _n.out ~= nil then
        _temp610 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp610 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp609, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp609)
      if _f.out ~= nil then
        _temp610 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp610 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp609, "out"))
      end

      elseif _temp609 == nil then
        _error(exception:null_error("_temp609", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp609))
      end

local _temp611 = nil
local _temp612 = nil
        local _t = _type(_temp606)
        if _t == "table" then
          if _rawget(_temp606, "__call_thing") == nil then
            _temp612 = _temp606
          else
                  if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp612 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp612 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp612 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp612 =  _temp606(_self)
      end

          end
        elseif _t == "number" then
          _temp612 = _temp606
        elseif _t == "function" then
                if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp612 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp612 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp612 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp612 =  _temp606(_self)
      end

        elseif _temp606 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp612)
      if _t == "table" then
                      if _type(_temp612.lhs) == "function" or (_type(_temp612.lhs) == "table" and _rawget(_temp612.lhs, "__call_thing")) then
        _temp612 = _temp612:lhs()
      elseif _temp612.lhs ~= nil then
        _temp612 = _temp612.lhs

        elseif _temp612.no_undermethod ~= nil then
          _temp612 =  _temp612:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp612, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp612)
      if _n.lhs ~= nil then
        _temp612 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp612 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp612, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp612)
      if _f.lhs ~= nil then
        _temp612 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp612 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp612, "lhs"))
      end

      elseif _temp612 == nil then
        _error(exception:null_error("_temp612", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp612))
      end

      local _t = _type(_temp612)
      if _t == "table" then
                      if _type(_temp612.value) == "function" or (_type(_temp612.value) == "table" and _rawget(_temp612.value, "__call_thing")) then
        _temp612 = _temp612:value()
      elseif _temp612.value ~= nil then
        _temp612 = _temp612.value

        elseif _temp612.no_undermethod ~= nil then
          _temp612 =  _temp612:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp612, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp612)
      if _n.value ~= nil then
        _temp612 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp612 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp612, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp612)
      if _f.value ~= nil then
        _temp612 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp612 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp612, "value"))
      end

      elseif _temp612 == nil then
        _error(exception:null_error("_temp612", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp612))
      end


local _temp613 = nil
        local _t = _type(_temp606)
        if _t == "table" then
          if _rawget(_temp606, "__call_thing") == nil then
            _temp613 = _temp606
          else
                  if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp613 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp613 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp613 =  _temp606(_self)
      end

          end
        elseif _t == "number" then
          _temp613 = _temp606
        elseif _t == "function" then
                if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp613 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp613 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp613 =  _temp606(_self)
      end

        elseif _temp606 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp613)
      if _t == "table" then
                      if _type(_temp613.op) == "function" or (_type(_temp613.op) == "table" and _rawget(_temp613.op, "__call_thing")) then
        _temp613 = _temp613:op()
      elseif _temp613.op ~= nil then
        _temp613 = _temp613.op

        elseif _temp613.no_undermethod ~= nil then
          _temp613 =  _temp613:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp613, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp613)
      if _n.op ~= nil then
        _temp613 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp613 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp613, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp613)
      if _f.op ~= nil then
        _temp613 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp613 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp613, "op"))
      end

      elseif _temp613 == nil then
        _error(exception:null_error("_temp613", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp613))
      end


local _temp614 = nil
        local _t = _type(_temp606)
        if _t == "table" then
          if _rawget(_temp606, "__call_thing") == nil then
            _temp614 = _temp606
          else
                  if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp614 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp614 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp614 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp614 =  _temp606(_self)
      end

          end
        elseif _t == "number" then
          _temp614 = _temp606
        elseif _t == "function" then
                if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp614 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp614 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp614 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp614 =  _temp606(_self)
      end

        elseif _temp606 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp614)
      if _t == "table" then
                      if _type(_temp614.rhs) == "function" or (_type(_temp614.rhs) == "table" and _rawget(_temp614.rhs, "__call_thing")) then
        _temp614 = _temp614:rhs()
      elseif _temp614.rhs ~= nil then
        _temp614 = _temp614.rhs

        elseif _temp614.no_undermethod ~= nil then
          _temp614 =  _temp614:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp614, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp614)
      if _n.rhs ~= nil then
        _temp614 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp614 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp614, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp614)
      if _f.rhs ~= nil then
        _temp614 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp614 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp614, "rhs"))
      end

      elseif _temp614 == nil then
        _error(exception:null_error("_temp614", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp614))
      end

      local _t = _type(_temp614)
      if _t == "table" then
                      if _type(_temp614.value) == "function" or (_type(_temp614.value) == "table" and _rawget(_temp614.value, "__call_thing")) then
        _temp614 = _temp614:value()
      elseif _temp614.value ~= nil then
        _temp614 = _temp614.value

        elseif _temp614.no_undermethod ~= nil then
          _temp614 =  _temp614:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp614, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp614)
      if _n.value ~= nil then
        _temp614 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp614 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp614, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp614)
      if _f.value ~= nil then
        _temp614 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp614 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp614, "value"))
      end

      elseif _temp614 == nil then
        _error(exception:null_error("_temp614", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp614))
      end


local _temp615 = nil
        local _t = _type(_temp607)
        if _t == "table" then
          if _rawget(_temp607, "__call_thing") == nil then
            _temp615 = _temp607
          else
                  if _temp607 == nil then
              if _type(_self._temp607) == "function" or (_type(_self._temp607) == "table" and _rawget(_self._temp607, "__call_thing")) then
        _temp615 =  _self:_temp607()
      elseif _self._temp607 ~= nil then
        _temp615 =  _self._temp607

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp607"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp615 =  _temp607(_self)
      end

          end
        elseif _t == "number" then
          _temp615 = _temp607
        elseif _t == "function" then
                if _temp607 == nil then
              if _type(_self._temp607) == "function" or (_type(_self._temp607) == "table" and _rawget(_self._temp607, "__call_thing")) then
        _temp615 =  _self:_temp607()
      elseif _self._temp607 ~= nil then
        _temp615 =  _self._temp607

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp607"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp615 =  _temp607(_self)
      end

        elseif _temp607 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp615)
      if _t == "table" then
                      if _type(_temp615.var) == "function" or (_type(_temp615.var) == "table" and _rawget(_temp615.var, "__call_thing")) then
        _temp615 = _temp615:var()
      elseif _temp615.var ~= nil then
        _temp615 = _temp615.var

        elseif _temp615.no_undermethod ~= nil then
          _temp615 =  _temp615:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp615, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp615)
      if _n.var ~= nil then
        _temp615 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp615 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp615, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp615)
      if _f.var ~= nil then
        _temp615 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp615 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp615, "var"))
      end

      elseif _temp615 == nil then
        _error(exception:null_error("_temp615", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp615))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp611 =  invoke_undernumbers(_self, _temp612,_temp613,_temp614,_temp615)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp611 =  _self:invoke_undernumbers(_temp612,_temp613,_temp614,_temp615)
      elseif _self.invoke_undernumbers ~= nil then
        _temp611 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp611 =  _self:no_undermethod(string:new("invoke_numbers") , _temp612,_temp613,_temp614,_temp615)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp611 =  no_undermethod(_self, string:new("invoke_numbers") , _temp612,_temp613,_temp614,_temp615)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp615
      local _t = _type(_temp610)
      if _t == "table" then
                      if _type(_temp610._less_less) == "function" or (_type(_temp610._less_less) == "table" and _rawget(_temp610._less_less, "__call_thing")) then
        _temp615 = _temp610:_less_less(_temp611)
      elseif _temp610._less_less ~= nil then
        _temp615 = _temp610._less_less

        elseif _temp610.no_undermethod ~= nil then
          _temp615 =  _temp610:no_undermethod(string:new("<<") , _temp611)
        else
          _error(exception:method_error(_temp610, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp610)
      if _n._less_less ~= nil then
        _temp615 = _n:_less_less(_temp611)
      elseif _n.no_undermethod ~= nil then
        _temp615 =  _n:no_undermethod(string:new("<<") , _temp611)
      else
        _error(exception:method_error(_temp610, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp610)
      if _f._less_less ~= nil then
        _temp615 = _f:_less_less(_temp611)
      elseif _f.no_undermethod ~= nil then
        _temp615 =  _f:no_undermethod(string:new("<<") , _temp611)
      else
        _error(exception:method_error(_temp610, "<<"))
      end

      elseif _temp610 == nil then
        _error(exception:null_error("_temp610", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp610))
      end

_dummy_ = _temp615 
end

    if _type(_temp607) == "function" or (_type(_temp607) == "table" and _rawget(_temp607, "__call_thing")) then
      return  _temp607(_self)

    elseif _temp607 then
      return  _temp607
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp604)
      if _t == "table" then
                      if _type(_temp604.walk) == "function" or (_type(_temp604.walk) == "table" and _rawget(_temp604.walk, "__call_thing")) then
        _dummy_ = _temp604:walk(_temp4,_temp616)
      elseif _temp604.walk ~= nil then
        _dummy_ = _temp604.walk

        elseif _temp604.no_undermethod ~= nil then
          _dummy_ =  _temp604:no_undermethod(string:new("walk") , _temp4,_temp616)
        else
          _error(exception:method_error(_temp604, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp604)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp616)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp616)
      else
        _error(exception:method_error(_temp604, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp604)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp616)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp616)
      else
        _error(exception:method_error(_temp604, "walk"))
      end

      elseif _temp604 == nil then
        _error(exception:null_error("_temp604", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp604))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp616 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp616 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp616 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp616 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp616 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp616 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp616 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp616 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp616 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp616 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp635 = function (_self, _temp618,_temp617)
        if _temp618 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp617 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp617 =  null(_self)

    elseif null then
      _temp617 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp617 =  _self:null()
      elseif _self.null ~= nil then
        _temp617 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp617 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp617 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp619
local _temp620 = nil
    if _type(_temp617) == "function" or (_type(_temp617) == "table" and _rawget(_temp617, "__call_thing")) then
      _temp620 =  _temp617(_self)

    elseif _temp617 then
      _temp620 =  _temp617
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp620 =  _self:var()
      elseif _self.var ~= nil then
        _temp620 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp620 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp620 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp619 =  set_underresult(_self, _temp620)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp619 =  _self:set_underresult(_temp620)
      elseif _self.set_underresult ~= nil then
        _temp619 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp619 =  _self:no_undermethod(string:new("set_result") , _temp620)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp619 =  no_undermethod(_self, string:new("set_result") , _temp620)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp621
        local _t = _type(_temp618)
        if _t == "table" then
          if _rawget(_temp618, "__call_thing") == nil then
            _temp620 = _temp618
          else
                  if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp620 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp620 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp620 =  _temp618(_self)
      end

          end
        elseif _t == "number" then
          _temp620 = _temp618
        elseif _t == "function" then
                if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp620 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp620 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp620 =  _temp618(_self)
      end

        elseif _temp618 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.rhs) == "function" or (_type(_temp620.rhs) == "table" and _rawget(_temp620.rhs, "__call_thing")) then
        _temp620 = _temp620:rhs()
      elseif _temp620.rhs ~= nil then
        _temp620 = _temp620.rhs

        elseif _temp620.no_undermethod ~= nil then
          _temp620 =  _temp620:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp620, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.rhs ~= nil then
        _temp620 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp620, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.rhs ~= nil then
        _temp620 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp620, "rhs"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp621 =  process(_self, _temp620)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp621 =  _self:process(_temp620)
      elseif _self.process ~= nil then
        _temp621 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp621 =  _self:no_undermethod(string:new("process") , _temp620)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp621 =  no_undermethod(_self, string:new("process") , _temp620)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp622 = nil
        local _t = _type(_temp619)
        if _t == "table" then
          if _rawget(_temp619, "__call_thing") == nil then
            _temp622 = _temp619
          else
                  if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp622 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp622 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp622 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp622 =  _temp619(_self)
      end

          end
        elseif _t == "number" then
          _temp622 = _temp619
        elseif _t == "function" then
                if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp622 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp622 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp622 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp622 =  _temp619(_self)
      end

        elseif _temp619 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp623 = nil
      local _t = _type(_temp622)
      if _t == "table" then
                      if _type(_temp622.out) == "function" or (_type(_temp622.out) == "table" and _rawget(_temp622.out, "__call_thing")) then
        _temp623 = _temp622:out()
      elseif _temp622.out ~= nil then
        _temp623 = _temp622.out

        elseif _temp622.no_undermethod ~= nil then
          _temp623 =  _temp622:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp622, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp622)
      if _n.out ~= nil then
        _temp623 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp623 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp622, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp622)
      if _f.out ~= nil then
        _temp623 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp623 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp622, "out"))
      end

      elseif _temp622 == nil then
        _error(exception:null_error("_temp622", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp622))
      end

local _temp624 = nil
        local _t = _type(_temp621)
        if _t == "table" then
          if _rawget(_temp621, "__call_thing") == nil then
            _temp624 = _temp621
          else
                  if _temp621 == nil then
              if _type(_self._temp621) == "function" or (_type(_self._temp621) == "table" and _rawget(_self._temp621, "__call_thing")) then
        _temp624 =  _self:_temp621()
      elseif _self._temp621 ~= nil then
        _temp624 =  _self._temp621

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp621"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp624 =  _temp621(_self)
      end

          end
        elseif _t == "number" then
          _temp624 = _temp621
        elseif _t == "function" then
                if _temp621 == nil then
              if _type(_self._temp621) == "function" or (_type(_self._temp621) == "table" and _rawget(_self._temp621, "__call_thing")) then
        _temp624 =  _self:_temp621()
      elseif _self._temp621 ~= nil then
        _temp624 =  _self._temp621

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp621"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp624 =  _temp621(_self)
      end

        elseif _temp621 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp625 = nil
      local _t = _type(_temp624)
      if _t == "table" then
                      if _type(_temp624.out) == "function" or (_type(_temp624.out) == "table" and _rawget(_temp624.out, "__call_thing")) then
        _temp625 = _temp624:out()
      elseif _temp624.out ~= nil then
        _temp625 = _temp624.out

        elseif _temp624.no_undermethod ~= nil then
          _temp625 =  _temp624:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp624, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp624)
      if _n.out ~= nil then
        _temp625 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp625 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp624, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp624)
      if _f.out ~= nil then
        _temp625 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp625 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp624, "out"))
      end

      elseif _temp624 == nil then
        _error(exception:null_error("_temp624", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp624))
      end

local _temp626 = string:new("\n")
local _temp627
      local _t = _type(_temp623)
      if _t == "table" then
                      if _type(_temp623._less_less) == "function" or (_type(_temp623._less_less) == "table" and _rawget(_temp623._less_less, "__call_thing")) then
        _temp627 = _temp623:_less_less(_temp625)
      elseif _temp623._less_less ~= nil then
        _temp627 = _temp623._less_less

        elseif _temp623.no_undermethod ~= nil then
          _temp627 =  _temp623:no_undermethod(string:new("<<") , _temp625)
        else
          _error(exception:method_error(_temp623, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp623)
      if _n._less_less ~= nil then
        _temp627 = _n:_less_less(_temp625)
      elseif _n.no_undermethod ~= nil then
        _temp627 =  _n:no_undermethod(string:new("<<") , _temp625)
      else
        _error(exception:method_error(_temp623, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp623)
      if _f._less_less ~= nil then
        _temp627 = _f:_less_less(_temp625)
      elseif _f.no_undermethod ~= nil then
        _temp627 =  _f:no_undermethod(string:new("<<") , _temp625)
      else
        _error(exception:method_error(_temp623, "<<"))
      end

      elseif _temp623 == nil then
        _error(exception:null_error("_temp623", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp623))
      end

local _temp625
      local _t = _type(_temp627)
      if _t == "table" then
                      if _type(_temp627._less_less) == "function" or (_type(_temp627._less_less) == "table" and _rawget(_temp627._less_less, "__call_thing")) then
        _temp625 = _temp627:_less_less(_temp626)
      elseif _temp627._less_less ~= nil then
        _temp625 = _temp627._less_less

        elseif _temp627.no_undermethod ~= nil then
          _temp625 =  _temp627:no_undermethod(string:new("<<") , _temp626)
        else
          _error(exception:method_error(_temp627, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp627)
      if _n._less_less ~= nil then
        _temp625 = _n:_less_less(_temp626)
      elseif _n.no_undermethod ~= nil then
        _temp625 =  _n:no_undermethod(string:new("<<") , _temp626)
      else
        _error(exception:method_error(_temp627, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp627)
      if _f._less_less ~= nil then
        _temp625 = _f:_less_less(_temp626)
      elseif _f.no_undermethod ~= nil then
        _temp625 =  _f:no_undermethod(string:new("<<") , _temp626)
      else
        _error(exception:method_error(_temp627, "<<"))
      end

      elseif _temp627 == nil then
        _error(exception:null_error("_temp627", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp627))
      end

_dummy_ = _temp625 
end

do
local _temp628 = nil
        local _t = _type(_temp619)
        if _t == "table" then
          if _rawget(_temp619, "__call_thing") == nil then
            _temp628 = _temp619
          else
                  if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp628 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp628 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp628 =  _temp619(_self)
      end

          end
        elseif _t == "number" then
          _temp628 = _temp619
        elseif _t == "function" then
                if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp628 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp628 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp628 =  _temp619(_self)
      end

        elseif _temp619 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp629 = nil
      local _t = _type(_temp628)
      if _t == "table" then
                      if _type(_temp628.out) == "function" or (_type(_temp628.out) == "table" and _rawget(_temp628.out, "__call_thing")) then
        _temp629 = _temp628:out()
      elseif _temp628.out ~= nil then
        _temp629 = _temp628.out

        elseif _temp628.no_undermethod ~= nil then
          _temp629 =  _temp628:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp628, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp628)
      if _n.out ~= nil then
        _temp629 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp629 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp628, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp628)
      if _f.out ~= nil then
        _temp629 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp629 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp628, "out"))
      end

      elseif _temp628 == nil then
        _error(exception:null_error("_temp628", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp628))
      end

local _temp630 = nil
local _temp631 = nil
        local _t = _type(_temp618)
        if _t == "table" then
          if _rawget(_temp618, "__call_thing") == nil then
            _temp631 = _temp618
          else
                  if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp631 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp631 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp631 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp631 =  _temp618(_self)
      end

          end
        elseif _t == "number" then
          _temp631 = _temp618
        elseif _t == "function" then
                if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp631 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp631 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp631 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp631 =  _temp618(_self)
      end

        elseif _temp618 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp631)
      if _t == "table" then
                      if _type(_temp631.lhs) == "function" or (_type(_temp631.lhs) == "table" and _rawget(_temp631.lhs, "__call_thing")) then
        _temp631 = _temp631:lhs()
      elseif _temp631.lhs ~= nil then
        _temp631 = _temp631.lhs

        elseif _temp631.no_undermethod ~= nil then
          _temp631 =  _temp631:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp631, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp631)
      if _n.lhs ~= nil then
        _temp631 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp631 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp631, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp631)
      if _f.lhs ~= nil then
        _temp631 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp631 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp631, "lhs"))
      end

      elseif _temp631 == nil then
        _error(exception:null_error("_temp631", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp631))
      end

      local _t = _type(_temp631)
      if _t == "table" then
                      if _type(_temp631.value) == "function" or (_type(_temp631.value) == "table" and _rawget(_temp631.value, "__call_thing")) then
        _temp631 = _temp631:value()
      elseif _temp631.value ~= nil then
        _temp631 = _temp631.value

        elseif _temp631.no_undermethod ~= nil then
          _temp631 =  _temp631:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp631, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp631)
      if _n.value ~= nil then
        _temp631 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp631 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp631, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp631)
      if _f.value ~= nil then
        _temp631 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp631 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp631, "value"))
      end

      elseif _temp631 == nil then
        _error(exception:null_error("_temp631", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp631))
      end


local _temp632 = nil
        local _t = _type(_temp618)
        if _t == "table" then
          if _rawget(_temp618, "__call_thing") == nil then
            _temp632 = _temp618
          else
                  if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp632 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp632 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp632 =  _temp618(_self)
      end

          end
        elseif _t == "number" then
          _temp632 = _temp618
        elseif _t == "function" then
                if _temp618 == nil then
              if _type(_self._temp618) == "function" or (_type(_self._temp618) == "table" and _rawget(_self._temp618, "__call_thing")) then
        _temp632 =  _self:_temp618()
      elseif _self._temp618 ~= nil then
        _temp632 =  _self._temp618

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp618"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp632 =  _temp618(_self)
      end

        elseif _temp618 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp632)
      if _t == "table" then
                      if _type(_temp632.op) == "function" or (_type(_temp632.op) == "table" and _rawget(_temp632.op, "__call_thing")) then
        _temp632 = _temp632:op()
      elseif _temp632.op ~= nil then
        _temp632 = _temp632.op

        elseif _temp632.no_undermethod ~= nil then
          _temp632 =  _temp632:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp632, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp632)
      if _n.op ~= nil then
        _temp632 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp632 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp632, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp632)
      if _f.op ~= nil then
        _temp632 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp632 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp632, "op"))
      end

      elseif _temp632 == nil then
        _error(exception:null_error("_temp632", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp632))
      end


local _temp633 = nil
        local _t = _type(_temp621)
        if _t == "table" then
          if _rawget(_temp621, "__call_thing") == nil then
            _temp633 = _temp621
          else
                  if _temp621 == nil then
              if _type(_self._temp621) == "function" or (_type(_self._temp621) == "table" and _rawget(_self._temp621, "__call_thing")) then
        _temp633 =  _self:_temp621()
      elseif _self._temp621 ~= nil then
        _temp633 =  _self._temp621

        elseif _self.no_undermethod ~= nil then
          _temp633 =  _self:no_undermethod(string:new("_temp621"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp633 =  _temp621(_self)
      end

          end
        elseif _t == "number" then
          _temp633 = _temp621
        elseif _t == "function" then
                if _temp621 == nil then
              if _type(_self._temp621) == "function" or (_type(_self._temp621) == "table" and _rawget(_self._temp621, "__call_thing")) then
        _temp633 =  _self:_temp621()
      elseif _self._temp621 ~= nil then
        _temp633 =  _self._temp621

        elseif _self.no_undermethod ~= nil then
          _temp633 =  _self:no_undermethod(string:new("_temp621"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp633 =  _temp621(_self)
      end

        elseif _temp621 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp633)
      if _t == "table" then
                      if _type(_temp633.var) == "function" or (_type(_temp633.var) == "table" and _rawget(_temp633.var, "__call_thing")) then
        _temp633 = _temp633:var()
      elseif _temp633.var ~= nil then
        _temp633 = _temp633.var

        elseif _temp633.no_undermethod ~= nil then
          _temp633 =  _temp633:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp633, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp633)
      if _n.var ~= nil then
        _temp633 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp633 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp633, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp633)
      if _f.var ~= nil then
        _temp633 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp633 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp633, "var"))
      end

      elseif _temp633 == nil then
        _error(exception:null_error("_temp633", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp633))
      end


local _temp634 = nil
        local _t = _type(_temp619)
        if _t == "table" then
          if _rawget(_temp619, "__call_thing") == nil then
            _temp634 = _temp619
          else
                  if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp634 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp634 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp634 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp634 =  _temp619(_self)
      end

          end
        elseif _t == "number" then
          _temp634 = _temp619
        elseif _t == "function" then
                if _temp619 == nil then
              if _type(_self._temp619) == "function" or (_type(_self._temp619) == "table" and _rawget(_self._temp619, "__call_thing")) then
        _temp634 =  _self:_temp619()
      elseif _self._temp619 ~= nil then
        _temp634 =  _self._temp619

        elseif _self.no_undermethod ~= nil then
          _temp634 =  _self:no_undermethod(string:new("_temp619"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp634 =  _temp619(_self)
      end

        elseif _temp619 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp634)
      if _t == "table" then
                      if _type(_temp634.var) == "function" or (_type(_temp634.var) == "table" and _rawget(_temp634.var, "__call_thing")) then
        _temp634 = _temp634:var()
      elseif _temp634.var ~= nil then
        _temp634 = _temp634.var

        elseif _temp634.no_undermethod ~= nil then
          _temp634 =  _temp634:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp634, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp634)
      if _n.var ~= nil then
        _temp634 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp634 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp634, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp634)
      if _f.var ~= nil then
        _temp634 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp634 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp634, "var"))
      end

      elseif _temp634 == nil then
        _error(exception:null_error("_temp634", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp634))
      end


    if _type(invoke_undernumber_underlhs) == "function" or (_type(invoke_undernumber_underlhs) == "table" and _rawget(invoke_undernumber_underlhs, "__call_thing")) then
      _temp630 =  invoke_undernumber_underlhs(_self, _temp631,_temp632,_temp633,_temp634)

    elseif invoke_undernumber_underlhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_lhs (" .. object.__type(invoke_undernumber_underlhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underlhs) == "function" or (_type(_self.invoke_undernumber_underlhs) == "table" and _rawget(_self.invoke_undernumber_underlhs, "__call_thing")) then
        _temp630 =  _self:invoke_undernumber_underlhs(_temp631,_temp632,_temp633,_temp634)
      elseif _self.invoke_undernumber_underlhs ~= nil then
        _temp630 =  _self.invoke_undernumber_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp630 =  _self:no_undermethod(string:new("invoke_number_lhs") , _temp631,_temp632,_temp633,_temp634)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp630 =  no_undermethod(_self, string:new("invoke_number_lhs") , _temp631,_temp632,_temp633,_temp634)
      else
        _error(exception:name_error("invoke_number_lhs"))
      end
    end
local _temp634
      local _t = _type(_temp629)
      if _t == "table" then
                      if _type(_temp629._less_less) == "function" or (_type(_temp629._less_less) == "table" and _rawget(_temp629._less_less, "__call_thing")) then
        _temp634 = _temp629:_less_less(_temp630)
      elseif _temp629._less_less ~= nil then
        _temp634 = _temp629._less_less

        elseif _temp629.no_undermethod ~= nil then
          _temp634 =  _temp629:no_undermethod(string:new("<<") , _temp630)
        else
          _error(exception:method_error(_temp629, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp629)
      if _n._less_less ~= nil then
        _temp634 = _n:_less_less(_temp630)
      elseif _n.no_undermethod ~= nil then
        _temp634 =  _n:no_undermethod(string:new("<<") , _temp630)
      else
        _error(exception:method_error(_temp629, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp629)
      if _f._less_less ~= nil then
        _temp634 = _f:_less_less(_temp630)
      elseif _f.no_undermethod ~= nil then
        _temp634 =  _f:no_undermethod(string:new("<<") , _temp630)
      else
        _error(exception:method_error(_temp629, "<<"))
      end

      elseif _temp629 == nil then
        _error(exception:null_error("_temp629", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp629))
      end

_dummy_ = _temp634 
end

    if _type(_temp619) == "function" or (_type(_temp619) == "table" and _rawget(_temp619, "__call_thing")) then
      return  _temp619(_self)

    elseif _temp619 then
      return  _temp619
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp616)
      if _t == "table" then
                      if _type(_temp616.walk) == "function" or (_type(_temp616.walk) == "table" and _rawget(_temp616.walk, "__call_thing")) then
        _dummy_ = _temp616:walk(_temp4,_temp635)
      elseif _temp616.walk ~= nil then
        _dummy_ = _temp616.walk

        elseif _temp616.no_undermethod ~= nil then
          _dummy_ =  _temp616:no_undermethod(string:new("walk") , _temp4,_temp635)
        else
          _error(exception:method_error(_temp616, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp616)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp635)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp635)
      else
        _error(exception:method_error(_temp616, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp616)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp635)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp635)
      else
        _error(exception:method_error(_temp616, "walk"))
      end

      elseif _temp616 == nil then
        _error(exception:null_error("_temp616", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp616))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp635 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp635 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp635 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp635 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp635 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp635 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp635 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp635 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp635 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp635 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number_rhs")

local _temp654 = function (_self, _temp637,_temp636)
        if _temp637 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp636 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp636 =  null(_self)

    elseif null then
      _temp636 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp636 =  _self:null()
      elseif _self.null ~= nil then
        _temp636 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp636 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp636 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp638
local _temp639 = nil
    if _type(_temp636) == "function" or (_type(_temp636) == "table" and _rawget(_temp636, "__call_thing")) then
      _temp639 =  _temp636(_self)

    elseif _temp636 then
      _temp639 =  _temp636
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp639 =  _self:var()
      elseif _self.var ~= nil then
        _temp639 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp639 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp639 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp638 =  set_underresult(_self, _temp639)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp638 =  _self:set_underresult(_temp639)
      elseif _self.set_underresult ~= nil then
        _temp638 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp638 =  _self:no_undermethod(string:new("set_result") , _temp639)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp638 =  no_undermethod(_self, string:new("set_result") , _temp639)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp640
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp639 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp639 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp639 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp639 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp639 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp639 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639.lhs) == "function" or (_type(_temp639.lhs) == "table" and _rawget(_temp639.lhs, "__call_thing")) then
        _temp639 = _temp639:lhs()
      elseif _temp639.lhs ~= nil then
        _temp639 = _temp639.lhs

        elseif _temp639.no_undermethod ~= nil then
          _temp639 =  _temp639:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp639, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n.lhs ~= nil then
        _temp639 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp639, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f.lhs ~= nil then
        _temp639 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp639, "lhs"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp640 =  process(_self, _temp639)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp640 =  _self:process(_temp639)
      elseif _self.process ~= nil then
        _temp640 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp640 =  _self:no_undermethod(string:new("process") , _temp639)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp640 =  no_undermethod(_self, string:new("process") , _temp639)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp641 = nil
        local _t = _type(_temp638)
        if _t == "table" then
          if _rawget(_temp638, "__call_thing") == nil then
            _temp641 = _temp638
          else
                  if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp641 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp641 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp641 =  _temp638(_self)
      end

          end
        elseif _t == "number" then
          _temp641 = _temp638
        elseif _t == "function" then
                if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp641 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp641 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp641 =  _temp638(_self)
      end

        elseif _temp638 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp642 = nil
      local _t = _type(_temp641)
      if _t == "table" then
                      if _type(_temp641.out) == "function" or (_type(_temp641.out) == "table" and _rawget(_temp641.out, "__call_thing")) then
        _temp642 = _temp641:out()
      elseif _temp641.out ~= nil then
        _temp642 = _temp641.out

        elseif _temp641.no_undermethod ~= nil then
          _temp642 =  _temp641:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp641, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp641)
      if _n.out ~= nil then
        _temp642 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp642 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp641, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp641)
      if _f.out ~= nil then
        _temp642 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp642 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp641, "out"))
      end

      elseif _temp641 == nil then
        _error(exception:null_error("_temp641", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp641))
      end

local _temp643 = nil
        local _t = _type(_temp640)
        if _t == "table" then
          if _rawget(_temp640, "__call_thing") == nil then
            _temp643 = _temp640
          else
                  if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp643 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp643 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp643 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp643 =  _temp640(_self)
      end

          end
        elseif _t == "number" then
          _temp643 = _temp640
        elseif _t == "function" then
                if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp643 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp643 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp643 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp643 =  _temp640(_self)
      end

        elseif _temp640 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp644 = nil
      local _t = _type(_temp643)
      if _t == "table" then
                      if _type(_temp643.out) == "function" or (_type(_temp643.out) == "table" and _rawget(_temp643.out, "__call_thing")) then
        _temp644 = _temp643:out()
      elseif _temp643.out ~= nil then
        _temp644 = _temp643.out

        elseif _temp643.no_undermethod ~= nil then
          _temp644 =  _temp643:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp643, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp643)
      if _n.out ~= nil then
        _temp644 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp644 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp643, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp643)
      if _f.out ~= nil then
        _temp644 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp644 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp643, "out"))
      end

      elseif _temp643 == nil then
        _error(exception:null_error("_temp643", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp643))
      end

local _temp645 = string:new("\n")
local _temp646
      local _t = _type(_temp642)
      if _t == "table" then
                      if _type(_temp642._less_less) == "function" or (_type(_temp642._less_less) == "table" and _rawget(_temp642._less_less, "__call_thing")) then
        _temp646 = _temp642:_less_less(_temp644)
      elseif _temp642._less_less ~= nil then
        _temp646 = _temp642._less_less

        elseif _temp642.no_undermethod ~= nil then
          _temp646 =  _temp642:no_undermethod(string:new("<<") , _temp644)
        else
          _error(exception:method_error(_temp642, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp642)
      if _n._less_less ~= nil then
        _temp646 = _n:_less_less(_temp644)
      elseif _n.no_undermethod ~= nil then
        _temp646 =  _n:no_undermethod(string:new("<<") , _temp644)
      else
        _error(exception:method_error(_temp642, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp642)
      if _f._less_less ~= nil then
        _temp646 = _f:_less_less(_temp644)
      elseif _f.no_undermethod ~= nil then
        _temp646 =  _f:no_undermethod(string:new("<<") , _temp644)
      else
        _error(exception:method_error(_temp642, "<<"))
      end

      elseif _temp642 == nil then
        _error(exception:null_error("_temp642", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp642))
      end

local _temp644
      local _t = _type(_temp646)
      if _t == "table" then
                      if _type(_temp646._less_less) == "function" or (_type(_temp646._less_less) == "table" and _rawget(_temp646._less_less, "__call_thing")) then
        _temp644 = _temp646:_less_less(_temp645)
      elseif _temp646._less_less ~= nil then
        _temp644 = _temp646._less_less

        elseif _temp646.no_undermethod ~= nil then
          _temp644 =  _temp646:no_undermethod(string:new("<<") , _temp645)
        else
          _error(exception:method_error(_temp646, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp646)
      if _n._less_less ~= nil then
        _temp644 = _n:_less_less(_temp645)
      elseif _n.no_undermethod ~= nil then
        _temp644 =  _n:no_undermethod(string:new("<<") , _temp645)
      else
        _error(exception:method_error(_temp646, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp646)
      if _f._less_less ~= nil then
        _temp644 = _f:_less_less(_temp645)
      elseif _f.no_undermethod ~= nil then
        _temp644 =  _f:no_undermethod(string:new("<<") , _temp645)
      else
        _error(exception:method_error(_temp646, "<<"))
      end

      elseif _temp646 == nil then
        _error(exception:null_error("_temp646", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp646))
      end

_dummy_ = _temp644 
end

do
local _temp647 = nil
        local _t = _type(_temp638)
        if _t == "table" then
          if _rawget(_temp638, "__call_thing") == nil then
            _temp647 = _temp638
          else
                  if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp647 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp647 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp638(_self)
      end

          end
        elseif _t == "number" then
          _temp647 = _temp638
        elseif _t == "function" then
                if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp647 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp647 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp638(_self)
      end

        elseif _temp638 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp648 = nil
      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.out) == "function" or (_type(_temp647.out) == "table" and _rawget(_temp647.out, "__call_thing")) then
        _temp648 = _temp647:out()
      elseif _temp647.out ~= nil then
        _temp648 = _temp647.out

        elseif _temp647.no_undermethod ~= nil then
          _temp648 =  _temp647:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp647, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.out ~= nil then
        _temp648 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp648 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.out ~= nil then
        _temp648 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp648 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end

local _temp649 = nil
local _temp650 = nil
        local _t = _type(_temp640)
        if _t == "table" then
          if _rawget(_temp640, "__call_thing") == nil then
            _temp650 = _temp640
          else
                  if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp650 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp650 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp650 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp650 =  _temp640(_self)
      end

          end
        elseif _t == "number" then
          _temp650 = _temp640
        elseif _t == "function" then
                if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp650 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp650 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp650 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp650 =  _temp640(_self)
      end

        elseif _temp640 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp650)
      if _t == "table" then
                      if _type(_temp650.var) == "function" or (_type(_temp650.var) == "table" and _rawget(_temp650.var, "__call_thing")) then
        _temp650 = _temp650:var()
      elseif _temp650.var ~= nil then
        _temp650 = _temp650.var

        elseif _temp650.no_undermethod ~= nil then
          _temp650 =  _temp650:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp650, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp650)
      if _n.var ~= nil then
        _temp650 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp650, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp650)
      if _f.var ~= nil then
        _temp650 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp650, "var"))
      end

      elseif _temp650 == nil then
        _error(exception:null_error("_temp650", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp650))
      end


local _temp651 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp651 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp651 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp651 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp651 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp651 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp651 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp651 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp651 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp651)
      if _t == "table" then
                      if _type(_temp651.op) == "function" or (_type(_temp651.op) == "table" and _rawget(_temp651.op, "__call_thing")) then
        _temp651 = _temp651:op()
      elseif _temp651.op ~= nil then
        _temp651 = _temp651.op

        elseif _temp651.no_undermethod ~= nil then
          _temp651 =  _temp651:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp651, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp651)
      if _n.op ~= nil then
        _temp651 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp651 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp651, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp651)
      if _f.op ~= nil then
        _temp651 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp651 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp651, "op"))
      end

      elseif _temp651 == nil then
        _error(exception:null_error("_temp651", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp651))
      end


local _temp652 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp652 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp652 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp652 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp652 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp652 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp652 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp652 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp652 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp652 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp652 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp652)
      if _t == "table" then
                      if _type(_temp652.rhs) == "function" or (_type(_temp652.rhs) == "table" and _rawget(_temp652.rhs, "__call_thing")) then
        _temp652 = _temp652:rhs()
      elseif _temp652.rhs ~= nil then
        _temp652 = _temp652.rhs

        elseif _temp652.no_undermethod ~= nil then
          _temp652 =  _temp652:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp652, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp652)
      if _n.rhs ~= nil then
        _temp652 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp652, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp652)
      if _f.rhs ~= nil then
        _temp652 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp652, "rhs"))
      end

      elseif _temp652 == nil then
        _error(exception:null_error("_temp652", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp652))
      end

      local _t = _type(_temp652)
      if _t == "table" then
                      if _type(_temp652.value) == "function" or (_type(_temp652.value) == "table" and _rawget(_temp652.value, "__call_thing")) then
        _temp652 = _temp652:value()
      elseif _temp652.value ~= nil then
        _temp652 = _temp652.value

        elseif _temp652.no_undermethod ~= nil then
          _temp652 =  _temp652:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp652, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp652)
      if _n.value ~= nil then
        _temp652 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp652, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp652)
      if _f.value ~= nil then
        _temp652 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp652, "value"))
      end

      elseif _temp652 == nil then
        _error(exception:null_error("_temp652", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp652))
      end


local _temp653 = nil
        local _t = _type(_temp638)
        if _t == "table" then
          if _rawget(_temp638, "__call_thing") == nil then
            _temp653 = _temp638
          else
                  if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp653 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp653 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp653 =  _temp638(_self)
      end

          end
        elseif _t == "number" then
          _temp653 = _temp638
        elseif _t == "function" then
                if _temp638 == nil then
              if _type(_self._temp638) == "function" or (_type(_self._temp638) == "table" and _rawget(_self._temp638, "__call_thing")) then
        _temp653 =  _self:_temp638()
      elseif _self._temp638 ~= nil then
        _temp653 =  _self._temp638

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp638"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp653 =  _temp638(_self)
      end

        elseif _temp638 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp653)
      if _t == "table" then
                      if _type(_temp653.var) == "function" or (_type(_temp653.var) == "table" and _rawget(_temp653.var, "__call_thing")) then
        _temp653 = _temp653:var()
      elseif _temp653.var ~= nil then
        _temp653 = _temp653.var

        elseif _temp653.no_undermethod ~= nil then
          _temp653 =  _temp653:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp653, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp653)
      if _n.var ~= nil then
        _temp653 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp653 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp653, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp653)
      if _f.var ~= nil then
        _temp653 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp653 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp653, "var"))
      end

      elseif _temp653 == nil then
        _error(exception:null_error("_temp653", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp653))
      end


    if _type(invoke_undernumber_underrhs) == "function" or (_type(invoke_undernumber_underrhs) == "table" and _rawget(invoke_undernumber_underrhs, "__call_thing")) then
      _temp649 =  invoke_undernumber_underrhs(_self, _temp650,_temp651,_temp652,_temp653)

    elseif invoke_undernumber_underrhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_rhs (" .. object.__type(invoke_undernumber_underrhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underrhs) == "function" or (_type(_self.invoke_undernumber_underrhs) == "table" and _rawget(_self.invoke_undernumber_underrhs, "__call_thing")) then
        _temp649 =  _self:invoke_undernumber_underrhs(_temp650,_temp651,_temp652,_temp653)
      elseif _self.invoke_undernumber_underrhs ~= nil then
        _temp649 =  _self.invoke_undernumber_underrhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp649 =  _self:no_undermethod(string:new("invoke_number_rhs") , _temp650,_temp651,_temp652,_temp653)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp649 =  no_undermethod(_self, string:new("invoke_number_rhs") , _temp650,_temp651,_temp652,_temp653)
      else
        _error(exception:name_error("invoke_number_rhs"))
      end
    end
local _temp653
      local _t = _type(_temp648)
      if _t == "table" then
                      if _type(_temp648._less_less) == "function" or (_type(_temp648._less_less) == "table" and _rawget(_temp648._less_less, "__call_thing")) then
        _temp653 = _temp648:_less_less(_temp649)
      elseif _temp648._less_less ~= nil then
        _temp653 = _temp648._less_less

        elseif _temp648.no_undermethod ~= nil then
          _temp653 =  _temp648:no_undermethod(string:new("<<") , _temp649)
        else
          _error(exception:method_error(_temp648, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp648)
      if _n._less_less ~= nil then
        _temp653 = _n:_less_less(_temp649)
      elseif _n.no_undermethod ~= nil then
        _temp653 =  _n:no_undermethod(string:new("<<") , _temp649)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp648)
      if _f._less_less ~= nil then
        _temp653 = _f:_less_less(_temp649)
      elseif _f.no_undermethod ~= nil then
        _temp653 =  _f:no_undermethod(string:new("<<") , _temp649)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _temp648 == nil then
        _error(exception:null_error("_temp648", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp648))
      end

_dummy_ = _temp653 
end

    if _type(_temp638) == "function" or (_type(_temp638) == "table" and _rawget(_temp638, "__call_thing")) then
      return  _temp638(_self)

    elseif _temp638 then
      return  _temp638
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp635)
      if _t == "table" then
                      if _type(_temp635.walk) == "function" or (_type(_temp635.walk) == "table" and _rawget(_temp635.walk, "__call_thing")) then
        _dummy_ = _temp635:walk(_temp4,_temp654)
      elseif _temp635.walk ~= nil then
        _dummy_ = _temp635.walk

        elseif _temp635.no_undermethod ~= nil then
          _dummy_ =  _temp635:no_undermethod(string:new("walk") , _temp4,_temp654)
        else
          _error(exception:method_error(_temp635, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp635)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp654)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp654)
      else
        _error(exception:method_error(_temp635, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp635)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp654)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp654)
      else
        _error(exception:method_error(_temp635, "walk"))
      end

      elseif _temp635 == nil then
        _error(exception:null_error("_temp635", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp635))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp654 =  _temp5(_self)

    elseif _temp5 then
      _temp654 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp654 =  _self:c()
      elseif _self.c ~= nil then
        _temp654 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp654 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp654 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp654,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp654,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp654,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp654,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
