              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp17 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

local _temp11

_temp11 = 0

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp16 = function (_self)

local _temp12 
do
local _temp13 = nil
_temp13 =  _temp11

local _temp14
      if number._unchanged('_plus')  then
        _temp14 = _temp13 + 1
      else
              local _n = number:new(_temp13)
      if _n._plus ~= nil then
        _temp14 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp14 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp13, "+"))
      end

      end 

_temp12 = _temp14 
end

_temp11 = _temp12

return _temp11
end

        if _type(_temp7) == "table" then
          _temp7["next_underliftable"] = _temp16
        elseif _type(_temp7) == "number" then
          number["next_underliftable"] =  _temp16
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp16
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp17
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp17
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp31 = function (_self, _temp18)
        if _temp18 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp19 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp19 =  my(_self)

    elseif my then
      _temp19 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp19 =  _self:my()
      elseif _self.my ~= nil then
        _temp19 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp19

local _temp20 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp21 = nil
        local _t = _type(_temp18)
        if _t == "table" then
          if _rawget(_temp18, "__call_thing") == nil then
            _temp21 = _temp18
          else
                  if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

          end
        elseif _t == "number" then
          _temp21 = _temp18
        elseif _t == "function" then
                if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

        elseif _temp18 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.nodes) == "function" or (_type(_temp21.nodes) == "table" and _rawget(_temp21.nodes, "__call_thing")) then
        _temp21 = _temp21:nodes()
      elseif _temp21.nodes ~= nil then
        _temp21 = _temp21.nodes

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp21, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.nodes ~= nil then
        _temp21 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.nodes ~= nil then
        _temp21 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


local _temp26 = function (_self, _temp22)
        if _temp22 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp23 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp23 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp23 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp24 = nil
    if _type(_temp22) == "function" or (_type(_temp22) == "table" and _rawget(_temp22, "__call_thing")) then
      _temp24 =  _temp22(_self)

    elseif _temp22 then
      _temp24 =  _temp22
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp24 =  _self:n()
      elseif _self.n ~= nil then
        _temp24 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.process) == "function" or (_type(_temp23.process) == "table" and _rawget(_temp23.process, "__call_thing")) then
        return _temp23:process(_temp24)
      elseif _temp23.process ~= nil then
        return _temp23.process

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("process") , _temp24)
        else
          _error(exception:method_error(_temp23, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.process ~= nil then
        return _n:process(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.process ~= nil then
        return _f:process(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.map) == "function" or (_type(_temp21.map) == "table" and _rawget(_temp21.map, "__call_thing")) then
        _temp21 = _temp21:map(_temp26)
      elseif _temp21.map ~= nil then
        _temp21 = _temp21.map

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("map") , _temp26)
        else
          _error(exception:method_error(_temp21, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.map ~= nil then
        _temp21 = _n:map(_temp26)
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.map ~= nil then
        _temp21 = _f:map(_temp26)
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


        if _type(_temp20) == "table" then
          _temp20["results"] = _temp21
        elseif _type(_temp20) == "number" then
          number["results"] = _temp21
        else
          _error("Cannot set method on " .. _temp20)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp26 
do
local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp28 = nil
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.liftable_underfunctions) == "function" or (_type(_temp27.liftable_underfunctions) == "table" and _rawget(_temp27.liftable_underfunctions, "__call_thing")) then
        _temp28 = _temp27:liftable_underfunctions()
      elseif _temp27.liftable_underfunctions ~= nil then
        _temp28 = _temp27.liftable_underfunctions

        elseif _temp27.no_undermethod ~= nil then
          _temp28 =  _temp27:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp27, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.liftable_underfunctions ~= nil then
        _temp28 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.liftable_underfunctions ~= nil then
        _temp28 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp29 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp29 =  _self:my()
      elseif _self.my ~= nil then
        _temp29 =  _self.my

        elseif my ~= nil then
          _temp29 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp29)
      if _t == "table" then
                      if _type(_temp29.results) == "function" or (_type(_temp29.results) == "table" and _rawget(_temp29.results, "__call_thing")) then
        _temp29 = _temp29:results()
      elseif _temp29.results ~= nil then
        _temp29 = _temp29.results

        elseif _temp29.no_undermethod ~= nil then
          _temp29 =  _temp29:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp29, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp29)
      if _n.results ~= nil then
        _temp29 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp29 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp29)
      if _f.results ~= nil then
        _temp29 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp29 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _temp29 == nil then
        _error(exception:null_error("_temp29", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp29))
      end

local _temp30
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28._plus) == "function" or (_type(_temp28._plus) == "table" and _rawget(_temp28._plus, "__call_thing")) then
        _temp30 = _temp28:_plus(_temp29)
      elseif _temp28._plus ~= nil then
        _temp30 = _temp28._plus

        elseif _temp28.no_undermethod ~= nil then
          _temp30 =  _temp28:no_undermethod(string:new("+") , _temp29)
        else
          _error(exception:method_error(_temp28, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp29) == 'number' then
        _temp30 = _temp28 + _temp29
      else
              local _n = number:new(_temp28)
      if _n._plus ~= nil then
        _temp30 = _n:_plus(_temp29)
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f._plus ~= nil then
        _temp30 = _f:_plus(_temp29)
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end

_temp26 = _temp30 
end

        if _type(_temp20) == "table" then
          _temp20["results"] = _temp26
        elseif _type(_temp20) == "number" then
          number["results"] = _temp26
        else
          _error("Cannot set method on " .. _temp20)
        end

return _temp26
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp31)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp36 = function (_self, _temp32)
        if _temp32 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp33
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp33 =  _self:my()
      elseif _self.my ~= nil then
        _temp33 =  _self.my

        elseif my ~= nil then
          _temp33 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.env) == "function" or (_type(_temp33.env) == "table" and _rawget(_temp33.env, "__call_thing")) then
        _temp33 = _temp33:env()
      elseif _temp33.env ~= nil then
        _temp33 = _temp33.env

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.env ~= nil then
        _temp33 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.env ~= nil then
        _temp33 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

local _temp34 = nil
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.lhs) == "function" or (_type(_temp34.lhs) == "table" and _rawget(_temp34.lhs, "__call_thing")) then
        _temp34 = _temp34:lhs()
      elseif _temp34.lhs ~= nil then
        _temp34 = _temp34.lhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp34, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.lhs ~= nil then
        _temp34 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.lhs ~= nil then
        _temp34 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.new_undervar) == "function" or (_type(_temp33.new_undervar) == "table" and _rawget(_temp33.new_undervar, "__call_thing")) then
        _temp33 = _temp33:new_undervar(_temp34)
      elseif _temp33.new_undervar ~= nil then
        _temp33 = _temp33.new_undervar

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("new_var") , _temp34)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.new_undervar ~= nil then
        _temp33 = _n:new_undervar(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.new_undervar ~= nil then
        _temp33 = _f:new_undervar(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end


local _temp35
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.rhs) == "function" or (_type(_temp34.rhs) == "table" and _rawget(_temp34.rhs, "__call_thing")) then
        _temp34 = _temp34:rhs()
      elseif _temp34.rhs ~= nil then
        _temp34 = _temp34.rhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp34, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.rhs ~= nil then
        _temp34 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.rhs ~= nil then
        _temp34 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


local _temp36 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp36 =  _temp33(_self)

    elseif _temp33 then
      _temp36 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp35 =  process(_self, _temp34,_temp36)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp35 =  _self:process(_temp34,_temp36)
      elseif _self.process ~= nil then
        _temp35 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("process") , _temp34,_temp36)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("process") , _temp34,_temp36)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.env) == "function" or (_type(_temp36.env) == "table" and _rawget(_temp36.env, "__call_thing")) then
        _temp36 = _temp36:env()
      elseif _temp36.env ~= nil then
        _temp36 = _temp36.env

        elseif _temp36.no_undermethod ~= nil then
          _temp36 =  _temp36:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp36, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.env ~= nil then
        _temp36 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp36 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.env ~= nil then
        _temp36 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp36 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp34 =  _temp33(_self)

    elseif _temp33 then
      _temp34 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp34 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp34 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp34 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp34 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37
do
    if _type(_temp35) == "function" or (_type(_temp35) == "table" and _rawget(_temp35, "__call_thing")) then
      _temp37 =  _temp35(_self)

    elseif _temp35 then
      _temp37 =  _temp35
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp37 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp37 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp38 = string:new("type")


_temp37 = _temp37:get(_temp38)
end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.set_undertype) == "function" or (_type(_temp36.set_undertype) == "table" and _rawget(_temp36.set_undertype, "__call_thing")) then
        _dummy_ = _temp36:set_undertype(_temp34,_temp37)
      elseif _temp36.set_undertype ~= nil then
        _dummy_ = _temp36.set_undertype

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("set_type") , _temp34,_temp37)
        else
          _error(exception:method_error(_temp36, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp34,_temp37)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp34,_temp37)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

local _temp37 
do
local _temp39 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp39 =  _temp33(_self)

    elseif _temp33 then
      _temp39 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp39 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp39 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp40 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp40 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp40 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.var) == "function" or (_type(_temp40.var) == "table" and _rawget(_temp40.var, "__call_thing")) then
        _temp40 = _temp40:var()
      elseif _temp40.var ~= nil then
        _temp40 = _temp40.var

        elseif _temp40.no_undermethod ~= nil then
          _temp40 =  _temp40:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp40, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.var ~= nil then
        _temp40 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp40 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.var ~= nil then
        _temp40 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp40 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

local _temp41
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39._equal_equal) == "function" or (_type(_temp39._equal_equal) == "table" and _rawget(_temp39._equal_equal, "__call_thing")) then
        _temp41 = _temp39:_equal_equal(_temp40)
      elseif _temp39._equal_equal ~= nil then
        _temp41 = _temp39._equal_equal

        elseif _temp39.no_undermethod ~= nil then
          _temp41 =  _temp39:no_undermethod(string:new("==") , _temp40)
        else
          _error(exception:method_error(_temp39, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp40) == 'number' then
              if _temp39 == _temp40 then
        _temp41 = object.__true
      else
        _temp41 = object.__false
      end

      else
              local _n = number:new(_temp39)
      if _n._equal_equal ~= nil then
        _temp41 = _n:_equal_equal(_temp40)
      elseif _n.no_undermethod ~= nil then
        _temp41 =  _n:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f._equal_equal ~= nil then
        _temp41 = _f:_equal_equal(_temp40)
      elseif _f.no_undermethod ~= nil then
        _temp41 =  _f:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end

_temp37 = _temp41 
end


local _temp47 = function (_self)

local _temp42 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp42 =  _temp33(_self)

    elseif _temp33 then
      _temp42 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp44 =  _temp33(_self)

    elseif _temp33 then
      _temp44 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp44 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp44 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp44 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp44 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp45 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp45 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp45 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp45)
      if _t == "table" then
                      if _type(_temp45.out) == "function" or (_type(_temp45.out) == "table" and _rawget(_temp45.out, "__call_thing")) then
        _temp45 = _temp45:out()
      elseif _temp45.out ~= nil then
        _temp45 = _temp45.out

        elseif _temp45.no_undermethod ~= nil then
          _temp45 =  _temp45:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp45, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp45)
      if _n.out ~= nil then
        _temp45 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp45 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp45)
      if _f.out ~= nil then
        _temp45 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp45 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _temp45 == nil then
        _error(exception:null_error("_temp45", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp45))
      end


_temp43 = string:new("local " .. _tostring(_temp44) .. "\n" .. _tostring(_temp45) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end


local _temp54 = function (_self)

local _temp48 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp48 =  _temp33(_self)

    elseif _temp33 then
      _temp48 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp48 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp48 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp48 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp48 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp49 = nil
do
local _temp50 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp50 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp50 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp50)
      if _t == "table" then
                      if _type(_temp50.out) == "function" or (_type(_temp50.out) == "table" and _rawget(_temp50.out, "__call_thing")) then
        _temp50 = _temp50:out()
      elseif _temp50.out ~= nil then
        _temp50 = _temp50.out

        elseif _temp50.no_undermethod ~= nil then
          _temp50 =  _temp50:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp50, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp50)
      if _n.out ~= nil then
        _temp50 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp50 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp50)
      if _f.out ~= nil then
        _temp50 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp50 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _temp50 == nil then
        _error(exception:null_error("_temp50", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp50))
      end


local _temp51 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp51 =  _temp33(_self)

    elseif _temp33 then
      _temp51 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp51 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp51 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp52 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp52 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.var) == "function" or (_type(_temp52.var) == "table" and _rawget(_temp52.var, "__call_thing")) then
        _temp52 = _temp52:var()
      elseif _temp52.var ~= nil then
        _temp52 = _temp52.var

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp52, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.var ~= nil then
        _temp52 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.var ~= nil then
        _temp52 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = string:new("" .. _tostring(_temp50) .. "\nlocal " .. _tostring(_temp51) .. " = " .. _tostring(_temp52) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp48,_temp49)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp48,_temp49)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp48,_temp49)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp48,_temp49)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp37,_temp47,_temp54)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp37,_temp47,_temp54)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp37,_temp47,_temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp37,_temp47,_temp54)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp31 =  _temp5(_self)

    elseif _temp5 then
      _temp31 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp31 =  _self:c()
      elseif _self.c ~= nil then
        _temp31 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp31 = _temp31["var_underreassign"]
        if _temp31 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp31)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["var_underreassign"]
        if _temp36 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp76 = function (_self, _temp56,_temp55)
        if _temp56 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp55 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp55 =  null(_self)

    elseif null then
      _temp55 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp55 =  _self:null()
      elseif _self.null ~= nil then
        _temp55 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp57
local _temp58 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.target) == "function" or (_type(_temp58.target) == "table" and _rawget(_temp58.target, "__call_thing")) then
        _temp58 = _temp58:target()
      elseif _temp58.target ~= nil then
        _temp58 = _temp58.target

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp58, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.target ~= nil then
        _temp58 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.target ~= nil then
        _temp58 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp57 =  process(_self, _temp58)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp57 =  _self:process(_temp58)
      elseif _self.process ~= nil then
        _temp57 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("process") , _temp58)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("process") , _temp58)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.field) == "function" or (_type(_temp58.field) == "table" and _rawget(_temp58.field, "__call_thing")) then
        _temp58 = _temp58:field()
      elseif _temp58.field ~= nil then
        _temp58 = _temp58.field

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp58, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.field ~= nil then
        _temp58 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.field ~= nil then
        _temp58 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


_temp55 = _temp58

local _temp59
local _temp60 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp60 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.rhs) == "function" or (_type(_temp60.rhs) == "table" and _rawget(_temp60.rhs, "__call_thing")) then
        _temp60 = _temp60:rhs()
      elseif _temp60.rhs ~= nil then
        _temp60 = _temp60.rhs

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp60, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.rhs ~= nil then
        _temp60 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.rhs ~= nil then
        _temp60 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp59 =  process(_self, _temp60)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp59 =  _self:process(_temp60)
      elseif _self.process ~= nil then
        _temp59 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("process") , _temp60)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("process") , _temp60)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp61
do
local _temp62 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp62 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp63 = nil
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.out) == "function" or (_type(_temp62.out) == "table" and _rawget(_temp62.out, "__call_thing")) then
        _temp63 = _temp62:out()
      elseif _temp62.out ~= nil then
        _temp63 = _temp62.out

        elseif _temp62.no_undermethod ~= nil then
          _temp63 =  _temp62:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp62, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.out ~= nil then
        _temp63 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.out ~= nil then
        _temp63 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end

local _temp64 = string:new("\n")

local _temp65 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp65 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp66 = nil
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.out) == "function" or (_type(_temp65.out) == "table" and _rawget(_temp65.out, "__call_thing")) then
        _temp66 = _temp65:out()
      elseif _temp65.out ~= nil then
        _temp66 = _temp65.out

        elseif _temp65.no_undermethod ~= nil then
          _temp66 =  _temp65:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp65, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.out ~= nil then
        _temp66 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.out ~= nil then
        _temp66 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end

local _temp67 = nil
do
local _temp68 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp68 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp68 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.var) == "function" or (_type(_temp68.var) == "table" and _rawget(_temp68.var, "__call_thing")) then
        _temp68 = _temp68:var()
      elseif _temp68.var ~= nil then
        _temp68 = _temp68.var

        elseif _temp68.no_undermethod ~= nil then
          _temp68 =  _temp68:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp68, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.var ~= nil then
        _temp68 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp68 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.var ~= nil then
        _temp68 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp68 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end


local _temp69 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp69 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp69 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp69)
      if _t == "table" then
                      if _type(_temp69.var) == "function" or (_type(_temp69.var) == "table" and _rawget(_temp69.var, "__call_thing")) then
        _temp69 = _temp69:var()
      elseif _temp69.var ~= nil then
        _temp69 = _temp69.var

        elseif _temp69.no_undermethod ~= nil then
          _temp69 =  _temp69:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp69, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp69)
      if _n.var ~= nil then
        _temp69 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp69 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp69)
      if _f.var ~= nil then
        _temp69 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp69 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _temp69 == nil then
        _error(exception:null_error("_temp69", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp69))
      end


local _temp70 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp70 =  _temp55(_self)

    elseif _temp55 then
      _temp70 =  _temp55
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp70 =  _self:var()
      elseif _self.var ~= nil then
        _temp70 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp71 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp71 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp71 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp71)
      if _t == "table" then
                      if _type(_temp71.var) == "function" or (_type(_temp71.var) == "table" and _rawget(_temp71.var, "__call_thing")) then
        _temp71 = _temp71:var()
      elseif _temp71.var ~= nil then
        _temp71 = _temp71.var

        elseif _temp71.no_undermethod ~= nil then
          _temp71 =  _temp71:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp71, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp71)
      if _n.var ~= nil then
        _temp71 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp71 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp71)
      if _f.var ~= nil then
        _temp71 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp71 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _temp71 == nil then
        _error(exception:null_error("_temp71", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp71))
      end


local _temp72 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp72 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp72 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.var) == "function" or (_type(_temp72.var) == "table" and _rawget(_temp72.var, "__call_thing")) then
        _temp72 = _temp72:var()
      elseif _temp72.var ~= nil then
        _temp72 = _temp72.var

        elseif _temp72.no_undermethod ~= nil then
          _temp72 =  _temp72:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp72, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.var ~= nil then
        _temp72 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp72 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.var ~= nil then
        _temp72 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp72 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end


_temp67 = string:new("\n    if _type(" .. _tostring(_temp68) .. ") == 'table' then\n      " .. _tostring(_temp69) .. "['" .. _tostring(_temp70) .. "'] = " .. _tostring(_temp71) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp72) .. ")\n    end\n    ")
end
local _temp73
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63._less_less) == "function" or (_type(_temp63._less_less) == "table" and _rawget(_temp63._less_less, "__call_thing")) then
        _temp73 = _temp63:_less_less(_temp64)
      elseif _temp63._less_less ~= nil then
        _temp73 = _temp63._less_less

        elseif _temp63.no_undermethod ~= nil then
          _temp73 =  _temp63:no_undermethod(string:new("<<") , _temp64)
        else
          _error(exception:method_error(_temp63, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n._less_less ~= nil then
        _temp73 = _n:_less_less(_temp64)
      elseif _n.no_undermethod ~= nil then
        _temp73 =  _n:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f._less_less ~= nil then
        _temp73 = _f:_less_less(_temp64)
      elseif _f.no_undermethod ~= nil then
        _temp73 =  _f:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end

local _temp64
      local _t = _type(_temp73)
      if _t == "table" then
                      if _type(_temp73._less_less) == "function" or (_type(_temp73._less_less) == "table" and _rawget(_temp73._less_less, "__call_thing")) then
        _temp64 = _temp73:_less_less(_temp66)
      elseif _temp73._less_less ~= nil then
        _temp64 = _temp73._less_less

        elseif _temp73.no_undermethod ~= nil then
          _temp64 =  _temp73:no_undermethod(string:new("<<") , _temp66)
        else
          _error(exception:method_error(_temp73, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp73)
      if _n._less_less ~= nil then
        _temp64 = _n:_less_less(_temp66)
      elseif _n.no_undermethod ~= nil then
        _temp64 =  _n:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp73)
      if _f._less_less ~= nil then
        _temp64 = _f:_less_less(_temp66)
      elseif _f.no_undermethod ~= nil then
        _temp64 =  _f:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _temp73 == nil then
        _error(exception:null_error("_temp73", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp73))
      end

local _temp66
      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64._less_less) == "function" or (_type(_temp64._less_less) == "table" and _rawget(_temp64._less_less, "__call_thing")) then
        _temp66 = _temp64:_less_less(_temp67)
      elseif _temp64._less_less ~= nil then
        _temp66 = _temp64._less_less

        elseif _temp64.no_undermethod ~= nil then
          _temp66 =  _temp64:no_undermethod(string:new("<<") , _temp67)
        else
          _error(exception:method_error(_temp64, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n._less_less ~= nil then
        _temp66 = _n:_less_less(_temp67)
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f._less_less ~= nil then
        _temp66 = _f:_less_less(_temp67)
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

_temp61 = _temp66 
end

        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp60 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.var) == "function" or (_type(_temp60.var) == "table" and _rawget(_temp60.var, "__call_thing")) then
        _temp60 = _temp60:var()
      elseif _temp60.var ~= nil then
        _temp60 = _temp60.var

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp60, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.var ~= nil then
        _temp60 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.var ~= nil then
        _temp60 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


local _temp74 = nil
    if _type(_temp61) == "function" or (_type(_temp61) == "table" and _rawget(_temp61, "__call_thing")) then
      _temp74 =  _temp61(_self)

    elseif _temp61 then
      _temp74 =  _temp61
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp74 =  _self:out()
      elseif _self.out ~= nil then
        _temp74 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp60,_temp74)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp60,_temp74)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp60,_temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp60,_temp74)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["get_undera_undervalue"]
        if _temp36 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp36)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp76 =  _temp5(_self)

    elseif _temp5 then
      _temp76 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp76 =  _self:c()
      elseif _self.c ~= nil then
        _temp76 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp76 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp76 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp76 = _temp76["get_undera_undervalue"]
        if _temp76 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp86 = function (_self, _temp78,_temp77)
        if _temp78 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp77 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp77 =  null(_self)

    elseif null then
      _temp77 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp77 =  _self:null()
      elseif _self.null ~= nil then
        _temp77 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp79
local _temp80 = nil
    if _type(_temp77) == "function" or (_type(_temp77) == "table" and _rawget(_temp77, "__call_thing")) then
      _temp80 =  _temp77(_self)

    elseif _temp77 then
      _temp80 =  _temp77
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp80 =  _self:var()
      elseif _self.var ~= nil then
        _temp80 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp80 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp80 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp79 =  set_underresult(_self, _temp80)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp79 =  _self:set_underresult(_temp80)
      elseif _self.set_underresult ~= nil then
        _temp79 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("set_result") , _temp80)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("set_result") , _temp80)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp81 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp81 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp81 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp82 = nil
      local _t = _type(_temp81)
      if _t == "table" then
                      if _type(_temp81.out) == "function" or (_type(_temp81.out) == "table" and _rawget(_temp81.out, "__call_thing")) then
        _temp82 = _temp81:out()
      elseif _temp81.out ~= nil then
        _temp82 = _temp81.out

        elseif _temp81.no_undermethod ~= nil then
          _temp82 =  _temp81:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp81, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp81)
      if _n.out ~= nil then
        _temp82 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp82 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp81)
      if _f.out ~= nil then
        _temp82 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp82 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _temp81 == nil then
        _error(exception:null_error("_temp81", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp81))
      end

local _temp83 = nil
local _temp84 = nil
        local _t = _type(_temp78)
        if _t == "table" then
          if _rawget(_temp78, "__call_thing") == nil then
            _temp84 = _temp78
          else
                  if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

          end
        elseif _t == "number" then
          _temp84 = _temp78
        elseif _t == "function" then
                if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

        elseif _temp78 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.value) == "function" or (_type(_temp84.value) == "table" and _rawget(_temp84.value, "__call_thing")) then
        _temp84 = _temp84:value()
      elseif _temp84.value ~= nil then
        _temp84 = _temp84.value

        elseif _temp84.no_undermethod ~= nil then
          _temp84 =  _temp84:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp84, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.value ~= nil then
        _temp84 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp84 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.value ~= nil then
        _temp84 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp84 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end


local _temp85 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp85 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp85 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp85)
      if _t == "table" then
                      if _type(_temp85.var) == "function" or (_type(_temp85.var) == "table" and _rawget(_temp85.var, "__call_thing")) then
        _temp85 = _temp85:var()
      elseif _temp85.var ~= nil then
        _temp85 = _temp85.var

        elseif _temp85.no_undermethod ~= nil then
          _temp85 =  _temp85:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp85, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp85)
      if _n.var ~= nil then
        _temp85 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp85)
      if _f.var ~= nil then
        _temp85 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _temp85 == nil then
        _error(exception:null_error("_temp85", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp85))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp83 =  get_undervalue(_self, _temp84,_temp85)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp83 =  _self:get_undervalue(_temp84,_temp85)
      elseif _self.get_undervalue ~= nil then
        _temp83 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("get_value") , _temp84,_temp85)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("get_value") , _temp84,_temp85)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp85
      local _t = _type(_temp82)
      if _t == "table" then
                      if _type(_temp82._less_less) == "function" or (_type(_temp82._less_less) == "table" and _rawget(_temp82._less_less, "__call_thing")) then
        _temp85 = _temp82:_less_less(_temp83)
      elseif _temp82._less_less ~= nil then
        _temp85 = _temp82._less_less

        elseif _temp82.no_undermethod ~= nil then
          _temp85 =  _temp82:no_undermethod(string:new("<<") , _temp83)
        else
          _error(exception:method_error(_temp82, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp82)
      if _n._less_less ~= nil then
        _temp85 = _n:_less_less(_temp83)
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp82)
      if _f._less_less ~= nil then
        _temp85 = _f:_less_less(_temp83)
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _temp82 == nil then
        _error(exception:null_error("_temp82", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp82))
      end

_dummy_ = _temp85 
end

    if _type(_temp79) == "function" or (_type(_temp79) == "table" and _rawget(_temp79, "__call_thing")) then
      return  _temp79(_self)

    elseif _temp79 then
      return  _temp79
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp86)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp86)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp86)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp86)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp86 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp86 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp94 = function (_self, _temp88,_temp87)
        if _temp88 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp87 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp87 =  null(_self)

    elseif null then
      _temp87 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp87 =  _self:null()
      elseif _self.null ~= nil then
        _temp87 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp89 = nil
    if _type(_temp88) == "function" or (_type(_temp88) == "table" and _rawget(_temp88, "__call_thing")) then
      _temp89 =  _temp88(_self)

    elseif _temp88 then
      _temp89 =  _temp88
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp89 =  _self:node()
      elseif _self.node ~= nil then
        _temp89 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp90 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp90 =  null(_self)

    elseif null then
      _temp90 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp90 =  _self:null()
      elseif _self.null ~= nil then
        _temp90 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp90 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp90 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp91 = nil

        if invoke_underlocal == nil then
          _temp91 = _self["invoke_underlocal"]
          if _temp91 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp91 = invoke_underlocal
        end

local _temp92 = nil
    if _type(_temp87) == "function" or (_type(_temp87) == "table" and _rawget(_temp87, "__call_thing")) then
      _temp92 =  _temp87(_self)

    elseif _temp87 then
      _temp92 =  _temp87
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp92 =  _self:var()
      elseif _self.var ~= nil then
        _temp92 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp89,_temp90,_temp91,_temp92)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp89,_temp90,_temp91,_temp92)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp86)
      if _t == "table" then
                      if _type(_temp86.walk) == "function" or (_type(_temp86.walk) == "table" and _rawget(_temp86.walk, "__call_thing")) then
        _dummy_ = _temp86:walk(_temp4,_temp94)
      elseif _temp86.walk ~= nil then
        _dummy_ = _temp86.walk

        elseif _temp86.no_undermethod ~= nil then
          _dummy_ =  _temp86:no_undermethod(string:new("walk") , _temp4,_temp94)
        else
          _error(exception:method_error(_temp86, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp86)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp94)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp86)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp94)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _temp86 == nil then
        _error(exception:null_error("_temp86", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp86))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp94 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp94 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp102 = function (_self, _temp96,_temp95)
        if _temp96 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp95 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp95 =  null(_self)

    elseif null then
      _temp95 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp95 =  _self:null()
      elseif _self.null ~= nil then
        _temp95 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp97 = nil
    if _type(_temp96) == "function" or (_type(_temp96) == "table" and _rawget(_temp96, "__call_thing")) then
      _temp97 =  _temp96(_self)

    elseif _temp96 then
      _temp97 =  _temp96
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp97 =  _self:node()
      elseif _self.node ~= nil then
        _temp97 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp98 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp98 =  null(_self)

    elseif null then
      _temp98 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp98 =  _self:null()
      elseif _self.null ~= nil then
        _temp98 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp98 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp98 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp99 = nil

        if invoke_underlocal == nil then
          _temp99 = _self["invoke_underlocal"]
          if _temp99 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp99 = invoke_underlocal
        end

local _temp100 = nil
    if _type(_temp95) == "function" or (_type(_temp95) == "table" and _rawget(_temp95, "__call_thing")) then
      _temp100 =  _temp95(_self)

    elseif _temp95 then
      _temp100 =  _temp95
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp100 =  _self:var()
      elseif _self.var ~= nil then
        _temp100 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp97,_temp98,_temp99,_temp100)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp97,_temp98,_temp99,_temp100)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp94)
      if _t == "table" then
                      if _type(_temp94.walk) == "function" or (_type(_temp94.walk) == "table" and _rawget(_temp94.walk, "__call_thing")) then
        _dummy_ = _temp94:walk(_temp4,_temp102)
      elseif _temp94.walk ~= nil then
        _dummy_ = _temp94.walk

        elseif _temp94.no_undermethod ~= nil then
          _dummy_ =  _temp94:no_undermethod(string:new("walk") , _temp4,_temp102)
        else
          _error(exception:method_error(_temp94, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp94)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp102)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp94)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp102)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _temp94 == nil then
        _error(exception:null_error("_temp94", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp94))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp102 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp102 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp110 = function (_self, _temp104,_temp103)
        if _temp104 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp103 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp103 =  null(_self)

    elseif null then
      _temp103 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp103 =  _self:null()
      elseif _self.null ~= nil then
        _temp103 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp105 = nil
    if _type(_temp104) == "function" or (_type(_temp104) == "table" and _rawget(_temp104, "__call_thing")) then
      _temp105 =  _temp104(_self)

    elseif _temp104 then
      _temp105 =  _temp104
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp105 =  _self:node()
      elseif _self.node ~= nil then
        _temp105 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp106 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp106 =  null(_self)

    elseif null then
      _temp106 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp106 =  _self:null()
      elseif _self.null ~= nil then
        _temp106 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp106 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp106 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp107 = nil

        if invoke_underself == nil then
          _temp107 = _self["invoke_underself"]
          if _temp107 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp107 = invoke_underself
        end

local _temp108 = nil
    if _type(_temp103) == "function" or (_type(_temp103) == "table" and _rawget(_temp103, "__call_thing")) then
      _temp108 =  _temp103(_self)

    elseif _temp103 then
      _temp108 =  _temp103
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp108 =  _self:var()
      elseif _self.var ~= nil then
        _temp108 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp108 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp108 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp105,_temp106,_temp107,_temp108)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp105,_temp106,_temp107,_temp108)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp105,_temp106,_temp107,_temp108)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp102)
      if _t == "table" then
                      if _type(_temp102.walk) == "function" or (_type(_temp102.walk) == "table" and _rawget(_temp102.walk, "__call_thing")) then
        _dummy_ = _temp102:walk(_temp4,_temp110)
      elseif _temp102.walk ~= nil then
        _dummy_ = _temp102.walk

        elseif _temp102.no_undermethod ~= nil then
          _dummy_ =  _temp102:no_undermethod(string:new("walk") , _temp4,_temp110)
        else
          _error(exception:method_error(_temp102, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp102)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp110)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp102)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp110)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp110)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _temp102 == nil then
        _error(exception:null_error("_temp102", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp102))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp110 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp110 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp110 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp110 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp110 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp120 = function (_self, _temp112,_temp111)
        if _temp112 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp111 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp111 =  null(_self)

    elseif null then
      _temp111 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp111 =  _self:null()
      elseif _self.null ~= nil then
        _temp111 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp113
local _temp114 = nil
        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp114 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp114 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp114 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp114 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.target) == "function" or (_type(_temp114.target) == "table" and _rawget(_temp114.target, "__call_thing")) then
        _temp114 = _temp114:target()
      elseif _temp114.target ~= nil then
        _temp114 = _temp114.target

        elseif _temp114.no_undermethod ~= nil then
          _temp114 =  _temp114:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp114, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.target ~= nil then
        _temp114 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp114 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.target ~= nil then
        _temp114 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp114 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp114, "target"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end


local _temp115 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp115 =  _temp111(_self)

    elseif _temp111 then
      _temp115 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp115 =  _self:var()
      elseif _self.var ~= nil then
        _temp115 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp113 =  process(_self, _temp114,_temp115)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp113 =  _self:process(_temp114,_temp115)
      elseif _self.process ~= nil then
        _temp113 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp113 =  _self:no_undermethod(string:new("process") , _temp114,_temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp113 =  no_undermethod(_self, string:new("process") , _temp114,_temp115)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp112)
        if _t == "table" then
          if _rawget(_temp112, "__call_thing") == nil then
            _temp115 = _temp112
          else
                  if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

          end
        elseif _t == "number" then
          _temp115 = _temp112
        elseif _t == "function" then
                if _temp112 == nil then
              if _type(_self._temp112) == "function" or (_type(_self._temp112) == "table" and _rawget(_self._temp112, "__call_thing")) then
        _temp115 =  _self:_temp112()
      elseif _self._temp112 ~= nil then
        _temp115 =  _self._temp112

        elseif _self.no_undermethod ~= nil then
          _temp115 =  _self:no_undermethod(string:new("_temp112"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp115 =  _temp112(_self)
      end

        elseif _temp112 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp114 =  null(_self)

    elseif null then
      _temp114 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp114 =  _self:null()
      elseif _self.null ~= nil then
        _temp114 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp114 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp114 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp115) == "table" then
          _temp115["method"] = _temp114
        elseif _type(_temp115) == "number" then
          number["method"] = _temp114
        else
          _error("Cannot set method on " .. _temp115)
        end

    if _type(_temp112) == "function" or (_type(_temp112) == "table" and _rawget(_temp112, "__call_thing")) then
      _temp115 =  _temp112(_self)

    elseif _temp112 then
      _temp115 =  _temp112
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp115 =  _self:node()
      elseif _self.node ~= nil then
        _temp115 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp116 = nil
    if _type(_temp113) == "function" or (_type(_temp113) == "table" and _rawget(_temp113, "__call_thing")) then
      _temp116 =  _temp113(_self)

    elseif _temp113 then
      _temp116 =  _temp113
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp116 =  _self:target()
      elseif _self.target ~= nil then
        _temp116 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp116 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp116 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp117 = nil

        if invoke_underindex_underget == nil then
          _temp117 = _self["invoke_underindex_underget"]
          if _temp117 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp117 = invoke_underindex_underget
        end

local _temp118 = nil
    if _type(_temp111) == "function" or (_type(_temp111) == "table" and _rawget(_temp111, "__call_thing")) then
      _temp118 =  _temp111(_self)

    elseif _temp111 then
      _temp118 =  _temp111
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp118 =  _self:var()
      elseif _self.var ~= nil then
        _temp118 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp118 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp118 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp115,_temp116,_temp117,_temp118)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp115,_temp116,_temp117,_temp118)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp115,_temp116,_temp117,_temp118)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp110)
      if _t == "table" then
                      if _type(_temp110.walk) == "function" or (_type(_temp110.walk) == "table" and _rawget(_temp110.walk, "__call_thing")) then
        _dummy_ = _temp110:walk(_temp4,_temp120)
      elseif _temp110.walk ~= nil then
        _dummy_ = _temp110.walk

        elseif _temp110.no_undermethod ~= nil then
          _dummy_ =  _temp110:no_undermethod(string:new("walk") , _temp4,_temp120)
        else
          _error(exception:method_error(_temp110, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp110)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp120)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp110)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp120)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp120)
      else
        _error(exception:method_error(_temp110, "walk"))
      end

      elseif _temp110 == nil then
        _error(exception:null_error("_temp110", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp110))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp120 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp120 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp120 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp120 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp120 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp120 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_get")

local _temp128 = function (_self, _temp122,_temp121)
        if _temp122 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp121 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp121 =  null(_self)

    elseif null then
      _temp121 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp121 =  _self:null()
      elseif _self.null ~= nil then
        _temp121 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp121 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp121 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp123
local _temp124 = nil
        local _t = _type(_temp122)
        if _t == "table" then
          if _rawget(_temp122, "__call_thing") == nil then
            _temp124 = _temp122
          else
                  if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

          end
        elseif _t == "number" then
          _temp124 = _temp122
        elseif _t == "function" then
                if _temp122 == nil then
              if _type(_self._temp122) == "function" or (_type(_self._temp122) == "table" and _rawget(_self._temp122, "__call_thing")) then
        _temp124 =  _self:_temp122()
      elseif _self._temp122 ~= nil then
        _temp124 =  _self._temp122

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp122"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp124 =  _temp122(_self)
      end

        elseif _temp122 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.target) == "function" or (_type(_temp124.target) == "table" and _rawget(_temp124.target, "__call_thing")) then
        _temp124 = _temp124:target()
      elseif _temp124.target ~= nil then
        _temp124 = _temp124.target

        elseif _temp124.no_undermethod ~= nil then
          _temp124 =  _temp124:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp124, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.target ~= nil then
        _temp124 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp124 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.target ~= nil then
        _temp124 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp124 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp124, "target"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp123 =  process(_self, _temp124)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp123 =  _self:process(_temp124)
      elseif _self.process ~= nil then
        _temp123 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("process") , _temp124)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("process") , _temp124)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp122) == "function" or (_type(_temp122) == "table" and _rawget(_temp122, "__call_thing")) then
      _temp124 =  _temp122(_self)

    elseif _temp122 then
      _temp124 =  _temp122
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp124 =  _self:node()
      elseif _self.node ~= nil then
        _temp124 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp124 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp124 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp125 = nil
    if _type(_temp123) == "function" or (_type(_temp123) == "table" and _rawget(_temp123, "__call_thing")) then
      _temp125 =  _temp123(_self)

    elseif _temp123 then
      _temp125 =  _temp123
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp125 =  _self:target()
      elseif _self.target ~= nil then
        _temp125 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp126 = nil
    if _type(_temp121) == "function" or (_type(_temp121) == "table" and _rawget(_temp121, "__call_thing")) then
      _temp126 =  _temp121(_self)

    elseif _temp121 then
      _temp126 =  _temp121
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp126 =  _self:var()
      elseif _self.var ~= nil then
        _temp126 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp126 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp126 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underget_underdirect) == "function" or (_type(invoke_underindex_underget_underdirect) == "table" and _rawget(invoke_underindex_underget_underdirect, "__call_thing")) then
      return  invoke_underindex_underget_underdirect(_self, _temp124,_temp125,_temp126)

    elseif invoke_underindex_underget_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_get_direct (" .. object.__type(invoke_underindex_underget_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underget_underdirect) == "function" or (_type(_self.invoke_underindex_underget_underdirect) == "table" and _rawget(_self.invoke_underindex_underget_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underget_underdirect(_temp124,_temp125,_temp126)
      elseif _self.invoke_underindex_underget_underdirect ~= nil then
        return  _self.invoke_underindex_underget_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_get_direct") , _temp124,_temp125,_temp126)
      else
        _error(exception:name_error("invoke_index_get_direct"))
      end
    end

end

      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120.walk) == "function" or (_type(_temp120.walk) == "table" and _rawget(_temp120.walk, "__call_thing")) then
        _dummy_ = _temp120:walk(_temp4,_temp128)
      elseif _temp120.walk ~= nil then
        _dummy_ = _temp120.walk

        elseif _temp120.no_undermethod ~= nil then
          _dummy_ =  _temp120:no_undermethod(string:new("walk") , _temp4,_temp128)
        else
          _error(exception:method_error(_temp120, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp128)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp128)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp128)
      else
        _error(exception:method_error(_temp120, "walk"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp128 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp128 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp128 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp128 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp128 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp138 = function (_self, _temp130,_temp129)
        if _temp130 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp129 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp129 =  null(_self)

    elseif null then
      _temp129 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp129 =  _self:null()
      elseif _self.null ~= nil then
        _temp129 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp129 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp129 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp131
local _temp132 = nil
        local _t = _type(_temp130)
        if _t == "table" then
          if _rawget(_temp130, "__call_thing") == nil then
            _temp132 = _temp130
          else
                  if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

          end
        elseif _t == "number" then
          _temp132 = _temp130
        elseif _t == "function" then
                if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp132 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp132 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp132 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp132 =  _temp130(_self)
      end

        elseif _temp130 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp132)
      if _t == "table" then
                      if _type(_temp132.target) == "function" or (_type(_temp132.target) == "table" and _rawget(_temp132.target, "__call_thing")) then
        _temp132 = _temp132:target()
      elseif _temp132.target ~= nil then
        _temp132 = _temp132.target

        elseif _temp132.no_undermethod ~= nil then
          _temp132 =  _temp132:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp132, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp132)
      if _n.target ~= nil then
        _temp132 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp132 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp132)
      if _f.target ~= nil then
        _temp132 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp132 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp132, "target"))
      end

      elseif _temp132 == nil then
        _error(exception:null_error("_temp132", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp132))
      end


local _temp133 = nil
    if _type(_temp129) == "function" or (_type(_temp129) == "table" and _rawget(_temp129, "__call_thing")) then
      _temp133 =  _temp129(_self)

    elseif _temp129 then
      _temp133 =  _temp129
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp133 =  _self:var()
      elseif _self.var ~= nil then
        _temp133 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp131 =  process(_self, _temp132,_temp133)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp131 =  _self:process(_temp132,_temp133)
      elseif _self.process ~= nil then
        _temp131 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("process") , _temp132,_temp133)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("process") , _temp132,_temp133)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp130)
        if _t == "table" then
          if _rawget(_temp130, "__call_thing") == nil then
            _temp133 = _temp130
          else
                  if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp133 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp133 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp133 =  _temp130(_self)
      end

          end
        elseif _t == "number" then
          _temp133 = _temp130
        elseif _t == "function" then
                if _temp130 == nil then
              if _type(_self._temp130) == "function" or (_type(_self._temp130) == "table" and _rawget(_self._temp130, "__call_thing")) then
        _temp133 =  _self:_temp130()
      elseif _self._temp130 ~= nil then
        _temp133 =  _self._temp130

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp130"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp133 =  _temp130(_self)
      end

        elseif _temp130 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp132 =  null(_self)

    elseif null then
      _temp132 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp132 =  _self:null()
      elseif _self.null ~= nil then
        _temp132 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp132 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp132 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp133) == "table" then
          _temp133["method"] = _temp132
        elseif _type(_temp133) == "number" then
          number["method"] = _temp132
        else
          _error("Cannot set method on " .. _temp133)
        end

    if _type(_temp130) == "function" or (_type(_temp130) == "table" and _rawget(_temp130, "__call_thing")) then
      _temp133 =  _temp130(_self)

    elseif _temp130 then
      _temp133 =  _temp130
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp133 =  _self:node()
      elseif _self.node ~= nil then
        _temp133 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp134 = nil
    if _type(_temp131) == "function" or (_type(_temp131) == "table" and _rawget(_temp131, "__call_thing")) then
      _temp134 =  _temp131(_self)

    elseif _temp131 then
      _temp134 =  _temp131
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp134 =  _self:target()
      elseif _self.target ~= nil then
        _temp134 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp134 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp134 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp135 = nil

        if invoke_underfunction == nil then
          _temp135 = _self["invoke_underfunction"]
          if _temp135 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp135 = invoke_underfunction
        end

local _temp136 = nil
    if _type(_temp129) == "function" or (_type(_temp129) == "table" and _rawget(_temp129, "__call_thing")) then
      _temp136 =  _temp129(_self)

    elseif _temp129 then
      _temp136 =  _temp129
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp136 =  _self:var()
      elseif _self.var ~= nil then
        _temp136 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp136 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp136 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp133,_temp134,_temp135,_temp136)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp133,_temp134,_temp135,_temp136)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp133,_temp134,_temp135,_temp136)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp133,_temp134,_temp135,_temp136)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.walk) == "function" or (_type(_temp128.walk) == "table" and _rawget(_temp128.walk, "__call_thing")) then
        _dummy_ = _temp128:walk(_temp4,_temp138)
      elseif _temp128.walk ~= nil then
        _dummy_ = _temp128.walk

        elseif _temp128.no_undermethod ~= nil then
          _dummy_ =  _temp128:no_undermethod(string:new("walk") , _temp4,_temp138)
        else
          _error(exception:method_error(_temp128, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp138)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp138)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp138)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp138)
      else
        _error(exception:method_error(_temp128, "walk"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp138 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp138 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp138 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp138 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp138 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp138 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp138 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp138 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp138 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp138 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp147 = function (_self, _temp140,_temp139)
        if _temp140 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp139 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp139 =  null(_self)

    elseif null then
      _temp139 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp139 =  _self:null()
      elseif _self.null ~= nil then
        _temp139 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp141
local _temp142 = nil
        local _t = _type(_temp140)
        if _t == "table" then
          if _rawget(_temp140, "__call_thing") == nil then
            _temp142 = _temp140
          else
                  if _temp140 == nil then
              if _type(_self._temp140) == "function" or (_type(_self._temp140) == "table" and _rawget(_self._temp140, "__call_thing")) then
        _temp142 =  _self:_temp140()
      elseif _self._temp140 ~= nil then
        _temp142 =  _self._temp140

        elseif _self.no_undermethod ~= nil then
          _temp142 =  _self:no_undermethod(string:new("_temp140"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp142 =  _temp140(_self)
      end

          end
        elseif _t == "number" then
          _temp142 = _temp140
        elseif _t == "function" then
                if _temp140 == nil then
              if _type(_self._temp140) == "function" or (_type(_self._temp140) == "table" and _rawget(_self._temp140, "__call_thing")) then
        _temp142 =  _self:_temp140()
      elseif _self._temp140 ~= nil then
        _temp142 =  _self._temp140

        elseif _self.no_undermethod ~= nil then
          _temp142 =  _self:no_undermethod(string:new("_temp140"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp142 =  _temp140(_self)
      end

        elseif _temp140 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp142)
      if _t == "table" then
                      if _type(_temp142.target) == "function" or (_type(_temp142.target) == "table" and _rawget(_temp142.target, "__call_thing")) then
        _temp142 = _temp142:target()
      elseif _temp142.target ~= nil then
        _temp142 = _temp142.target

        elseif _temp142.no_undermethod ~= nil then
          _temp142 =  _temp142:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp142, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp142)
      if _n.target ~= nil then
        _temp142 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp142 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp142, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp142)
      if _f.target ~= nil then
        _temp142 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp142 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp142, "target"))
      end

      elseif _temp142 == nil then
        _error(exception:null_error("_temp142", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp142))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp141 =  process(_self, _temp142)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp141 =  _self:process(_temp142)
      elseif _self.process ~= nil then
        _temp141 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("process") , _temp142)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("process") , _temp142)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp140) == "function" or (_type(_temp140) == "table" and _rawget(_temp140, "__call_thing")) then
      _temp142 =  _temp140(_self)

    elseif _temp140 then
      _temp142 =  _temp140
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp142 =  _self:node()
      elseif _self.node ~= nil then
        _temp142 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp142 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp142 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp143 = nil
    if _type(_temp141) == "function" or (_type(_temp141) == "table" and _rawget(_temp141, "__call_thing")) then
      _temp143 =  _temp141(_self)

    elseif _temp141 then
      _temp143 =  _temp141
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp143 =  _self:target()
      elseif _self.target ~= nil then
        _temp143 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp144 = nil

        if invoke_undermethod == nil then
          _temp144 = _self["invoke_undermethod"]
          if _temp144 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp144 = invoke_undermethod
        end

local _temp145 = nil
    if _type(_temp139) == "function" or (_type(_temp139) == "table" and _rawget(_temp139, "__call_thing")) then
      _temp145 =  _temp139(_self)

    elseif _temp139 then
      _temp145 =  _temp139
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp145 =  _self:var()
      elseif _self.var ~= nil then
        _temp145 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp145 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp145 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp142,_temp143,_temp144,_temp145)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp142,_temp143,_temp144,_temp145)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp142,_temp143,_temp144,_temp145)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp142,_temp143,_temp144,_temp145)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp138)
      if _t == "table" then
                      if _type(_temp138.walk) == "function" or (_type(_temp138.walk) == "table" and _rawget(_temp138.walk, "__call_thing")) then
        _dummy_ = _temp138:walk(_temp4,_temp147)
      elseif _temp138.walk ~= nil then
        _dummy_ = _temp138.walk

        elseif _temp138.no_undermethod ~= nil then
          _dummy_ =  _temp138:no_undermethod(string:new("walk") , _temp4,_temp147)
        else
          _error(exception:method_error(_temp138, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp138)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp147)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp147)
      else
        _error(exception:method_error(_temp138, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp138)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp147)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp147)
      else
        _error(exception:method_error(_temp138, "walk"))
      end

      elseif _temp138 == nil then
        _error(exception:null_error("_temp138", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp138))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp147 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp147 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp147 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp147 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp147 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp147 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp147 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp147 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp147 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp147 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp154 = function (_self, _temp148)
        if _temp148 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp149
        local _t = _type(_temp148)
        if _t == "table" then
          if _rawget(_temp148, "__call_thing") == nil then
            _temp149 = _temp148
          else
                  if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp149 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp149 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp149 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp149 =  _temp148(_self)
      end

          end
        elseif _t == "number" then
          _temp149 = _temp148
        elseif _t == "function" then
                if _temp148 == nil then
              if _type(_self._temp148) == "function" or (_type(_self._temp148) == "table" and _rawget(_self._temp148, "__call_thing")) then
        _temp149 =  _self:_temp148()
      elseif _self._temp148 ~= nil then
        _temp149 =  _self._temp148

        elseif _self.no_undermethod ~= nil then
          _temp149 =  _self:no_undermethod(string:new("_temp148"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp149 =  _temp148(_self)
      end

        elseif _temp148 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp149)
      if _t == "table" then
                      if _type(_temp149.value) == "function" or (_type(_temp149.value) == "table" and _rawget(_temp149.value, "__call_thing")) then
        _temp149 = _temp149:value()
      elseif _temp149.value ~= nil then
        _temp149 = _temp149.value

        elseif _temp149.no_undermethod ~= nil then
          _temp149 =  _temp149:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp149)
      if _n.value ~= nil then
        _temp149 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp149 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp149)
      if _f.value ~= nil then
        _temp149 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp149 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp149 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp149))
      end

      local _t = _type(_temp149)
      if _t == "table" then
                      if _type(_temp149.to_underf) == "function" or (_type(_temp149.to_underf) == "table" and _rawget(_temp149.to_underf, "__call_thing")) then
        _temp149 = _temp149:to_underf()
      elseif _temp149.to_underf ~= nil then
        _temp149 = _temp149.to_underf

        elseif _temp149.no_undermethod ~= nil then
          _temp149 =  _temp149:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp149)
      if _n.to_underf ~= nil then
        _temp149 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp149 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp149)
      if _f.to_underf ~= nil then
        _temp149 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp149 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp149 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp149))
      end


local _temp150 = nil
    if _type(_temp149) == "function" or (_type(_temp149) == "table" and _rawget(_temp149, "__call_thing")) then
      _temp150 =  _temp149(_self)

    elseif _temp149 then
      _temp150 =  _temp149
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp150 =  _self:val()
      elseif _self.val ~= nil then
        _temp150 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp150 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp150 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp151 = string:new("")

local _temp152 = string:new("number")

local _temp153 = {}
_temp153[string:new("type")] = _temp152
_temp153 = hash:new(_temp153)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp150,_temp151,_temp153)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp150,_temp151,_temp153)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp150,_temp151,_temp153)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp150,_temp151,_temp153)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp147)
      if _t == "table" then
                      if _type(_temp147.walk) == "function" or (_type(_temp147.walk) == "table" and _rawget(_temp147.walk, "__call_thing")) then
        _dummy_ = _temp147:walk(_temp4,_temp154)
      elseif _temp147.walk ~= nil then
        _dummy_ = _temp147.walk

        elseif _temp147.no_undermethod ~= nil then
          _dummy_ =  _temp147:no_undermethod(string:new("walk") , _temp4,_temp154)
        else
          _error(exception:method_error(_temp147, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp147)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp154)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp154)
      else
        _error(exception:method_error(_temp147, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp147)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp154)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp154)
      else
        _error(exception:method_error(_temp147, "walk"))
      end

      elseif _temp147 == nil then
        _error(exception:null_error("_temp147", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp147))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp154 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp154 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp154 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp154 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp154 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp154 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp154 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp154 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp198 = function (_self, _temp156,_temp155)
        if _temp156 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp155 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp155 =  null(_self)

    elseif null then
      _temp155 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp155 =  _self:null()
      elseif _self.null ~= nil then
        _temp155 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp157 = nil
        local _t = _type(_temp156)
        if _t == "table" then
          if _rawget(_temp156, "__call_thing") == nil then
            _temp157 = _temp156
          else
                  if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

          end
        elseif _t == "number" then
          _temp157 = _temp156
        elseif _t == "function" then
                if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp157 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp157 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp157 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp157 =  _temp156(_self)
      end

        elseif _temp156 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.nodes) == "function" or (_type(_temp157.nodes) == "table" and _rawget(_temp157.nodes, "__call_thing")) then
        _temp157 = _temp157:nodes()
      elseif _temp157.nodes ~= nil then
        _temp157 = _temp157.nodes

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp157, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.nodes ~= nil then
        _temp157 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp157, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.nodes ~= nil then
        _temp157 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp157, "nodes"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("_temp157", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end

      local _t = _type(_temp157)
      if _t == "table" then
                      if _type(_temp157.empty_question) == "function" or (_type(_temp157.empty_question) == "table" and _rawget(_temp157.empty_question, "__call_thing")) then
        _temp157 = _temp157:empty_question()
      elseif _temp157.empty_question ~= nil then
        _temp157 = _temp157.empty_question

        elseif _temp157.no_undermethod ~= nil then
          _temp157 =  _temp157:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp157, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp157)
      if _n.empty_question ~= nil then
        _temp157 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp157 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp157, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp157)
      if _f.empty_question ~= nil then
        _temp157 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp157 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp157, "empty?"))
      end

      elseif _temp157 == nil then
        _error(exception:null_error("_temp157", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp157))
      end



local _temp162 = function (_self)

local _temp158 = nil
    if _type(_temp155) == "function" or (_type(_temp155) == "table" and _rawget(_temp155, "__call_thing")) then
      _temp158 =  _temp155(_self)

    elseif _temp155 then
      _temp158 =  _temp155
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp158 =  _self:var()
      elseif _self.var ~= nil then
        _temp158 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp158 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp158 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp159 = string:new("array:new()")

local _temp160 = string:new("array")

local _temp161 = {}
_temp161[string:new("type")] = _temp160
_temp161 = hash:new(_temp161)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp158,_temp159,_temp161)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp158,_temp159,_temp161)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp158,_temp159,_temp161)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp158,_temp159,_temp161)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp196 = function (_self)

local _temp163
local _temp164 = nil
    if _type(_temp155) == "function" or (_type(_temp155) == "table" and _rawget(_temp155, "__call_thing")) then
      _temp164 =  _temp155(_self)

    elseif _temp155 then
      _temp164 =  _temp155
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp164 =  _self:var()
      elseif _self.var ~= nil then
        _temp164 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp164 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp164 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp163 =  set_underresult(_self, _temp164)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp163 =  _self:set_underresult(_temp164)
      elseif _self.set_underresult ~= nil then
        _temp163 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("set_result") , _temp164)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("set_result") , _temp164)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp165
        local _t = _type(_temp163)
        if _t == "table" then
          if _rawget(_temp163, "__call_thing") == nil then
            _temp165 = _temp163
          else
                  if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp165 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp165 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp165 =  _temp163(_self)
      end

          end
        elseif _t == "number" then
          _temp165 = _temp163
        elseif _t == "function" then
                if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp165 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp165 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp165 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp165 =  _temp163(_self)
      end

        elseif _temp163 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165.var) == "function" or (_type(_temp165.var) == "table" and _rawget(_temp165.var, "__call_thing")) then
        _temp165 = _temp165:var()
      elseif _temp165.var ~= nil then
        _temp165 = _temp165.var

        elseif _temp165.no_undermethod ~= nil then
          _temp165 =  _temp165:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n.var ~= nil then
        _temp165 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f.var ~= nil then
        _temp165 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end


local _temp166
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp166 =  _self:my()
      elseif _self.my ~= nil then
        _temp166 =  _self.my

        elseif my ~= nil then
          _temp166 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp166)
      if _t == "table" then
                      if _type(_temp166.env) == "function" or (_type(_temp166.env) == "table" and _rawget(_temp166.env, "__call_thing")) then
        _temp166 = _temp166:env()
      elseif _temp166.env ~= nil then
        _temp166 = _temp166.env

        elseif _temp166.no_undermethod ~= nil then
          _temp166 =  _temp166:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp166)
      if _n.env ~= nil then
        _temp166 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp166 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp166)
      if _f.env ~= nil then
        _temp166 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp166 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp166 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp166))
      end

      local _t = _type(_temp166)
      if _t == "table" then
                      if _type(_temp166.next_undertemp) == "function" or (_type(_temp166.next_undertemp) == "table" and _rawget(_temp166.next_undertemp, "__call_thing")) then
        _temp166 = _temp166:next_undertemp()
      elseif _temp166.next_undertemp ~= nil then
        _temp166 = _temp166.next_undertemp

        elseif _temp166.no_undermethod ~= nil then
          _temp166 =  _temp166:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp166)
      if _n.next_undertemp ~= nil then
        _temp166 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp166 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp166)
      if _f.next_undertemp ~= nil then
        _temp166 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp166 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp166 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp166))
      end


local _temp167
do
local _temp168 = nil
        local _t = _type(_temp163)
        if _t == "table" then
          if _rawget(_temp163, "__call_thing") == nil then
            _temp168 = _temp163
          else
                  if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp168 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp168 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp168 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp168 =  _temp163(_self)
      end

          end
        elseif _t == "number" then
          _temp168 = _temp163
        elseif _t == "function" then
                if _temp163 == nil then
              if _type(_self._temp163) == "function" or (_type(_self._temp163) == "table" and _rawget(_self._temp163, "__call_thing")) then
        _temp168 =  _self:_temp163()
      elseif _self._temp163 ~= nil then
        _temp168 =  _self._temp163

        elseif _self.no_undermethod ~= nil then
          _temp168 =  _self:no_undermethod(string:new("_temp163"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp168 =  _temp163(_self)
      end

        elseif _temp163 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp168)
      if _t == "table" then
                      if _type(_temp168.out) == "function" or (_type(_temp168.out) == "table" and _rawget(_temp168.out, "__call_thing")) then
        _temp168 = _temp168:out()
      elseif _temp168.out ~= nil then
        _temp168 = _temp168.out

        elseif _temp168.no_undermethod ~= nil then
          _temp168 =  _temp168:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp168, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp168)
      if _n.out ~= nil then
        _temp168 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp168 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp168, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp168)
      if _f.out ~= nil then
        _temp168 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp168 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp168, "out"))
      end

      elseif _temp168 == nil then
        _error(exception:null_error("_temp168", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp168))
      end


local _temp169 = nil
    if _type(_temp166) == "function" or (_type(_temp166) == "table" and _rawget(_temp166, "__call_thing")) then
      _temp169 =  _temp166(_self)

    elseif _temp166 then
      _temp169 =  _temp166
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp169 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp169 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp169 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp169 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp170 = nil
    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp170 =  _temp165(_self)

    elseif _temp165 then
      _temp170 =  _temp165
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp170 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp170 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp170 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp170 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp167 = string:new("" .. _tostring(_temp168) .. "\ndo\nlocal " .. _tostring(_temp169) .. "\n" .. _tostring(_temp170) .. " = {}\n")
end

local _temp171
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp171 =  my(_self)

    elseif my then
      _temp171 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp171 =  _self:my()
      elseif _self.my ~= nil then
        _temp171 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp156)
        if _t == "table" then
          if _rawget(_temp156, "__call_thing") == nil then
            _temp164 = _temp156
          else
                  if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp164 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp164 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp164 =  _temp156(_self)
      end

          end
        elseif _t == "number" then
          _temp164 = _temp156
        elseif _t == "function" then
                if _temp156 == nil then
              if _type(_self._temp156) == "function" or (_type(_self._temp156) == "table" and _rawget(_self._temp156, "__call_thing")) then
        _temp164 =  _self:_temp156()
      elseif _self._temp156 ~= nil then
        _temp164 =  _self._temp156

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp156"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp164 =  _temp156(_self)
      end

        elseif _temp156 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp164)
      if _t == "table" then
                      if _type(_temp164.nodes) == "function" or (_type(_temp164.nodes) == "table" and _rawget(_temp164.nodes, "__call_thing")) then
        _temp164 = _temp164:nodes()
      elseif _temp164.nodes ~= nil then
        _temp164 = _temp164.nodes

        elseif _temp164.no_undermethod ~= nil then
          _temp164 =  _temp164:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp164, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp164)
      if _n.nodes ~= nil then
        _temp164 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp164 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp164, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp164)
      if _f.nodes ~= nil then
        _temp164 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp164 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp164, "nodes"))
      end

      elseif _temp164 == nil then
        _error(exception:null_error("_temp164", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp164))
      end


local _temp188 = function (_self, _temp172, _temp173)
        if _temp172 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp173 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp174
        local _t = _type(_temp171)
        if _t == "table" then
          if _rawget(_temp171, "__call_thing") == nil then
            _temp174 = _temp171
          else
                  if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp174 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp174 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp174 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp174 =  _temp171(_self)
      end

          end
        elseif _t == "number" then
          _temp174 = _temp171
        elseif _t == "function" then
                if _temp171 == nil then
              if _type(_self._temp171) == "function" or (_type(_self._temp171) == "table" and _rawget(_self._temp171, "__call_thing")) then
        _temp174 =  _self:_temp171()
      elseif _self._temp171 ~= nil then
        _temp174 =  _self._temp171

        elseif _self.no_undermethod ~= nil then
          _temp174 =  _self:no_undermethod(string:new("_temp171"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp174 =  _temp171(_self)
      end

        elseif _temp171 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp175 = nil
    if _type(_temp172) == "function" or (_type(_temp172) == "table" and _rawget(_temp172, "__call_thing")) then
      _temp175 =  _temp172(_self)

    elseif _temp172 then
      _temp175 =  _temp172
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp175 =  _self:n()
      elseif _self.n ~= nil then
        _temp175 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp176 = nil
    if _type(_temp166) == "function" or (_type(_temp166) == "table" and _rawget(_temp166, "__call_thing")) then
      _temp176 =  _temp166(_self)

    elseif _temp166 then
      _temp176 =  _temp166
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp176 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp176 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp176 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp176 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp174)
      if _t == "table" then
                      if _type(_temp174.process) == "function" or (_type(_temp174.process) == "table" and _rawget(_temp174.process, "__call_thing")) then
        _temp174 = _temp174:process(_temp175,_temp176)
      elseif _temp174.process ~= nil then
        _temp174 = _temp174.process

        elseif _temp174.no_undermethod ~= nil then
          _temp174 =  _temp174:no_undermethod(string:new("process") , _temp175,_temp176)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp174)
      if _n.process ~= nil then
        _temp174 = _n:process(_temp175,_temp176)
      elseif _n.no_undermethod ~= nil then
        _temp174 =  _n:no_undermethod(string:new("process") , _temp175,_temp176)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp174)
      if _f.process ~= nil then
        _temp174 = _f:process(_temp175,_temp176)
      elseif _f.no_undermethod ~= nil then
        _temp174 =  _f:no_undermethod(string:new("process") , _temp175,_temp176)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp174 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp174))
      end


local _temp176 
do
local _temp177 = nil
_temp177 =  _temp167

local _temp178 = nil
        local _t = _type(_temp174)
        if _t == "table" then
          if _rawget(_temp174, "__call_thing") == nil then
            _temp178 = _temp174
          else
                  if _temp174 == nil then
              if _type(_self._temp174) == "function" or (_type(_self._temp174) == "table" and _rawget(_self._temp174, "__call_thing")) then
        _temp178 =  _self:_temp174()
      elseif _self._temp174 ~= nil then
        _temp178 =  _self._temp174

        elseif _self.no_undermethod ~= nil then
          _temp178 =  _self:no_undermethod(string:new("_temp174"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp178 =  _temp174(_self)
      end

          end
        elseif _t == "number" then
          _temp178 = _temp174
        elseif _t == "function" then
                if _temp174 == nil then
              if _type(_self._temp174) == "function" or (_type(_self._temp174) == "table" and _rawget(_self._temp174, "__call_thing")) then
        _temp178 =  _self:_temp174()
      elseif _self._temp174 ~= nil then
        _temp178 =  _self._temp174

        elseif _self.no_undermethod ~= nil then
          _temp178 =  _self:no_undermethod(string:new("_temp174"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp178 =  _temp174(_self)
      end

        elseif _temp174 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp179 = nil
      local _t = _type(_temp178)
      if _t == "table" then
                      if _type(_temp178.out) == "function" or (_type(_temp178.out) == "table" and _rawget(_temp178.out, "__call_thing")) then
        _temp179 = _temp178:out()
      elseif _temp178.out ~= nil then
        _temp179 = _temp178.out

        elseif _temp178.no_undermethod ~= nil then
          _temp179 =  _temp178:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp178, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp178)
      if _n.out ~= nil then
        _temp179 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp179 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp178, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp178)
      if _f.out ~= nil then
        _temp179 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp179 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp178, "out"))
      end

      elseif _temp178 == nil then
        _error(exception:null_error("_temp178", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp178))
      end

local _temp180 = string:new("\n")

local _temp181 = nil
do
local _temp182 = nil
    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp182 =  _temp165(_self)

    elseif _temp165 then
      _temp182 =  _temp165
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp182 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp182 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp182 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp182 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp183 
do
local _temp184 = nil
    if _type(_temp173) == "function" or (_type(_temp173) == "table" and _rawget(_temp173, "__call_thing")) then
      _temp184 =  _temp173(_self)

    elseif _temp173 then
      _temp184 =  _temp173
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp184 =  _self:i()
      elseif _self.i ~= nil then
        _temp184 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp184 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp184 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp185
      local _t = _type(_temp184)
      if _t == "table" then
                      if _type(_temp184._plus) == "function" or (_type(_temp184._plus) == "table" and _rawget(_temp184._plus, "__call_thing")) then
        _temp185 = _temp184:_plus(1)
      elseif _temp184._plus ~= nil then
        _temp185 = _temp184._plus

        elseif _temp184.no_undermethod ~= nil then
          _temp185 =  _temp184:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp184, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp185 = _temp184 + 1
      else
              local _n = number:new(_temp184)
      if _n._plus ~= nil then
        _temp185 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp185 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp184, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp184)
      if _f._plus ~= nil then
        _temp185 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp185 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp184, "+"))
      end

      elseif _temp184 == nil then
        _error(exception:null_error("_temp184", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp184))
      end

_temp183 = _temp185 
end

local _temp186 = nil
        local _t = _type(_temp174)
        if _t == "table" then
          if _rawget(_temp174, "__call_thing") == nil then
            _temp186 = _temp174
          else
                  if _temp174 == nil then
              if _type(_self._temp174) == "function" or (_type(_self._temp174) == "table" and _rawget(_self._temp174, "__call_thing")) then
        _temp186 =  _self:_temp174()
      elseif _self._temp174 ~= nil then
        _temp186 =  _self._temp174

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp174"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp174(_self)
      end

          end
        elseif _t == "number" then
          _temp186 = _temp174
        elseif _t == "function" then
                if _temp174 == nil then
              if _type(_self._temp174) == "function" or (_type(_self._temp174) == "table" and _rawget(_self._temp174, "__call_thing")) then
        _temp186 =  _self:_temp174()
      elseif _self._temp174 ~= nil then
        _temp186 =  _self._temp174

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp174"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp186 =  _temp174(_self)
      end

        elseif _temp174 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp186)
      if _t == "table" then
                      if _type(_temp186.var) == "function" or (_type(_temp186.var) == "table" and _rawget(_temp186.var, "__call_thing")) then
        _temp186 = _temp186:var()
      elseif _temp186.var ~= nil then
        _temp186 = _temp186.var

        elseif _temp186.no_undermethod ~= nil then
          _temp186 =  _temp186:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp186, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp186)
      if _n.var ~= nil then
        _temp186 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp186 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp186, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp186)
      if _f.var ~= nil then
        _temp186 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp186 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp186, "var"))
      end

      elseif _temp186 == nil then
        _error(exception:null_error("_temp186", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp186))
      end


_temp181 = string:new("" .. _tostring(_temp182) .. "[" .. _tostring(_temp183) .. "] = " .. _tostring(_temp186) .. "\n")
end
local _temp187
              if _type(_temp177._less_less) == "function" or (_type(_temp177._less_less) == "table" and _rawget(_temp177._less_less, "__call_thing")) then
        _temp187 = _temp177:_less_less(_temp179)
      elseif _temp177._less_less ~= nil then
        _temp187 = _temp177._less_less

        elseif _temp177.no_undermethod ~= nil then
          _temp187 =  _temp177:no_undermethod(string:new("<<") , _temp179)
        else
          _error(exception:method_error(_temp177, "<<"))
        end

local _temp179
      local _t = _type(_temp187)
      if _t == "table" then
                      if _type(_temp187._less_less) == "function" or (_type(_temp187._less_less) == "table" and _rawget(_temp187._less_less, "__call_thing")) then
        _temp179 = _temp187:_less_less(_temp180)
      elseif _temp187._less_less ~= nil then
        _temp179 = _temp187._less_less

        elseif _temp187.no_undermethod ~= nil then
          _temp179 =  _temp187:no_undermethod(string:new("<<") , _temp180)
        else
          _error(exception:method_error(_temp187, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp187)
      if _n._less_less ~= nil then
        _temp179 = _n:_less_less(_temp180)
      elseif _n.no_undermethod ~= nil then
        _temp179 =  _n:no_undermethod(string:new("<<") , _temp180)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp187)
      if _f._less_less ~= nil then
        _temp179 = _f:_less_less(_temp180)
      elseif _f.no_undermethod ~= nil then
        _temp179 =  _f:no_undermethod(string:new("<<") , _temp180)
      else
        _error(exception:method_error(_temp187, "<<"))
      end

      elseif _temp187 == nil then
        _error(exception:null_error("_temp187", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp187))
      end

local _temp180
      local _t = _type(_temp179)
      if _t == "table" then
                      if _type(_temp179._less_less) == "function" or (_type(_temp179._less_less) == "table" and _rawget(_temp179._less_less, "__call_thing")) then
        _temp180 = _temp179:_less_less(_temp181)
      elseif _temp179._less_less ~= nil then
        _temp180 = _temp179._less_less

        elseif _temp179.no_undermethod ~= nil then
          _temp180 =  _temp179:no_undermethod(string:new("<<") , _temp181)
        else
          _error(exception:method_error(_temp179, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp179)
      if _n._less_less ~= nil then
        _temp180 = _n:_less_less(_temp181)
      elseif _n.no_undermethod ~= nil then
        _temp180 =  _n:no_undermethod(string:new("<<") , _temp181)
      else
        _error(exception:method_error(_temp179, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp179)
      if _f._less_less ~= nil then
        _temp180 = _f:_less_less(_temp181)
      elseif _f.no_undermethod ~= nil then
        _temp180 =  _f:no_undermethod(string:new("<<") , _temp181)
      else
        _error(exception:method_error(_temp179, "<<"))
      end

      elseif _temp179 == nil then
        _error(exception:null_error("_temp179", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp179))
      end

_temp176 = _temp180 
end

return _temp176
end

      local _t = _type(_temp164)
      if _t == "table" then
                      if _type(_temp164.each_underwith_underindex) == "function" or (_type(_temp164.each_underwith_underindex) == "table" and _rawget(_temp164.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp164:each_underwith_underindex(_temp188)
      elseif _temp164.each_underwith_underindex ~= nil then
        _dummy_ = _temp164.each_underwith_underindex

        elseif _temp164.no_undermethod ~= nil then
          _dummy_ =  _temp164:no_undermethod(string:new("each_with_index") , _temp188)
        else
          _error(exception:method_error(_temp164, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp164)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp188)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp188)
      else
        _error(exception:method_error(_temp164, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp164)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp188)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp188)
      else
        _error(exception:method_error(_temp164, "each_with_index"))
      end

      elseif _temp164 == nil then
        _error(exception:null_error("_temp164", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp164))
      end

do
local _temp189 = nil
_temp189 =  _temp167

local _temp190 = nil
do
local _temp191 = nil
    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp191 =  _temp165(_self)

    elseif _temp165 then
      _temp191 =  _temp165
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp191 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp191 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp192 = nil
    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp192 =  _temp165(_self)

    elseif _temp165 then
      _temp192 =  _temp165
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp192 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp192 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp192 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp192 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp190 = string:new("" .. _tostring(_temp191) .. " = array:new(" .. _tostring(_temp192) .. ")\nend\n")
end
local _temp193
              if _type(_temp189._less_less) == "function" or (_type(_temp189._less_less) == "table" and _rawget(_temp189._less_less, "__call_thing")) then
        _temp193 = _temp189:_less_less(_temp190)
      elseif _temp189._less_less ~= nil then
        _temp193 = _temp189._less_less

        elseif _temp189.no_undermethod ~= nil then
          _temp193 =  _temp189:no_undermethod(string:new("<<") , _temp190)
        else
          _error(exception:method_error(_temp189, "<<"))
        end

_dummy_ = _temp193 
end

    if _type(_temp165) == "function" or (_type(_temp165) == "table" and _rawget(_temp165, "__call_thing")) then
      _temp188 =  _temp165(_self)

    elseif _temp165 then
      _temp188 =  _temp165
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp188 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp188 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp188 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp188 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp164 =  _temp167

local _temp194 = string:new("array")

local _temp195 = {}
_temp195[string:new("type")] = _temp194
_temp195 = hash:new(_temp195)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp188,_temp164,_temp195)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp188,_temp164,_temp195)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp188,_temp164,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp188,_temp164,_temp195)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp157,_temp162,_temp196)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp157,_temp162,_temp196)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp157,_temp162,_temp196)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp157,_temp162,_temp196)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp154)
      if _t == "table" then
                      if _type(_temp154.walk) == "function" or (_type(_temp154.walk) == "table" and _rawget(_temp154.walk, "__call_thing")) then
        _dummy_ = _temp154:walk(_temp4,_temp198)
      elseif _temp154.walk ~= nil then
        _dummy_ = _temp154.walk

        elseif _temp154.no_undermethod ~= nil then
          _dummy_ =  _temp154:no_undermethod(string:new("walk") , _temp4,_temp198)
        else
          _error(exception:method_error(_temp154, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp154)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp198)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp198)
      else
        _error(exception:method_error(_temp154, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp154)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp198)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp198)
      else
        _error(exception:method_error(_temp154, "walk"))
      end

      elseif _temp154 == nil then
        _error(exception:null_error("_temp154", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp154))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp198 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp198 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp198 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp198 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp198 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp198 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp198 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp198 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp198 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp198 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp240 = function (_self, _temp200,_temp199)
        if _temp200 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp199 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp199 =  null(_self)

    elseif null then
      _temp199 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp199 =  _self:null()
      elseif _self.null ~= nil then
        _temp199 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp201 = nil
        local _t = _type(_temp200)
        if _t == "table" then
          if _rawget(_temp200, "__call_thing") == nil then
            _temp201 = _temp200
          else
                  if _temp200 == nil then
              if _type(_self._temp200) == "function" or (_type(_self._temp200) == "table" and _rawget(_self._temp200, "__call_thing")) then
        _temp201 =  _self:_temp200()
      elseif _self._temp200 ~= nil then
        _temp201 =  _self._temp200

        elseif _self.no_undermethod ~= nil then
          _temp201 =  _self:no_undermethod(string:new("_temp200"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp201 =  _temp200(_self)
      end

          end
        elseif _t == "number" then
          _temp201 = _temp200
        elseif _t == "function" then
                if _temp200 == nil then
              if _type(_self._temp200) == "function" or (_type(_self._temp200) == "table" and _rawget(_self._temp200, "__call_thing")) then
        _temp201 =  _self:_temp200()
      elseif _self._temp200 ~= nil then
        _temp201 =  _self._temp200

        elseif _self.no_undermethod ~= nil then
          _temp201 =  _self:no_undermethod(string:new("_temp200"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp201 =  _temp200(_self)
      end

        elseif _temp200 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.nodes) == "function" or (_type(_temp201.nodes) == "table" and _rawget(_temp201.nodes, "__call_thing")) then
        _temp201 = _temp201:nodes()
      elseif _temp201.nodes ~= nil then
        _temp201 = _temp201.nodes

        elseif _temp201.no_undermethod ~= nil then
          _temp201 =  _temp201:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp201, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.nodes ~= nil then
        _temp201 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp201 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp201, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.nodes ~= nil then
        _temp201 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp201 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp201, "nodes"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end

      local _t = _type(_temp201)
      if _t == "table" then
                      if _type(_temp201.empty_question) == "function" or (_type(_temp201.empty_question) == "table" and _rawget(_temp201.empty_question, "__call_thing")) then
        _temp201 = _temp201:empty_question()
      elseif _temp201.empty_question ~= nil then
        _temp201 = _temp201.empty_question

        elseif _temp201.no_undermethod ~= nil then
          _temp201 =  _temp201:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp201, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp201)
      if _n.empty_question ~= nil then
        _temp201 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp201 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp201, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp201)
      if _f.empty_question ~= nil then
        _temp201 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp201 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp201, "empty?"))
      end

      elseif _temp201 == nil then
        _error(exception:null_error("_temp201", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp201))
      end



local _temp206 = function (_self)

local _temp202 = nil
    if _type(_temp199) == "function" or (_type(_temp199) == "table" and _rawget(_temp199, "__call_thing")) then
      _temp202 =  _temp199(_self)

    elseif _temp199 then
      _temp202 =  _temp199
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp202 =  _self:var()
      elseif _self.var ~= nil then
        _temp202 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp202 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp202 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp203 = string:new("hash:new()")

local _temp204 = string:new("hash")

local _temp205 = {}
_temp205[string:new("type")] = _temp204
_temp205 = hash:new(_temp205)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp202,_temp203,_temp205)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp202,_temp203,_temp205)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp202,_temp203,_temp205)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp202,_temp203,_temp205)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp238 = function (_self)

local _temp207
local _temp208 = nil
    if _type(_temp199) == "function" or (_type(_temp199) == "table" and _rawget(_temp199, "__call_thing")) then
      _temp208 =  _temp199(_self)

    elseif _temp199 then
      _temp208 =  _temp199
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp208 =  _self:var()
      elseif _self.var ~= nil then
        _temp208 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp208 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp208 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp209 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp207 =  set_underresult(_self, _temp208,_temp209)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp207 =  _self:set_underresult(_temp208,_temp209)
      elseif _self.set_underresult ~= nil then
        _temp207 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("set_result") , _temp208,_temp209)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("set_result") , _temp208,_temp209)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp210
        local _t = _type(_temp207)
        if _t == "table" then
          if _rawget(_temp207, "__call_thing") == nil then
            _temp210 = _temp207
          else
                  if _temp207 == nil then
              if _type(_self._temp207) == "function" or (_type(_self._temp207) == "table" and _rawget(_self._temp207, "__call_thing")) then
        _temp210 =  _self:_temp207()
      elseif _self._temp207 ~= nil then
        _temp210 =  _self._temp207

        elseif _self.no_undermethod ~= nil then
          _temp210 =  _self:no_undermethod(string:new("_temp207"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp210 =  _temp207(_self)
      end

          end
        elseif _t == "number" then
          _temp210 = _temp207
        elseif _t == "function" then
                if _temp207 == nil then
              if _type(_self._temp207) == "function" or (_type(_self._temp207) == "table" and _rawget(_self._temp207, "__call_thing")) then
        _temp210 =  _self:_temp207()
      elseif _self._temp207 ~= nil then
        _temp210 =  _self._temp207

        elseif _self.no_undermethod ~= nil then
          _temp210 =  _self:no_undermethod(string:new("_temp207"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp210 =  _temp207(_self)
      end

        elseif _temp207 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp210)
      if _t == "table" then
                      if _type(_temp210.var) == "function" or (_type(_temp210.var) == "table" and _rawget(_temp210.var, "__call_thing")) then
        _temp210 = _temp210:var()
      elseif _temp210.var ~= nil then
        _temp210 = _temp210.var

        elseif _temp210.no_undermethod ~= nil then
          _temp210 =  _temp210:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp210)
      if _n.var ~= nil then
        _temp210 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp210 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp210)
      if _f.var ~= nil then
        _temp210 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp210 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp210 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp210))
      end


local _temp211
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp211 =  _self:my()
      elseif _self.my ~= nil then
        _temp211 =  _self.my

        elseif my ~= nil then
          _temp211 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp211)
      if _t == "table" then
                      if _type(_temp211.env) == "function" or (_type(_temp211.env) == "table" and _rawget(_temp211.env, "__call_thing")) then
        _temp211 = _temp211:env()
      elseif _temp211.env ~= nil then
        _temp211 = _temp211.env

        elseif _temp211.no_undermethod ~= nil then
          _temp211 =  _temp211:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp211)
      if _n.env ~= nil then
        _temp211 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp211 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp211)
      if _f.env ~= nil then
        _temp211 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp211 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp211 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp211))
      end

      local _t = _type(_temp211)
      if _t == "table" then
                      if _type(_temp211.next_undertemp) == "function" or (_type(_temp211.next_undertemp) == "table" and _rawget(_temp211.next_undertemp, "__call_thing")) then
        _temp211 = _temp211:next_undertemp()
      elseif _temp211.next_undertemp ~= nil then
        _temp211 = _temp211.next_undertemp

        elseif _temp211.no_undermethod ~= nil then
          _temp211 =  _temp211:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp211)
      if _n.next_undertemp ~= nil then
        _temp211 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp211 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp211)
      if _f.next_undertemp ~= nil then
        _temp211 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp211 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp211 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp211))
      end


local _temp212
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp212 =  _self:my()
      elseif _self.my ~= nil then
        _temp212 =  _self.my

        elseif my ~= nil then
          _temp212 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.env) == "function" or (_type(_temp212.env) == "table" and _rawget(_temp212.env, "__call_thing")) then
        _temp212 = _temp212:env()
      elseif _temp212.env ~= nil then
        _temp212 = _temp212.env

        elseif _temp212.no_undermethod ~= nil then
          _temp212 =  _temp212:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.env ~= nil then
        _temp212 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp212 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.env ~= nil then
        _temp212 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp212 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end

      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.next_undertemp) == "function" or (_type(_temp212.next_undertemp) == "table" and _rawget(_temp212.next_undertemp, "__call_thing")) then
        _temp212 = _temp212:next_undertemp()
      elseif _temp212.next_undertemp ~= nil then
        _temp212 = _temp212.next_undertemp

        elseif _temp212.no_undermethod ~= nil then
          _temp212 =  _temp212:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.next_undertemp ~= nil then
        _temp212 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp212 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.next_undertemp ~= nil then
        _temp212 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp212 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end


local _temp213
do
local _temp214 = nil
        local _t = _type(_temp207)
        if _t == "table" then
          if _rawget(_temp207, "__call_thing") == nil then
            _temp214 = _temp207
          else
                  if _temp207 == nil then
              if _type(_self._temp207) == "function" or (_type(_self._temp207) == "table" and _rawget(_self._temp207, "__call_thing")) then
        _temp214 =  _self:_temp207()
      elseif _self._temp207 ~= nil then
        _temp214 =  _self._temp207

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp207"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp214 =  _temp207(_self)
      end

          end
        elseif _t == "number" then
          _temp214 = _temp207
        elseif _t == "function" then
                if _temp207 == nil then
              if _type(_self._temp207) == "function" or (_type(_self._temp207) == "table" and _rawget(_self._temp207, "__call_thing")) then
        _temp214 =  _self:_temp207()
      elseif _self._temp207 ~= nil then
        _temp214 =  _self._temp207

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp207"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp214 =  _temp207(_self)
      end

        elseif _temp207 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp214)
      if _t == "table" then
                      if _type(_temp214.out) == "function" or (_type(_temp214.out) == "table" and _rawget(_temp214.out, "__call_thing")) then
        _temp214 = _temp214:out()
      elseif _temp214.out ~= nil then
        _temp214 = _temp214.out

        elseif _temp214.no_undermethod ~= nil then
          _temp214 =  _temp214:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp214, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp214)
      if _n.out ~= nil then
        _temp214 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp214 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp214, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp214)
      if _f.out ~= nil then
        _temp214 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp214 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp214, "out"))
      end

      elseif _temp214 == nil then
        _error(exception:null_error("_temp214", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp214))
      end


local _temp215 = nil
    if _type(_temp211) == "function" or (_type(_temp211) == "table" and _rawget(_temp211, "__call_thing")) then
      _temp215 =  _temp211(_self)

    elseif _temp211 then
      _temp215 =  _temp211
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp215 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp215 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp216 = nil
    if _type(_temp212) == "function" or (_type(_temp212) == "table" and _rawget(_temp212, "__call_thing")) then
      _temp216 =  _temp212(_self)

    elseif _temp212 then
      _temp216 =  _temp212
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp216 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp216 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp216 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp216 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp213 = string:new("" .. _tostring(_temp214) .. "\ndo\nlocal " .. _tostring(_temp215) .. ";local " .. _tostring(_temp216) .. "\n")
end

local _temp217
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp217 =  my(_self)

    elseif my then
      _temp217 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp217 =  _self:my()
      elseif _self.my ~= nil then
        _temp217 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp200)
        if _t == "table" then
          if _rawget(_temp200, "__call_thing") == nil then
            _temp209 = _temp200
          else
                  if _temp200 == nil then
              if _type(_self._temp200) == "function" or (_type(_self._temp200) == "table" and _rawget(_self._temp200, "__call_thing")) then
        _temp209 =  _self:_temp200()
      elseif _self._temp200 ~= nil then
        _temp209 =  _self._temp200

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp200"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp200(_self)
      end

          end
        elseif _t == "number" then
          _temp209 = _temp200
        elseif _t == "function" then
                if _temp200 == nil then
              if _type(_self._temp200) == "function" or (_type(_self._temp200) == "table" and _rawget(_self._temp200, "__call_thing")) then
        _temp209 =  _self:_temp200()
      elseif _self._temp200 ~= nil then
        _temp209 =  _self._temp200

        elseif _self.no_undermethod ~= nil then
          _temp209 =  _self:no_undermethod(string:new("_temp200"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp209 =  _temp200(_self)
      end

        elseif _temp200 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.nodes) == "function" or (_type(_temp209.nodes) == "table" and _rawget(_temp209.nodes, "__call_thing")) then
        _temp209 = _temp209:nodes()
      elseif _temp209.nodes ~= nil then
        _temp209 = _temp209.nodes

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp209, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.nodes ~= nil then
        _temp209 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.nodes ~= nil then
        _temp209 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp209, "nodes"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end


local _temp231 = function (_self, _temp218)
        if _temp218 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp219
        local _t = _type(_temp217)
        if _t == "table" then
          if _rawget(_temp217, "__call_thing") == nil then
            _temp219 = _temp217
          else
                  if _temp217 == nil then
              if _type(_self._temp217) == "function" or (_type(_self._temp217) == "table" and _rawget(_self._temp217, "__call_thing")) then
        _temp219 =  _self:_temp217()
      elseif _self._temp217 ~= nil then
        _temp219 =  _self._temp217

        elseif _self.no_undermethod ~= nil then
          _temp219 =  _self:no_undermethod(string:new("_temp217"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp219 =  _temp217(_self)
      end

          end
        elseif _t == "number" then
          _temp219 = _temp217
        elseif _t == "function" then
                if _temp217 == nil then
              if _type(_self._temp217) == "function" or (_type(_self._temp217) == "table" and _rawget(_self._temp217, "__call_thing")) then
        _temp219 =  _self:_temp217()
      elseif _self._temp217 ~= nil then
        _temp219 =  _self._temp217

        elseif _self.no_undermethod ~= nil then
          _temp219 =  _self:no_undermethod(string:new("_temp217"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp219 =  _temp217(_self)
      end

        elseif _temp217 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp220 = nil
        local _t = _type(_temp218)
        if _t == "table" then
          if _rawget(_temp218, "__call_thing") == nil then
            _temp220 = _temp218
          else
                  if _temp218 == nil then
              if _type(_self._temp218) == "function" or (_type(_self._temp218) == "table" and _rawget(_self._temp218, "__call_thing")) then
        _temp220 =  _self:_temp218()
      elseif _self._temp218 ~= nil then
        _temp220 =  _self._temp218

        elseif _self.no_undermethod ~= nil then
          _temp220 =  _self:no_undermethod(string:new("_temp218"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp220 =  _temp218(_self)
      end

          end
        elseif _t == "number" then
          _temp220 = _temp218
        elseif _t == "function" then
                if _temp218 == nil then
              if _type(_self._temp218) == "function" or (_type(_self._temp218) == "table" and _rawget(_self._temp218, "__call_thing")) then
        _temp220 =  _self:_temp218()
      elseif _self._temp218 ~= nil then
        _temp220 =  _self._temp218

        elseif _self.no_undermethod ~= nil then
          _temp220 =  _self:no_undermethod(string:new("_temp218"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp220 =  _temp218(_self)
      end

        elseif _temp218 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.first) == "function" or (_type(_temp220.first) == "table" and _rawget(_temp220.first, "__call_thing")) then
        _temp220 = _temp220:first()
      elseif _temp220.first ~= nil then
        _temp220 = _temp220.first

        elseif _temp220.no_undermethod ~= nil then
          _temp220 =  _temp220:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp220, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.first ~= nil then
        _temp220 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp220 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp220, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.first ~= nil then
        _temp220 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp220 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp220, "first"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("_temp220", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end


local _temp221 = nil
    if _type(_temp211) == "function" or (_type(_temp211) == "table" and _rawget(_temp211, "__call_thing")) then
      _temp221 =  _temp211(_self)

    elseif _temp211 then
      _temp221 =  _temp211
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp221 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp221 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp221 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp221 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp219)
      if _t == "table" then
                      if _type(_temp219.process) == "function" or (_type(_temp219.process) == "table" and _rawget(_temp219.process, "__call_thing")) then
        _temp219 = _temp219:process(_temp220,_temp221)
      elseif _temp219.process ~= nil then
        _temp219 = _temp219.process

        elseif _temp219.no_undermethod ~= nil then
          _temp219 =  _temp219:no_undermethod(string:new("process") , _temp220,_temp221)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp219)
      if _n.process ~= nil then
        _temp219 = _n:process(_temp220,_temp221)
      elseif _n.no_undermethod ~= nil then
        _temp219 =  _n:no_undermethod(string:new("process") , _temp220,_temp221)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp219)
      if _f.process ~= nil then
        _temp219 = _f:process(_temp220,_temp221)
      elseif _f.no_undermethod ~= nil then
        _temp219 =  _f:no_undermethod(string:new("process") , _temp220,_temp221)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp219 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp219))
      end


local _temp222
        local _t = _type(_temp217)
        if _t == "table" then
          if _rawget(_temp217, "__call_thing") == nil then
            _temp222 = _temp217
          else
                  if _temp217 == nil then
              if _type(_self._temp217) == "function" or (_type(_self._temp217) == "table" and _rawget(_self._temp217, "__call_thing")) then
        _temp222 =  _self:_temp217()
      elseif _self._temp217 ~= nil then
        _temp222 =  _self._temp217

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp217"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp222 =  _temp217(_self)
      end

          end
        elseif _t == "number" then
          _temp222 = _temp217
        elseif _t == "function" then
                if _temp217 == nil then
              if _type(_self._temp217) == "function" or (_type(_self._temp217) == "table" and _rawget(_self._temp217, "__call_thing")) then
        _temp222 =  _self:_temp217()
      elseif _self._temp217 ~= nil then
        _temp222 =  _self._temp217

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp217"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp222 =  _temp217(_self)
      end

        elseif _temp217 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp218)
        if _t == "table" then
          if _rawget(_temp218, "__call_thing") == nil then
            _temp221 = _temp218
          else
                  if _temp218 == nil then
              if _type(_self._temp218) == "function" or (_type(_self._temp218) == "table" and _rawget(_self._temp218, "__call_thing")) then
        _temp221 =  _self:_temp218()
      elseif _self._temp218 ~= nil then
        _temp221 =  _self._temp218

        elseif _self.no_undermethod ~= nil then
          _temp221 =  _self:no_undermethod(string:new("_temp218"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp221 =  _temp218(_self)
      end

          end
        elseif _t == "number" then
          _temp221 = _temp218
        elseif _t == "function" then
                if _temp218 == nil then
              if _type(_self._temp218) == "function" or (_type(_self._temp218) == "table" and _rawget(_self._temp218, "__call_thing")) then
        _temp221 =  _self:_temp218()
      elseif _self._temp218 ~= nil then
        _temp221 =  _self._temp218

        elseif _self.no_undermethod ~= nil then
          _temp221 =  _self:no_undermethod(string:new("_temp218"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp221 =  _temp218(_self)
      end

        elseif _temp218 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp221)
      if _t == "table" then
                      if _type(_temp221.last) == "function" or (_type(_temp221.last) == "table" and _rawget(_temp221.last, "__call_thing")) then
        _temp221 = _temp221:last()
      elseif _temp221.last ~= nil then
        _temp221 = _temp221.last

        elseif _temp221.no_undermethod ~= nil then
          _temp221 =  _temp221:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp221, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp221)
      if _n.last ~= nil then
        _temp221 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp221 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp221, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp221)
      if _f.last ~= nil then
        _temp221 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp221 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp221, "last"))
      end

      elseif _temp221 == nil then
        _error(exception:null_error("_temp221", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp221))
      end


    if _type(_temp212) == "function" or (_type(_temp212) == "table" and _rawget(_temp212, "__call_thing")) then
      _temp220 =  _temp212(_self)

    elseif _temp212 then
      _temp220 =  _temp212
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp220 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp220 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp220 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp220 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp222)
      if _t == "table" then
                      if _type(_temp222.process) == "function" or (_type(_temp222.process) == "table" and _rawget(_temp222.process, "__call_thing")) then
        _temp222 = _temp222:process(_temp221,_temp220)
      elseif _temp222.process ~= nil then
        _temp222 = _temp222.process

        elseif _temp222.no_undermethod ~= nil then
          _temp222 =  _temp222:no_undermethod(string:new("process") , _temp221,_temp220)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp222)
      if _n.process ~= nil then
        _temp222 = _n:process(_temp221,_temp220)
      elseif _n.no_undermethod ~= nil then
        _temp222 =  _n:no_undermethod(string:new("process") , _temp221,_temp220)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp222)
      if _f.process ~= nil then
        _temp222 = _f:process(_temp221,_temp220)
      elseif _f.no_undermethod ~= nil then
        _temp222 =  _f:no_undermethod(string:new("process") , _temp221,_temp220)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp222 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp222))
      end


local _temp220 
do
local _temp223 = nil
_temp223 =  _temp213

local _temp224 = nil
do
local _temp225 = nil
        local _t = _type(_temp219)
        if _t == "table" then
          if _rawget(_temp219, "__call_thing") == nil then
            _temp225 = _temp219
          else
                  if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp225 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp225 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp225 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp225 =  _temp219(_self)
      end

          end
        elseif _t == "number" then
          _temp225 = _temp219
        elseif _t == "function" then
                if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp225 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp225 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp225 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp225 =  _temp219(_self)
      end

        elseif _temp219 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp225)
      if _t == "table" then
                      if _type(_temp225.out) == "function" or (_type(_temp225.out) == "table" and _rawget(_temp225.out, "__call_thing")) then
        _temp225 = _temp225:out()
      elseif _temp225.out ~= nil then
        _temp225 = _temp225.out

        elseif _temp225.no_undermethod ~= nil then
          _temp225 =  _temp225:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp225, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp225)
      if _n.out ~= nil then
        _temp225 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp225 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp225, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp225)
      if _f.out ~= nil then
        _temp225 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp225 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp225, "out"))
      end

      elseif _temp225 == nil then
        _error(exception:null_error("_temp225", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp225))
      end


local _temp226 = nil
        local _t = _type(_temp222)
        if _t == "table" then
          if _rawget(_temp222, "__call_thing") == nil then
            _temp226 = _temp222
          else
                  if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp226 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp226 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp226 =  _temp222(_self)
      end

          end
        elseif _t == "number" then
          _temp226 = _temp222
        elseif _t == "function" then
                if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp226 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp226 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp226 =  _temp222(_self)
      end

        elseif _temp222 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp226)
      if _t == "table" then
                      if _type(_temp226.out) == "function" or (_type(_temp226.out) == "table" and _rawget(_temp226.out, "__call_thing")) then
        _temp226 = _temp226:out()
      elseif _temp226.out ~= nil then
        _temp226 = _temp226.out

        elseif _temp226.no_undermethod ~= nil then
          _temp226 =  _temp226:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp226, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp226)
      if _n.out ~= nil then
        _temp226 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp226 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp226, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp226)
      if _f.out ~= nil then
        _temp226 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp226 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp226, "out"))
      end

      elseif _temp226 == nil then
        _error(exception:null_error("_temp226", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp226))
      end


local _temp227 = nil
    if _type(_temp210) == "function" or (_type(_temp210) == "table" and _rawget(_temp210, "__call_thing")) then
      _temp227 =  _temp210(_self)

    elseif _temp210 then
      _temp227 =  _temp210
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp227 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp227 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp227 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp227 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp228 = nil
        local _t = _type(_temp219)
        if _t == "table" then
          if _rawget(_temp219, "__call_thing") == nil then
            _temp228 = _temp219
          else
                  if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp228 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp228 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp228 =  _temp219(_self)
      end

          end
        elseif _t == "number" then
          _temp228 = _temp219
        elseif _t == "function" then
                if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp228 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp228 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp228 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp228 =  _temp219(_self)
      end

        elseif _temp219 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp228)
      if _t == "table" then
                      if _type(_temp228.var) == "function" or (_type(_temp228.var) == "table" and _rawget(_temp228.var, "__call_thing")) then
        _temp228 = _temp228:var()
      elseif _temp228.var ~= nil then
        _temp228 = _temp228.var

        elseif _temp228.no_undermethod ~= nil then
          _temp228 =  _temp228:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp228, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp228)
      if _n.var ~= nil then
        _temp228 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp228 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp228, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp228)
      if _f.var ~= nil then
        _temp228 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp228 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp228, "var"))
      end

      elseif _temp228 == nil then
        _error(exception:null_error("_temp228", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp228))
      end


local _temp229 = nil
        local _t = _type(_temp222)
        if _t == "table" then
          if _rawget(_temp222, "__call_thing") == nil then
            _temp229 = _temp222
          else
                  if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp229 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp229 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp229 =  _temp222(_self)
      end

          end
        elseif _t == "number" then
          _temp229 = _temp222
        elseif _t == "function" then
                if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp229 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp229 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp229 =  _temp222(_self)
      end

        elseif _temp222 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp229)
      if _t == "table" then
                      if _type(_temp229.var) == "function" or (_type(_temp229.var) == "table" and _rawget(_temp229.var, "__call_thing")) then
        _temp229 = _temp229:var()
      elseif _temp229.var ~= nil then
        _temp229 = _temp229.var

        elseif _temp229.no_undermethod ~= nil then
          _temp229 =  _temp229:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp229, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp229)
      if _n.var ~= nil then
        _temp229 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp229 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp229, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp229)
      if _f.var ~= nil then
        _temp229 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp229 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp229, "var"))
      end

      elseif _temp229 == nil then
        _error(exception:null_error("_temp229", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp229))
      end


_temp224 = string:new("" .. _tostring(_temp225) .. "\n" .. _tostring(_temp226) .. "\n" .. _tostring(_temp227) .. "[" .. _tostring(_temp228) .. "] = " .. _tostring(_temp229) .. "\n")
end
local _temp230
              if _type(_temp223._less_less) == "function" or (_type(_temp223._less_less) == "table" and _rawget(_temp223._less_less, "__call_thing")) then
        _temp230 = _temp223:_less_less(_temp224)
      elseif _temp223._less_less ~= nil then
        _temp230 = _temp223._less_less

        elseif _temp223.no_undermethod ~= nil then
          _temp230 =  _temp223:no_undermethod(string:new("<<") , _temp224)
        else
          _error(exception:method_error(_temp223, "<<"))
        end

_temp220 = _temp230 
end

return _temp220
end

      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.each) == "function" or (_type(_temp209.each) == "table" and _rawget(_temp209.each, "__call_thing")) then
        _dummy_ = _temp209:each(_temp231)
      elseif _temp209.each ~= nil then
        _dummy_ = _temp209.each

        elseif _temp209.no_undermethod ~= nil then
          _dummy_ =  _temp209:no_undermethod(string:new("each") , _temp231)
        else
          _error(exception:method_error(_temp209, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp231)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp231)
      else
        _error(exception:method_error(_temp209, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp231)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp231)
      else
        _error(exception:method_error(_temp209, "each"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp231 =  _self:my()
      elseif _self.my ~= nil then
        _temp231 =  _self.my

        elseif my ~= nil then
          _temp231 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp231)
      if _t == "table" then
                      if _type(_temp231.env) == "function" or (_type(_temp231.env) == "table" and _rawget(_temp231.env, "__call_thing")) then
        _temp231 = _temp231:env()
      elseif _temp231.env ~= nil then
        _temp231 = _temp231.env

        elseif _temp231.no_undermethod ~= nil then
          _temp231 =  _temp231:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp231, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp231)
      if _n.env ~= nil then
        _temp231 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp231 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp231, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp231)
      if _f.env ~= nil then
        _temp231 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp231 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp231, "env"))
      end

      elseif _temp231 == nil then
        _error(exception:null_error("_temp231", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp231))
      end

    if _type(_temp211) == "function" or (_type(_temp211) == "table" and _rawget(_temp211, "__call_thing")) then
      _temp209 =  _temp211(_self)

    elseif _temp211 then
      _temp209 =  _temp211
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp209 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp209 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp209 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp209 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp231)
      if _t == "table" then
                      if _type(_temp231.unset) == "function" or (_type(_temp231.unset) == "table" and _rawget(_temp231.unset, "__call_thing")) then
        _dummy_ = _temp231:unset(_temp209)
      elseif _temp231.unset ~= nil then
        _dummy_ = _temp231.unset

        elseif _temp231.no_undermethod ~= nil then
          _dummy_ =  _temp231:no_undermethod(string:new("unset") , _temp209)
        else
          _error(exception:method_error(_temp231, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp231)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp209)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp209)
      else
        _error(exception:method_error(_temp231, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp231)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp209)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp209)
      else
        _error(exception:method_error(_temp231, "unset"))
      end

      elseif _temp231 == nil then
        _error(exception:null_error("_temp231", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp231))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp209 =  _self:my()
      elseif _self.my ~= nil then
        _temp209 =  _self.my

        elseif my ~= nil then
          _temp209 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.env) == "function" or (_type(_temp209.env) == "table" and _rawget(_temp209.env, "__call_thing")) then
        _temp209 = _temp209:env()
      elseif _temp209.env ~= nil then
        _temp209 = _temp209.env

        elseif _temp209.no_undermethod ~= nil then
          _temp209 =  _temp209:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp209, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.env ~= nil then
        _temp209 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp209 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp209, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.env ~= nil then
        _temp209 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp209 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp209, "env"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end

    if _type(_temp212) == "function" or (_type(_temp212) == "table" and _rawget(_temp212, "__call_thing")) then
      _temp231 =  _temp212(_self)

    elseif _temp212 then
      _temp231 =  _temp212
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp231 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp231 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp209)
      if _t == "table" then
                      if _type(_temp209.unset) == "function" or (_type(_temp209.unset) == "table" and _rawget(_temp209.unset, "__call_thing")) then
        _dummy_ = _temp209:unset(_temp231)
      elseif _temp209.unset ~= nil then
        _dummy_ = _temp209.unset

        elseif _temp209.no_undermethod ~= nil then
          _dummy_ =  _temp209:no_undermethod(string:new("unset") , _temp231)
        else
          _error(exception:method_error(_temp209, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp209)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp231)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp231)
      else
        _error(exception:method_error(_temp209, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp209)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp231)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp231)
      else
        _error(exception:method_error(_temp209, "unset"))
      end

      elseif _temp209 == nil then
        _error(exception:null_error("_temp209", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp209))
      end

do
local _temp232 = nil
_temp232 =  _temp213

local _temp233 = nil
do
local _temp234 = nil
    if _type(_temp210) == "function" or (_type(_temp210) == "table" and _rawget(_temp210, "__call_thing")) then
      _temp234 =  _temp210(_self)

    elseif _temp210 then
      _temp234 =  _temp210
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp234 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp234 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp234 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp234 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp235 = nil
    if _type(_temp210) == "function" or (_type(_temp210) == "table" and _rawget(_temp210, "__call_thing")) then
      _temp235 =  _temp210(_self)

    elseif _temp210 then
      _temp235 =  _temp210
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp235 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp235 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp235 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp235 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp233 = string:new("\n" .. _tostring(_temp234) .. " = hash:new(" .. _tostring(_temp235) .. ")\nend\n")
end
local _temp236
              if _type(_temp232._less_less) == "function" or (_type(_temp232._less_less) == "table" and _rawget(_temp232._less_less, "__call_thing")) then
        _temp236 = _temp232:_less_less(_temp233)
      elseif _temp232._less_less ~= nil then
        _temp236 = _temp232._less_less

        elseif _temp232.no_undermethod ~= nil then
          _temp236 =  _temp232:no_undermethod(string:new("<<") , _temp233)
        else
          _error(exception:method_error(_temp232, "<<"))
        end

_dummy_ = _temp236 
end

    if _type(_temp210) == "function" or (_type(_temp210) == "table" and _rawget(_temp210, "__call_thing")) then
      _temp231 =  _temp210(_self)

    elseif _temp210 then
      _temp231 =  _temp210
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp231 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp231 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp209 =  _temp213

_temp208 = string:new("hash")

local _temp237 = {}
_temp237[string:new("type")] = _temp208
_temp237 = hash:new(_temp237)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp231,_temp209,_temp237)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp231,_temp209,_temp237)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp231,_temp209,_temp237)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp231,_temp209,_temp237)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp201,_temp206,_temp238)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp201,_temp206,_temp238)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp201,_temp206,_temp238)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp201,_temp206,_temp238)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp198)
      if _t == "table" then
                      if _type(_temp198.walk) == "function" or (_type(_temp198.walk) == "table" and _rawget(_temp198.walk, "__call_thing")) then
        _dummy_ = _temp198:walk(_temp4,_temp240)
      elseif _temp198.walk ~= nil then
        _dummy_ = _temp198.walk

        elseif _temp198.no_undermethod ~= nil then
          _dummy_ =  _temp198:no_undermethod(string:new("walk") , _temp4,_temp240)
        else
          _error(exception:method_error(_temp198, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp198)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp240)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp240)
      else
        _error(exception:method_error(_temp198, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp198)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp240)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp240)
      else
        _error(exception:method_error(_temp198, "walk"))
      end

      elseif _temp198 == nil then
        _error(exception:null_error("_temp198", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp198))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp240 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp240 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp240 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp240 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp240 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp240 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp240 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp240 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp240 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp240 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp257 = function (_self, _temp242,_temp241)
        if _temp242 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp241 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp241 =  null(_self)

    elseif null then
      _temp241 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp241 =  _self:null()
      elseif _self.null ~= nil then
        _temp241 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp241 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp241 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp243 = nil
        local _t = _type(_temp242)
        if _t == "table" then
          if _rawget(_temp242, "__call_thing") == nil then
            _temp243 = _temp242
          else
                  if _temp242 == nil then
              if _type(_self._temp242) == "function" or (_type(_self._temp242) == "table" and _rawget(_self._temp242, "__call_thing")) then
        _temp243 =  _self:_temp242()
      elseif _self._temp242 ~= nil then
        _temp243 =  _self._temp242

        elseif _self.no_undermethod ~= nil then
          _temp243 =  _self:no_undermethod(string:new("_temp242"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp243 =  _temp242(_self)
      end

          end
        elseif _t == "number" then
          _temp243 = _temp242
        elseif _t == "function" then
                if _temp242 == nil then
              if _type(_self._temp242) == "function" or (_type(_self._temp242) == "table" and _rawget(_self._temp242, "__call_thing")) then
        _temp243 =  _self:_temp242()
      elseif _self._temp242 ~= nil then
        _temp243 =  _self._temp242

        elseif _self.no_undermethod ~= nil then
          _temp243 =  _self:no_undermethod(string:new("_temp242"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp243 =  _temp242(_self)
      end

        elseif _temp242 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp243)
      if _t == "table" then
                      if _type(_temp243.nodes) == "function" or (_type(_temp243.nodes) == "table" and _rawget(_temp243.nodes, "__call_thing")) then
        _temp243 = _temp243:nodes()
      elseif _temp243.nodes ~= nil then
        _temp243 = _temp243.nodes

        elseif _temp243.no_undermethod ~= nil then
          _temp243 =  _temp243:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp243, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp243)
      if _n.nodes ~= nil then
        _temp243 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp243 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp243, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp243)
      if _f.nodes ~= nil then
        _temp243 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp243 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp243, "nodes"))
      end

      elseif _temp243 == nil then
        _error(exception:null_error("_temp243", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp243))
      end

      local _t = _type(_temp243)
      if _t == "table" then
                      if _type(_temp243.empty_question) == "function" or (_type(_temp243.empty_question) == "table" and _rawget(_temp243.empty_question, "__call_thing")) then
        _temp243 = _temp243:empty_question()
      elseif _temp243.empty_question ~= nil then
        _temp243 = _temp243.empty_question

        elseif _temp243.no_undermethod ~= nil then
          _temp243 =  _temp243:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp243, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp243)
      if _n.empty_question ~= nil then
        _temp243 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp243 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp243, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp243)
      if _f.empty_question ~= nil then
        _temp243 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp243 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp243, "empty?"))
      end

      elseif _temp243 == nil then
        _error(exception:null_error("_temp243", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp243))
      end



local _temp248 = function (_self)

local _temp244 = nil
    if _type(_temp241) == "function" or (_type(_temp241) == "table" and _rawget(_temp241, "__call_thing")) then
      _temp244 =  _temp241(_self)

    elseif _temp241 then
      _temp244 =  _temp241
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp244 =  _self:var()
      elseif _self.var ~= nil then
        _temp244 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp244 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp244 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp245 = string:new("string:new(\"\")")

local _temp246 = string:new("string")

local _temp247 = {}
_temp247[string:new("type")] = _temp246
_temp247 = hash:new(_temp247)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp244,_temp245,_temp247)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp244,_temp245,_temp247)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp244,_temp245,_temp247)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp244,_temp245,_temp247)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp255 = function (_self)

local _temp249 = nil
    if _type(_temp241) == "function" or (_type(_temp241) == "table" and _rawget(_temp241, "__call_thing")) then
      _temp249 =  _temp241(_self)

    elseif _temp241 then
      _temp249 =  _temp241
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp249 =  _self:var()
      elseif _self.var ~= nil then
        _temp249 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp249 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp249 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp250 = nil
do
local _temp251 = nil
local _temp252 = nil
        local _t = _type(_temp242)
        if _t == "table" then
          if _rawget(_temp242, "__call_thing") == nil then
            _temp252 = _temp242
          else
                  if _temp242 == nil then
              if _type(_self._temp242) == "function" or (_type(_self._temp242) == "table" and _rawget(_self._temp242, "__call_thing")) then
        _temp252 =  _self:_temp242()
      elseif _self._temp242 ~= nil then
        _temp252 =  _self._temp242

        elseif _self.no_undermethod ~= nil then
          _temp252 =  _self:no_undermethod(string:new("_temp242"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp252 =  _temp242(_self)
      end

          end
        elseif _t == "number" then
          _temp252 = _temp242
        elseif _t == "function" then
                if _temp242 == nil then
              if _type(_self._temp242) == "function" or (_type(_self._temp242) == "table" and _rawget(_self._temp242, "__call_thing")) then
        _temp252 =  _self:_temp242()
      elseif _self._temp242 ~= nil then
        _temp252 =  _self._temp242

        elseif _self.no_undermethod ~= nil then
          _temp252 =  _self:no_undermethod(string:new("_temp242"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp252 =  _temp242(_self)
      end

        elseif _temp242 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp252)
      if _t == "table" then
                      if _type(_temp252.value) == "function" or (_type(_temp252.value) == "table" and _rawget(_temp252.value, "__call_thing")) then
        _temp252 = _temp252:value()
      elseif _temp252.value ~= nil then
        _temp252 = _temp252.value

        elseif _temp252.no_undermethod ~= nil then
          _temp252 =  _temp252:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp252, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp252)
      if _n.value ~= nil then
        _temp252 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp252 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp252, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp252)
      if _f.value ~= nil then
        _temp252 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp252 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp252, "value"))
      end

      elseif _temp252 == nil then
        _error(exception:null_error("_temp252", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp252))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp251 =  escape_understring(_self, _temp252)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp251 =  _self:escape_understring(_temp252)
      elseif _self.escape_understring ~= nil then
        _temp251 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp251 =  _self:no_undermethod(string:new("escape_string") , _temp252)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp251 =  no_undermethod(_self, string:new("escape_string") , _temp252)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp250 = string:new("string:new(\"" .. _tostring(_temp251) .. "\")")
end

local _temp253 = string:new("string")

local _temp254 = {}
_temp254[string:new("type")] = _temp253
_temp254 = hash:new(_temp254)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp249,_temp250,_temp254)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp249,_temp250,_temp254)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp249,_temp250,_temp254)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp249,_temp250,_temp254)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp243,_temp248,_temp255)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp243,_temp248,_temp255)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp243,_temp248,_temp255)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp243,_temp248,_temp255)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp240)
      if _t == "table" then
                      if _type(_temp240.walk) == "function" or (_type(_temp240.walk) == "table" and _rawget(_temp240.walk, "__call_thing")) then
        _dummy_ = _temp240:walk(_temp4,_temp257)
      elseif _temp240.walk ~= nil then
        _dummy_ = _temp240.walk

        elseif _temp240.no_undermethod ~= nil then
          _dummy_ =  _temp240:no_undermethod(string:new("walk") , _temp4,_temp257)
        else
          _error(exception:method_error(_temp240, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp240)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp257)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp257)
      else
        _error(exception:method_error(_temp240, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp240)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp257)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp257)
      else
        _error(exception:method_error(_temp240, "walk"))
      end

      elseif _temp240 == nil then
        _error(exception:null_error("_temp240", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp240))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp257 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp257 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp257 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp257 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp257 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp257 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp257 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp257 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp257 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp257 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp267 = function (_self, _temp259,_temp258)
        if _temp259 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp258 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp258 =  null(_self)

    elseif null then
      _temp258 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp258 =  _self:null()
      elseif _self.null ~= nil then
        _temp258 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp258 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp258 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp260 = nil
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp260 =  _temp258(_self)

    elseif _temp258 then
      _temp260 =  _temp258
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp260 =  _self:var()
      elseif _self.var ~= nil then
        _temp260 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp260 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp260 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp261 = nil
do
local _temp262 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp262 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp262 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp262 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp262 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp262 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp262 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp262 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp262 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp262 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp262 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp262)
      if _t == "table" then
                      if _type(_temp262.value) == "function" or (_type(_temp262.value) == "table" and _rawget(_temp262.value, "__call_thing")) then
        _temp262 = _temp262:value()
      elseif _temp262.value ~= nil then
        _temp262 = _temp262.value

        elseif _temp262.no_undermethod ~= nil then
          _temp262 =  _temp262:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp262, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp262)
      if _n.value ~= nil then
        _temp262 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp262 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp262, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp262)
      if _f.value ~= nil then
        _temp262 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp262 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp262, "value"))
      end

      elseif _temp262 == nil then
        _error(exception:null_error("_temp262", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp262))
      end

local _temp263 = regex:new("\\n")

local _temp264 = string:new("\\n")

      local _t = _type(_temp262)
      if _t == "table" then
                      if _type(_temp262.sub) == "function" or (_type(_temp262.sub) == "table" and _rawget(_temp262.sub, "__call_thing")) then
        _temp262 = _temp262:sub(_temp263,_temp264)
      elseif _temp262.sub ~= nil then
        _temp262 = _temp262.sub

        elseif _temp262.no_undermethod ~= nil then
          _temp262 =  _temp262:no_undermethod(string:new("sub") , _temp263,_temp264)
        else
          _error(exception:method_error(_temp262, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp262)
      if _n.sub ~= nil then
        _temp262 = _n:sub(_temp263,_temp264)
      elseif _n.no_undermethod ~= nil then
        _temp262 =  _n:no_undermethod(string:new("sub") , _temp263,_temp264)
      else
        _error(exception:method_error(_temp262, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp262)
      if _f.sub ~= nil then
        _temp262 = _f:sub(_temp263,_temp264)
      elseif _f.no_undermethod ~= nil then
        _temp262 =  _f:no_undermethod(string:new("sub") , _temp263,_temp264)
      else
        _error(exception:method_error(_temp262, "sub"))
      end

      elseif _temp262 == nil then
        _error(exception:null_error("_temp262", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp262))
      end


_temp261 = string:new("string:new('" .. _tostring(_temp262) .. "')")
end

local _temp265 = string:new("string")

local _temp266 = {}
_temp266[string:new("type")] = _temp265
_temp266 = hash:new(_temp266)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp260,_temp261,_temp266)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp260,_temp261,_temp266)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp260,_temp261,_temp266)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp260,_temp261,_temp266)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.walk) == "function" or (_type(_temp257.walk) == "table" and _rawget(_temp257.walk, "__call_thing")) then
        _dummy_ = _temp257:walk(_temp4,_temp267)
      elseif _temp257.walk ~= nil then
        _dummy_ = _temp257.walk

        elseif _temp257.no_undermethod ~= nil then
          _dummy_ =  _temp257:no_undermethod(string:new("walk") , _temp4,_temp267)
        else
          _error(exception:method_error(_temp257, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp267)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp267)
      else
        _error(exception:method_error(_temp257, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp267)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp267)
      else
        _error(exception:method_error(_temp257, "walk"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp267 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp267 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp267 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp267 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp267 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp267 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp267 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp267 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp267 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp267 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp274 = function (_self, _temp269,_temp268)
        if _temp269 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp268 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp268 =  null(_self)

    elseif null then
      _temp268 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp268 =  _self:null()
      elseif _self.null ~= nil then
        _temp268 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp268 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp268 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp270
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp270 =  my(_self)

    elseif my then
      _temp270 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp270 =  _self:my()
      elseif _self.my ~= nil then
        _temp270 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp270 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp270 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp271 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp271 =  _self:my()
      elseif _self.my ~= nil then
        _temp271 =  _self.my

        elseif my ~= nil then
          _temp271 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp271)
      if _t == "table" then
                      if _type(_temp271.env) == "function" or (_type(_temp271.env) == "table" and _rawget(_temp271.env, "__call_thing")) then
        _temp271 = _temp271:env()
      elseif _temp271.env ~= nil then
        _temp271 = _temp271.env

        elseif _temp271.no_undermethod ~= nil then
          _temp271 =  _temp271:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp271, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp271)
      if _n.env ~= nil then
        _temp271 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp271 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp271, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp271)
      if _f.env ~= nil then
        _temp271 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp271 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp271, "env"))
      end

      elseif _temp271 == nil then
        _error(exception:null_error("_temp271", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp271))
      end

      local _t = _type(_temp271)
      if _t == "table" then
                      if _type(_temp271.new_underscope) == "function" or (_type(_temp271.new_underscope) == "table" and _rawget(_temp271.new_underscope, "__call_thing")) then
        _dummy_ = _temp271:new_underscope()
      elseif _temp271.new_underscope ~= nil then
        _dummy_ = _temp271.new_underscope

        elseif _temp271.no_undermethod ~= nil then
          _dummy_ =  _temp271:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp271, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp271)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp271, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp271)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp271, "new_scope"))
      end

      elseif _temp271 == nil then
        _error(exception:null_error("_temp271", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp271))
      end

local _temp272
    if _type(_temp269) == "function" or (_type(_temp269) == "table" and _rawget(_temp269, "__call_thing")) then
      _temp271 =  _temp269(_self)

    elseif _temp269 then
      _temp271 =  _temp269
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp271 =  _self:node()
      elseif _self.node ~= nil then
        _temp271 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp271 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp271 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp272 =  do_underargs(_self, _temp271)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp272 =  _self:do_underargs(_temp271)
      elseif _self.do_underargs ~= nil then
        _temp272 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp272 =  _self:no_undermethod(string:new("do_args") , _temp271)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp272 =  no_undermethod(_self, string:new("do_args") , _temp271)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp273
    if _type(_temp268) == "function" or (_type(_temp268) == "table" and _rawget(_temp268, "__call_thing")) then
      _temp271 =  _temp268(_self)

    elseif _temp268 then
      _temp271 =  _temp268
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp271 =  _self:var()
      elseif _self.var ~= nil then
        _temp271 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp271 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp271 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp274 = nil
do
local _temp275
do
    if _type(_temp272) == "function" or (_type(_temp272) == "table" and _rawget(_temp272, "__call_thing")) then
      _temp275 =  _temp272(_self)

    elseif _temp272 then
      _temp275 =  _temp272
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp275 =  _self:args()
      elseif _self.args ~= nil then
        _temp275 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp275 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp275 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp276 = string:new("arg_list")


_temp275 = _temp275:get(_temp276)
end

_temp274 = string:new("function(" .. _tostring(_temp275) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp273 =  set_underresult(_self, _temp271,_temp274)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp273 =  _self:set_underresult(_temp271,_temp274)
      elseif _self.set_underresult ~= nil then
        _temp273 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp273 =  _self:no_undermethod(string:new("set_result") , _temp271,_temp274)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp273 =  no_undermethod(_self, string:new("set_result") , _temp271,_temp274)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp277 = nil
        local _t = _type(_temp273)
        if _t == "table" then
          if _rawget(_temp273, "__call_thing") == nil then
            _temp277 = _temp273
          else
                  if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp277 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp277 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp277 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp277 =  _temp273(_self)
      end

          end
        elseif _t == "number" then
          _temp277 = _temp273
        elseif _t == "function" then
                if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp277 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp277 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp277 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp277 =  _temp273(_self)
      end

        elseif _temp273 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp278 = nil
      local _t = _type(_temp277)
      if _t == "table" then
                      if _type(_temp277.out) == "function" or (_type(_temp277.out) == "table" and _rawget(_temp277.out, "__call_thing")) then
        _temp278 = _temp277:out()
      elseif _temp277.out ~= nil then
        _temp278 = _temp277.out

        elseif _temp277.no_undermethod ~= nil then
          _temp278 =  _temp277:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp277, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp277)
      if _n.out ~= nil then
        _temp278 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp278 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp277, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp277)
      if _f.out ~= nil then
        _temp278 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp278 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp277, "out"))
      end

      elseif _temp277 == nil then
        _error(exception:null_error("_temp277", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp277))
      end

local _temp279
do
    if _type(_temp272) == "function" or (_type(_temp272) == "table" and _rawget(_temp272, "__call_thing")) then
      _temp279 =  _temp272(_self)

    elseif _temp272 then
      _temp279 =  _temp272
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp279 =  _self:args()
      elseif _self.args ~= nil then
        _temp279 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp280 = string:new("out")


_temp279 = _temp279:get(_temp280)
end
local _temp281
      local _t = _type(_temp278)
      if _t == "table" then
                      if _type(_temp278._less_less) == "function" or (_type(_temp278._less_less) == "table" and _rawget(_temp278._less_less, "__call_thing")) then
        _temp281 = _temp278:_less_less(_temp279)
      elseif _temp278._less_less ~= nil then
        _temp281 = _temp278._less_less

        elseif _temp278.no_undermethod ~= nil then
          _temp281 =  _temp278:no_undermethod(string:new("<<") , _temp279)
        else
          _error(exception:method_error(_temp278, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp278)
      if _n._less_less ~= nil then
        _temp281 = _n:_less_less(_temp279)
      elseif _n.no_undermethod ~= nil then
        _temp281 =  _n:no_undermethod(string:new("<<") , _temp279)
      else
        _error(exception:method_error(_temp278, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp278)
      if _f._less_less ~= nil then
        _temp281 = _f:_less_less(_temp279)
      elseif _f.no_undermethod ~= nil then
        _temp281 =  _f:no_undermethod(string:new("<<") , _temp279)
      else
        _error(exception:method_error(_temp278, "<<"))
      end

      elseif _temp278 == nil then
        _error(exception:null_error("_temp278", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp278))
      end

_dummy_ = _temp281 
end

local _temp282
        local _t = _type(_temp269)
        if _t == "table" then
          if _rawget(_temp269, "__call_thing") == nil then
            _temp282 = _temp269
          else
                  if _temp269 == nil then
              if _type(_self._temp269) == "function" or (_type(_self._temp269) == "table" and _rawget(_self._temp269, "__call_thing")) then
        _temp282 =  _self:_temp269()
      elseif _self._temp269 ~= nil then
        _temp282 =  _self._temp269

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp269"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp282 =  _temp269(_self)
      end

          end
        elseif _t == "number" then
          _temp282 = _temp269
        elseif _t == "function" then
                if _temp269 == nil then
              if _type(_self._temp269) == "function" or (_type(_self._temp269) == "table" and _rawget(_self._temp269, "__call_thing")) then
        _temp282 =  _self:_temp269()
      elseif _self._temp269 ~= nil then
        _temp282 =  _self._temp269

        elseif _self.no_undermethod ~= nil then
          _temp282 =  _self:no_undermethod(string:new("_temp269"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp282 =  _temp269(_self)
      end

        elseif _temp269 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282.body) == "function" or (_type(_temp282.body) == "table" and _rawget(_temp282.body, "__call_thing")) then
        _temp282 = _temp282:body()
      elseif _temp282.body ~= nil then
        _temp282 = _temp282.body

        elseif _temp282.no_undermethod ~= nil then
          _temp282 =  _temp282:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n.body ~= nil then
        _temp282 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp282 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f.body ~= nil then
        _temp282 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp282 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end

      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282.copy) == "function" or (_type(_temp282.copy) == "table" and _rawget(_temp282.copy, "__call_thing")) then
        _temp282 = _temp282:copy()
      elseif _temp282.copy ~= nil then
        _temp282 = _temp282.copy

        elseif _temp282.no_undermethod ~= nil then
          _temp282 =  _temp282:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n.copy ~= nil then
        _temp282 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp282 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f.copy ~= nil then
        _temp282 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp282 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end


local _temp283
        local _t = _type(_temp282)
        if _t == "table" then
          if _rawget(_temp282, "__call_thing") == nil then
            _temp283 = _temp282
          else
                  if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp283 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp283 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp283 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp283 =  _temp282(_self)
      end

          end
        elseif _t == "number" then
          _temp283 = _temp282
        elseif _t == "function" then
                if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp283 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp283 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp283 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp283 =  _temp282(_self)
      end

        elseif _temp282 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp283)
      if _t == "table" then
                      if _type(_temp283.pop) == "function" or (_type(_temp283.pop) == "table" and _rawget(_temp283.pop, "__call_thing")) then
        _temp283 = _temp283:pop()
      elseif _temp283.pop ~= nil then
        _temp283 = _temp283.pop

        elseif _temp283.no_undermethod ~= nil then
          _temp283 =  _temp283:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp283)
      if _n.pop ~= nil then
        _temp283 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp283 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp283)
      if _f.pop ~= nil then
        _temp283 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp283 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp283 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp283))
      end


local _temp284
        local _t = _type(_temp282)
        if _t == "table" then
          if _rawget(_temp282, "__call_thing") == nil then
            _temp284 = _temp282
          else
                  if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp284 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp284 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp284 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp284 =  _temp282(_self)
      end

          end
        elseif _t == "number" then
          _temp284 = _temp282
        elseif _t == "function" then
                if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp284 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp284 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp284 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp284 =  _temp282(_self)
      end

        elseif _temp282 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp287 = function (_self, _temp285)
        if _temp285 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp286 = nil
        local _t = _type(_temp270)
        if _t == "table" then
          if _rawget(_temp270, "__call_thing") == nil then
            _temp286 = _temp270
          else
                  if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp286 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp286 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp286 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp286 =  _temp270(_self)
      end

          end
        elseif _t == "number" then
          _temp286 = _temp270
        elseif _t == "function" then
                if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp286 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp286 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp286 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp286 =  _temp270(_self)
      end

        elseif _temp270 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp287 = nil
    if _type(_temp285) == "function" or (_type(_temp285) == "table" and _rawget(_temp285, "__call_thing")) then
      _temp287 =  _temp285(_self)

    elseif _temp285 then
      _temp287 =  _temp285
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp287 =  _self:n()
      elseif _self.n ~= nil then
        _temp287 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp287 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp287 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp288 = string:new("_dummy")

      local _t = _type(_temp286)
      if _t == "table" then
                      if _type(_temp286.process) == "function" or (_type(_temp286.process) == "table" and _rawget(_temp286.process, "__call_thing")) then
        _temp286 = _temp286:process(_temp287,_temp288)
      elseif _temp286.process ~= nil then
        _temp286 = _temp286.process

        elseif _temp286.no_undermethod ~= nil then
          _temp286 =  _temp286:no_undermethod(string:new("process") , _temp287,_temp288)
        else
          _error(exception:method_error(_temp286, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp286)
      if _n.process ~= nil then
        _temp286 = _n:process(_temp287,_temp288)
      elseif _n.no_undermethod ~= nil then
        _temp286 =  _n:no_undermethod(string:new("process") , _temp287,_temp288)
      else
        _error(exception:method_error(_temp286, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp286)
      if _f.process ~= nil then
        _temp286 = _f:process(_temp287,_temp288)
      elseif _f.no_undermethod ~= nil then
        _temp286 =  _f:no_undermethod(string:new("process") , _temp287,_temp288)
      else
        _error(exception:method_error(_temp286, "process"))
      end

      elseif _temp286 == nil then
        _error(exception:null_error("_temp286", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp286))
      end

      local _t = _type(_temp286)
      if _t == "table" then
                      if _type(_temp286.out) == "function" or (_type(_temp286.out) == "table" and _rawget(_temp286.out, "__call_thing")) then
        return _temp286:out()
      elseif _temp286.out ~= nil then
        return _temp286.out

        elseif _temp286.no_undermethod ~= nil then
          return  _temp286:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp286, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp286)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp286, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp286)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp286, "out"))
      end

      elseif _temp286 == nil then
        _error(exception:null_error("_temp286", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp286))
      end

end

      local _t = _type(_temp284)
      if _t == "table" then
                      if _type(_temp284.map) == "function" or (_type(_temp284.map) == "table" and _rawget(_temp284.map, "__call_thing")) then
        _temp284 = _temp284:map(_temp287)
      elseif _temp284.map ~= nil then
        _temp284 = _temp284.map

        elseif _temp284.no_undermethod ~= nil then
          _temp284 =  _temp284:no_undermethod(string:new("map") , _temp287)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp284)
      if _n.map ~= nil then
        _temp284 = _n:map(_temp287)
      elseif _n.no_undermethod ~= nil then
        _temp284 =  _n:no_undermethod(string:new("map") , _temp287)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp284)
      if _f.map ~= nil then
        _temp284 = _f:map(_temp287)
      elseif _f.no_undermethod ~= nil then
        _temp284 =  _f:no_undermethod(string:new("map") , _temp287)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp284 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp284))
      end

_temp287 = string:new("\n")

      local _t = _type(_temp284)
      if _t == "table" then
                      if _type(_temp284.join) == "function" or (_type(_temp284.join) == "table" and _rawget(_temp284.join, "__call_thing")) then
        _temp284 = _temp284:join(_temp287)
      elseif _temp284.join ~= nil then
        _temp284 = _temp284.join

        elseif _temp284.no_undermethod ~= nil then
          _temp284 =  _temp284:no_undermethod(string:new("join") , _temp287)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp284)
      if _n.join ~= nil then
        _temp284 = _n:join(_temp287)
      elseif _n.no_undermethod ~= nil then
        _temp284 =  _n:no_undermethod(string:new("join") , _temp287)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp284)
      if _f.join ~= nil then
        _temp284 = _f:join(_temp287)
      elseif _f.no_undermethod ~= nil then
        _temp284 =  _f:no_undermethod(string:new("join") , _temp287)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp284 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp284))
      end


do
local _temp289 = nil
        local _t = _type(_temp273)
        if _t == "table" then
          if _rawget(_temp273, "__call_thing") == nil then
            _temp289 = _temp273
          else
                  if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp289 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp289 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp289 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp289 =  _temp273(_self)
      end

          end
        elseif _t == "number" then
          _temp289 = _temp273
        elseif _t == "function" then
                if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp289 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp289 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp289 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp289 =  _temp273(_self)
      end

        elseif _temp273 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp290 = nil
      local _t = _type(_temp289)
      if _t == "table" then
                      if _type(_temp289.out) == "function" or (_type(_temp289.out) == "table" and _rawget(_temp289.out, "__call_thing")) then
        _temp290 = _temp289:out()
      elseif _temp289.out ~= nil then
        _temp290 = _temp289.out

        elseif _temp289.no_undermethod ~= nil then
          _temp290 =  _temp289:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp289, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp289)
      if _n.out ~= nil then
        _temp290 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp290 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp289, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp289)
      if _f.out ~= nil then
        _temp290 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp290 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp289, "out"))
      end

      elseif _temp289 == nil then
        _error(exception:null_error("_temp289", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp289))
      end

local _temp291 = nil
    if _type(_temp284) == "function" or (_type(_temp284) == "table" and _rawget(_temp284, "__call_thing")) then
      _temp291 =  _temp284(_self)

    elseif _temp284 then
      _temp291 =  _temp284
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp291 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp291 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp291 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp291 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp292
      local _t = _type(_temp290)
      if _t == "table" then
                      if _type(_temp290._less_less) == "function" or (_type(_temp290._less_less) == "table" and _rawget(_temp290._less_less, "__call_thing")) then
        _temp292 = _temp290:_less_less(_temp291)
      elseif _temp290._less_less ~= nil then
        _temp292 = _temp290._less_less

        elseif _temp290.no_undermethod ~= nil then
          _temp292 =  _temp290:no_undermethod(string:new("<<") , _temp291)
        else
          _error(exception:method_error(_temp290, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp290)
      if _n._less_less ~= nil then
        _temp292 = _n:_less_less(_temp291)
      elseif _n.no_undermethod ~= nil then
        _temp292 =  _n:no_undermethod(string:new("<<") , _temp291)
      else
        _error(exception:method_error(_temp290, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp290)
      if _f._less_less ~= nil then
        _temp292 = _f:_less_less(_temp291)
      elseif _f.no_undermethod ~= nil then
        _temp292 =  _f:no_undermethod(string:new("<<") , _temp291)
      else
        _error(exception:method_error(_temp290, "<<"))
      end

      elseif _temp290 == nil then
        _error(exception:null_error("_temp290", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp290))
      end

_dummy_ = _temp292 
end

    if _type(_temp283) == "function" or (_type(_temp283) == "table" and _rawget(_temp283, "__call_thing")) then
      _temp287 =  _temp283(_self)

    elseif _temp283 then
      _temp287 =  _temp283
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp287 =  _self:last()
      elseif _self.last ~= nil then
        _temp287 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp287 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp287 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp304 = function (_self)

local _temp293
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp293 =  _self:my()
      elseif _self.my ~= nil then
        _temp293 =  _self.my

        elseif my ~= nil then
          _temp293 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp294 = nil
    if _type(_temp283) == "function" or (_type(_temp283) == "table" and _rawget(_temp283, "__call_thing")) then
      _temp294 =  _temp283(_self)

    elseif _temp283 then
      _temp294 =  _temp283
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp294 =  _self:last()
      elseif _self.last ~= nil then
        _temp294 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp294 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp294 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp293)
      if _t == "table" then
                      if _type(_temp293.process) == "function" or (_type(_temp293.process) == "table" and _rawget(_temp293.process, "__call_thing")) then
        _temp293 = _temp293:process(_temp294)
      elseif _temp293.process ~= nil then
        _temp293 = _temp293.process

        elseif _temp293.no_undermethod ~= nil then
          _temp293 =  _temp293:no_undermethod(string:new("process") , _temp294)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp293)
      if _n.process ~= nil then
        _temp293 = _n:process(_temp294)
      elseif _n.no_undermethod ~= nil then
        _temp293 =  _n:no_undermethod(string:new("process") , _temp294)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp293)
      if _f.process ~= nil then
        _temp293 = _f:process(_temp294)
      elseif _f.no_undermethod ~= nil then
        _temp293 =  _f:no_undermethod(string:new("process") , _temp294)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp293 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp293))
      end


local _temp294 
do
local _temp295 = nil
        local _t = _type(_temp273)
        if _t == "table" then
          if _rawget(_temp273, "__call_thing") == nil then
            _temp295 = _temp273
          else
                  if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp295 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp295 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp295 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp295 =  _temp273(_self)
      end

          end
        elseif _t == "number" then
          _temp295 = _temp273
        elseif _t == "function" then
                if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp295 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp295 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp295 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp295 =  _temp273(_self)
      end

        elseif _temp273 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp296 = nil
      local _t = _type(_temp295)
      if _t == "table" then
                      if _type(_temp295.out) == "function" or (_type(_temp295.out) == "table" and _rawget(_temp295.out, "__call_thing")) then
        _temp296 = _temp295:out()
      elseif _temp295.out ~= nil then
        _temp296 = _temp295.out

        elseif _temp295.no_undermethod ~= nil then
          _temp296 =  _temp295:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp295, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp295)
      if _n.out ~= nil then
        _temp296 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp296 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp295, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp295)
      if _f.out ~= nil then
        _temp296 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp296 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp295, "out"))
      end

      elseif _temp295 == nil then
        _error(exception:null_error("_temp295", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp295))
      end

local _temp297 = nil
        local _t = _type(_temp293)
        if _t == "table" then
          if _rawget(_temp293, "__call_thing") == nil then
            _temp297 = _temp293
          else
                  if _temp293 == nil then
              if _type(_self._temp293) == "function" or (_type(_self._temp293) == "table" and _rawget(_self._temp293, "__call_thing")) then
        _temp297 =  _self:_temp293()
      elseif _self._temp293 ~= nil then
        _temp297 =  _self._temp293

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp293"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp297 =  _temp293(_self)
      end

          end
        elseif _t == "number" then
          _temp297 = _temp293
        elseif _t == "function" then
                if _temp293 == nil then
              if _type(_self._temp293) == "function" or (_type(_self._temp293) == "table" and _rawget(_self._temp293, "__call_thing")) then
        _temp297 =  _self:_temp293()
      elseif _self._temp293 ~= nil then
        _temp297 =  _self._temp293

        elseif _self.no_undermethod ~= nil then
          _temp297 =  _self:no_undermethod(string:new("_temp293"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp297 =  _temp293(_self)
      end

        elseif _temp293 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp298 = nil
      local _t = _type(_temp297)
      if _t == "table" then
                      if _type(_temp297.out) == "function" or (_type(_temp297.out) == "table" and _rawget(_temp297.out, "__call_thing")) then
        _temp298 = _temp297:out()
      elseif _temp297.out ~= nil then
        _temp298 = _temp297.out

        elseif _temp297.no_undermethod ~= nil then
          _temp298 =  _temp297:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp297, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp297)
      if _n.out ~= nil then
        _temp298 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp298 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp297)
      if _f.out ~= nil then
        _temp298 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp298 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp297, "out"))
      end

      elseif _temp297 == nil then
        _error(exception:null_error("_temp297", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp297))
      end

local _temp299 = string:new("\n")

local _temp300 = nil
do
local _temp301 = nil
        local _t = _type(_temp293)
        if _t == "table" then
          if _rawget(_temp293, "__call_thing") == nil then
            _temp301 = _temp293
          else
                  if _temp293 == nil then
              if _type(_self._temp293) == "function" or (_type(_self._temp293) == "table" and _rawget(_self._temp293, "__call_thing")) then
        _temp301 =  _self:_temp293()
      elseif _self._temp293 ~= nil then
        _temp301 =  _self._temp293

        elseif _self.no_undermethod ~= nil then
          _temp301 =  _self:no_undermethod(string:new("_temp293"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp301 =  _temp293(_self)
      end

          end
        elseif _t == "number" then
          _temp301 = _temp293
        elseif _t == "function" then
                if _temp293 == nil then
              if _type(_self._temp293) == "function" or (_type(_self._temp293) == "table" and _rawget(_self._temp293, "__call_thing")) then
        _temp301 =  _self:_temp293()
      elseif _self._temp293 ~= nil then
        _temp301 =  _self._temp293

        elseif _self.no_undermethod ~= nil then
          _temp301 =  _self:no_undermethod(string:new("_temp293"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp301 =  _temp293(_self)
      end

        elseif _temp293 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp301)
      if _t == "table" then
                      if _type(_temp301.var) == "function" or (_type(_temp301.var) == "table" and _rawget(_temp301.var, "__call_thing")) then
        _temp301 = _temp301:var()
      elseif _temp301.var ~= nil then
        _temp301 = _temp301.var

        elseif _temp301.no_undermethod ~= nil then
          _temp301 =  _temp301:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp301, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp301)
      if _n.var ~= nil then
        _temp301 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp301 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp301, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp301)
      if _f.var ~= nil then
        _temp301 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp301 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp301, "var"))
      end

      elseif _temp301 == nil then
        _error(exception:null_error("_temp301", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp301))
      end


_temp300 = string:new("return " .. _tostring(_temp301) .. "\n")
end
local _temp302
      local _t = _type(_temp296)
      if _t == "table" then
                      if _type(_temp296._less_less) == "function" or (_type(_temp296._less_less) == "table" and _rawget(_temp296._less_less, "__call_thing")) then
        _temp302 = _temp296:_less_less(_temp298)
      elseif _temp296._less_less ~= nil then
        _temp302 = _temp296._less_less

        elseif _temp296.no_undermethod ~= nil then
          _temp302 =  _temp296:no_undermethod(string:new("<<") , _temp298)
        else
          _error(exception:method_error(_temp296, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp296)
      if _n._less_less ~= nil then
        _temp302 = _n:_less_less(_temp298)
      elseif _n.no_undermethod ~= nil then
        _temp302 =  _n:no_undermethod(string:new("<<") , _temp298)
      else
        _error(exception:method_error(_temp296, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp296)
      if _f._less_less ~= nil then
        _temp302 = _f:_less_less(_temp298)
      elseif _f.no_undermethod ~= nil then
        _temp302 =  _f:no_undermethod(string:new("<<") , _temp298)
      else
        _error(exception:method_error(_temp296, "<<"))
      end

      elseif _temp296 == nil then
        _error(exception:null_error("_temp296", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp296))
      end

local _temp298
      local _t = _type(_temp302)
      if _t == "table" then
                      if _type(_temp302._less_less) == "function" or (_type(_temp302._less_less) == "table" and _rawget(_temp302._less_less, "__call_thing")) then
        _temp298 = _temp302:_less_less(_temp299)
      elseif _temp302._less_less ~= nil then
        _temp298 = _temp302._less_less

        elseif _temp302.no_undermethod ~= nil then
          _temp298 =  _temp302:no_undermethod(string:new("<<") , _temp299)
        else
          _error(exception:method_error(_temp302, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp302)
      if _n._less_less ~= nil then
        _temp298 = _n:_less_less(_temp299)
      elseif _n.no_undermethod ~= nil then
        _temp298 =  _n:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp302, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp302)
      if _f._less_less ~= nil then
        _temp298 = _f:_less_less(_temp299)
      elseif _f.no_undermethod ~= nil then
        _temp298 =  _f:no_undermethod(string:new("<<") , _temp299)
      else
        _error(exception:method_error(_temp302, "<<"))
      end

      elseif _temp302 == nil then
        _error(exception:null_error("_temp302", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp302))
      end

local _temp299
      local _t = _type(_temp298)
      if _t == "table" then
                      if _type(_temp298._less_less) == "function" or (_type(_temp298._less_less) == "table" and _rawget(_temp298._less_less, "__call_thing")) then
        _temp299 = _temp298:_less_less(_temp300)
      elseif _temp298._less_less ~= nil then
        _temp299 = _temp298._less_less

        elseif _temp298.no_undermethod ~= nil then
          _temp299 =  _temp298:no_undermethod(string:new("<<") , _temp300)
        else
          _error(exception:method_error(_temp298, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp298)
      if _n._less_less ~= nil then
        _temp299 = _n:_less_less(_temp300)
      elseif _n.no_undermethod ~= nil then
        _temp299 =  _n:no_undermethod(string:new("<<") , _temp300)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp298)
      if _f._less_less ~= nil then
        _temp299 = _f:_less_less(_temp300)
      elseif _f.no_undermethod ~= nil then
        _temp299 =  _f:no_undermethod(string:new("<<") , _temp300)
      else
        _error(exception:method_error(_temp298, "<<"))
      end

      elseif _temp298 == nil then
        _error(exception:null_error("_temp298", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp298))
      end

_temp294 = _temp299 
end

return _temp294
end


local _temp314 = function (_self)

local _temp305 = nil
        local _t = _type(_temp282)
        if _t == "table" then
          if _rawget(_temp282, "__call_thing") == nil then
            _temp305 = _temp282
          else
                  if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp305 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp305 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp305 =  _temp282(_self)
      end

          end
        elseif _t == "number" then
          _temp305 = _temp282
        elseif _t == "function" then
                if _temp282 == nil then
              if _type(_self._temp282) == "function" or (_type(_self._temp282) == "table" and _rawget(_self._temp282, "__call_thing")) then
        _temp305 =  _self:_temp282()
      elseif _self._temp282 ~= nil then
        _temp305 =  _self._temp282

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp282"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp305 =  _temp282(_self)
      end

        elseif _temp282 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp305)
      if _t == "table" then
                      if _type(_temp305.empty_question) == "function" or (_type(_temp305.empty_question) == "table" and _rawget(_temp305.empty_question, "__call_thing")) then
        _temp305 = _temp305:empty_question()
      elseif _temp305.empty_question ~= nil then
        _temp305 = _temp305.empty_question

        elseif _temp305.no_undermethod ~= nil then
          _temp305 =  _temp305:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp305, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp305)
      if _n.empty_question ~= nil then
        _temp305 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp305 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp305, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp305)
      if _f.empty_question ~= nil then
        _temp305 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp305 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp305, "empty?"))
      end

      elseif _temp305 == nil then
        _error(exception:null_error("_temp305", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp305))
      end



local _temp312 = function (_self)

local _temp306 
do
local _temp307 = nil
        local _t = _type(_temp273)
        if _t == "table" then
          if _rawget(_temp273, "__call_thing") == nil then
            _temp307 = _temp273
          else
                  if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp307 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp307 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp307 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp307 =  _temp273(_self)
      end

          end
        elseif _t == "number" then
          _temp307 = _temp273
        elseif _t == "function" then
                if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp307 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp307 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp307 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp307 =  _temp273(_self)
      end

        elseif _temp273 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp308 = nil
      local _t = _type(_temp307)
      if _t == "table" then
                      if _type(_temp307.out) == "function" or (_type(_temp307.out) == "table" and _rawget(_temp307.out, "__call_thing")) then
        _temp308 = _temp307:out()
      elseif _temp307.out ~= nil then
        _temp308 = _temp307.out

        elseif _temp307.no_undermethod ~= nil then
          _temp308 =  _temp307:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp307, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp307)
      if _n.out ~= nil then
        _temp308 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp308 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp307, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp307)
      if _f.out ~= nil then
        _temp308 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp308 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp307, "out"))
      end

      elseif _temp307 == nil then
        _error(exception:null_error("_temp307", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp307))
      end

local _temp309 = string:new("return object:null()")
local _temp310
      local _t = _type(_temp308)
      if _t == "table" then
                      if _type(_temp308._less_less) == "function" or (_type(_temp308._less_less) == "table" and _rawget(_temp308._less_less, "__call_thing")) then
        _temp310 = _temp308:_less_less(_temp309)
      elseif _temp308._less_less ~= nil then
        _temp310 = _temp308._less_less

        elseif _temp308.no_undermethod ~= nil then
          _temp310 =  _temp308:no_undermethod(string:new("<<") , _temp309)
        else
          _error(exception:method_error(_temp308, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp308)
      if _n._less_less ~= nil then
        _temp310 = _n:_less_less(_temp309)
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("<<") , _temp309)
      else
        _error(exception:method_error(_temp308, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp308)
      if _f._less_less ~= nil then
        _temp310 = _f:_less_less(_temp309)
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("<<") , _temp309)
      else
        _error(exception:method_error(_temp308, "<<"))
      end

      elseif _temp308 == nil then
        _error(exception:null_error("_temp308", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp308))
      end

_temp306 = _temp310 
end

return _temp306
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp305,_temp312)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp305,_temp312)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp305,_temp312)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp305,_temp312)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp287,_temp304,_temp314)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp287,_temp304,_temp314)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp287,_temp304,_temp314)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp287,_temp304,_temp314)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp314 =  _self:my()
      elseif _self.my ~= nil then
        _temp314 =  _self.my

        elseif my ~= nil then
          _temp314 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp314)
      if _t == "table" then
                      if _type(_temp314.env) == "function" or (_type(_temp314.env) == "table" and _rawget(_temp314.env, "__call_thing")) then
        _temp314 = _temp314:env()
      elseif _temp314.env ~= nil then
        _temp314 = _temp314.env

        elseif _temp314.no_undermethod ~= nil then
          _temp314 =  _temp314:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp314, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp314)
      if _n.env ~= nil then
        _temp314 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp314 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp314, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp314)
      if _f.env ~= nil then
        _temp314 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp314 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp314, "env"))
      end

      elseif _temp314 == nil then
        _error(exception:null_error("_temp314", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp314))
      end

      local _t = _type(_temp314)
      if _t == "table" then
                      if _type(_temp314.pop_underscope) == "function" or (_type(_temp314.pop_underscope) == "table" and _rawget(_temp314.pop_underscope, "__call_thing")) then
        _dummy_ = _temp314:pop_underscope()
      elseif _temp314.pop_underscope ~= nil then
        _dummy_ = _temp314.pop_underscope

        elseif _temp314.no_undermethod ~= nil then
          _dummy_ =  _temp314:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp314, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp314)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp314, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp314)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp314, "pop_scope"))
      end

      elseif _temp314 == nil then
        _error(exception:null_error("_temp314", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp314))
      end

do
local _temp315 = nil
        local _t = _type(_temp273)
        if _t == "table" then
          if _rawget(_temp273, "__call_thing") == nil then
            _temp315 = _temp273
          else
                  if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp315 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp315 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp273(_self)
      end

          end
        elseif _t == "number" then
          _temp315 = _temp273
        elseif _t == "function" then
                if _temp273 == nil then
              if _type(_self._temp273) == "function" or (_type(_self._temp273) == "table" and _rawget(_self._temp273, "__call_thing")) then
        _temp315 =  _self:_temp273()
      elseif _self._temp273 ~= nil then
        _temp315 =  _self._temp273

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp273"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp315 =  _temp273(_self)
      end

        elseif _temp273 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp316 = nil
      local _t = _type(_temp315)
      if _t == "table" then
                      if _type(_temp315.out) == "function" or (_type(_temp315.out) == "table" and _rawget(_temp315.out, "__call_thing")) then
        _temp316 = _temp315:out()
      elseif _temp315.out ~= nil then
        _temp316 = _temp315.out

        elseif _temp315.no_undermethod ~= nil then
          _temp316 =  _temp315:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp315, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp315)
      if _n.out ~= nil then
        _temp316 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp316 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp315)
      if _f.out ~= nil then
        _temp316 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp316 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp315, "out"))
      end

      elseif _temp315 == nil then
        _error(exception:null_error("_temp315", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp315))
      end

local _temp317 = string:new("\nend\n")
local _temp318
      local _t = _type(_temp316)
      if _t == "table" then
                      if _type(_temp316._less_less) == "function" or (_type(_temp316._less_less) == "table" and _rawget(_temp316._less_less, "__call_thing")) then
        _temp318 = _temp316:_less_less(_temp317)
      elseif _temp316._less_less ~= nil then
        _temp318 = _temp316._less_less

        elseif _temp316.no_undermethod ~= nil then
          _temp318 =  _temp316:no_undermethod(string:new("<<") , _temp317)
        else
          _error(exception:method_error(_temp316, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp316)
      if _n._less_less ~= nil then
        _temp318 = _n:_less_less(_temp317)
      elseif _n.no_undermethod ~= nil then
        _temp318 =  _n:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp316)
      if _f._less_less ~= nil then
        _temp318 = _f:_less_less(_temp317)
      elseif _f.no_undermethod ~= nil then
        _temp318 =  _f:no_undermethod(string:new("<<") , _temp317)
      else
        _error(exception:method_error(_temp316, "<<"))
      end

      elseif _temp316 == nil then
        _error(exception:null_error("_temp316", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp316))
      end

_dummy_ = _temp318 
end

do
local _temp304
    if _type(_temp273) == "function" or (_type(_temp273) == "table" and _rawget(_temp273, "__call_thing")) then
      _temp304 =  _temp273(_self)

    elseif _temp273 then
      _temp304 =  _temp273
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp304 =  _self:res()
      elseif _self.res ~= nil then
        _temp304 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp304 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp304 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp319 = string:new("function")

local _temp320 = string:new("type")

_temp304:set(_temp320, _temp319)
end

    if _type(_temp273) == "function" or (_type(_temp273) == "table" and _rawget(_temp273, "__call_thing")) then
      return  _temp273(_self)

    elseif _temp273 then
      return  _temp273
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp267)
      if _t == "table" then
                      if _type(_temp267.walk) == "function" or (_type(_temp267.walk) == "table" and _rawget(_temp267.walk, "__call_thing")) then
        _dummy_ = _temp267:walk(_temp4,_temp274)
      elseif _temp267.walk ~= nil then
        _dummy_ = _temp267.walk

        elseif _temp267.no_undermethod ~= nil then
          _dummy_ =  _temp267:no_undermethod(string:new("walk") , _temp4,_temp274)
        else
          _error(exception:method_error(_temp267, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp267)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp274)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp274)
      else
        _error(exception:method_error(_temp267, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp267)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp274)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp274)
      else
        _error(exception:method_error(_temp267, "walk"))
      end

      elseif _temp267 == nil then
        _error(exception:null_error("_temp267", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp267))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp274 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp274 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp274 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp274 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp274 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp274 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp274 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp274 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp397 = function (_self, _temp322,_temp321)
        if _temp322 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp321 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp321 =  null(_self)

    elseif null then
      _temp321 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp321 =  _self:null()
      elseif _self.null ~= nil then
        _temp321 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp321 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp321 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp323
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp323 =  my(_self)

    elseif my then
      _temp323 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp323 =  _self:my()
      elseif _self.my ~= nil then
        _temp323 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp323 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp323 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp324 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp324 =  _self:my()
      elseif _self.my ~= nil then
        _temp324 =  _self.my

        elseif my ~= nil then
          _temp324 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324.env) == "function" or (_type(_temp324.env) == "table" and _rawget(_temp324.env, "__call_thing")) then
        _temp324 = _temp324:env()
      elseif _temp324.env ~= nil then
        _temp324 = _temp324.env

        elseif _temp324.no_undermethod ~= nil then
          _temp324 =  _temp324:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp324, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n.env ~= nil then
        _temp324 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp324 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp324, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f.env ~= nil then
        _temp324 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp324 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp324, "env"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324.new_underscope) == "function" or (_type(_temp324.new_underscope) == "table" and _rawget(_temp324.new_underscope, "__call_thing")) then
        _dummy_ = _temp324:new_underscope()
      elseif _temp324.new_underscope ~= nil then
        _dummy_ = _temp324.new_underscope

        elseif _temp324.no_undermethod ~= nil then
          _dummy_ =  _temp324:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp324, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp324, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp324, "new_scope"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

local _temp325
    if _type(_temp322) == "function" or (_type(_temp322) == "table" and _rawget(_temp322, "__call_thing")) then
      _temp324 =  _temp322(_self)

    elseif _temp322 then
      _temp324 =  _temp322
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp324 =  _self:node()
      elseif _self.node ~= nil then
        _temp324 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp324 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp324 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp325 =  do_underargs(_self, _temp324)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp325 =  _self:do_underargs(_temp324)
      elseif _self.do_underargs ~= nil then
        _temp325 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp325 =  _self:no_undermethod(string:new("do_args") , _temp324)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp325 =  no_undermethod(_self, string:new("do_args") , _temp324)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp326
do
local _temp327 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp327 =  _self:my()
      elseif _self.my ~= nil then
        _temp327 =  _self.my

        elseif my ~= nil then
          _temp327 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp327)
      if _t == "table" then
                      if _type(_temp327.next_underliftable) == "function" or (_type(_temp327.next_underliftable) == "table" and _rawget(_temp327.next_underliftable, "__call_thing")) then
        _temp327 = _temp327:next_underliftable()
      elseif _temp327.next_underliftable ~= nil then
        _temp327 = _temp327.next_underliftable

        elseif _temp327.no_undermethod ~= nil then
          _temp327 =  _temp327:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp327, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp327)
      if _n.next_underliftable ~= nil then
        _temp327 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp327 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp327, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp327)
      if _f.next_underliftable ~= nil then
        _temp327 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp327 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp327, "next_liftable"))
      end

      elseif _temp327 == nil then
        _error(exception:null_error("_temp327", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp327))
      end


_temp324 = string:new("_lifted[" .. _tostring(_temp327) .. "]")
end

local _temp328 = nil
do
local _temp329
do
    if _type(_temp325) == "function" or (_type(_temp325) == "table" and _rawget(_temp325, "__call_thing")) then
      _temp329 =  _temp325(_self)

    elseif _temp325 then
      _temp329 =  _temp325
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp329 =  _self:args()
      elseif _self.args ~= nil then
        _temp329 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp329 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp329 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp330 = string:new("arg_list")


_temp329 = _temp329:get(_temp330)
end

_temp328 = string:new("function(_argtable, " .. _tostring(_temp329) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp326 =  set_underresult(_self, _temp324,_temp328)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp326 =  _self:set_underresult(_temp324,_temp328)
      elseif _self.set_underresult ~= nil then
        _temp326 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp326 =  _self:no_undermethod(string:new("set_result") , _temp324,_temp328)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp326 =  no_undermethod(_self, string:new("set_result") , _temp324,_temp328)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp328 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp328 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp328 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp328 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp328 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp328 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp328 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp328 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp328 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp328 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp328)
      if _t == "table" then
                      if _type(_temp328.upvars) == "function" or (_type(_temp328.upvars) == "table" and _rawget(_temp328.upvars, "__call_thing")) then
        _temp328 = _temp328:upvars()
      elseif _temp328.upvars ~= nil then
        _temp328 = _temp328.upvars

        elseif _temp328.no_undermethod ~= nil then
          _temp328 =  _temp328:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp328, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp328)
      if _n.upvars ~= nil then
        _temp328 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp328 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp328, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp328)
      if _f.upvars ~= nil then
        _temp328 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp328 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp328, "upvars"))
      end

      elseif _temp328 == nil then
        _error(exception:null_error("_temp328", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp328))
      end



local _temp344 = function (_self)

local _temp331 
do
local _temp332 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp332 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp332 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp332 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp332 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp332 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp332 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp332 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp332 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp333 = nil
      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.out) == "function" or (_type(_temp332.out) == "table" and _rawget(_temp332.out, "__call_thing")) then
        _temp333 = _temp332:out()
      elseif _temp332.out ~= nil then
        _temp333 = _temp332.out

        elseif _temp332.no_undermethod ~= nil then
          _temp333 =  _temp332:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp332, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.out ~= nil then
        _temp333 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp333 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp332, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.out ~= nil then
        _temp333 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp333 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp332, "out"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

local _temp334 = nil
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp334 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp334 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp334 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp334 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp334 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp334 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp334 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp334 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp334 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp334 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp334)
      if _t == "table" then
                      if _type(_temp334.upvars) == "function" or (_type(_temp334.upvars) == "table" and _rawget(_temp334.upvars, "__call_thing")) then
        _temp334 = _temp334:upvars()
      elseif _temp334.upvars ~= nil then
        _temp334 = _temp334.upvars

        elseif _temp334.no_undermethod ~= nil then
          _temp334 =  _temp334:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp334, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp334)
      if _n.upvars ~= nil then
        _temp334 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp334 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp334, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp334)
      if _f.upvars ~= nil then
        _temp334 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp334 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp334, "upvars"))
      end

      elseif _temp334 == nil then
        _error(exception:null_error("_temp334", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp334))
      end


local _temp342 = function (_self, _temp335)
        if _temp335 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp336 = nil
do
local _temp337
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp337 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp337 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp337 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp337 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp337 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp337 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp337 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp337 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp337)
      if _t == "table" then
                      if _type(_temp337.env) == "function" or (_type(_temp337.env) == "table" and _rawget(_temp337.env, "__call_thing")) then
        _temp337 = _temp337:env()
      elseif _temp337.env ~= nil then
        _temp337 = _temp337.env

        elseif _temp337.no_undermethod ~= nil then
          _temp337 =  _temp337:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp337, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp337)
      if _n.env ~= nil then
        _temp337 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp337 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp337, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp337)
      if _f.env ~= nil then
        _temp337 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp337 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp337, "env"))
      end

      elseif _temp337 == nil then
        _error(exception:null_error("_temp337", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp337))
      end

local _temp338 = nil
    if _type(_temp335) == "function" or (_type(_temp335) == "table" and _rawget(_temp335, "__call_thing")) then
      _temp338 =  _temp335(_self)

    elseif _temp335 then
      _temp338 =  _temp335
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp338 =  _self:u()
      elseif _self.u ~= nil then
        _temp338 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp338 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp338 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp337 = _temp337:get(_temp338)
end

local _temp339
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp339 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp339 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp339 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp339 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp339 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp339 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp339 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp339 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp339 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp339 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp339)
      if _t == "table" then
                      if _type(_temp339.env) == "function" or (_type(_temp339.env) == "table" and _rawget(_temp339.env, "__call_thing")) then
        _temp339 = _temp339:env()
      elseif _temp339.env ~= nil then
        _temp339 = _temp339.env

        elseif _temp339.no_undermethod ~= nil then
          _temp339 =  _temp339:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp339, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp339)
      if _n.env ~= nil then
        _temp339 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp339 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp339, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp339)
      if _f.env ~= nil then
        _temp339 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp339 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp339, "env"))
      end

      elseif _temp339 == nil then
        _error(exception:null_error("_temp339", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp339))
      end

local _temp340 = nil
    if _type(_temp335) == "function" or (_type(_temp335) == "table" and _rawget(_temp335, "__call_thing")) then
      _temp340 =  _temp335(_self)

    elseif _temp335 then
      _temp340 =  _temp335
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp340 =  _self:u()
      elseif _self.u ~= nil then
        _temp340 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp340 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp340 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp339 = _temp339:get(_temp340)
end

_temp336 = string:new("local " .. _tostring(_temp337) .. " = _argtable['" .. _tostring(_temp339) .. "']")
end

return _temp336
end

      local _t = _type(_temp334)
      if _t == "table" then
                      if _type(_temp334.map) == "function" or (_type(_temp334.map) == "table" and _rawget(_temp334.map, "__call_thing")) then
        _temp334 = _temp334:map(_temp342)
      elseif _temp334.map ~= nil then
        _temp334 = _temp334.map

        elseif _temp334.no_undermethod ~= nil then
          _temp334 =  _temp334:no_undermethod(string:new("map") , _temp342)
        else
          _error(exception:method_error(_temp334, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp334)
      if _n.map ~= nil then
        _temp334 = _n:map(_temp342)
      elseif _n.no_undermethod ~= nil then
        _temp334 =  _n:no_undermethod(string:new("map") , _temp342)
      else
        _error(exception:method_error(_temp334, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp334)
      if _f.map ~= nil then
        _temp334 = _f:map(_temp342)
      elseif _f.no_undermethod ~= nil then
        _temp334 =  _f:no_undermethod(string:new("map") , _temp342)
      else
        _error(exception:method_error(_temp334, "map"))
      end

      elseif _temp334 == nil then
        _error(exception:null_error("_temp334", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp334))
      end

_temp342 = string:new("\n")

      local _t = _type(_temp334)
      if _t == "table" then
                      if _type(_temp334.join) == "function" or (_type(_temp334.join) == "table" and _rawget(_temp334.join, "__call_thing")) then
        _temp334 = _temp334:join(_temp342)
      elseif _temp334.join ~= nil then
        _temp334 = _temp334.join

        elseif _temp334.no_undermethod ~= nil then
          _temp334 =  _temp334:no_undermethod(string:new("join") , _temp342)
        else
          _error(exception:method_error(_temp334, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp334)
      if _n.join ~= nil then
        _temp334 = _n:join(_temp342)
      elseif _n.no_undermethod ~= nil then
        _temp334 =  _n:no_undermethod(string:new("join") , _temp342)
      else
        _error(exception:method_error(_temp334, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp334)
      if _f.join ~= nil then
        _temp334 = _f:join(_temp342)
      elseif _f.no_undermethod ~= nil then
        _temp334 =  _f:no_undermethod(string:new("join") , _temp342)
      else
        _error(exception:method_error(_temp334, "join"))
      end

      elseif _temp334 == nil then
        _error(exception:null_error("_temp334", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp334))
      end

local _temp342
      local _t = _type(_temp333)
      if _t == "table" then
                      if _type(_temp333._less_less) == "function" or (_type(_temp333._less_less) == "table" and _rawget(_temp333._less_less, "__call_thing")) then
        _temp342 = _temp333:_less_less(_temp334)
      elseif _temp333._less_less ~= nil then
        _temp342 = _temp333._less_less

        elseif _temp333.no_undermethod ~= nil then
          _temp342 =  _temp333:no_undermethod(string:new("<<") , _temp334)
        else
          _error(exception:method_error(_temp333, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp333)
      if _n._less_less ~= nil then
        _temp342 = _n:_less_less(_temp334)
      elseif _n.no_undermethod ~= nil then
        _temp342 =  _n:no_undermethod(string:new("<<") , _temp334)
      else
        _error(exception:method_error(_temp333, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp333)
      if _f._less_less ~= nil then
        _temp342 = _f:_less_less(_temp334)
      elseif _f.no_undermethod ~= nil then
        _temp342 =  _f:no_undermethod(string:new("<<") , _temp334)
      else
        _error(exception:method_error(_temp333, "<<"))
      end

      elseif _temp333 == nil then
        _error(exception:null_error("_temp333", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp333))
      end

_temp331 = _temp342 
end

return _temp331
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp328,_temp344)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp328,_temp344)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp328,_temp344)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp328,_temp344)
      else
        _error(exception:name_error("true?"))
      end
    end

do
local _temp345 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp345 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp345 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp345 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp345 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp345 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp345 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp345 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp345 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp346 = nil
      local _t = _type(_temp345)
      if _t == "table" then
                      if _type(_temp345.out) == "function" or (_type(_temp345.out) == "table" and _rawget(_temp345.out, "__call_thing")) then
        _temp346 = _temp345:out()
      elseif _temp345.out ~= nil then
        _temp346 = _temp345.out

        elseif _temp345.no_undermethod ~= nil then
          _temp346 =  _temp345:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp345, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp345)
      if _n.out ~= nil then
        _temp346 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp346 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp345, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp345)
      if _f.out ~= nil then
        _temp346 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp346 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp345, "out"))
      end

      elseif _temp345 == nil then
        _error(exception:null_error("_temp345", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp345))
      end

local _temp347
do
    if _type(_temp325) == "function" or (_type(_temp325) == "table" and _rawget(_temp325, "__call_thing")) then
      _temp347 =  _temp325(_self)

    elseif _temp325 then
      _temp347 =  _temp325
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp347 =  _self:args()
      elseif _self.args ~= nil then
        _temp347 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp347 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp347 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp348 = string:new("out")


_temp347 = _temp347:get(_temp348)
end
local _temp349
      local _t = _type(_temp346)
      if _t == "table" then
                      if _type(_temp346._less_less) == "function" or (_type(_temp346._less_less) == "table" and _rawget(_temp346._less_less, "__call_thing")) then
        _temp349 = _temp346:_less_less(_temp347)
      elseif _temp346._less_less ~= nil then
        _temp349 = _temp346._less_less

        elseif _temp346.no_undermethod ~= nil then
          _temp349 =  _temp346:no_undermethod(string:new("<<") , _temp347)
        else
          _error(exception:method_error(_temp346, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp346)
      if _n._less_less ~= nil then
        _temp349 = _n:_less_less(_temp347)
      elseif _n.no_undermethod ~= nil then
        _temp349 =  _n:no_undermethod(string:new("<<") , _temp347)
      else
        _error(exception:method_error(_temp346, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp346)
      if _f._less_less ~= nil then
        _temp349 = _f:_less_less(_temp347)
      elseif _f.no_undermethod ~= nil then
        _temp349 =  _f:no_undermethod(string:new("<<") , _temp347)
      else
        _error(exception:method_error(_temp346, "<<"))
      end

      elseif _temp346 == nil then
        _error(exception:null_error("_temp346", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp346))
      end

_dummy_ = _temp349 
end

local _temp350
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp350 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp350 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp350 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp350 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp350 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp350 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp350 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp350 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp350 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp350 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp350)
      if _t == "table" then
                      if _type(_temp350.body) == "function" or (_type(_temp350.body) == "table" and _rawget(_temp350.body, "__call_thing")) then
        _temp350 = _temp350:body()
      elseif _temp350.body ~= nil then
        _temp350 = _temp350.body

        elseif _temp350.no_undermethod ~= nil then
          _temp350 =  _temp350:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp350)
      if _n.body ~= nil then
        _temp350 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp350 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp350)
      if _f.body ~= nil then
        _temp350 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp350 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp350 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp350))
      end

      local _t = _type(_temp350)
      if _t == "table" then
                      if _type(_temp350.copy) == "function" or (_type(_temp350.copy) == "table" and _rawget(_temp350.copy, "__call_thing")) then
        _temp350 = _temp350:copy()
      elseif _temp350.copy ~= nil then
        _temp350 = _temp350.copy

        elseif _temp350.no_undermethod ~= nil then
          _temp350 =  _temp350:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp350)
      if _n.copy ~= nil then
        _temp350 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp350 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp350)
      if _f.copy ~= nil then
        _temp350 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp350 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp350 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp350))
      end


local _temp351
        local _t = _type(_temp350)
        if _t == "table" then
          if _rawget(_temp350, "__call_thing") == nil then
            _temp351 = _temp350
          else
                  if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp351 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp351 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp351 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp351 =  _temp350(_self)
      end

          end
        elseif _t == "number" then
          _temp351 = _temp350
        elseif _t == "function" then
                if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp351 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp351 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp351 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp351 =  _temp350(_self)
      end

        elseif _temp350 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp351)
      if _t == "table" then
                      if _type(_temp351.pop) == "function" or (_type(_temp351.pop) == "table" and _rawget(_temp351.pop, "__call_thing")) then
        _temp351 = _temp351:pop()
      elseif _temp351.pop ~= nil then
        _temp351 = _temp351.pop

        elseif _temp351.no_undermethod ~= nil then
          _temp351 =  _temp351:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp351)
      if _n.pop ~= nil then
        _temp351 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp351 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp351)
      if _f.pop ~= nil then
        _temp351 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp351 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp351 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp351))
      end


local _temp352
        local _t = _type(_temp350)
        if _t == "table" then
          if _rawget(_temp350, "__call_thing") == nil then
            _temp352 = _temp350
          else
                  if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp352 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp352 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp352 =  _temp350(_self)
      end

          end
        elseif _t == "number" then
          _temp352 = _temp350
        elseif _t == "function" then
                if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp352 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp352 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp352 =  _temp350(_self)
      end

        elseif _temp350 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp355 = function (_self, _temp353)
        if _temp353 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp354 = nil
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp354 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp354 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp354 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp354 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp354 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp354 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp354 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp354 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp354 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp354 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp355 = nil
    if _type(_temp353) == "function" or (_type(_temp353) == "table" and _rawget(_temp353, "__call_thing")) then
      _temp355 =  _temp353(_self)

    elseif _temp353 then
      _temp355 =  _temp353
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp355 =  _self:n()
      elseif _self.n ~= nil then
        _temp355 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp355 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp355 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp356 = string:new("_dummy")

      local _t = _type(_temp354)
      if _t == "table" then
                      if _type(_temp354.process) == "function" or (_type(_temp354.process) == "table" and _rawget(_temp354.process, "__call_thing")) then
        _temp354 = _temp354:process(_temp355,_temp356)
      elseif _temp354.process ~= nil then
        _temp354 = _temp354.process

        elseif _temp354.no_undermethod ~= nil then
          _temp354 =  _temp354:no_undermethod(string:new("process") , _temp355,_temp356)
        else
          _error(exception:method_error(_temp354, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp354)
      if _n.process ~= nil then
        _temp354 = _n:process(_temp355,_temp356)
      elseif _n.no_undermethod ~= nil then
        _temp354 =  _n:no_undermethod(string:new("process") , _temp355,_temp356)
      else
        _error(exception:method_error(_temp354, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp354)
      if _f.process ~= nil then
        _temp354 = _f:process(_temp355,_temp356)
      elseif _f.no_undermethod ~= nil then
        _temp354 =  _f:no_undermethod(string:new("process") , _temp355,_temp356)
      else
        _error(exception:method_error(_temp354, "process"))
      end

      elseif _temp354 == nil then
        _error(exception:null_error("_temp354", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp354))
      end

      local _t = _type(_temp354)
      if _t == "table" then
                      if _type(_temp354.out) == "function" or (_type(_temp354.out) == "table" and _rawget(_temp354.out, "__call_thing")) then
        return _temp354:out()
      elseif _temp354.out ~= nil then
        return _temp354.out

        elseif _temp354.no_undermethod ~= nil then
          return  _temp354:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp354, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp354)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp354, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp354)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp354, "out"))
      end

      elseif _temp354 == nil then
        _error(exception:null_error("_temp354", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp354))
      end

end

      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.map) == "function" or (_type(_temp352.map) == "table" and _rawget(_temp352.map, "__call_thing")) then
        _temp352 = _temp352:map(_temp355)
      elseif _temp352.map ~= nil then
        _temp352 = _temp352.map

        elseif _temp352.no_undermethod ~= nil then
          _temp352 =  _temp352:no_undermethod(string:new("map") , _temp355)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.map ~= nil then
        _temp352 = _n:map(_temp355)
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("map") , _temp355)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.map ~= nil then
        _temp352 = _f:map(_temp355)
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("map") , _temp355)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end

_temp355 = string:new("\n")

      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.join) == "function" or (_type(_temp352.join) == "table" and _rawget(_temp352.join, "__call_thing")) then
        _temp352 = _temp352:join(_temp355)
      elseif _temp352.join ~= nil then
        _temp352 = _temp352.join

        elseif _temp352.no_undermethod ~= nil then
          _temp352 =  _temp352:no_undermethod(string:new("join") , _temp355)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.join ~= nil then
        _temp352 = _n:join(_temp355)
      elseif _n.no_undermethod ~= nil then
        _temp352 =  _n:no_undermethod(string:new("join") , _temp355)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.join ~= nil then
        _temp352 = _f:join(_temp355)
      elseif _f.no_undermethod ~= nil then
        _temp352 =  _f:no_undermethod(string:new("join") , _temp355)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end


do
local _temp357 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp357 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp357 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp357 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp357 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp357 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp357 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp357 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp357 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp357 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp358 = nil
      local _t = _type(_temp357)
      if _t == "table" then
                      if _type(_temp357.out) == "function" or (_type(_temp357.out) == "table" and _rawget(_temp357.out, "__call_thing")) then
        _temp358 = _temp357:out()
      elseif _temp357.out ~= nil then
        _temp358 = _temp357.out

        elseif _temp357.no_undermethod ~= nil then
          _temp358 =  _temp357:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp357, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp357)
      if _n.out ~= nil then
        _temp358 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp357, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp357)
      if _f.out ~= nil then
        _temp358 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp357, "out"))
      end

      elseif _temp357 == nil then
        _error(exception:null_error("_temp357", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp357))
      end

local _temp359 = nil
    if _type(_temp352) == "function" or (_type(_temp352) == "table" and _rawget(_temp352, "__call_thing")) then
      _temp359 =  _temp352(_self)

    elseif _temp352 then
      _temp359 =  _temp352
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp359 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp359 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp359 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp359 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp360
      local _t = _type(_temp358)
      if _t == "table" then
                      if _type(_temp358._less_less) == "function" or (_type(_temp358._less_less) == "table" and _rawget(_temp358._less_less, "__call_thing")) then
        _temp360 = _temp358:_less_less(_temp359)
      elseif _temp358._less_less ~= nil then
        _temp360 = _temp358._less_less

        elseif _temp358.no_undermethod ~= nil then
          _temp360 =  _temp358:no_undermethod(string:new("<<") , _temp359)
        else
          _error(exception:method_error(_temp358, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp358)
      if _n._less_less ~= nil then
        _temp360 = _n:_less_less(_temp359)
      elseif _n.no_undermethod ~= nil then
        _temp360 =  _n:no_undermethod(string:new("<<") , _temp359)
      else
        _error(exception:method_error(_temp358, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp358)
      if _f._less_less ~= nil then
        _temp360 = _f:_less_less(_temp359)
      elseif _f.no_undermethod ~= nil then
        _temp360 =  _f:no_undermethod(string:new("<<") , _temp359)
      else
        _error(exception:method_error(_temp358, "<<"))
      end

      elseif _temp358 == nil then
        _error(exception:null_error("_temp358", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp358))
      end

_dummy_ = _temp360 
end

    if _type(_temp351) == "function" or (_type(_temp351) == "table" and _rawget(_temp351, "__call_thing")) then
      _temp355 =  _temp351(_self)

    elseif _temp351 then
      _temp355 =  _temp351
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp355 =  _self:last()
      elseif _self.last ~= nil then
        _temp355 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp355 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp355 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp372 = function (_self)

local _temp361
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp361 =  _self:my()
      elseif _self.my ~= nil then
        _temp361 =  _self.my

        elseif my ~= nil then
          _temp361 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp362 = nil
    if _type(_temp351) == "function" or (_type(_temp351) == "table" and _rawget(_temp351, "__call_thing")) then
      _temp362 =  _temp351(_self)

    elseif _temp351 then
      _temp362 =  _temp351
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp362 =  _self:last()
      elseif _self.last ~= nil then
        _temp362 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp362 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp362 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp361)
      if _t == "table" then
                      if _type(_temp361.process) == "function" or (_type(_temp361.process) == "table" and _rawget(_temp361.process, "__call_thing")) then
        _temp361 = _temp361:process(_temp362)
      elseif _temp361.process ~= nil then
        _temp361 = _temp361.process

        elseif _temp361.no_undermethod ~= nil then
          _temp361 =  _temp361:no_undermethod(string:new("process") , _temp362)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp361)
      if _n.process ~= nil then
        _temp361 = _n:process(_temp362)
      elseif _n.no_undermethod ~= nil then
        _temp361 =  _n:no_undermethod(string:new("process") , _temp362)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp361)
      if _f.process ~= nil then
        _temp361 = _f:process(_temp362)
      elseif _f.no_undermethod ~= nil then
        _temp361 =  _f:no_undermethod(string:new("process") , _temp362)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp361 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp361))
      end


local _temp362 
do
local _temp363 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp363 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp363 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp363 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp363 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp363 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp363 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp364 = nil
      local _t = _type(_temp363)
      if _t == "table" then
                      if _type(_temp363.out) == "function" or (_type(_temp363.out) == "table" and _rawget(_temp363.out, "__call_thing")) then
        _temp364 = _temp363:out()
      elseif _temp363.out ~= nil then
        _temp364 = _temp363.out

        elseif _temp363.no_undermethod ~= nil then
          _temp364 =  _temp363:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp363, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp363)
      if _n.out ~= nil then
        _temp364 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp364 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp363)
      if _f.out ~= nil then
        _temp364 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp364 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _temp363 == nil then
        _error(exception:null_error("_temp363", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp363))
      end

local _temp365 = nil
        local _t = _type(_temp361)
        if _t == "table" then
          if _rawget(_temp361, "__call_thing") == nil then
            _temp365 = _temp361
          else
                  if _temp361 == nil then
              if _type(_self._temp361) == "function" or (_type(_self._temp361) == "table" and _rawget(_self._temp361, "__call_thing")) then
        _temp365 =  _self:_temp361()
      elseif _self._temp361 ~= nil then
        _temp365 =  _self._temp361

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp361"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp365 =  _temp361(_self)
      end

          end
        elseif _t == "number" then
          _temp365 = _temp361
        elseif _t == "function" then
                if _temp361 == nil then
              if _type(_self._temp361) == "function" or (_type(_self._temp361) == "table" and _rawget(_self._temp361, "__call_thing")) then
        _temp365 =  _self:_temp361()
      elseif _self._temp361 ~= nil then
        _temp365 =  _self._temp361

        elseif _self.no_undermethod ~= nil then
          _temp365 =  _self:no_undermethod(string:new("_temp361"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp365 =  _temp361(_self)
      end

        elseif _temp361 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp366 = nil
      local _t = _type(_temp365)
      if _t == "table" then
                      if _type(_temp365.out) == "function" or (_type(_temp365.out) == "table" and _rawget(_temp365.out, "__call_thing")) then
        _temp366 = _temp365:out()
      elseif _temp365.out ~= nil then
        _temp366 = _temp365.out

        elseif _temp365.no_undermethod ~= nil then
          _temp366 =  _temp365:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp365, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp365)
      if _n.out ~= nil then
        _temp366 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp366 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp365, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp365)
      if _f.out ~= nil then
        _temp366 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp366 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp365, "out"))
      end

      elseif _temp365 == nil then
        _error(exception:null_error("_temp365", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp365))
      end

local _temp367 = string:new("\n")

local _temp368 = nil
do
local _temp369 = nil
        local _t = _type(_temp361)
        if _t == "table" then
          if _rawget(_temp361, "__call_thing") == nil then
            _temp369 = _temp361
          else
                  if _temp361 == nil then
              if _type(_self._temp361) == "function" or (_type(_self._temp361) == "table" and _rawget(_self._temp361, "__call_thing")) then
        _temp369 =  _self:_temp361()
      elseif _self._temp361 ~= nil then
        _temp369 =  _self._temp361

        elseif _self.no_undermethod ~= nil then
          _temp369 =  _self:no_undermethod(string:new("_temp361"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp369 =  _temp361(_self)
      end

          end
        elseif _t == "number" then
          _temp369 = _temp361
        elseif _t == "function" then
                if _temp361 == nil then
              if _type(_self._temp361) == "function" or (_type(_self._temp361) == "table" and _rawget(_self._temp361, "__call_thing")) then
        _temp369 =  _self:_temp361()
      elseif _self._temp361 ~= nil then
        _temp369 =  _self._temp361

        elseif _self.no_undermethod ~= nil then
          _temp369 =  _self:no_undermethod(string:new("_temp361"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp369 =  _temp361(_self)
      end

        elseif _temp361 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp369)
      if _t == "table" then
                      if _type(_temp369.var) == "function" or (_type(_temp369.var) == "table" and _rawget(_temp369.var, "__call_thing")) then
        _temp369 = _temp369:var()
      elseif _temp369.var ~= nil then
        _temp369 = _temp369.var

        elseif _temp369.no_undermethod ~= nil then
          _temp369 =  _temp369:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp369, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp369)
      if _n.var ~= nil then
        _temp369 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp369 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp369, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp369)
      if _f.var ~= nil then
        _temp369 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp369 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp369, "var"))
      end

      elseif _temp369 == nil then
        _error(exception:null_error("_temp369", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp369))
      end


_temp368 = string:new("return " .. _tostring(_temp369) .. "\n")
end
local _temp370
      local _t = _type(_temp364)
      if _t == "table" then
                      if _type(_temp364._less_less) == "function" or (_type(_temp364._less_less) == "table" and _rawget(_temp364._less_less, "__call_thing")) then
        _temp370 = _temp364:_less_less(_temp366)
      elseif _temp364._less_less ~= nil then
        _temp370 = _temp364._less_less

        elseif _temp364.no_undermethod ~= nil then
          _temp370 =  _temp364:no_undermethod(string:new("<<") , _temp366)
        else
          _error(exception:method_error(_temp364, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp364)
      if _n._less_less ~= nil then
        _temp370 = _n:_less_less(_temp366)
      elseif _n.no_undermethod ~= nil then
        _temp370 =  _n:no_undermethod(string:new("<<") , _temp366)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp364)
      if _f._less_less ~= nil then
        _temp370 = _f:_less_less(_temp366)
      elseif _f.no_undermethod ~= nil then
        _temp370 =  _f:no_undermethod(string:new("<<") , _temp366)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _temp364 == nil then
        _error(exception:null_error("_temp364", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp364))
      end

local _temp366
      local _t = _type(_temp370)
      if _t == "table" then
                      if _type(_temp370._less_less) == "function" or (_type(_temp370._less_less) == "table" and _rawget(_temp370._less_less, "__call_thing")) then
        _temp366 = _temp370:_less_less(_temp367)
      elseif _temp370._less_less ~= nil then
        _temp366 = _temp370._less_less

        elseif _temp370.no_undermethod ~= nil then
          _temp366 =  _temp370:no_undermethod(string:new("<<") , _temp367)
        else
          _error(exception:method_error(_temp370, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp370)
      if _n._less_less ~= nil then
        _temp366 = _n:_less_less(_temp367)
      elseif _n.no_undermethod ~= nil then
        _temp366 =  _n:no_undermethod(string:new("<<") , _temp367)
      else
        _error(exception:method_error(_temp370, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp370)
      if _f._less_less ~= nil then
        _temp366 = _f:_less_less(_temp367)
      elseif _f.no_undermethod ~= nil then
        _temp366 =  _f:no_undermethod(string:new("<<") , _temp367)
      else
        _error(exception:method_error(_temp370, "<<"))
      end

      elseif _temp370 == nil then
        _error(exception:null_error("_temp370", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp370))
      end

local _temp367
      local _t = _type(_temp366)
      if _t == "table" then
                      if _type(_temp366._less_less) == "function" or (_type(_temp366._less_less) == "table" and _rawget(_temp366._less_less, "__call_thing")) then
        _temp367 = _temp366:_less_less(_temp368)
      elseif _temp366._less_less ~= nil then
        _temp367 = _temp366._less_less

        elseif _temp366.no_undermethod ~= nil then
          _temp367 =  _temp366:no_undermethod(string:new("<<") , _temp368)
        else
          _error(exception:method_error(_temp366, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp366)
      if _n._less_less ~= nil then
        _temp367 = _n:_less_less(_temp368)
      elseif _n.no_undermethod ~= nil then
        _temp367 =  _n:no_undermethod(string:new("<<") , _temp368)
      else
        _error(exception:method_error(_temp366, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp366)
      if _f._less_less ~= nil then
        _temp367 = _f:_less_less(_temp368)
      elseif _f.no_undermethod ~= nil then
        _temp367 =  _f:no_undermethod(string:new("<<") , _temp368)
      else
        _error(exception:method_error(_temp366, "<<"))
      end

      elseif _temp366 == nil then
        _error(exception:null_error("_temp366", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp366))
      end

_temp362 = _temp367 
end

return _temp362
end


local _temp382 = function (_self)

local _temp373 = nil
        local _t = _type(_temp350)
        if _t == "table" then
          if _rawget(_temp350, "__call_thing") == nil then
            _temp373 = _temp350
          else
                  if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp373 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp373 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp373 =  _temp350(_self)
      end

          end
        elseif _t == "number" then
          _temp373 = _temp350
        elseif _t == "function" then
                if _temp350 == nil then
              if _type(_self._temp350) == "function" or (_type(_self._temp350) == "table" and _rawget(_self._temp350, "__call_thing")) then
        _temp373 =  _self:_temp350()
      elseif _self._temp350 ~= nil then
        _temp373 =  _self._temp350

        elseif _self.no_undermethod ~= nil then
          _temp373 =  _self:no_undermethod(string:new("_temp350"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp373 =  _temp350(_self)
      end

        elseif _temp350 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp373)
      if _t == "table" then
                      if _type(_temp373.empty_question) == "function" or (_type(_temp373.empty_question) == "table" and _rawget(_temp373.empty_question, "__call_thing")) then
        _temp373 = _temp373:empty_question()
      elseif _temp373.empty_question ~= nil then
        _temp373 = _temp373.empty_question

        elseif _temp373.no_undermethod ~= nil then
          _temp373 =  _temp373:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp373, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp373)
      if _n.empty_question ~= nil then
        _temp373 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp373 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp373, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp373)
      if _f.empty_question ~= nil then
        _temp373 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp373 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp373, "empty?"))
      end

      elseif _temp373 == nil then
        _error(exception:null_error("_temp373", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp373))
      end



local _temp380 = function (_self)

local _temp374 
do
local _temp375 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp375 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp375 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp375 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp375 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp375 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp375 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp375 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp375 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp376 = nil
      local _t = _type(_temp375)
      if _t == "table" then
                      if _type(_temp375.out) == "function" or (_type(_temp375.out) == "table" and _rawget(_temp375.out, "__call_thing")) then
        _temp376 = _temp375:out()
      elseif _temp375.out ~= nil then
        _temp376 = _temp375.out

        elseif _temp375.no_undermethod ~= nil then
          _temp376 =  _temp375:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp375, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp375)
      if _n.out ~= nil then
        _temp376 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp376 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp375)
      if _f.out ~= nil then
        _temp376 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp376 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp375, "out"))
      end

      elseif _temp375 == nil then
        _error(exception:null_error("_temp375", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp375))
      end

local _temp377 = string:new("return object:null()")
local _temp378
      local _t = _type(_temp376)
      if _t == "table" then
                      if _type(_temp376._less_less) == "function" or (_type(_temp376._less_less) == "table" and _rawget(_temp376._less_less, "__call_thing")) then
        _temp378 = _temp376:_less_less(_temp377)
      elseif _temp376._less_less ~= nil then
        _temp378 = _temp376._less_less

        elseif _temp376.no_undermethod ~= nil then
          _temp378 =  _temp376:no_undermethod(string:new("<<") , _temp377)
        else
          _error(exception:method_error(_temp376, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp376)
      if _n._less_less ~= nil then
        _temp378 = _n:_less_less(_temp377)
      elseif _n.no_undermethod ~= nil then
        _temp378 =  _n:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp376)
      if _f._less_less ~= nil then
        _temp378 = _f:_less_less(_temp377)
      elseif _f.no_undermethod ~= nil then
        _temp378 =  _f:no_undermethod(string:new("<<") , _temp377)
      else
        _error(exception:method_error(_temp376, "<<"))
      end

      elseif _temp376 == nil then
        _error(exception:null_error("_temp376", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp376))
      end

_temp374 = _temp378 
end

return _temp374
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp373,_temp380)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp373,_temp380)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp373,_temp380)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp373,_temp380)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp355,_temp372,_temp382)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp355,_temp372,_temp382)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp355,_temp372,_temp382)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp355,_temp372,_temp382)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp382 =  _self:my()
      elseif _self.my ~= nil then
        _temp382 =  _self.my

        elseif my ~= nil then
          _temp382 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp382)
      if _t == "table" then
                      if _type(_temp382.env) == "function" or (_type(_temp382.env) == "table" and _rawget(_temp382.env, "__call_thing")) then
        _temp382 = _temp382:env()
      elseif _temp382.env ~= nil then
        _temp382 = _temp382.env

        elseif _temp382.no_undermethod ~= nil then
          _temp382 =  _temp382:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp382, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp382)
      if _n.env ~= nil then
        _temp382 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp382 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp382, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp382)
      if _f.env ~= nil then
        _temp382 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp382 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp382, "env"))
      end

      elseif _temp382 == nil then
        _error(exception:null_error("_temp382", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp382))
      end

      local _t = _type(_temp382)
      if _t == "table" then
                      if _type(_temp382.pop_underscope) == "function" or (_type(_temp382.pop_underscope) == "table" and _rawget(_temp382.pop_underscope, "__call_thing")) then
        _dummy_ = _temp382:pop_underscope()
      elseif _temp382.pop_underscope ~= nil then
        _dummy_ = _temp382.pop_underscope

        elseif _temp382.no_undermethod ~= nil then
          _dummy_ =  _temp382:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp382, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp382)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp382, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp382)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp382, "pop_scope"))
      end

      elseif _temp382 == nil then
        _error(exception:null_error("_temp382", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp382))
      end

do
local _temp383 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp383 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp383 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp383 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp383 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp383 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp383 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp383 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp383 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp383 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp384 = nil
      local _t = _type(_temp383)
      if _t == "table" then
                      if _type(_temp383.out) == "function" or (_type(_temp383.out) == "table" and _rawget(_temp383.out, "__call_thing")) then
        _temp384 = _temp383:out()
      elseif _temp383.out ~= nil then
        _temp384 = _temp383.out

        elseif _temp383.no_undermethod ~= nil then
          _temp384 =  _temp383:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp383, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp383)
      if _n.out ~= nil then
        _temp384 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp384 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp383)
      if _f.out ~= nil then
        _temp384 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp384 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp383, "out"))
      end

      elseif _temp383 == nil then
        _error(exception:null_error("_temp383", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp383))
      end

local _temp385 = string:new("\nend\n")
local _temp386
      local _t = _type(_temp384)
      if _t == "table" then
                      if _type(_temp384._less_less) == "function" or (_type(_temp384._less_less) == "table" and _rawget(_temp384._less_less, "__call_thing")) then
        _temp386 = _temp384:_less_less(_temp385)
      elseif _temp384._less_less ~= nil then
        _temp386 = _temp384._less_less

        elseif _temp384.no_undermethod ~= nil then
          _temp386 =  _temp384:no_undermethod(string:new("<<") , _temp385)
        else
          _error(exception:method_error(_temp384, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp384)
      if _n._less_less ~= nil then
        _temp386 = _n:_less_less(_temp385)
      elseif _n.no_undermethod ~= nil then
        _temp386 =  _n:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp384)
      if _f._less_less ~= nil then
        _temp386 = _f:_less_less(_temp385)
      elseif _f.no_undermethod ~= nil then
        _temp386 =  _f:no_undermethod(string:new("<<") , _temp385)
      else
        _error(exception:method_error(_temp384, "<<"))
      end

      elseif _temp384 == nil then
        _error(exception:null_error("_temp384", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp384))
      end

_dummy_ = _temp386 
end

do
local _temp372
    if _type(_temp326) == "function" or (_type(_temp326) == "table" and _rawget(_temp326, "__call_thing")) then
      _temp372 =  _temp326(_self)

    elseif _temp326 then
      _temp372 =  _temp326
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp372 =  _self:res()
      elseif _self.res ~= nil then
        _temp372 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp372 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp372 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp387 = string:new("function")

local _temp388 = string:new("type")

_temp372:set(_temp388, _temp387)
end

do
local _temp389 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp389 =  _self:my()
      elseif _self.my ~= nil then
        _temp389 =  _self.my

        elseif my ~= nil then
          _temp389 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp390 = nil
      local _t = _type(_temp389)
      if _t == "table" then
                      if _type(_temp389.liftable_underfunctions) == "function" or (_type(_temp389.liftable_underfunctions) == "table" and _rawget(_temp389.liftable_underfunctions, "__call_thing")) then
        _temp390 = _temp389:liftable_underfunctions()
      elseif _temp389.liftable_underfunctions ~= nil then
        _temp390 = _temp389.liftable_underfunctions

        elseif _temp389.no_undermethod ~= nil then
          _temp390 =  _temp389:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp389, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp389)
      if _n.liftable_underfunctions ~= nil then
        _temp390 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp390 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp389, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp389)
      if _f.liftable_underfunctions ~= nil then
        _temp390 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp390 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp389, "liftable_functions"))
      end

      elseif _temp389 == nil then
        _error(exception:null_error("_temp389", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp389))
      end

local _temp391 = nil
    if _type(_temp326) == "function" or (_type(_temp326) == "table" and _rawget(_temp326, "__call_thing")) then
      _temp391 =  _temp326(_self)

    elseif _temp326 then
      _temp391 =  _temp326
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp391 =  _self:res()
      elseif _self.res ~= nil then
        _temp391 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp391 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp391 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp392
      local _t = _type(_temp390)
      if _t == "table" then
                      if _type(_temp390._less_less) == "function" or (_type(_temp390._less_less) == "table" and _rawget(_temp390._less_less, "__call_thing")) then
        _temp392 = _temp390:_less_less(_temp391)
      elseif _temp390._less_less ~= nil then
        _temp392 = _temp390._less_less

        elseif _temp390.no_undermethod ~= nil then
          _temp392 =  _temp390:no_undermethod(string:new("<<") , _temp391)
        else
          _error(exception:method_error(_temp390, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp390)
      if _n._less_less ~= nil then
        _temp392 = _n:_less_less(_temp391)
      elseif _n.no_undermethod ~= nil then
        _temp392 =  _n:no_undermethod(string:new("<<") , _temp391)
      else
        _error(exception:method_error(_temp390, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp390)
      if _f._less_less ~= nil then
        _temp392 = _f:_less_less(_temp391)
      elseif _f.no_undermethod ~= nil then
        _temp392 =  _f:no_undermethod(string:new("<<") , _temp391)
      else
        _error(exception:method_error(_temp390, "<<"))
      end

      elseif _temp390 == nil then
        _error(exception:null_error("_temp390", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp390))
      end

_dummy_ = _temp392 
end

local _temp393
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp355 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp355 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp355 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp355 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp355 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp355 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp355 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp355 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp355)
      if _t == "table" then
                      if _type(_temp355.upvars) == "function" or (_type(_temp355.upvars) == "table" and _rawget(_temp355.upvars, "__call_thing")) then
        _temp355 = _temp355:upvars()
      elseif _temp355.upvars ~= nil then
        _temp355 = _temp355.upvars

        elseif _temp355.no_undermethod ~= nil then
          _temp355 =  _temp355:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp355, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp355)
      if _n.upvars ~= nil then
        _temp355 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp355 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp355, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp355)
      if _f.upvars ~= nil then
        _temp355 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp355 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp355, "upvars"))
      end

      elseif _temp355 == nil then
        _error(exception:null_error("_temp355", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp355))
      end



local _temp397 = function (_self)

local _temp394 = nil
do
local _temp395 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp395 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp395 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp395 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp395 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp395 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp395 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp395 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp395 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp395 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp395 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp395)
      if _t == "table" then
                      if _type(_temp395.var) == "function" or (_type(_temp395.var) == "table" and _rawget(_temp395.var, "__call_thing")) then
        _temp395 = _temp395:var()
      elseif _temp395.var ~= nil then
        _temp395 = _temp395.var

        elseif _temp395.no_undermethod ~= nil then
          _temp395 =  _temp395:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp395, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp395)
      if _n.var ~= nil then
        _temp395 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp395 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp395, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp395)
      if _f.var ~= nil then
        _temp395 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp395 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp395, "var"))
      end

      elseif _temp395 == nil then
        _error(exception:null_error("_temp395", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp395))
      end


_temp394 = string:new("_lifted_call(" .. _tostring(_temp395) .. ", {})")
end

return _temp394
end


local _temp401 = function (_self)

local _temp398 = nil
do
local _temp399 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp399 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp399 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp399 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp399 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp399 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp399 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp399 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp399 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp399 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp399 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp399)
      if _t == "table" then
                      if _type(_temp399.var) == "function" or (_type(_temp399.var) == "table" and _rawget(_temp399.var, "__call_thing")) then
        _temp399 = _temp399:var()
      elseif _temp399.var ~= nil then
        _temp399 = _temp399.var

        elseif _temp399.no_undermethod ~= nil then
          _temp399 =  _temp399:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp399, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp399)
      if _n.var ~= nil then
        _temp399 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp399 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp399, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp399)
      if _f.var ~= nil then
        _temp399 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp399 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp399, "var"))
      end

      elseif _temp399 == nil then
        _error(exception:null_error("_temp399", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp399))
      end


_temp398 = string:new("_lifted_call(" .. _tostring(_temp399) .. ")")
end

return _temp398
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp393 =  true_question(_self, _temp355,_temp397,_temp401)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp393 =  _self:true_question(_temp355,_temp397,_temp401)
      elseif _self.true_question ~= nil then
        _temp393 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp393 =  _self:no_undermethod(string:new("true?") , _temp355,_temp397,_temp401)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp393 =  no_undermethod(_self, string:new("true?") , _temp355,_temp397,_temp401)
      else
        _error(exception:name_error("true?"))
      end
    end

local _temp402
    if _type(_temp321) == "function" or (_type(_temp321) == "table" and _rawget(_temp321, "__call_thing")) then
      _temp401 =  _temp321(_self)

    elseif _temp321 then
      _temp401 =  _temp321
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp401 =  _self:var()
      elseif _self.var ~= nil then
        _temp401 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp401 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp401 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(_temp393) == "function" or (_type(_temp393) == "table" and _rawget(_temp393, "__call_thing")) then
      _temp397 =  _temp393(_self)

    elseif _temp393 then
      _temp397 =  _temp393
    else
            if _type(_self.lifted_undercall) == "function" or (_type(_self.lifted_undercall) == "table" and _rawget(_self.lifted_undercall, "__call_thing")) then
        _temp397 =  _self:lifted_undercall()
      elseif _self.lifted_undercall ~= nil then
        _temp397 =  _self.lifted_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp397 =  _self:no_undermethod(string:new("lifted_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp397 =  no_undermethod(_self, string:new("lifted_call"))
      else
        _error(exception:name_error("lifted_call"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp402 =  set_underresult(_self, _temp401,_temp397)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp402 =  _self:set_underresult(_temp401,_temp397)
      elseif _self.set_underresult ~= nil then
        _temp402 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp402 =  _self:no_undermethod(string:new("set_result") , _temp401,_temp397)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp402 =  no_undermethod(_self, string:new("set_result") , _temp401,_temp397)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp397 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp397 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp397 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp397 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp397 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp397 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp397 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp397 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.upvars) == "function" or (_type(_temp397.upvars) == "table" and _rawget(_temp397.upvars, "__call_thing")) then
        _temp397 = _temp397:upvars()
      elseif _temp397.upvars ~= nil then
        _temp397 = _temp397.upvars

        elseif _temp397.no_undermethod ~= nil then
          _temp397 =  _temp397:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp397, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.upvars ~= nil then
        _temp397 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp397 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp397, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.upvars ~= nil then
        _temp397 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp397 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp397, "upvars"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end



local _temp418 = function (_self)

local _temp403
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp403 =  _self:my()
      elseif _self.my ~= nil then
        _temp403 =  _self.my

        elseif my ~= nil then
          _temp403 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp403)
      if _t == "table" then
                      if _type(_temp403.env) == "function" or (_type(_temp403.env) == "table" and _rawget(_temp403.env, "__call_thing")) then
        _temp403 = _temp403:env()
      elseif _temp403.env ~= nil then
        _temp403 = _temp403.env

        elseif _temp403.no_undermethod ~= nil then
          _temp403 =  _temp403:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("e", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp403)
      if _n.env ~= nil then
        _temp403 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp403 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp403)
      if _f.env ~= nil then
        _temp403 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp403 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _temp403 == nil then
        _error(exception:null_error("e", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp403))
      end


local _temp404 
do
local _temp405 = nil
        local _t = _type(_temp402)
        if _t == "table" then
          if _rawget(_temp402, "__call_thing") == nil then
            _temp405 = _temp402
          else
                  if _temp402 == nil then
              if _type(_self._temp402) == "function" or (_type(_self._temp402) == "table" and _rawget(_self._temp402, "__call_thing")) then
        _temp405 =  _self:_temp402()
      elseif _self._temp402 ~= nil then
        _temp405 =  _self._temp402

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp402"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp405 =  _temp402(_self)
      end

          end
        elseif _t == "number" then
          _temp405 = _temp402
        elseif _t == "function" then
                if _temp402 == nil then
              if _type(_self._temp402) == "function" or (_type(_self._temp402) == "table" and _rawget(_self._temp402, "__call_thing")) then
        _temp405 =  _self:_temp402()
      elseif _self._temp402 ~= nil then
        _temp405 =  _self._temp402

        elseif _self.no_undermethod ~= nil then
          _temp405 =  _self:no_undermethod(string:new("_temp402"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp405 =  _temp402(_self)
      end

        elseif _temp402 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp406 = nil
      local _t = _type(_temp405)
      if _t == "table" then
                      if _type(_temp405.out) == "function" or (_type(_temp405.out) == "table" and _rawget(_temp405.out, "__call_thing")) then
        _temp406 = _temp405:out()
      elseif _temp405.out ~= nil then
        _temp406 = _temp405.out

        elseif _temp405.no_undermethod ~= nil then
          _temp406 =  _temp405:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp405, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp405)
      if _n.out ~= nil then
        _temp406 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp406 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp405, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp405)
      if _f.out ~= nil then
        _temp406 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp406 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp405, "out"))
      end

      elseif _temp405 == nil then
        _error(exception:null_error("_temp405", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp405))
      end

local _temp407 = nil
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp407 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp407 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp407 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp407 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp407 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp407 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp407 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp407 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.upvars) == "function" or (_type(_temp407.upvars) == "table" and _rawget(_temp407.upvars, "__call_thing")) then
        _temp407 = _temp407:upvars()
      elseif _temp407.upvars ~= nil then
        _temp407 = _temp407.upvars

        elseif _temp407.no_undermethod ~= nil then
          _temp407 =  _temp407:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp407, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.upvars ~= nil then
        _temp407 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp407, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.upvars ~= nil then
        _temp407 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp407, "upvars"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end


local _temp416 = function (_self, _temp408)
        if _temp408 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp409 = nil
do
local _temp410 = nil
        local _t = _type(_temp402)
        if _t == "table" then
          if _rawget(_temp402, "__call_thing") == nil then
            _temp410 = _temp402
          else
                  if _temp402 == nil then
              if _type(_self._temp402) == "function" or (_type(_self._temp402) == "table" and _rawget(_self._temp402, "__call_thing")) then
        _temp410 =  _self:_temp402()
      elseif _self._temp402 ~= nil then
        _temp410 =  _self._temp402

        elseif _self.no_undermethod ~= nil then
          _temp410 =  _self:no_undermethod(string:new("_temp402"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp410 =  _temp402(_self)
      end

          end
        elseif _t == "number" then
          _temp410 = _temp402
        elseif _t == "function" then
                if _temp402 == nil then
              if _type(_self._temp402) == "function" or (_type(_self._temp402) == "table" and _rawget(_self._temp402, "__call_thing")) then
        _temp410 =  _self:_temp402()
      elseif _self._temp402 ~= nil then
        _temp410 =  _self._temp402

        elseif _self.no_undermethod ~= nil then
          _temp410 =  _self:no_undermethod(string:new("_temp402"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp410 =  _temp402(_self)
      end

        elseif _temp402 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp410)
      if _t == "table" then
                      if _type(_temp410.var) == "function" or (_type(_temp410.var) == "table" and _rawget(_temp410.var, "__call_thing")) then
        _temp410 = _temp410:var()
      elseif _temp410.var ~= nil then
        _temp410 = _temp410.var

        elseif _temp410.no_undermethod ~= nil then
          _temp410 =  _temp410:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp410, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp410)
      if _n.var ~= nil then
        _temp410 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp410 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp410, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp410)
      if _f.var ~= nil then
        _temp410 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp410 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp410, "var"))
      end

      elseif _temp410 == nil then
        _error(exception:null_error("_temp410", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp410))
      end


local _temp411
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp411 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp411 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp411 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp411 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp411 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp411 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp411 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp411 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp411 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp411 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp411)
      if _t == "table" then
                      if _type(_temp411.env) == "function" or (_type(_temp411.env) == "table" and _rawget(_temp411.env, "__call_thing")) then
        _temp411 = _temp411:env()
      elseif _temp411.env ~= nil then
        _temp411 = _temp411.env

        elseif _temp411.no_undermethod ~= nil then
          _temp411 =  _temp411:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp411, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp411)
      if _n.env ~= nil then
        _temp411 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp411 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp411, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp411)
      if _f.env ~= nil then
        _temp411 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp411 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp411, "env"))
      end

      elseif _temp411 == nil then
        _error(exception:null_error("_temp411", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp411))
      end

local _temp412 = nil
    if _type(_temp408) == "function" or (_type(_temp408) == "table" and _rawget(_temp408, "__call_thing")) then
      _temp412 =  _temp408(_self)

    elseif _temp408 then
      _temp412 =  _temp408
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp412 =  _self:u()
      elseif _self.u ~= nil then
        _temp412 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp412 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp412 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp411 = _temp411:get(_temp412)
end

local _temp413
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp413 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp413 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp413 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp413 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp413 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp413 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp413 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp413 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.env) == "function" or (_type(_temp413.env) == "table" and _rawget(_temp413.env, "__call_thing")) then
        _temp413 = _temp413:env()
      elseif _temp413.env ~= nil then
        _temp413 = _temp413.env

        elseif _temp413.no_undermethod ~= nil then
          _temp413 =  _temp413:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp413, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.env ~= nil then
        _temp413 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp413 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp413, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.env ~= nil then
        _temp413 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp413 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp413, "env"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("_temp413", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end

local _temp414 = nil
    if _type(_temp408) == "function" or (_type(_temp408) == "table" and _rawget(_temp408, "__call_thing")) then
      _temp414 =  _temp408(_self)

    elseif _temp408 then
      _temp414 =  _temp408
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp414 =  _self:u()
      elseif _self.u ~= nil then
        _temp414 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp414 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp414 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp413 = _temp413:get(_temp414)
end

_temp409 = string:new("" .. _tostring(_temp410) .. ".arg_table['" .. _tostring(_temp411) .. "'] = " .. _tostring(_temp413) .. "")
end

return _temp409
end

      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.map) == "function" or (_type(_temp407.map) == "table" and _rawget(_temp407.map, "__call_thing")) then
        _temp407 = _temp407:map(_temp416)
      elseif _temp407.map ~= nil then
        _temp407 = _temp407.map

        elseif _temp407.no_undermethod ~= nil then
          _temp407 =  _temp407:no_undermethod(string:new("map") , _temp416)
        else
          _error(exception:method_error(_temp407, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.map ~= nil then
        _temp407 = _n:map(_temp416)
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("map") , _temp416)
      else
        _error(exception:method_error(_temp407, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.map ~= nil then
        _temp407 = _f:map(_temp416)
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("map") , _temp416)
      else
        _error(exception:method_error(_temp407, "map"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end

_temp416 = string:new("\n")

      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.join) == "function" or (_type(_temp407.join) == "table" and _rawget(_temp407.join, "__call_thing")) then
        _temp407 = _temp407:join(_temp416)
      elseif _temp407.join ~= nil then
        _temp407 = _temp407.join

        elseif _temp407.no_undermethod ~= nil then
          _temp407 =  _temp407:no_undermethod(string:new("join") , _temp416)
        else
          _error(exception:method_error(_temp407, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.join ~= nil then
        _temp407 = _n:join(_temp416)
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("join") , _temp416)
      else
        _error(exception:method_error(_temp407, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.join ~= nil then
        _temp407 = _f:join(_temp416)
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("join") , _temp416)
      else
        _error(exception:method_error(_temp407, "join"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end

local _temp416
      local _t = _type(_temp406)
      if _t == "table" then
                      if _type(_temp406._less_less) == "function" or (_type(_temp406._less_less) == "table" and _rawget(_temp406._less_less, "__call_thing")) then
        _temp416 = _temp406:_less_less(_temp407)
      elseif _temp406._less_less ~= nil then
        _temp416 = _temp406._less_less

        elseif _temp406.no_undermethod ~= nil then
          _temp416 =  _temp406:no_undermethod(string:new("<<") , _temp407)
        else
          _error(exception:method_error(_temp406, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp406)
      if _n._less_less ~= nil then
        _temp416 = _n:_less_less(_temp407)
      elseif _n.no_undermethod ~= nil then
        _temp416 =  _n:no_undermethod(string:new("<<") , _temp407)
      else
        _error(exception:method_error(_temp406, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp406)
      if _f._less_less ~= nil then
        _temp416 = _f:_less_less(_temp407)
      elseif _f.no_undermethod ~= nil then
        _temp416 =  _f:no_undermethod(string:new("<<") , _temp407)
      else
        _error(exception:method_error(_temp406, "<<"))
      end

      elseif _temp406 == nil then
        _error(exception:null_error("_temp406", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp406))
      end

_temp404 = _temp416 
end

return _temp404
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp397,_temp418)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp397,_temp418)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp397,_temp418)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp397,_temp418)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp402) == "function" or (_type(_temp402) == "table" and _rawget(_temp402, "__call_thing")) then
      return  _temp402(_self)

    elseif _temp402 then
      return  _temp402
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp274)
      if _t == "table" then
                      if _type(_temp274.walk) == "function" or (_type(_temp274.walk) == "table" and _rawget(_temp274.walk, "__call_thing")) then
        _dummy_ = _temp274:walk(_temp4,_temp397)
      elseif _temp274.walk ~= nil then
        _dummy_ = _temp274.walk

        elseif _temp274.no_undermethod ~= nil then
          _dummy_ =  _temp274:no_undermethod(string:new("walk") , _temp4,_temp397)
        else
          _error(exception:method_error(_temp274, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp274)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp397)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp397)
      else
        _error(exception:method_error(_temp274, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp274)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp397)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp397)
      else
        _error(exception:method_error(_temp274, "walk"))
      end

      elseif _temp274 == nil then
        _error(exception:null_error("_temp274", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp274))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp397 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp397 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp397 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp397 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp397 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp397 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp397 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp397 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp426 = function (_self, _temp420,_temp419)
        if _temp420 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp419 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp419 =  null(_self)

    elseif null then
      _temp419 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp419 =  _self:null()
      elseif _self.null ~= nil then
        _temp419 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp419 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp419 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp421
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp421 =  _self:my()
      elseif _self.my ~= nil then
        _temp421 =  _self.my

        elseif my ~= nil then
          _temp421 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.env) == "function" or (_type(_temp421.env) == "table" and _rawget(_temp421.env, "__call_thing")) then
        _temp421 = _temp421:env()
      elseif _temp421.env ~= nil then
        _temp421 = _temp421.env

        elseif _temp421.no_undermethod ~= nil then
          _temp421 =  _temp421:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.env ~= nil then
        _temp421 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp421 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.env ~= nil then
        _temp421 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp421 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end

local _temp422 = nil
        local _t = _type(_temp420)
        if _t == "table" then
          if _rawget(_temp420, "__call_thing") == nil then
            _temp422 = _temp420
          else
                  if _temp420 == nil then
              if _type(_self._temp420) == "function" or (_type(_self._temp420) == "table" and _rawget(_self._temp420, "__call_thing")) then
        _temp422 =  _self:_temp420()
      elseif _self._temp420 ~= nil then
        _temp422 =  _self._temp420

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp420"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp422 =  _temp420(_self)
      end

          end
        elseif _t == "number" then
          _temp422 = _temp420
        elseif _t == "function" then
                if _temp420 == nil then
              if _type(_self._temp420) == "function" or (_type(_self._temp420) == "table" and _rawget(_self._temp420, "__call_thing")) then
        _temp422 =  _self:_temp420()
      elseif _self._temp420 ~= nil then
        _temp422 =  _self._temp420

        elseif _self.no_undermethod ~= nil then
          _temp422 =  _self:no_undermethod(string:new("_temp420"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp422 =  _temp420(_self)
      end

        elseif _temp420 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp422)
      if _t == "table" then
                      if _type(_temp422.id) == "function" or (_type(_temp422.id) == "table" and _rawget(_temp422.id, "__call_thing")) then
        _temp422 = _temp422:id()
      elseif _temp422.id ~= nil then
        _temp422 = _temp422.id

        elseif _temp422.no_undermethod ~= nil then
          _temp422 =  _temp422:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp422, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp422)
      if _n.id ~= nil then
        _temp422 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp422 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp422, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp422)
      if _f.id ~= nil then
        _temp422 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp422 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp422, "id"))
      end

      elseif _temp422 == nil then
        _error(exception:null_error("_temp422", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp422))
      end


      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.new_undervar) == "function" or (_type(_temp421.new_undervar) == "table" and _rawget(_temp421.new_undervar, "__call_thing")) then
        _temp421 = _temp421:new_undervar(_temp422)
      elseif _temp421.new_undervar ~= nil then
        _temp421 = _temp421.new_undervar

        elseif _temp421.no_undermethod ~= nil then
          _temp421 =  _temp421:no_undermethod(string:new("new_var") , _temp422)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.new_undervar ~= nil then
        _temp421 = _n:new_undervar(_temp422)
      elseif _n.no_undermethod ~= nil then
        _temp421 =  _n:no_undermethod(string:new("new_var") , _temp422)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.new_undervar ~= nil then
        _temp421 = _f:new_undervar(_temp422)
      elseif _f.no_undermethod ~= nil then
        _temp421 =  _f:no_undermethod(string:new("new_var") , _temp422)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end


    if _type(_temp421) == "function" or (_type(_temp421) == "table" and _rawget(_temp421, "__call_thing")) then
      _temp422 =  _temp421(_self)

    elseif _temp421 then
      _temp422 =  _temp421
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp422 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp422 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp422 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp422 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp423 = string:new("")

local _temp424 = string:new("arg")

local _temp425 = {}
_temp425[string:new("arg_type")] = _temp424
_temp425 = hash:new(_temp425)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp422,_temp423,_temp425)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp422,_temp423,_temp425)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp422,_temp423,_temp425)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp422,_temp423,_temp425)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.walk) == "function" or (_type(_temp397.walk) == "table" and _rawget(_temp397.walk, "__call_thing")) then
        _dummy_ = _temp397:walk(_temp4,_temp426)
      elseif _temp397.walk ~= nil then
        _dummy_ = _temp397.walk

        elseif _temp397.no_undermethod ~= nil then
          _dummy_ =  _temp397:no_undermethod(string:new("walk") , _temp4,_temp426)
        else
          _error(exception:method_error(_temp397, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp426)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp426)
      else
        _error(exception:method_error(_temp397, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp426)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp426)
      else
        _error(exception:method_error(_temp397, "walk"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp426 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp426 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp426 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp426 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp426 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp426 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp426 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp426 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp426 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp426 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp435 = function (_self, _temp428,_temp427)
        if _temp428 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp427 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp427 =  null(_self)

    elseif null then
      _temp427 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp427 =  _self:null()
      elseif _self.null ~= nil then
        _temp427 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp427 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp427 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp429
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp429 =  _self:my()
      elseif _self.my ~= nil then
        _temp429 =  _self.my

        elseif my ~= nil then
          _temp429 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp429)
      if _t == "table" then
                      if _type(_temp429.env) == "function" or (_type(_temp429.env) == "table" and _rawget(_temp429.env, "__call_thing")) then
        _temp429 = _temp429:env()
      elseif _temp429.env ~= nil then
        _temp429 = _temp429.env

        elseif _temp429.no_undermethod ~= nil then
          _temp429 =  _temp429:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp429)
      if _n.env ~= nil then
        _temp429 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp429 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp429)
      if _f.env ~= nil then
        _temp429 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp429 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp429 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp429))
      end

local _temp430 = nil
        local _t = _type(_temp428)
        if _t == "table" then
          if _rawget(_temp428, "__call_thing") == nil then
            _temp430 = _temp428
          else
                  if _temp428 == nil then
              if _type(_self._temp428) == "function" or (_type(_self._temp428) == "table" and _rawget(_self._temp428, "__call_thing")) then
        _temp430 =  _self:_temp428()
      elseif _self._temp428 ~= nil then
        _temp430 =  _self._temp428

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp428"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp430 =  _temp428(_self)
      end

          end
        elseif _t == "number" then
          _temp430 = _temp428
        elseif _t == "function" then
                if _temp428 == nil then
              if _type(_self._temp428) == "function" or (_type(_self._temp428) == "table" and _rawget(_self._temp428, "__call_thing")) then
        _temp430 =  _self:_temp428()
      elseif _self._temp428 ~= nil then
        _temp430 =  _self._temp428

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp428"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp430 =  _temp428(_self)
      end

        elseif _temp428 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.id) == "function" or (_type(_temp430.id) == "table" and _rawget(_temp430.id, "__call_thing")) then
        _temp430 = _temp430:id()
      elseif _temp430.id ~= nil then
        _temp430 = _temp430.id

        elseif _temp430.no_undermethod ~= nil then
          _temp430 =  _temp430:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp430, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.id ~= nil then
        _temp430 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp430 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp430, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.id ~= nil then
        _temp430 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp430 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp430, "id"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("_temp430", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end


      local _t = _type(_temp429)
      if _t == "table" then
                      if _type(_temp429.new_undervar) == "function" or (_type(_temp429.new_undervar) == "table" and _rawget(_temp429.new_undervar, "__call_thing")) then
        _temp429 = _temp429:new_undervar(_temp430)
      elseif _temp429.new_undervar ~= nil then
        _temp429 = _temp429.new_undervar

        elseif _temp429.no_undermethod ~= nil then
          _temp429 =  _temp429:no_undermethod(string:new("new_var") , _temp430)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp429)
      if _n.new_undervar ~= nil then
        _temp429 = _n:new_undervar(_temp430)
      elseif _n.no_undermethod ~= nil then
        _temp429 =  _n:no_undermethod(string:new("new_var") , _temp430)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp429)
      if _f.new_undervar ~= nil then
        _temp429 = _f:new_undervar(_temp430)
      elseif _f.no_undermethod ~= nil then
        _temp429 =  _f:no_undermethod(string:new("new_var") , _temp430)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp429 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp429))
      end


_temp430 = string:new("...")

local _temp431 = nil
do
local _temp432 = nil
    if _type(_temp429) == "function" or (_type(_temp429) == "table" and _rawget(_temp429, "__call_thing")) then
      _temp432 =  _temp429(_self)

    elseif _temp429 then
      _temp432 =  _temp429
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp432 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp432 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp432 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp432 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp431 = string:new("local " .. _tostring(_temp432) .. " = array:new(...)\n")
end

local _temp433 = string:new("var_arg")

local _temp434 = {}
_temp434[string:new("arg_type")] = _temp433
_temp434 = hash:new(_temp434)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp430,_temp431,_temp434)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp430,_temp431,_temp434)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp430,_temp431,_temp434)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp430,_temp431,_temp434)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp426)
      if _t == "table" then
                      if _type(_temp426.walk) == "function" or (_type(_temp426.walk) == "table" and _rawget(_temp426.walk, "__call_thing")) then
        _dummy_ = _temp426:walk(_temp4,_temp435)
      elseif _temp426.walk ~= nil then
        _dummy_ = _temp426.walk

        elseif _temp426.no_undermethod ~= nil then
          _dummy_ =  _temp426:no_undermethod(string:new("walk") , _temp4,_temp435)
        else
          _error(exception:method_error(_temp426, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp426)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp435)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp435)
      else
        _error(exception:method_error(_temp426, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp426)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp435)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp435)
      else
        _error(exception:method_error(_temp426, "walk"))
      end

      elseif _temp426 == nil then
        _error(exception:null_error("_temp426", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp426))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp435 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp435 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp435 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp435 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp435 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp435 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp435 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp435 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp435 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp435 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp461 = function (_self, _temp437,_temp436)
        if _temp437 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp436 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp436 =  null(_self)

    elseif null then
      _temp436 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp436 =  _self:null()
      elseif _self.null ~= nil then
        _temp436 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp436 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp436 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp438
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp438 =  _self:my()
      elseif _self.my ~= nil then
        _temp438 =  _self.my

        elseif my ~= nil then
          _temp438 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.env) == "function" or (_type(_temp438.env) == "table" and _rawget(_temp438.env, "__call_thing")) then
        _temp438 = _temp438:env()
      elseif _temp438.env ~= nil then
        _temp438 = _temp438.env

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.env ~= nil then
        _temp438 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.env ~= nil then
        _temp438 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end

local _temp439 = nil
        local _t = _type(_temp437)
        if _t == "table" then
          if _rawget(_temp437, "__call_thing") == nil then
            _temp439 = _temp437
          else
                  if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

          end
        elseif _t == "number" then
          _temp439 = _temp437
        elseif _t == "function" then
                if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

        elseif _temp437 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp439)
      if _t == "table" then
                      if _type(_temp439.id) == "function" or (_type(_temp439.id) == "table" and _rawget(_temp439.id, "__call_thing")) then
        _temp439 = _temp439:id()
      elseif _temp439.id ~= nil then
        _temp439 = _temp439.id

        elseif _temp439.no_undermethod ~= nil then
          _temp439 =  _temp439:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp439, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp439)
      if _n.id ~= nil then
        _temp439 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp439 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp439, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp439)
      if _f.id ~= nil then
        _temp439 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp439 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp439, "id"))
      end

      elseif _temp439 == nil then
        _error(exception:null_error("_temp439", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp439))
      end


      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.new_undervar) == "function" or (_type(_temp438.new_undervar) == "table" and _rawget(_temp438.new_undervar, "__call_thing")) then
        _temp438 = _temp438:new_undervar(_temp439)
      elseif _temp438.new_undervar ~= nil then
        _temp438 = _temp438.new_undervar

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("new_var") , _temp439)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.new_undervar ~= nil then
        _temp438 = _n:new_undervar(_temp439)
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("new_var") , _temp439)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.new_undervar ~= nil then
        _temp438 = _f:new_undervar(_temp439)
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("new_var") , _temp439)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end


local _temp440
        local _t = _type(_temp437)
        if _t == "table" then
          if _rawget(_temp437, "__call_thing") == nil then
            _temp439 = _temp437
          else
                  if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

          end
        elseif _t == "number" then
          _temp439 = _temp437
        elseif _t == "function" then
                if _temp437 == nil then
              if _type(_self._temp437) == "function" or (_type(_self._temp437) == "table" and _rawget(_self._temp437, "__call_thing")) then
        _temp439 =  _self:_temp437()
      elseif _self._temp437 ~= nil then
        _temp439 =  _self._temp437

        elseif _self.no_undermethod ~= nil then
          _temp439 =  _self:no_undermethod(string:new("_temp437"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp439 =  _temp437(_self)
      end

        elseif _temp437 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp439)
      if _t == "table" then
                      if _type(_temp439.value) == "function" or (_type(_temp439.value) == "table" and _rawget(_temp439.value, "__call_thing")) then
        _temp439 = _temp439:value()
      elseif _temp439.value ~= nil then
        _temp439 = _temp439.value

        elseif _temp439.no_undermethod ~= nil then
          _temp439 =  _temp439:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp439, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp439)
      if _n.value ~= nil then
        _temp439 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp439 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp439, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp439)
      if _f.value ~= nil then
        _temp439 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp439 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp439, "value"))
      end

      elseif _temp439 == nil then
        _error(exception:null_error("_temp439", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp439))
      end


local _temp441 = nil
    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp441 =  _temp438(_self)

    elseif _temp438 then
      _temp441 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp441 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp441 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp441 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp441 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp440 =  process(_self, _temp439,_temp441)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp440 =  _self:process(_temp439,_temp441)
      elseif _self.process ~= nil then
        _temp440 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp440 =  _self:no_undermethod(string:new("process") , _temp439,_temp441)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp440 =  no_undermethod(_self, string:new("process") , _temp439,_temp441)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp442
do
local _temp443 = nil
    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp443 =  _temp438(_self)

    elseif _temp438 then
      _temp443 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp443 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp443 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp443 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp443 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp444 = nil
        local _t = _type(_temp440)
        if _t == "table" then
          if _rawget(_temp440, "__call_thing") == nil then
            _temp444 = _temp440
          else
                  if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp444 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp444 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp444 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp444 =  _temp440(_self)
      end

          end
        elseif _t == "number" then
          _temp444 = _temp440
        elseif _t == "function" then
                if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp444 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp444 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp444 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp444 =  _temp440(_self)
      end

        elseif _temp440 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp444)
      if _t == "table" then
                      if _type(_temp444.out) == "function" or (_type(_temp444.out) == "table" and _rawget(_temp444.out, "__call_thing")) then
        _temp444 = _temp444:out()
      elseif _temp444.out ~= nil then
        _temp444 = _temp444.out

        elseif _temp444.no_undermethod ~= nil then
          _temp444 =  _temp444:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp444, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp444)
      if _n.out ~= nil then
        _temp444 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp444 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp444, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp444)
      if _f.out ~= nil then
        _temp444 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp444 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp444, "out"))
      end

      elseif _temp444 == nil then
        _error(exception:null_error("_temp444", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp444))
      end


_temp442 = string:new("\n    if " .. _tostring(_temp443) .. " == nil then\n      " .. _tostring(_temp444) .. "\n  ")
end

local _temp441 
do
local _temp445 = nil
        local _t = _type(_temp440)
        if _t == "table" then
          if _rawget(_temp440, "__call_thing") == nil then
            _temp445 = _temp440
          else
                  if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp445 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp445 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp445 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp445 =  _temp440(_self)
      end

          end
        elseif _t == "number" then
          _temp445 = _temp440
        elseif _t == "function" then
                if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp445 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp445 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp445 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp445 =  _temp440(_self)
      end

        elseif _temp440 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp446 = nil
      local _t = _type(_temp445)
      if _t == "table" then
                      if _type(_temp445.var) == "function" or (_type(_temp445.var) == "table" and _rawget(_temp445.var, "__call_thing")) then
        _temp446 = _temp445:var()
      elseif _temp445.var ~= nil then
        _temp446 = _temp445.var

        elseif _temp445.no_undermethod ~= nil then
          _temp446 =  _temp445:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp445, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp445)
      if _n.var ~= nil then
        _temp446 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp446 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp445, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp445)
      if _f.var ~= nil then
        _temp446 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp446 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp445, "var"))
      end

      elseif _temp445 == nil then
        _error(exception:null_error("_temp445", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp445))
      end

local _temp447 = nil
    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp447 =  _temp438(_self)

    elseif _temp438 then
      _temp447 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp447 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp447 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp447 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp447 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp448
      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446._equal_equal) == "function" or (_type(_temp446._equal_equal) == "table" and _rawget(_temp446._equal_equal, "__call_thing")) then
        _temp448 = _temp446:_equal_equal(_temp447)
      elseif _temp446._equal_equal ~= nil then
        _temp448 = _temp446._equal_equal

        elseif _temp446.no_undermethod ~= nil then
          _temp448 =  _temp446:no_undermethod(string:new("==") , _temp447)
        else
          _error(exception:method_error(_temp446, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp447) == 'number' then
              if _temp446 == _temp447 then
        _temp448 = object.__true
      else
        _temp448 = object.__false
      end

      else
              local _n = number:new(_temp446)
      if _n._equal_equal ~= nil then
        _temp448 = _n:_equal_equal(_temp447)
      elseif _n.no_undermethod ~= nil then
        _temp448 =  _n:no_undermethod(string:new("==") , _temp447)
      else
        _error(exception:method_error(_temp446, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f._equal_equal ~= nil then
        _temp448 = _f:_equal_equal(_temp447)
      elseif _f.no_undermethod ~= nil then
        _temp448 =  _f:no_undermethod(string:new("==") , _temp447)
      else
        _error(exception:method_error(_temp446, "=="))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("_temp446", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end

_temp441 = _temp448 
end


local _temp456 = function (_self)

local _temp449 
do
local _temp450 = nil
_temp450 =  _temp442

local _temp451 = nil
do
local _temp452 = nil
    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp452 =  _temp438(_self)

    elseif _temp438 then
      _temp452 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp452 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp452 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp452 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp452 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp453 = nil
        local _t = _type(_temp440)
        if _t == "table" then
          if _rawget(_temp440, "__call_thing") == nil then
            _temp453 = _temp440
          else
                  if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp453 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp453 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp453 =  _temp440(_self)
      end

          end
        elseif _t == "number" then
          _temp453 = _temp440
        elseif _t == "function" then
                if _temp440 == nil then
              if _type(_self._temp440) == "function" or (_type(_self._temp440) == "table" and _rawget(_self._temp440, "__call_thing")) then
        _temp453 =  _self:_temp440()
      elseif _self._temp440 ~= nil then
        _temp453 =  _self._temp440

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp440"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp453 =  _temp440(_self)
      end

        elseif _temp440 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp453)
      if _t == "table" then
                      if _type(_temp453.var) == "function" or (_type(_temp453.var) == "table" and _rawget(_temp453.var, "__call_thing")) then
        _temp453 = _temp453:var()
      elseif _temp453.var ~= nil then
        _temp453 = _temp453.var

        elseif _temp453.no_undermethod ~= nil then
          _temp453 =  _temp453:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp453, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp453)
      if _n.var ~= nil then
        _temp453 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp453 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp453)
      if _f.var ~= nil then
        _temp453 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp453 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _temp453 == nil then
        _error(exception:null_error("_temp453", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp453))
      end


_temp451 = string:new("" .. _tostring(_temp452) .. " = " .. _tostring(_temp453) .. "\n")
end
local _temp454
              if _type(_temp450._less_less) == "function" or (_type(_temp450._less_less) == "table" and _rawget(_temp450._less_less, "__call_thing")) then
        _temp454 = _temp450:_less_less(_temp451)
      elseif _temp450._less_less ~= nil then
        _temp454 = _temp450._less_less

        elseif _temp450.no_undermethod ~= nil then
          _temp454 =  _temp450:no_undermethod(string:new("<<") , _temp451)
        else
          _error(exception:method_error(_temp450, "<<"))
        end

_temp449 = _temp454 
end

return _temp449
end

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp441,_temp456)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp441,_temp456)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp441,_temp456)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp441,_temp456)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp457 = nil
_temp457 =  _temp442

local _temp458 = string:new("end\n")
local _temp459
              if _type(_temp457._less_less) == "function" or (_type(_temp457._less_less) == "table" and _rawget(_temp457._less_less, "__call_thing")) then
        _temp459 = _temp457:_less_less(_temp458)
      elseif _temp457._less_less ~= nil then
        _temp459 = _temp457._less_less

        elseif _temp457.no_undermethod ~= nil then
          _temp459 =  _temp457:no_undermethod(string:new("<<") , _temp458)
        else
          _error(exception:method_error(_temp457, "<<"))
        end

_dummy_ = _temp459 
end

    if _type(_temp438) == "function" or (_type(_temp438) == "table" and _rawget(_temp438, "__call_thing")) then
      _temp456 =  _temp438(_self)

    elseif _temp438 then
      _temp456 =  _temp438
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp456 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp456 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp456 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp456 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp441 =  _temp442

_temp439 = string:new("def_arg")

local _temp460 = {}
_temp460[string:new("arg_type")] = _temp439
_temp460 = hash:new(_temp460)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp456,_temp441,_temp460)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp456,_temp441,_temp460)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp456,_temp441,_temp460)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp456,_temp441,_temp460)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp435)
      if _t == "table" then
                      if _type(_temp435.walk) == "function" or (_type(_temp435.walk) == "table" and _rawget(_temp435.walk, "__call_thing")) then
        _dummy_ = _temp435:walk(_temp4,_temp461)
      elseif _temp435.walk ~= nil then
        _dummy_ = _temp435.walk

        elseif _temp435.no_undermethod ~= nil then
          _dummy_ =  _temp435:no_undermethod(string:new("walk") , _temp4,_temp461)
        else
          _error(exception:method_error(_temp435, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp435)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp461)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp461)
      else
        _error(exception:method_error(_temp435, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp435)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp461)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp461)
      else
        _error(exception:method_error(_temp435, "walk"))
      end

      elseif _temp435 == nil then
        _error(exception:null_error("_temp435", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp435))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp461 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp461 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp461 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp461 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp461 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp461 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp461 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp461 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp471 = function (_self, _temp463,_temp462)
        if _temp463 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp462 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp462 =  null(_self)

    elseif null then
      _temp462 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp462 =  _self:null()
      elseif _self.null ~= nil then
        _temp462 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp462 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp462 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp464
local _temp465 = nil
    if _type(_temp462) == "function" or (_type(_temp462) == "table" and _rawget(_temp462, "__call_thing")) then
      _temp465 =  _temp462(_self)

    elseif _temp462 then
      _temp465 =  _temp462
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp465 =  _self:var()
      elseif _self.var ~= nil then
        _temp465 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp465 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp465 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp464 =  set_underresult(_self, _temp465)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp464 =  _self:set_underresult(_temp465)
      elseif _self.set_underresult ~= nil then
        _temp464 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp464 =  _self:no_undermethod(string:new("set_result") , _temp465)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp464 =  no_undermethod(_self, string:new("set_result") , _temp465)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp466 = nil
        local _t = _type(_temp464)
        if _t == "table" then
          if _rawget(_temp464, "__call_thing") == nil then
            _temp466 = _temp464
          else
                  if _temp464 == nil then
              if _type(_self._temp464) == "function" or (_type(_self._temp464) == "table" and _rawget(_self._temp464, "__call_thing")) then
        _temp466 =  _self:_temp464()
      elseif _self._temp464 ~= nil then
        _temp466 =  _self._temp464

        elseif _self.no_undermethod ~= nil then
          _temp466 =  _self:no_undermethod(string:new("_temp464"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp466 =  _temp464(_self)
      end

          end
        elseif _t == "number" then
          _temp466 = _temp464
        elseif _t == "function" then
                if _temp464 == nil then
              if _type(_self._temp464) == "function" or (_type(_self._temp464) == "table" and _rawget(_self._temp464, "__call_thing")) then
        _temp466 =  _self:_temp464()
      elseif _self._temp464 ~= nil then
        _temp466 =  _self._temp464

        elseif _self.no_undermethod ~= nil then
          _temp466 =  _self:no_undermethod(string:new("_temp464"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp466 =  _temp464(_self)
      end

        elseif _temp464 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp467 = nil
      local _t = _type(_temp466)
      if _t == "table" then
                      if _type(_temp466.out) == "function" or (_type(_temp466.out) == "table" and _rawget(_temp466.out, "__call_thing")) then
        _temp467 = _temp466:out()
      elseif _temp466.out ~= nil then
        _temp467 = _temp466.out

        elseif _temp466.no_undermethod ~= nil then
          _temp467 =  _temp466:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp466, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp466)
      if _n.out ~= nil then
        _temp467 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp467 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp466, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp466)
      if _f.out ~= nil then
        _temp467 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp467 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp466, "out"))
      end

      elseif _temp466 == nil then
        _error(exception:null_error("_temp466", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp466))
      end

local _temp468 = nil
local _temp469 = nil
        local _t = _type(_temp463)
        if _t == "table" then
          if _rawget(_temp463, "__call_thing") == nil then
            _temp469 = _temp463
          else
                  if _temp463 == nil then
              if _type(_self._temp463) == "function" or (_type(_self._temp463) == "table" and _rawget(_self._temp463, "__call_thing")) then
        _temp469 =  _self:_temp463()
      elseif _self._temp463 ~= nil then
        _temp469 =  _self._temp463

        elseif _self.no_undermethod ~= nil then
          _temp469 =  _self:no_undermethod(string:new("_temp463"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp469 =  _temp463(_self)
      end

          end
        elseif _t == "number" then
          _temp469 = _temp463
        elseif _t == "function" then
                if _temp463 == nil then
              if _type(_self._temp463) == "function" or (_type(_self._temp463) == "table" and _rawget(_self._temp463, "__call_thing")) then
        _temp469 =  _self:_temp463()
      elseif _self._temp463 ~= nil then
        _temp469 =  _self._temp463

        elseif _self.no_undermethod ~= nil then
          _temp469 =  _self:no_undermethod(string:new("_temp463"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp469 =  _temp463(_self)
      end

        elseif _temp463 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp469)
      if _t == "table" then
                      if _type(_temp469.method) == "function" or (_type(_temp469.method) == "table" and _rawget(_temp469.method, "__call_thing")) then
        _temp469 = _temp469:method()
      elseif _temp469.method ~= nil then
        _temp469 = _temp469.method

        elseif _temp469.no_undermethod ~= nil then
          _temp469 =  _temp469:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp469, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp469)
      if _n.method ~= nil then
        _temp469 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp469 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp469, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp469)
      if _f.method ~= nil then
        _temp469 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp469 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp469, "method"))
      end

      elseif _temp469 == nil then
        _error(exception:null_error("_temp469", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp469))
      end


local _temp470 = nil
        local _t = _type(_temp464)
        if _t == "table" then
          if _rawget(_temp464, "__call_thing") == nil then
            _temp470 = _temp464
          else
                  if _temp464 == nil then
              if _type(_self._temp464) == "function" or (_type(_self._temp464) == "table" and _rawget(_self._temp464, "__call_thing")) then
        _temp470 =  _self:_temp464()
      elseif _self._temp464 ~= nil then
        _temp470 =  _self._temp464

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp464"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp470 =  _temp464(_self)
      end

          end
        elseif _t == "number" then
          _temp470 = _temp464
        elseif _t == "function" then
                if _temp464 == nil then
              if _type(_self._temp464) == "function" or (_type(_self._temp464) == "table" and _rawget(_self._temp464, "__call_thing")) then
        _temp470 =  _self:_temp464()
      elseif _self._temp464 ~= nil then
        _temp470 =  _self._temp464

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp464"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp470 =  _temp464(_self)
      end

        elseif _temp464 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp470)
      if _t == "table" then
                      if _type(_temp470.var) == "function" or (_type(_temp470.var) == "table" and _rawget(_temp470.var, "__call_thing")) then
        _temp470 = _temp470:var()
      elseif _temp470.var ~= nil then
        _temp470 = _temp470.var

        elseif _temp470.no_undermethod ~= nil then
          _temp470 =  _temp470:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp470, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp470)
      if _n.var ~= nil then
        _temp470 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp470 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp470, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp470)
      if _f.var ~= nil then
        _temp470 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp470 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp470, "var"))
      end

      elseif _temp470 == nil then
        _error(exception:null_error("_temp470", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp470))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp468 =  get_undermethod_underlocal(_self, _temp469,_temp470)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp468 =  _self:get_undermethod_underlocal(_temp469,_temp470)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp468 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp468 =  _self:no_undermethod(string:new("get_method_local") , _temp469,_temp470)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp468 =  no_undermethod(_self, string:new("get_method_local") , _temp469,_temp470)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp470
      local _t = _type(_temp467)
      if _t == "table" then
                      if _type(_temp467._less_less) == "function" or (_type(_temp467._less_less) == "table" and _rawget(_temp467._less_less, "__call_thing")) then
        _temp470 = _temp467:_less_less(_temp468)
      elseif _temp467._less_less ~= nil then
        _temp470 = _temp467._less_less

        elseif _temp467.no_undermethod ~= nil then
          _temp470 =  _temp467:no_undermethod(string:new("<<") , _temp468)
        else
          _error(exception:method_error(_temp467, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp467)
      if _n._less_less ~= nil then
        _temp470 = _n:_less_less(_temp468)
      elseif _n.no_undermethod ~= nil then
        _temp470 =  _n:no_undermethod(string:new("<<") , _temp468)
      else
        _error(exception:method_error(_temp467, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp467)
      if _f._less_less ~= nil then
        _temp470 = _f:_less_less(_temp468)
      elseif _f.no_undermethod ~= nil then
        _temp470 =  _f:no_undermethod(string:new("<<") , _temp468)
      else
        _error(exception:method_error(_temp467, "<<"))
      end

      elseif _temp467 == nil then
        _error(exception:null_error("_temp467", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp467))
      end

_dummy_ = _temp470 
end

    if _type(_temp464) == "function" or (_type(_temp464) == "table" and _rawget(_temp464, "__call_thing")) then
      return  _temp464(_self)

    elseif _temp464 then
      return  _temp464
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp461)
      if _t == "table" then
                      if _type(_temp461.walk) == "function" or (_type(_temp461.walk) == "table" and _rawget(_temp461.walk, "__call_thing")) then
        _dummy_ = _temp461:walk(_temp4,_temp471)
      elseif _temp461.walk ~= nil then
        _dummy_ = _temp461.walk

        elseif _temp461.no_undermethod ~= nil then
          _dummy_ =  _temp461:no_undermethod(string:new("walk") , _temp4,_temp471)
        else
          _error(exception:method_error(_temp461, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp461)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp471)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp471)
      else
        _error(exception:method_error(_temp461, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp461)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp471)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp471)
      else
        _error(exception:method_error(_temp461, "walk"))
      end

      elseif _temp461 == nil then
        _error(exception:null_error("_temp461", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp461))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp471 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp471 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp471 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp471 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp471 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp471 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp471 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp471 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp481 = function (_self, _temp473,_temp472)
        if _temp473 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp472 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp472 =  null(_self)

    elseif null then
      _temp472 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp472 =  _self:null()
      elseif _self.null ~= nil then
        _temp472 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp472 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp472 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp474
local _temp475 = nil
    if _type(_temp472) == "function" or (_type(_temp472) == "table" and _rawget(_temp472, "__call_thing")) then
      _temp475 =  _temp472(_self)

    elseif _temp472 then
      _temp475 =  _temp472
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp475 =  _self:var()
      elseif _self.var ~= nil then
        _temp475 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp475 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp475 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp474 =  set_underresult(_self, _temp475)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp474 =  _self:set_underresult(_temp475)
      elseif _self.set_underresult ~= nil then
        _temp474 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp474 =  _self:no_undermethod(string:new("set_result") , _temp475)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp474 =  no_undermethod(_self, string:new("set_result") , _temp475)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp476 = nil
        local _t = _type(_temp474)
        if _t == "table" then
          if _rawget(_temp474, "__call_thing") == nil then
            _temp476 = _temp474
          else
                  if _temp474 == nil then
              if _type(_self._temp474) == "function" or (_type(_self._temp474) == "table" and _rawget(_self._temp474, "__call_thing")) then
        _temp476 =  _self:_temp474()
      elseif _self._temp474 ~= nil then
        _temp476 =  _self._temp474

        elseif _self.no_undermethod ~= nil then
          _temp476 =  _self:no_undermethod(string:new("_temp474"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp476 =  _temp474(_self)
      end

          end
        elseif _t == "number" then
          _temp476 = _temp474
        elseif _t == "function" then
                if _temp474 == nil then
              if _type(_self._temp474) == "function" or (_type(_self._temp474) == "table" and _rawget(_self._temp474, "__call_thing")) then
        _temp476 =  _self:_temp474()
      elseif _self._temp474 ~= nil then
        _temp476 =  _self._temp474

        elseif _self.no_undermethod ~= nil then
          _temp476 =  _self:no_undermethod(string:new("_temp474"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp476 =  _temp474(_self)
      end

        elseif _temp474 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp477 = nil
      local _t = _type(_temp476)
      if _t == "table" then
                      if _type(_temp476.out) == "function" or (_type(_temp476.out) == "table" and _rawget(_temp476.out, "__call_thing")) then
        _temp477 = _temp476:out()
      elseif _temp476.out ~= nil then
        _temp477 = _temp476.out

        elseif _temp476.no_undermethod ~= nil then
          _temp477 =  _temp476:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp476, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp476)
      if _n.out ~= nil then
        _temp477 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp477 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp476, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp476)
      if _f.out ~= nil then
        _temp477 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp477 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp476, "out"))
      end

      elseif _temp476 == nil then
        _error(exception:null_error("_temp476", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp476))
      end

local _temp478 = nil
local _temp479 = nil
        local _t = _type(_temp473)
        if _t == "table" then
          if _rawget(_temp473, "__call_thing") == nil then
            _temp479 = _temp473
          else
                  if _temp473 == nil then
              if _type(_self._temp473) == "function" or (_type(_self._temp473) == "table" and _rawget(_self._temp473, "__call_thing")) then
        _temp479 =  _self:_temp473()
      elseif _self._temp473 ~= nil then
        _temp479 =  _self._temp473

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp473"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp479 =  _temp473(_self)
      end

          end
        elseif _t == "number" then
          _temp479 = _temp473
        elseif _t == "function" then
                if _temp473 == nil then
              if _type(_self._temp473) == "function" or (_type(_self._temp473) == "table" and _rawget(_self._temp473, "__call_thing")) then
        _temp479 =  _self:_temp473()
      elseif _self._temp473 ~= nil then
        _temp479 =  _self._temp473

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp473"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp479 =  _temp473(_self)
      end

        elseif _temp473 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp479)
      if _t == "table" then
                      if _type(_temp479.method) == "function" or (_type(_temp479.method) == "table" and _rawget(_temp479.method, "__call_thing")) then
        _temp479 = _temp479:method()
      elseif _temp479.method ~= nil then
        _temp479 = _temp479.method

        elseif _temp479.no_undermethod ~= nil then
          _temp479 =  _temp479:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp479, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp479)
      if _n.method ~= nil then
        _temp479 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp479 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp479, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp479)
      if _f.method ~= nil then
        _temp479 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp479 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp479, "method"))
      end

      elseif _temp479 == nil then
        _error(exception:null_error("_temp479", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp479))
      end


local _temp480 = nil
        local _t = _type(_temp474)
        if _t == "table" then
          if _rawget(_temp474, "__call_thing") == nil then
            _temp480 = _temp474
          else
                  if _temp474 == nil then
              if _type(_self._temp474) == "function" or (_type(_self._temp474) == "table" and _rawget(_self._temp474, "__call_thing")) then
        _temp480 =  _self:_temp474()
      elseif _self._temp474 ~= nil then
        _temp480 =  _self._temp474

        elseif _self.no_undermethod ~= nil then
          _temp480 =  _self:no_undermethod(string:new("_temp474"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp480 =  _temp474(_self)
      end

          end
        elseif _t == "number" then
          _temp480 = _temp474
        elseif _t == "function" then
                if _temp474 == nil then
              if _type(_self._temp474) == "function" or (_type(_self._temp474) == "table" and _rawget(_self._temp474, "__call_thing")) then
        _temp480 =  _self:_temp474()
      elseif _self._temp474 ~= nil then
        _temp480 =  _self._temp474

        elseif _self.no_undermethod ~= nil then
          _temp480 =  _self:no_undermethod(string:new("_temp474"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp480 =  _temp474(_self)
      end

        elseif _temp474 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp480)
      if _t == "table" then
                      if _type(_temp480.var) == "function" or (_type(_temp480.var) == "table" and _rawget(_temp480.var, "__call_thing")) then
        _temp480 = _temp480:var()
      elseif _temp480.var ~= nil then
        _temp480 = _temp480.var

        elseif _temp480.no_undermethod ~= nil then
          _temp480 =  _temp480:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp480, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp480)
      if _n.var ~= nil then
        _temp480 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp480 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp480, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp480)
      if _f.var ~= nil then
        _temp480 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp480 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp480, "var"))
      end

      elseif _temp480 == nil then
        _error(exception:null_error("_temp480", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp480))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp478 =  get_undermethod_underlocal(_self, _temp479,_temp480)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp478 =  _self:get_undermethod_underlocal(_temp479,_temp480)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp478 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp478 =  _self:no_undermethod(string:new("get_method_local") , _temp479,_temp480)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp478 =  no_undermethod(_self, string:new("get_method_local") , _temp479,_temp480)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp480
      local _t = _type(_temp477)
      if _t == "table" then
                      if _type(_temp477._less_less) == "function" or (_type(_temp477._less_less) == "table" and _rawget(_temp477._less_less, "__call_thing")) then
        _temp480 = _temp477:_less_less(_temp478)
      elseif _temp477._less_less ~= nil then
        _temp480 = _temp477._less_less

        elseif _temp477.no_undermethod ~= nil then
          _temp480 =  _temp477:no_undermethod(string:new("<<") , _temp478)
        else
          _error(exception:method_error(_temp477, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp477)
      if _n._less_less ~= nil then
        _temp480 = _n:_less_less(_temp478)
      elseif _n.no_undermethod ~= nil then
        _temp480 =  _n:no_undermethod(string:new("<<") , _temp478)
      else
        _error(exception:method_error(_temp477, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp477)
      if _f._less_less ~= nil then
        _temp480 = _f:_less_less(_temp478)
      elseif _f.no_undermethod ~= nil then
        _temp480 =  _f:no_undermethod(string:new("<<") , _temp478)
      else
        _error(exception:method_error(_temp477, "<<"))
      end

      elseif _temp477 == nil then
        _error(exception:null_error("_temp477", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp477))
      end

_dummy_ = _temp480 
end

    if _type(_temp474) == "function" or (_type(_temp474) == "table" and _rawget(_temp474, "__call_thing")) then
      return  _temp474(_self)

    elseif _temp474 then
      return  _temp474
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp471)
      if _t == "table" then
                      if _type(_temp471.walk) == "function" or (_type(_temp471.walk) == "table" and _rawget(_temp471.walk, "__call_thing")) then
        _dummy_ = _temp471:walk(_temp4,_temp481)
      elseif _temp471.walk ~= nil then
        _dummy_ = _temp471.walk

        elseif _temp471.no_undermethod ~= nil then
          _dummy_ =  _temp471:no_undermethod(string:new("walk") , _temp4,_temp481)
        else
          _error(exception:method_error(_temp471, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp471)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp481)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp481)
      else
        _error(exception:method_error(_temp471, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp471)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp481)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp481)
      else
        _error(exception:method_error(_temp471, "walk"))
      end

      elseif _temp471 == nil then
        _error(exception:null_error("_temp471", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp471))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp481 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp481 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp481 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp481 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp481 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp481 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp481 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp481 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp481 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp481 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp491 = function (_self, _temp483,_temp482)
        if _temp483 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp482 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp482 =  null(_self)

    elseif null then
      _temp482 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp482 =  _self:null()
      elseif _self.null ~= nil then
        _temp482 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp482 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp482 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp484
local _temp485 = nil
    if _type(_temp482) == "function" or (_type(_temp482) == "table" and _rawget(_temp482, "__call_thing")) then
      _temp485 =  _temp482(_self)

    elseif _temp482 then
      _temp485 =  _temp482
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp485 =  _self:var()
      elseif _self.var ~= nil then
        _temp485 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp485 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp485 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp484 =  set_underresult(_self, _temp485)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp484 =  _self:set_underresult(_temp485)
      elseif _self.set_underresult ~= nil then
        _temp484 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp484 =  _self:no_undermethod(string:new("set_result") , _temp485)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp484 =  no_undermethod(_self, string:new("set_result") , _temp485)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp486 = nil
        local _t = _type(_temp484)
        if _t == "table" then
          if _rawget(_temp484, "__call_thing") == nil then
            _temp486 = _temp484
          else
                  if _temp484 == nil then
              if _type(_self._temp484) == "function" or (_type(_self._temp484) == "table" and _rawget(_self._temp484, "__call_thing")) then
        _temp486 =  _self:_temp484()
      elseif _self._temp484 ~= nil then
        _temp486 =  _self._temp484

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp484"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp486 =  _temp484(_self)
      end

          end
        elseif _t == "number" then
          _temp486 = _temp484
        elseif _t == "function" then
                if _temp484 == nil then
              if _type(_self._temp484) == "function" or (_type(_self._temp484) == "table" and _rawget(_self._temp484, "__call_thing")) then
        _temp486 =  _self:_temp484()
      elseif _self._temp484 ~= nil then
        _temp486 =  _self._temp484

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp484"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp486 =  _temp484(_self)
      end

        elseif _temp484 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp487 = nil
      local _t = _type(_temp486)
      if _t == "table" then
                      if _type(_temp486.out) == "function" or (_type(_temp486.out) == "table" and _rawget(_temp486.out, "__call_thing")) then
        _temp487 = _temp486:out()
      elseif _temp486.out ~= nil then
        _temp487 = _temp486.out

        elseif _temp486.no_undermethod ~= nil then
          _temp487 =  _temp486:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp486, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp486)
      if _n.out ~= nil then
        _temp487 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp486, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp486)
      if _f.out ~= nil then
        _temp487 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp486, "out"))
      end

      elseif _temp486 == nil then
        _error(exception:null_error("_temp486", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp486))
      end

local _temp488 = nil
local _temp489 = nil
        local _t = _type(_temp483)
        if _t == "table" then
          if _rawget(_temp483, "__call_thing") == nil then
            _temp489 = _temp483
          else
                  if _temp483 == nil then
              if _type(_self._temp483) == "function" or (_type(_self._temp483) == "table" and _rawget(_self._temp483, "__call_thing")) then
        _temp489 =  _self:_temp483()
      elseif _self._temp483 ~= nil then
        _temp489 =  _self._temp483

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp483"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp489 =  _temp483(_self)
      end

          end
        elseif _t == "number" then
          _temp489 = _temp483
        elseif _t == "function" then
                if _temp483 == nil then
              if _type(_self._temp483) == "function" or (_type(_self._temp483) == "table" and _rawget(_self._temp483, "__call_thing")) then
        _temp489 =  _self:_temp483()
      elseif _self._temp483 ~= nil then
        _temp489 =  _self._temp483

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp483"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp489 =  _temp483(_self)
      end

        elseif _temp483 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp489)
      if _t == "table" then
                      if _type(_temp489.method) == "function" or (_type(_temp489.method) == "table" and _rawget(_temp489.method, "__call_thing")) then
        _temp489 = _temp489:method()
      elseif _temp489.method ~= nil then
        _temp489 = _temp489.method

        elseif _temp489.no_undermethod ~= nil then
          _temp489 =  _temp489:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp489, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp489)
      if _n.method ~= nil then
        _temp489 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp489 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp489, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp489)
      if _f.method ~= nil then
        _temp489 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp489 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp489, "method"))
      end

      elseif _temp489 == nil then
        _error(exception:null_error("_temp489", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp489))
      end


local _temp490 = nil
        local _t = _type(_temp484)
        if _t == "table" then
          if _rawget(_temp484, "__call_thing") == nil then
            _temp490 = _temp484
          else
                  if _temp484 == nil then
              if _type(_self._temp484) == "function" or (_type(_self._temp484) == "table" and _rawget(_self._temp484, "__call_thing")) then
        _temp490 =  _self:_temp484()
      elseif _self._temp484 ~= nil then
        _temp490 =  _self._temp484

        elseif _self.no_undermethod ~= nil then
          _temp490 =  _self:no_undermethod(string:new("_temp484"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp490 =  _temp484(_self)
      end

          end
        elseif _t == "number" then
          _temp490 = _temp484
        elseif _t == "function" then
                if _temp484 == nil then
              if _type(_self._temp484) == "function" or (_type(_self._temp484) == "table" and _rawget(_self._temp484, "__call_thing")) then
        _temp490 =  _self:_temp484()
      elseif _self._temp484 ~= nil then
        _temp490 =  _self._temp484

        elseif _self.no_undermethod ~= nil then
          _temp490 =  _self:no_undermethod(string:new("_temp484"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp490 =  _temp484(_self)
      end

        elseif _temp484 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp490)
      if _t == "table" then
                      if _type(_temp490.var) == "function" or (_type(_temp490.var) == "table" and _rawget(_temp490.var, "__call_thing")) then
        _temp490 = _temp490:var()
      elseif _temp490.var ~= nil then
        _temp490 = _temp490.var

        elseif _temp490.no_undermethod ~= nil then
          _temp490 =  _temp490:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp490, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp490)
      if _n.var ~= nil then
        _temp490 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp490 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp490, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp490)
      if _f.var ~= nil then
        _temp490 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp490 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp490, "var"))
      end

      elseif _temp490 == nil then
        _error(exception:null_error("_temp490", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp490))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp488 =  get_undermethod_underself(_self, _temp489,_temp490)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp488 =  _self:get_undermethod_underself(_temp489,_temp490)
      elseif _self.get_undermethod_underself ~= nil then
        _temp488 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp488 =  _self:no_undermethod(string:new("get_method_self") , _temp489,_temp490)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp488 =  no_undermethod(_self, string:new("get_method_self") , _temp489,_temp490)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp490
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487._less_less) == "function" or (_type(_temp487._less_less) == "table" and _rawget(_temp487._less_less, "__call_thing")) then
        _temp490 = _temp487:_less_less(_temp488)
      elseif _temp487._less_less ~= nil then
        _temp490 = _temp487._less_less

        elseif _temp487.no_undermethod ~= nil then
          _temp490 =  _temp487:no_undermethod(string:new("<<") , _temp488)
        else
          _error(exception:method_error(_temp487, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n._less_less ~= nil then
        _temp490 = _n:_less_less(_temp488)
      elseif _n.no_undermethod ~= nil then
        _temp490 =  _n:no_undermethod(string:new("<<") , _temp488)
      else
        _error(exception:method_error(_temp487, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f._less_less ~= nil then
        _temp490 = _f:_less_less(_temp488)
      elseif _f.no_undermethod ~= nil then
        _temp490 =  _f:no_undermethod(string:new("<<") , _temp488)
      else
        _error(exception:method_error(_temp487, "<<"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end

_dummy_ = _temp490 
end

    if _type(_temp484) == "function" or (_type(_temp484) == "table" and _rawget(_temp484, "__call_thing")) then
      return  _temp484(_self)

    elseif _temp484 then
      return  _temp484
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp481)
      if _t == "table" then
                      if _type(_temp481.walk) == "function" or (_type(_temp481.walk) == "table" and _rawget(_temp481.walk, "__call_thing")) then
        _dummy_ = _temp481:walk(_temp4,_temp491)
      elseif _temp481.walk ~= nil then
        _dummy_ = _temp481.walk

        elseif _temp481.no_undermethod ~= nil then
          _dummy_ =  _temp481:no_undermethod(string:new("walk") , _temp4,_temp491)
        else
          _error(exception:method_error(_temp481, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp481)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp491)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp491)
      else
        _error(exception:method_error(_temp481, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp481)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp491)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp491)
      else
        _error(exception:method_error(_temp481, "walk"))
      end

      elseif _temp481 == nil then
        _error(exception:null_error("_temp481", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp481))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp491 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp491 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp491 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp491 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp491 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp491 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp491 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp491 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp507 = function (_self, _temp493,_temp492)
        if _temp493 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp492 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp492 =  null(_self)

    elseif null then
      _temp492 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp492 =  _self:null()
      elseif _self.null ~= nil then
        _temp492 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp492 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp492 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp494
local _temp495 = nil
    if _type(_temp492) == "function" or (_type(_temp492) == "table" and _rawget(_temp492, "__call_thing")) then
      _temp495 =  _temp492(_self)

    elseif _temp492 then
      _temp495 =  _temp492
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp495 =  _self:var()
      elseif _self.var ~= nil then
        _temp495 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp495 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp495 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp494 =  set_underresult(_self, _temp495)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp494 =  _self:set_underresult(_temp495)
      elseif _self.set_underresult ~= nil then
        _temp494 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp494 =  _self:no_undermethod(string:new("set_result") , _temp495)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp494 =  no_undermethod(_self, string:new("set_result") , _temp495)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp496
        local _t = _type(_temp493)
        if _t == "table" then
          if _rawget(_temp493, "__call_thing") == nil then
            _temp495 = _temp493
          else
                  if _temp493 == nil then
              if _type(_self._temp493) == "function" or (_type(_self._temp493) == "table" and _rawget(_self._temp493, "__call_thing")) then
        _temp495 =  _self:_temp493()
      elseif _self._temp493 ~= nil then
        _temp495 =  _self._temp493

        elseif _self.no_undermethod ~= nil then
          _temp495 =  _self:no_undermethod(string:new("_temp493"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp495 =  _temp493(_self)
      end

          end
        elseif _t == "number" then
          _temp495 = _temp493
        elseif _t == "function" then
                if _temp493 == nil then
              if _type(_self._temp493) == "function" or (_type(_self._temp493) == "table" and _rawget(_self._temp493, "__call_thing")) then
        _temp495 =  _self:_temp493()
      elseif _self._temp493 ~= nil then
        _temp495 =  _self._temp493

        elseif _self.no_undermethod ~= nil then
          _temp495 =  _self:no_undermethod(string:new("_temp493"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp495 =  _temp493(_self)
      end

        elseif _temp493 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.target) == "function" or (_type(_temp495.target) == "table" and _rawget(_temp495.target, "__call_thing")) then
        _temp495 = _temp495:target()
      elseif _temp495.target ~= nil then
        _temp495 = _temp495.target

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp495, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.target ~= nil then
        _temp495 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp495, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.target ~= nil then
        _temp495 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp495, "target"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("_temp495", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp496 =  process(_self, _temp495)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp496 =  _self:process(_temp495)
      elseif _self.process ~= nil then
        _temp496 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp496 =  _self:no_undermethod(string:new("process") , _temp495)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp496 =  no_undermethod(_self, string:new("process") , _temp495)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp497 = nil
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp497 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp497 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp497 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp497 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp497 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp497 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp497 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp497 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp497 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp498 = nil
      local _t = _type(_temp497)
      if _t == "table" then
                      if _type(_temp497.out) == "function" or (_type(_temp497.out) == "table" and _rawget(_temp497.out, "__call_thing")) then
        _temp498 = _temp497:out()
      elseif _temp497.out ~= nil then
        _temp498 = _temp497.out

        elseif _temp497.no_undermethod ~= nil then
          _temp498 =  _temp497:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp497, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp497)
      if _n.out ~= nil then
        _temp498 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp497, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp497)
      if _f.out ~= nil then
        _temp498 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp497, "out"))
      end

      elseif _temp497 == nil then
        _error(exception:null_error("_temp497", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp497))
      end

local _temp499 = nil
        local _t = _type(_temp496)
        if _t == "table" then
          if _rawget(_temp496, "__call_thing") == nil then
            _temp499 = _temp496
          else
                  if _temp496 == nil then
              if _type(_self._temp496) == "function" or (_type(_self._temp496) == "table" and _rawget(_self._temp496, "__call_thing")) then
        _temp499 =  _self:_temp496()
      elseif _self._temp496 ~= nil then
        _temp499 =  _self._temp496

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp496"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp499 =  _temp496(_self)
      end

          end
        elseif _t == "number" then
          _temp499 = _temp496
        elseif _t == "function" then
                if _temp496 == nil then
              if _type(_self._temp496) == "function" or (_type(_self._temp496) == "table" and _rawget(_self._temp496, "__call_thing")) then
        _temp499 =  _self:_temp496()
      elseif _self._temp496 ~= nil then
        _temp499 =  _self._temp496

        elseif _self.no_undermethod ~= nil then
          _temp499 =  _self:no_undermethod(string:new("_temp496"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp499 =  _temp496(_self)
      end

        elseif _temp496 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp499)
      if _t == "table" then
                      if _type(_temp499.out) == "function" or (_type(_temp499.out) == "table" and _rawget(_temp499.out, "__call_thing")) then
        _temp499 = _temp499:out()
      elseif _temp499.out ~= nil then
        _temp499 = _temp499.out

        elseif _temp499.no_undermethod ~= nil then
          _temp499 =  _temp499:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp499, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp499)
      if _n.out ~= nil then
        _temp499 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp499 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp499, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp499)
      if _f.out ~= nil then
        _temp499 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp499 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp499, "out"))
      end

      elseif _temp499 == nil then
        _error(exception:null_error("_temp499", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp499))
      end

local _temp500
      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498._less_less) == "function" or (_type(_temp498._less_less) == "table" and _rawget(_temp498._less_less, "__call_thing")) then
        _temp500 = _temp498:_less_less(_temp499)
      elseif _temp498._less_less ~= nil then
        _temp500 = _temp498._less_less

        elseif _temp498.no_undermethod ~= nil then
          _temp500 =  _temp498:no_undermethod(string:new("<<") , _temp499)
        else
          _error(exception:method_error(_temp498, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n._less_less ~= nil then
        _temp500 = _n:_less_less(_temp499)
      elseif _n.no_undermethod ~= nil then
        _temp500 =  _n:no_undermethod(string:new("<<") , _temp499)
      else
        _error(exception:method_error(_temp498, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f._less_less ~= nil then
        _temp500 = _f:_less_less(_temp499)
      elseif _f.no_undermethod ~= nil then
        _temp500 =  _f:no_undermethod(string:new("<<") , _temp499)
      else
        _error(exception:method_error(_temp498, "<<"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("_temp498", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

_dummy_ = _temp500 
end

do
local _temp501 = nil
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp501 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp501 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp501 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp501 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp501 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp501 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp501 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp501 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp501 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp501 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp502 = nil
      local _t = _type(_temp501)
      if _t == "table" then
                      if _type(_temp501.out) == "function" or (_type(_temp501.out) == "table" and _rawget(_temp501.out, "__call_thing")) then
        _temp502 = _temp501:out()
      elseif _temp501.out ~= nil then
        _temp502 = _temp501.out

        elseif _temp501.no_undermethod ~= nil then
          _temp502 =  _temp501:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp501, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp501)
      if _n.out ~= nil then
        _temp502 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp502 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp501, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp501)
      if _f.out ~= nil then
        _temp502 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp502 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp501, "out"))
      end

      elseif _temp501 == nil then
        _error(exception:null_error("_temp501", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp501))
      end

local _temp503 = nil
local _temp504 = nil
        local _t = _type(_temp496)
        if _t == "table" then
          if _rawget(_temp496, "__call_thing") == nil then
            _temp504 = _temp496
          else
                  if _temp496 == nil then
              if _type(_self._temp496) == "function" or (_type(_self._temp496) == "table" and _rawget(_self._temp496, "__call_thing")) then
        _temp504 =  _self:_temp496()
      elseif _self._temp496 ~= nil then
        _temp504 =  _self._temp496

        elseif _self.no_undermethod ~= nil then
          _temp504 =  _self:no_undermethod(string:new("_temp496"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp504 =  _temp496(_self)
      end

          end
        elseif _t == "number" then
          _temp504 = _temp496
        elseif _t == "function" then
                if _temp496 == nil then
              if _type(_self._temp496) == "function" or (_type(_self._temp496) == "table" and _rawget(_self._temp496, "__call_thing")) then
        _temp504 =  _self:_temp496()
      elseif _self._temp496 ~= nil then
        _temp504 =  _self._temp496

        elseif _self.no_undermethod ~= nil then
          _temp504 =  _self:no_undermethod(string:new("_temp496"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp504 =  _temp496(_self)
      end

        elseif _temp496 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp504)
      if _t == "table" then
                      if _type(_temp504.var) == "function" or (_type(_temp504.var) == "table" and _rawget(_temp504.var, "__call_thing")) then
        _temp504 = _temp504:var()
      elseif _temp504.var ~= nil then
        _temp504 = _temp504.var

        elseif _temp504.no_undermethod ~= nil then
          _temp504 =  _temp504:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp504, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp504)
      if _n.var ~= nil then
        _temp504 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp504 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp504, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp504)
      if _f.var ~= nil then
        _temp504 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp504 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp504, "var"))
      end

      elseif _temp504 == nil then
        _error(exception:null_error("_temp504", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp504))
      end


local _temp505 = nil
        local _t = _type(_temp493)
        if _t == "table" then
          if _rawget(_temp493, "__call_thing") == nil then
            _temp505 = _temp493
          else
                  if _temp493 == nil then
              if _type(_self._temp493) == "function" or (_type(_self._temp493) == "table" and _rawget(_self._temp493, "__call_thing")) then
        _temp505 =  _self:_temp493()
      elseif _self._temp493 ~= nil then
        _temp505 =  _self._temp493

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp493"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp505 =  _temp493(_self)
      end

          end
        elseif _t == "number" then
          _temp505 = _temp493
        elseif _t == "function" then
                if _temp493 == nil then
              if _type(_self._temp493) == "function" or (_type(_self._temp493) == "table" and _rawget(_self._temp493, "__call_thing")) then
        _temp505 =  _self:_temp493()
      elseif _self._temp493 ~= nil then
        _temp505 =  _self._temp493

        elseif _self.no_undermethod ~= nil then
          _temp505 =  _self:no_undermethod(string:new("_temp493"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp505 =  _temp493(_self)
      end

        elseif _temp493 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp505)
      if _t == "table" then
                      if _type(_temp505.method) == "function" or (_type(_temp505.method) == "table" and _rawget(_temp505.method, "__call_thing")) then
        _temp505 = _temp505:method()
      elseif _temp505.method ~= nil then
        _temp505 = _temp505.method

        elseif _temp505.no_undermethod ~= nil then
          _temp505 =  _temp505:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp505, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp505)
      if _n.method ~= nil then
        _temp505 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp505, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp505)
      if _f.method ~= nil then
        _temp505 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp505, "method"))
      end

      elseif _temp505 == nil then
        _error(exception:null_error("_temp505", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp505))
      end


local _temp506 = nil
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp506 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp506 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp506 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp506 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp506 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp506 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp506 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp506 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506.var) == "function" or (_type(_temp506.var) == "table" and _rawget(_temp506.var, "__call_thing")) then
        _temp506 = _temp506:var()
      elseif _temp506.var ~= nil then
        _temp506 = _temp506.var

        elseif _temp506.no_undermethod ~= nil then
          _temp506 =  _temp506:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp506, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n.var ~= nil then
        _temp506 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp506 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp506, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f.var ~= nil then
        _temp506 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp506 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp506, "var"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp503 =  get_undermethod(_self, _temp504,_temp505,_temp506)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp503 =  _self:get_undermethod(_temp504,_temp505,_temp506)
      elseif _self.get_undermethod ~= nil then
        _temp503 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp503 =  _self:no_undermethod(string:new("get_method") , _temp504,_temp505,_temp506)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp503 =  no_undermethod(_self, string:new("get_method") , _temp504,_temp505,_temp506)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp506
      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502._less_less) == "function" or (_type(_temp502._less_less) == "table" and _rawget(_temp502._less_less, "__call_thing")) then
        _temp506 = _temp502:_less_less(_temp503)
      elseif _temp502._less_less ~= nil then
        _temp506 = _temp502._less_less

        elseif _temp502.no_undermethod ~= nil then
          _temp506 =  _temp502:no_undermethod(string:new("<<") , _temp503)
        else
          _error(exception:method_error(_temp502, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n._less_less ~= nil then
        _temp506 = _n:_less_less(_temp503)
      elseif _n.no_undermethod ~= nil then
        _temp506 =  _n:no_undermethod(string:new("<<") , _temp503)
      else
        _error(exception:method_error(_temp502, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f._less_less ~= nil then
        _temp506 = _f:_less_less(_temp503)
      elseif _f.no_undermethod ~= nil then
        _temp506 =  _f:no_undermethod(string:new("<<") , _temp503)
      else
        _error(exception:method_error(_temp502, "<<"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("_temp502", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end

_dummy_ = _temp506 
end

    if _type(_temp494) == "function" or (_type(_temp494) == "table" and _rawget(_temp494, "__call_thing")) then
      return  _temp494(_self)

    elseif _temp494 then
      return  _temp494
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp491)
      if _t == "table" then
                      if _type(_temp491.walk) == "function" or (_type(_temp491.walk) == "table" and _rawget(_temp491.walk, "__call_thing")) then
        _dummy_ = _temp491:walk(_temp4,_temp507)
      elseif _temp491.walk ~= nil then
        _dummy_ = _temp491.walk

        elseif _temp491.no_undermethod ~= nil then
          _dummy_ =  _temp491:no_undermethod(string:new("walk") , _temp4,_temp507)
        else
          _error(exception:method_error(_temp491, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp491)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp507)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp507)
      else
        _error(exception:method_error(_temp491, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp491)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp507)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp507)
      else
        _error(exception:method_error(_temp491, "walk"))
      end

      elseif _temp491 == nil then
        _error(exception:null_error("_temp491", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp491))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp507 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp507 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp507 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp507 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp507 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp507 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp507 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp507 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp507 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp517 = function (_self, _temp509,_temp508)
        if _temp509 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp508 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp508 =  null(_self)

    elseif null then
      _temp508 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp508 =  _self:null()
      elseif _self.null ~= nil then
        _temp508 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp508 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp508 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp510
        local _t = _type(_temp509)
        if _t == "table" then
          if _rawget(_temp509, "__call_thing") == nil then
            _temp510 = _temp509
          else
                  if _temp509 == nil then
              if _type(_self._temp509) == "function" or (_type(_self._temp509) == "table" and _rawget(_self._temp509, "__call_thing")) then
        _temp510 =  _self:_temp509()
      elseif _self._temp509 ~= nil then
        _temp510 =  _self._temp509

        elseif _self.no_undermethod ~= nil then
          _temp510 =  _self:no_undermethod(string:new("_temp509"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp510 =  _temp509(_self)
      end

          end
        elseif _t == "number" then
          _temp510 = _temp509
        elseif _t == "function" then
                if _temp509 == nil then
              if _type(_self._temp509) == "function" or (_type(_self._temp509) == "table" and _rawget(_self._temp509, "__call_thing")) then
        _temp510 =  _self:_temp509()
      elseif _self._temp509 ~= nil then
        _temp510 =  _self._temp509

        elseif _self.no_undermethod ~= nil then
          _temp510 =  _self:no_undermethod(string:new("_temp509"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp510 =  _temp509(_self)
      end

        elseif _temp509 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp510)
      if _t == "table" then
                      if _type(_temp510.body) == "function" or (_type(_temp510.body) == "table" and _rawget(_temp510.body, "__call_thing")) then
        _temp510 = _temp510:body()
      elseif _temp510.body ~= nil then
        _temp510 = _temp510.body

        elseif _temp510.no_undermethod ~= nil then
          _temp510 =  _temp510:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp510)
      if _n.body ~= nil then
        _temp510 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp510 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp510)
      if _f.body ~= nil then
        _temp510 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp510 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp510 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp510))
      end

local _temp511 = regex:new("[\\\\]")

local _temp512 = string:new("\\\\")

      local _t = _type(_temp510)
      if _t == "table" then
                      if _type(_temp510.sub) == "function" or (_type(_temp510.sub) == "table" and _rawget(_temp510.sub, "__call_thing")) then
        _temp510 = _temp510:sub(_temp511,_temp512)
      elseif _temp510.sub ~= nil then
        _temp510 = _temp510.sub

        elseif _temp510.no_undermethod ~= nil then
          _temp510 =  _temp510:no_undermethod(string:new("sub") , _temp511,_temp512)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp510)
      if _n.sub ~= nil then
        _temp510 = _n:sub(_temp511,_temp512)
      elseif _n.no_undermethod ~= nil then
        _temp510 =  _n:no_undermethod(string:new("sub") , _temp511,_temp512)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp510)
      if _f.sub ~= nil then
        _temp510 = _f:sub(_temp511,_temp512)
      elseif _f.no_undermethod ~= nil then
        _temp510 =  _f:no_undermethod(string:new("sub") , _temp511,_temp512)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp510 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp510))
      end

local _temp512 = regex:new("\"")

_temp511 = string:new("\\\"")

      local _t = _type(_temp510)
      if _t == "table" then
                      if _type(_temp510.sub) == "function" or (_type(_temp510.sub) == "table" and _rawget(_temp510.sub, "__call_thing")) then
        _temp510 = _temp510:sub(_temp512,_temp511)
      elseif _temp510.sub ~= nil then
        _temp510 = _temp510.sub

        elseif _temp510.no_undermethod ~= nil then
          _temp510 =  _temp510:no_undermethod(string:new("sub") , _temp512,_temp511)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp510)
      if _n.sub ~= nil then
        _temp510 = _n:sub(_temp512,_temp511)
      elseif _n.no_undermethod ~= nil then
        _temp510 =  _n:no_undermethod(string:new("sub") , _temp512,_temp511)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp510)
      if _f.sub ~= nil then
        _temp510 = _f:sub(_temp512,_temp511)
      elseif _f.no_undermethod ~= nil then
        _temp510 =  _f:no_undermethod(string:new("sub") , _temp512,_temp511)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp510 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp510))
      end


local _temp513
        local _t = _type(_temp509)
        if _t == "table" then
          if _rawget(_temp509, "__call_thing") == nil then
            _temp513 = _temp509
          else
                  if _temp509 == nil then
              if _type(_self._temp509) == "function" or (_type(_self._temp509) == "table" and _rawget(_self._temp509, "__call_thing")) then
        _temp513 =  _self:_temp509()
      elseif _self._temp509 ~= nil then
        _temp513 =  _self._temp509

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp509"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp509(_self)
      end

          end
        elseif _t == "number" then
          _temp513 = _temp509
        elseif _t == "function" then
                if _temp509 == nil then
              if _type(_self._temp509) == "function" or (_type(_self._temp509) == "table" and _rawget(_self._temp509, "__call_thing")) then
        _temp513 =  _self:_temp509()
      elseif _self._temp509 ~= nil then
        _temp513 =  _self._temp509

        elseif _self.no_undermethod ~= nil then
          _temp513 =  _self:no_undermethod(string:new("_temp509"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp513 =  _temp509(_self)
      end

        elseif _temp509 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.opts) == "function" or (_type(_temp513.opts) == "table" and _rawget(_temp513.opts, "__call_thing")) then
        _temp513 = _temp513:opts()
      elseif _temp513.opts ~= nil then
        _temp513 = _temp513.opts

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.opts ~= nil then
        _temp513 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.opts ~= nil then
        _temp513 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.dice) == "function" or (_type(_temp513.dice) == "table" and _rawget(_temp513.dice, "__call_thing")) then
        _temp513 = _temp513:dice()
      elseif _temp513.dice ~= nil then
        _temp513 = _temp513.dice

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.dice ~= nil then
        _temp513 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.dice ~= nil then
        _temp513 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.unique) == "function" or (_type(_temp513.unique) == "table" and _rawget(_temp513.unique, "__call_thing")) then
        _temp513 = _temp513:unique()
      elseif _temp513.unique ~= nil then
        _temp513 = _temp513.unique

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.unique ~= nil then
        _temp513 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.unique ~= nil then
        _temp513 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.join) == "function" or (_type(_temp513.join) == "table" and _rawget(_temp513.join, "__call_thing")) then
        _temp513 = _temp513:join()
      elseif _temp513.join ~= nil then
        _temp513 = _temp513.join

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.join ~= nil then
        _temp513 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.join ~= nil then
        _temp513 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end

local _temp511 = regex:new("m")

_temp512 = string:new("s")

      local _t = _type(_temp513)
      if _t == "table" then
                      if _type(_temp513.sub) == "function" or (_type(_temp513.sub) == "table" and _rawget(_temp513.sub, "__call_thing")) then
        _temp513 = _temp513:sub(_temp511,_temp512)
      elseif _temp513.sub ~= nil then
        _temp513 = _temp513.sub

        elseif _temp513.no_undermethod ~= nil then
          _temp513 =  _temp513:no_undermethod(string:new("sub") , _temp511,_temp512)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp513)
      if _n.sub ~= nil then
        _temp513 = _n:sub(_temp511,_temp512)
      elseif _n.no_undermethod ~= nil then
        _temp513 =  _n:no_undermethod(string:new("sub") , _temp511,_temp512)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp513)
      if _f.sub ~= nil then
        _temp513 = _f:sub(_temp511,_temp512)
      elseif _f.no_undermethod ~= nil then
        _temp513 =  _f:no_undermethod(string:new("sub") , _temp511,_temp512)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp513 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp513))
      end


    if _type(_temp508) == "function" or (_type(_temp508) == "table" and _rawget(_temp508, "__call_thing")) then
      _temp512 =  _temp508(_self)

    elseif _temp508 then
      _temp512 =  _temp508
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp512 =  _self:var()
      elseif _self.var ~= nil then
        _temp512 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp512 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp512 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp514 = nil
    if _type(_temp510) == "function" or (_type(_temp510) == "table" and _rawget(_temp510, "__call_thing")) then
      _temp514 =  _temp510(_self)

    elseif _temp510 then
      _temp514 =  _temp510
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp514 =  _self:body()
      elseif _self.body ~= nil then
        _temp514 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp514 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp514 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp515 = nil
    if _type(_temp513) == "function" or (_type(_temp513) == "table" and _rawget(_temp513, "__call_thing")) then
      _temp515 =  _temp513(_self)

    elseif _temp513 then
      _temp515 =  _temp513
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp515 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp515 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp515 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp515 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp511 = string:new("regex:new(\"" .. _tostring(_temp514) .. "\", \"" .. _tostring(_temp515) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp512,_temp511)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp512,_temp511)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp512,_temp511)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp512,_temp511)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp507)
      if _t == "table" then
                      if _type(_temp507.walk) == "function" or (_type(_temp507.walk) == "table" and _rawget(_temp507.walk, "__call_thing")) then
        _dummy_ = _temp507:walk(_temp4,_temp517)
      elseif _temp507.walk ~= nil then
        _dummy_ = _temp507.walk

        elseif _temp507.no_undermethod ~= nil then
          _dummy_ =  _temp507:no_undermethod(string:new("walk") , _temp4,_temp517)
        else
          _error(exception:method_error(_temp507, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp507)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp517)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp517)
      else
        _error(exception:method_error(_temp507, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp507)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp517)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp517)
      else
        _error(exception:method_error(_temp507, "walk"))
      end

      elseif _temp507 == nil then
        _error(exception:null_error("_temp507", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp507))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp517 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp517 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp517 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp517 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp517 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp517 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp517 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp517 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp517 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp517 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp521 = function (_self, _temp519,_temp518)
        if _temp519 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp518 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp518 =  null(_self)

    elseif null then
      _temp518 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp518 =  _self:null()
      elseif _self.null ~= nil then
        _temp518 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp518 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp518 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp520
local _temp521 = nil
    if _type(_temp518) == "function" or (_type(_temp518) == "table" and _rawget(_temp518, "__call_thing")) then
      _temp521 =  _temp518(_self)

    elseif _temp518 then
      _temp521 =  _temp518
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp521 =  _self:var()
      elseif _self.var ~= nil then
        _temp521 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp521 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp521 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp520 =  set_underresult(_self, _temp521)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp520 =  _self:set_underresult(_temp521)
      elseif _self.set_underresult ~= nil then
        _temp520 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp520 =  _self:no_undermethod(string:new("set_result") , _temp521)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp520 =  no_undermethod(_self, string:new("set_result") , _temp521)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp522
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp522 =  _self:my()
      elseif _self.my ~= nil then
        _temp522 =  _self.my

        elseif my ~= nil then
          _temp522 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp522)
      if _t == "table" then
                      if _type(_temp522.env) == "function" or (_type(_temp522.env) == "table" and _rawget(_temp522.env, "__call_thing")) then
        _temp522 = _temp522:env()
      elseif _temp522.env ~= nil then
        _temp522 = _temp522.env

        elseif _temp522.no_undermethod ~= nil then
          _temp522 =  _temp522:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp522)
      if _n.env ~= nil then
        _temp522 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp522 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp522)
      if _f.env ~= nil then
        _temp522 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp522 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp522 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp522))
      end

      local _t = _type(_temp522)
      if _t == "table" then
                      if _type(_temp522.next_undertemp) == "function" or (_type(_temp522.next_undertemp) == "table" and _rawget(_temp522.next_undertemp, "__call_thing")) then
        _temp522 = _temp522:next_undertemp()
      elseif _temp522.next_undertemp ~= nil then
        _temp522 = _temp522.next_undertemp

        elseif _temp522.no_undermethod ~= nil then
          _temp522 =  _temp522:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp522)
      if _n.next_undertemp ~= nil then
        _temp522 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp522 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp522)
      if _f.next_undertemp ~= nil then
        _temp522 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp522 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp522 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp522))
      end


do
local _temp523 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp523 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp523 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp523 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp523 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp523 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp523 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp524 = nil
      local _t = _type(_temp523)
      if _t == "table" then
                      if _type(_temp523.out) == "function" or (_type(_temp523.out) == "table" and _rawget(_temp523.out, "__call_thing")) then
        _temp524 = _temp523:out()
      elseif _temp523.out ~= nil then
        _temp524 = _temp523.out

        elseif _temp523.no_undermethod ~= nil then
          _temp524 =  _temp523:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp523, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp523)
      if _n.out ~= nil then
        _temp524 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp524 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp523, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp523)
      if _f.out ~= nil then
        _temp524 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp524 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp523, "out"))
      end

      elseif _temp523 == nil then
        _error(exception:null_error("_temp523", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp523))
      end

local _temp525 = nil
do
local _temp526 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp526 =  _temp522(_self)

    elseif _temp522 then
      _temp526 =  _temp522
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp526 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp526 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp526 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp526 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp525 = string:new("\ndo\nlocal " .. _tostring(_temp526) .. " = {}\n")
end
local _temp527
      local _t = _type(_temp524)
      if _t == "table" then
                      if _type(_temp524._less_less) == "function" or (_type(_temp524._less_less) == "table" and _rawget(_temp524._less_less, "__call_thing")) then
        _temp527 = _temp524:_less_less(_temp525)
      elseif _temp524._less_less ~= nil then
        _temp527 = _temp524._less_less

        elseif _temp524.no_undermethod ~= nil then
          _temp527 =  _temp524:no_undermethod(string:new("<<") , _temp525)
        else
          _error(exception:method_error(_temp524, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp524)
      if _n._less_less ~= nil then
        _temp527 = _n:_less_less(_temp525)
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("<<") , _temp525)
      else
        _error(exception:method_error(_temp524, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp524)
      if _f._less_less ~= nil then
        _temp527 = _f:_less_less(_temp525)
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("<<") , _temp525)
      else
        _error(exception:method_error(_temp524, "<<"))
      end

      elseif _temp524 == nil then
        _error(exception:null_error("_temp524", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp524))
      end

_dummy_ = _temp527 
end

local _temp528
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp528 =  my(_self)

    elseif my then
      _temp528 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp528 =  _self:my()
      elseif _self.my ~= nil then
        _temp528 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp528 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp528 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp519)
        if _t == "table" then
          if _rawget(_temp519, "__call_thing") == nil then
            _temp521 = _temp519
          else
                  if _temp519 == nil then
              if _type(_self._temp519) == "function" or (_type(_self._temp519) == "table" and _rawget(_self._temp519, "__call_thing")) then
        _temp521 =  _self:_temp519()
      elseif _self._temp519 ~= nil then
        _temp521 =  _self._temp519

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp519"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp521 =  _temp519(_self)
      end

          end
        elseif _t == "number" then
          _temp521 = _temp519
        elseif _t == "function" then
                if _temp519 == nil then
              if _type(_self._temp519) == "function" or (_type(_self._temp519) == "table" and _rawget(_self._temp519, "__call_thing")) then
        _temp521 =  _self:_temp519()
      elseif _self._temp519 ~= nil then
        _temp521 =  _self._temp519

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp519"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp521 =  _temp519(_self)
      end

        elseif _temp519 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.nodes) == "function" or (_type(_temp521.nodes) == "table" and _rawget(_temp521.nodes, "__call_thing")) then
        _temp521 = _temp521:nodes()
      elseif _temp521.nodes ~= nil then
        _temp521 = _temp521.nodes

        elseif _temp521.no_undermethod ~= nil then
          _temp521 =  _temp521:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp521, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.nodes ~= nil then
        _temp521 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp521 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp521, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.nodes ~= nil then
        _temp521 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp521 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp521, "nodes"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("_temp521", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end


local _temp571 = function (_self, _temp529, _temp530)
        if _temp529 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp530 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp531 
do
local _temp532 = nil
        local _t = _type(_temp529)
        if _t == "table" then
          if _rawget(_temp529, "__call_thing") == nil then
            _temp532 = _temp529
          else
                  if _temp529 == nil then
              if _type(_self._temp529) == "function" or (_type(_self._temp529) == "table" and _rawget(_self._temp529, "__call_thing")) then
        _temp532 =  _self:_temp529()
      elseif _self._temp529 ~= nil then
        _temp532 =  _self._temp529

        elseif _self.no_undermethod ~= nil then
          _temp532 =  _self:no_undermethod(string:new("_temp529"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp532 =  _temp529(_self)
      end

          end
        elseif _t == "number" then
          _temp532 = _temp529
        elseif _t == "function" then
                if _temp529 == nil then
              if _type(_self._temp529) == "function" or (_type(_self._temp529) == "table" and _rawget(_self._temp529, "__call_thing")) then
        _temp532 =  _self:_temp529()
      elseif _self._temp529 ~= nil then
        _temp532 =  _self._temp529

        elseif _self.no_undermethod ~= nil then
          _temp532 =  _self:no_undermethod(string:new("_temp529"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp532 =  _temp529(_self)
      end

        elseif _temp529 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp533 = nil
      local _t = _type(_temp532)
      if _t == "table" then
                      if _type(_temp532.name) == "function" or (_type(_temp532.name) == "table" and _rawget(_temp532.name, "__call_thing")) then
        _temp533 = _temp532:name()
      elseif _temp532.name ~= nil then
        _temp533 = _temp532.name

        elseif _temp532.no_undermethod ~= nil then
          _temp533 =  _temp532:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp532, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp532)
      if _n.name ~= nil then
        _temp533 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp533 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp532, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp532)
      if _f.name ~= nil then
        _temp533 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp533 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp532, "name"))
      end

      elseif _temp532 == nil then
        _error(exception:null_error("_temp532", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp532))
      end

local _temp534 = string:new("string")
local _temp535
      local _t = _type(_temp533)
      if _t == "table" then
                      if _type(_temp533._equal_equal) == "function" or (_type(_temp533._equal_equal) == "table" and _rawget(_temp533._equal_equal, "__call_thing")) then
        _temp535 = _temp533:_equal_equal(_temp534)
      elseif _temp533._equal_equal ~= nil then
        _temp535 = _temp533._equal_equal

        elseif _temp533.no_undermethod ~= nil then
          _temp535 =  _temp533:no_undermethod(string:new("==") , _temp534)
        else
          _error(exception:method_error(_temp533, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp534) == 'number' then
              if _temp533 == _temp534 then
        _temp535 = object.__true
      else
        _temp535 = object.__false
      end

      else
              local _n = number:new(_temp533)
      if _n._equal_equal ~= nil then
        _temp535 = _n:_equal_equal(_temp534)
      elseif _n.no_undermethod ~= nil then
        _temp535 =  _n:no_undermethod(string:new("==") , _temp534)
      else
        _error(exception:method_error(_temp533, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp533)
      if _f._equal_equal ~= nil then
        _temp535 = _f:_equal_equal(_temp534)
      elseif _f.no_undermethod ~= nil then
        _temp535 =  _f:no_undermethod(string:new("==") , _temp534)
      else
        _error(exception:method_error(_temp533, "=="))
      end

      elseif _temp533 == nil then
        _error(exception:null_error("_temp533", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp533))
      end

_temp531 = _temp535 
end


local _temp548 = function (_self)

local _temp536 
do
local _temp537 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp537 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp537 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp537 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp537 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp537 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp537 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp537 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp537 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp538 = nil
      local _t = _type(_temp537)
      if _t == "table" then
                      if _type(_temp537.out) == "function" or (_type(_temp537.out) == "table" and _rawget(_temp537.out, "__call_thing")) then
        _temp538 = _temp537:out()
      elseif _temp537.out ~= nil then
        _temp538 = _temp537.out

        elseif _temp537.no_undermethod ~= nil then
          _temp538 =  _temp537:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp537, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp537)
      if _n.out ~= nil then
        _temp538 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp538 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp537, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp537)
      if _f.out ~= nil then
        _temp538 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp538 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp537, "out"))
      end

      elseif _temp537 == nil then
        _error(exception:null_error("_temp537", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp537))
      end

local _temp539 = nil
do
local _temp540 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp540 =  _temp522(_self)

    elseif _temp522 then
      _temp540 =  _temp522
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp540 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp540 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp540 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp540 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp541 
do
local _temp542 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp542 =  _temp530(_self)

    elseif _temp530 then
      _temp542 =  _temp530
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp542 =  _self:i()
      elseif _self.i ~= nil then
        _temp542 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp542 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp542 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp543
      local _t = _type(_temp542)
      if _t == "table" then
                      if _type(_temp542._plus) == "function" or (_type(_temp542._plus) == "table" and _rawget(_temp542._plus, "__call_thing")) then
        _temp543 = _temp542:_plus(1)
      elseif _temp542._plus ~= nil then
        _temp543 = _temp542._plus

        elseif _temp542.no_undermethod ~= nil then
          _temp543 =  _temp542:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp542, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp543 = _temp542 + 1
      else
              local _n = number:new(_temp542)
      if _n._plus ~= nil then
        _temp543 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp543 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp542, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp542)
      if _f._plus ~= nil then
        _temp543 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp543 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp542, "+"))
      end

      elseif _temp542 == nil then
        _error(exception:null_error("_temp542", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp542))
      end

_temp541 = _temp543 
end

local _temp544 = nil
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp544 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp544 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp544 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp544 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp544 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp544 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp544 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp544 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp544 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp544 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp545 = nil
        local _t = _type(_temp529)
        if _t == "table" then
          if _rawget(_temp529, "__call_thing") == nil then
            _temp545 = _temp529
          else
                  if _temp529 == nil then
              if _type(_self._temp529) == "function" or (_type(_self._temp529) == "table" and _rawget(_self._temp529, "__call_thing")) then
        _temp545 =  _self:_temp529()
      elseif _self._temp529 ~= nil then
        _temp545 =  _self._temp529

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp529"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp545 =  _temp529(_self)
      end

          end
        elseif _t == "number" then
          _temp545 = _temp529
        elseif _t == "function" then
                if _temp529 == nil then
              if _type(_self._temp529) == "function" or (_type(_self._temp529) == "table" and _rawget(_self._temp529, "__call_thing")) then
        _temp545 =  _self:_temp529()
      elseif _self._temp529 ~= nil then
        _temp545 =  _self._temp529

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp529"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp545 =  _temp529(_self)
      end

        elseif _temp529 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp545)
      if _t == "table" then
                      if _type(_temp545.value) == "function" or (_type(_temp545.value) == "table" and _rawget(_temp545.value, "__call_thing")) then
        _temp545 = _temp545:value()
      elseif _temp545.value ~= nil then
        _temp545 = _temp545.value

        elseif _temp545.no_undermethod ~= nil then
          _temp545 =  _temp545:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp545, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp545)
      if _n.value ~= nil then
        _temp545 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp545 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp545, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp545)
      if _f.value ~= nil then
        _temp545 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp545 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp545, "value"))
      end

      elseif _temp545 == nil then
        _error(exception:null_error("_temp545", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp545))
      end


      local _t = _type(_temp544)
      if _t == "table" then
                      if _type(_temp544.escape_understring) == "function" or (_type(_temp544.escape_understring) == "table" and _rawget(_temp544.escape_understring, "__call_thing")) then
        _temp544 = _temp544:escape_understring(_temp545)
      elseif _temp544.escape_understring ~= nil then
        _temp544 = _temp544.escape_understring

        elseif _temp544.no_undermethod ~= nil then
          _temp544 =  _temp544:no_undermethod(string:new("escape_string") , _temp545)
        else
          _error(exception:method_error(_temp544, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp544)
      if _n.escape_understring ~= nil then
        _temp544 = _n:escape_understring(_temp545)
      elseif _n.no_undermethod ~= nil then
        _temp544 =  _n:no_undermethod(string:new("escape_string") , _temp545)
      else
        _error(exception:method_error(_temp544, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp544)
      if _f.escape_understring ~= nil then
        _temp544 = _f:escape_understring(_temp545)
      elseif _f.no_undermethod ~= nil then
        _temp544 =  _f:no_undermethod(string:new("escape_string") , _temp545)
      else
        _error(exception:method_error(_temp544, "escape_string"))
      end

      elseif _temp544 == nil then
        _error(exception:null_error("_temp544", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp544))
      end


_temp539 = string:new("" .. _tostring(_temp540) .. "[" .. _tostring(_temp541) .. "] = \"" .. _tostring(_temp544) .. "\"\n")
end
local _temp546
      local _t = _type(_temp538)
      if _t == "table" then
                      if _type(_temp538._less_less) == "function" or (_type(_temp538._less_less) == "table" and _rawget(_temp538._less_less, "__call_thing")) then
        _temp546 = _temp538:_less_less(_temp539)
      elseif _temp538._less_less ~= nil then
        _temp546 = _temp538._less_less

        elseif _temp538.no_undermethod ~= nil then
          _temp546 =  _temp538:no_undermethod(string:new("<<") , _temp539)
        else
          _error(exception:method_error(_temp538, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp538)
      if _n._less_less ~= nil then
        _temp546 = _n:_less_less(_temp539)
      elseif _n.no_undermethod ~= nil then
        _temp546 =  _n:no_undermethod(string:new("<<") , _temp539)
      else
        _error(exception:method_error(_temp538, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp538)
      if _f._less_less ~= nil then
        _temp546 = _f:_less_less(_temp539)
      elseif _f.no_undermethod ~= nil then
        _temp546 =  _f:no_undermethod(string:new("<<") , _temp539)
      else
        _error(exception:method_error(_temp538, "<<"))
      end

      elseif _temp538 == nil then
        _error(exception:null_error("_temp538", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp538))
      end

_temp536 = _temp546 
end

return _temp536
end


local _temp569 = function (_self)

local _temp549
        local _t = _type(_temp528)
        if _t == "table" then
          if _rawget(_temp528, "__call_thing") == nil then
            _temp549 = _temp528
          else
                  if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp549 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp549 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp549 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp549 =  _temp528(_self)
      end

          end
        elseif _t == "number" then
          _temp549 = _temp528
        elseif _t == "function" then
                if _temp528 == nil then
              if _type(_self._temp528) == "function" or (_type(_self._temp528) == "table" and _rawget(_self._temp528, "__call_thing")) then
        _temp549 =  _self:_temp528()
      elseif _self._temp528 ~= nil then
        _temp549 =  _self._temp528

        elseif _self.no_undermethod ~= nil then
          _temp549 =  _self:no_undermethod(string:new("_temp528"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp549 =  _temp528(_self)
      end

        elseif _temp528 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp550 = nil
    if _type(_temp529) == "function" or (_type(_temp529) == "table" and _rawget(_temp529, "__call_thing")) then
      _temp550 =  _temp529(_self)

    elseif _temp529 then
      _temp550 =  _temp529
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp550 =  _self:n()
      elseif _self.n ~= nil then
        _temp550 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp550 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp550 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp551 = nil
do
local _temp552 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp552 =  _temp522(_self)

    elseif _temp522 then
      _temp552 =  _temp522
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp552 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp552 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp552 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp552 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp553 
do
local _temp554 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp554 =  _temp530(_self)

    elseif _temp530 then
      _temp554 =  _temp530
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp554 =  _self:i()
      elseif _self.i ~= nil then
        _temp554 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp554 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp554 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp555
      local _t = _type(_temp554)
      if _t == "table" then
                      if _type(_temp554._plus) == "function" or (_type(_temp554._plus) == "table" and _rawget(_temp554._plus, "__call_thing")) then
        _temp555 = _temp554:_plus(1)
      elseif _temp554._plus ~= nil then
        _temp555 = _temp554._plus

        elseif _temp554.no_undermethod ~= nil then
          _temp555 =  _temp554:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp554, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp555 = _temp554 + 1
      else
              local _n = number:new(_temp554)
      if _n._plus ~= nil then
        _temp555 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp555 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp554, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp554)
      if _f._plus ~= nil then
        _temp555 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp555 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp554, "+"))
      end

      elseif _temp554 == nil then
        _error(exception:null_error("_temp554", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp554))
      end

_temp553 = _temp555 
end

_temp551 = string:new("" .. _tostring(_temp552) .. "[" .. _tostring(_temp553) .. "]")
end

      local _t = _type(_temp549)
      if _t == "table" then
                      if _type(_temp549.process) == "function" or (_type(_temp549.process) == "table" and _rawget(_temp549.process, "__call_thing")) then
        _temp549 = _temp549:process(_temp550,_temp551)
      elseif _temp549.process ~= nil then
        _temp549 = _temp549.process

        elseif _temp549.no_undermethod ~= nil then
          _temp549 =  _temp549:no_undermethod(string:new("process") , _temp550,_temp551)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp549)
      if _n.process ~= nil then
        _temp549 = _n:process(_temp550,_temp551)
      elseif _n.no_undermethod ~= nil then
        _temp549 =  _n:no_undermethod(string:new("process") , _temp550,_temp551)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp549)
      if _f.process ~= nil then
        _temp549 = _f:process(_temp550,_temp551)
      elseif _f.no_undermethod ~= nil then
        _temp549 =  _f:no_undermethod(string:new("process") , _temp550,_temp551)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp549 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp549))
      end


do
local _temp556 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp556 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp556 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp556 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp556 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp556 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp556 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp556 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp556 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp556 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp556 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp557 = nil
      local _t = _type(_temp556)
      if _t == "table" then
                      if _type(_temp556.out) == "function" or (_type(_temp556.out) == "table" and _rawget(_temp556.out, "__call_thing")) then
        _temp557 = _temp556:out()
      elseif _temp556.out ~= nil then
        _temp557 = _temp556.out

        elseif _temp556.no_undermethod ~= nil then
          _temp557 =  _temp556:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp556, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp556)
      if _n.out ~= nil then
        _temp557 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp557 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp556, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp556)
      if _f.out ~= nil then
        _temp557 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp557 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp556, "out"))
      end

      elseif _temp556 == nil then
        _error(exception:null_error("_temp556", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp556))
      end

local _temp558 = nil
        local _t = _type(_temp549)
        if _t == "table" then
          if _rawget(_temp549, "__call_thing") == nil then
            _temp558 = _temp549
          else
                  if _temp549 == nil then
              if _type(_self._temp549) == "function" or (_type(_self._temp549) == "table" and _rawget(_self._temp549, "__call_thing")) then
        _temp558 =  _self:_temp549()
      elseif _self._temp549 ~= nil then
        _temp558 =  _self._temp549

        elseif _self.no_undermethod ~= nil then
          _temp558 =  _self:no_undermethod(string:new("_temp549"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp558 =  _temp549(_self)
      end

          end
        elseif _t == "number" then
          _temp558 = _temp549
        elseif _t == "function" then
                if _temp549 == nil then
              if _type(_self._temp549) == "function" or (_type(_self._temp549) == "table" and _rawget(_self._temp549, "__call_thing")) then
        _temp558 =  _self:_temp549()
      elseif _self._temp549 ~= nil then
        _temp558 =  _self._temp549

        elseif _self.no_undermethod ~= nil then
          _temp558 =  _self:no_undermethod(string:new("_temp549"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp558 =  _temp549(_self)
      end

        elseif _temp549 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp558)
      if _t == "table" then
                      if _type(_temp558.out) == "function" or (_type(_temp558.out) == "table" and _rawget(_temp558.out, "__call_thing")) then
        _temp558 = _temp558:out()
      elseif _temp558.out ~= nil then
        _temp558 = _temp558.out

        elseif _temp558.no_undermethod ~= nil then
          _temp558 =  _temp558:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp558, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp558)
      if _n.out ~= nil then
        _temp558 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp558 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp558, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp558)
      if _f.out ~= nil then
        _temp558 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp558 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp558, "out"))
      end

      elseif _temp558 == nil then
        _error(exception:null_error("_temp558", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp558))
      end

local _temp559
      local _t = _type(_temp557)
      if _t == "table" then
                      if _type(_temp557._less_less) == "function" or (_type(_temp557._less_less) == "table" and _rawget(_temp557._less_less, "__call_thing")) then
        _temp559 = _temp557:_less_less(_temp558)
      elseif _temp557._less_less ~= nil then
        _temp559 = _temp557._less_less

        elseif _temp557.no_undermethod ~= nil then
          _temp559 =  _temp557:no_undermethod(string:new("<<") , _temp558)
        else
          _error(exception:method_error(_temp557, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp557)
      if _n._less_less ~= nil then
        _temp559 = _n:_less_less(_temp558)
      elseif _n.no_undermethod ~= nil then
        _temp559 =  _n:no_undermethod(string:new("<<") , _temp558)
      else
        _error(exception:method_error(_temp557, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp557)
      if _f._less_less ~= nil then
        _temp559 = _f:_less_less(_temp558)
      elseif _f.no_undermethod ~= nil then
        _temp559 =  _f:no_undermethod(string:new("<<") , _temp558)
      else
        _error(exception:method_error(_temp557, "<<"))
      end

      elseif _temp557 == nil then
        _error(exception:null_error("_temp557", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp557))
      end

_dummy_ = _temp559 
end

local _temp551 
do
local _temp560 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp560 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp560 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp560 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp560 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp560 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp560 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp560 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp560 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp560 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp560 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp561 = nil
      local _t = _type(_temp560)
      if _t == "table" then
                      if _type(_temp560.out) == "function" or (_type(_temp560.out) == "table" and _rawget(_temp560.out, "__call_thing")) then
        _temp561 = _temp560:out()
      elseif _temp560.out ~= nil then
        _temp561 = _temp560.out

        elseif _temp560.no_undermethod ~= nil then
          _temp561 =  _temp560:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp560, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp560)
      if _n.out ~= nil then
        _temp561 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp561 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp560, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp560)
      if _f.out ~= nil then
        _temp561 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp561 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp560, "out"))
      end

      elseif _temp560 == nil then
        _error(exception:null_error("_temp560", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp560))
      end

local _temp562 = nil
do
local _temp563 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp563 =  _temp522(_self)

    elseif _temp522 then
      _temp563 =  _temp522
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp563 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp563 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp563 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp563 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp564 
do
local _temp565 = nil
    if _type(_temp530) == "function" or (_type(_temp530) == "table" and _rawget(_temp530, "__call_thing")) then
      _temp565 =  _temp530(_self)

    elseif _temp530 then
      _temp565 =  _temp530
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp565 =  _self:i()
      elseif _self.i ~= nil then
        _temp565 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp565 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp565 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp566
      local _t = _type(_temp565)
      if _t == "table" then
                      if _type(_temp565._plus) == "function" or (_type(_temp565._plus) == "table" and _rawget(_temp565._plus, "__call_thing")) then
        _temp566 = _temp565:_plus(1)
      elseif _temp565._plus ~= nil then
        _temp566 = _temp565._plus

        elseif _temp565.no_undermethod ~= nil then
          _temp566 =  _temp565:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp565, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp566 = _temp565 + 1
      else
              local _n = number:new(_temp565)
      if _n._plus ~= nil then
        _temp566 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp566 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp565, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp565)
      if _f._plus ~= nil then
        _temp566 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp566 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp565, "+"))
      end

      elseif _temp565 == nil then
        _error(exception:null_error("_temp565", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp565))
      end

_temp564 = _temp566 
end

local _temp567 = nil
        local _t = _type(_temp549)
        if _t == "table" then
          if _rawget(_temp549, "__call_thing") == nil then
            _temp567 = _temp549
          else
                  if _temp549 == nil then
              if _type(_self._temp549) == "function" or (_type(_self._temp549) == "table" and _rawget(_self._temp549, "__call_thing")) then
        _temp567 =  _self:_temp549()
      elseif _self._temp549 ~= nil then
        _temp567 =  _self._temp549

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp549"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp567 =  _temp549(_self)
      end

          end
        elseif _t == "number" then
          _temp567 = _temp549
        elseif _t == "function" then
                if _temp549 == nil then
              if _type(_self._temp549) == "function" or (_type(_self._temp549) == "table" and _rawget(_self._temp549, "__call_thing")) then
        _temp567 =  _self:_temp549()
      elseif _self._temp549 ~= nil then
        _temp567 =  _self._temp549

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp549"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp567 =  _temp549(_self)
      end

        elseif _temp549 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp567)
      if _t == "table" then
                      if _type(_temp567.var) == "function" or (_type(_temp567.var) == "table" and _rawget(_temp567.var, "__call_thing")) then
        _temp567 = _temp567:var()
      elseif _temp567.var ~= nil then
        _temp567 = _temp567.var

        elseif _temp567.no_undermethod ~= nil then
          _temp567 =  _temp567:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp567, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp567)
      if _n.var ~= nil then
        _temp567 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp567, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp567)
      if _f.var ~= nil then
        _temp567 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp567, "var"))
      end

      elseif _temp567 == nil then
        _error(exception:null_error("_temp567", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp567))
      end


_temp562 = string:new("" .. _tostring(_temp563) .. "[" .. _tostring(_temp564) .. "] = _tostring(" .. _tostring(_temp567) .. ")\n")
end
local _temp568
      local _t = _type(_temp561)
      if _t == "table" then
                      if _type(_temp561._less_less) == "function" or (_type(_temp561._less_less) == "table" and _rawget(_temp561._less_less, "__call_thing")) then
        _temp568 = _temp561:_less_less(_temp562)
      elseif _temp561._less_less ~= nil then
        _temp568 = _temp561._less_less

        elseif _temp561.no_undermethod ~= nil then
          _temp568 =  _temp561:no_undermethod(string:new("<<") , _temp562)
        else
          _error(exception:method_error(_temp561, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp561)
      if _n._less_less ~= nil then
        _temp568 = _n:_less_less(_temp562)
      elseif _n.no_undermethod ~= nil then
        _temp568 =  _n:no_undermethod(string:new("<<") , _temp562)
      else
        _error(exception:method_error(_temp561, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp561)
      if _f._less_less ~= nil then
        _temp568 = _f:_less_less(_temp562)
      elseif _f.no_undermethod ~= nil then
        _temp568 =  _f:no_undermethod(string:new("<<") , _temp562)
      else
        _error(exception:method_error(_temp561, "<<"))
      end

      elseif _temp561 == nil then
        _error(exception:null_error("_temp561", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp561))
      end

_temp551 = _temp568 
end

return _temp551
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp531,_temp548,_temp569)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp531,_temp548,_temp569)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp531,_temp548,_temp569)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp531,_temp548,_temp569)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.each_underwith_underindex) == "function" or (_type(_temp521.each_underwith_underindex) == "table" and _rawget(_temp521.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp521:each_underwith_underindex(_temp571)
      elseif _temp521.each_underwith_underindex ~= nil then
        _dummy_ = _temp521.each_underwith_underindex

        elseif _temp521.no_undermethod ~= nil then
          _dummy_ =  _temp521:no_undermethod(string:new("each_with_index") , _temp571)
        else
          _error(exception:method_error(_temp521, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp571)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp571)
      else
        _error(exception:method_error(_temp521, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp571)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp571)
      else
        _error(exception:method_error(_temp521, "each_with_index"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("_temp521", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

do
local _temp572 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp572 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp572 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp572 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp572 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp572 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp572 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp572 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp572 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp572 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp572 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp573 = nil
      local _t = _type(_temp572)
      if _t == "table" then
                      if _type(_temp572.out) == "function" or (_type(_temp572.out) == "table" and _rawget(_temp572.out, "__call_thing")) then
        _temp573 = _temp572:out()
      elseif _temp572.out ~= nil then
        _temp573 = _temp572.out

        elseif _temp572.no_undermethod ~= nil then
          _temp573 =  _temp572:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp572, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp572)
      if _n.out ~= nil then
        _temp573 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp573 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp572, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp572)
      if _f.out ~= nil then
        _temp573 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp573 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp572, "out"))
      end

      elseif _temp572 == nil then
        _error(exception:null_error("_temp572", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp572))
      end

local _temp574 = nil
do
local _temp575 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp575 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp575 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp575 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp575 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp575 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp575 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp575 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp575 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.var) == "function" or (_type(_temp575.var) == "table" and _rawget(_temp575.var, "__call_thing")) then
        _temp575 = _temp575:var()
      elseif _temp575.var ~= nil then
        _temp575 = _temp575.var

        elseif _temp575.no_undermethod ~= nil then
          _temp575 =  _temp575:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp575, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.var ~= nil then
        _temp575 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp575 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp575, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.var ~= nil then
        _temp575 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp575 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp575, "var"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("_temp575", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end


local _temp576 = nil
    if _type(_temp522) == "function" or (_type(_temp522) == "table" and _rawget(_temp522, "__call_thing")) then
      _temp576 =  _temp522(_self)

    elseif _temp522 then
      _temp576 =  _temp522
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp576 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp576 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp576 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp576 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp574 = string:new("" .. _tostring(_temp575) .. " = string:new(_table.concat(" .. _tostring(_temp576) .. "))\nend\n")
end
local _temp577
      local _t = _type(_temp573)
      if _t == "table" then
                      if _type(_temp573._less_less) == "function" or (_type(_temp573._less_less) == "table" and _rawget(_temp573._less_less, "__call_thing")) then
        _temp577 = _temp573:_less_less(_temp574)
      elseif _temp573._less_less ~= nil then
        _temp577 = _temp573._less_less

        elseif _temp573.no_undermethod ~= nil then
          _temp577 =  _temp573:no_undermethod(string:new("<<") , _temp574)
        else
          _error(exception:method_error(_temp573, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp573)
      if _n._less_less ~= nil then
        _temp577 = _n:_less_less(_temp574)
      elseif _n.no_undermethod ~= nil then
        _temp577 =  _n:no_undermethod(string:new("<<") , _temp574)
      else
        _error(exception:method_error(_temp573, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp573)
      if _f._less_less ~= nil then
        _temp577 = _f:_less_less(_temp574)
      elseif _f.no_undermethod ~= nil then
        _temp577 =  _f:no_undermethod(string:new("<<") , _temp574)
      else
        _error(exception:method_error(_temp573, "<<"))
      end

      elseif _temp573 == nil then
        _error(exception:null_error("_temp573", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp573))
      end

_dummy_ = _temp577 
end

    if _type(_temp520) == "function" or (_type(_temp520) == "table" and _rawget(_temp520, "__call_thing")) then
      return  _temp520(_self)

    elseif _temp520 then
      return  _temp520
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp517)
      if _t == "table" then
                      if _type(_temp517.walk) == "function" or (_type(_temp517.walk) == "table" and _rawget(_temp517.walk, "__call_thing")) then
        _dummy_ = _temp517:walk(_temp4,_temp521)
      elseif _temp517.walk ~= nil then
        _dummy_ = _temp517.walk

        elseif _temp517.no_undermethod ~= nil then
          _dummy_ =  _temp517:no_undermethod(string:new("walk") , _temp4,_temp521)
        else
          _error(exception:method_error(_temp517, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp517)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp521)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp521)
      else
        _error(exception:method_error(_temp517, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp517)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp521)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp521)
      else
        _error(exception:method_error(_temp517, "walk"))
      end

      elseif _temp517 == nil then
        _error(exception:null_error("_temp517", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp517))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp521 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp521 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp521 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp521 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp521 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp521 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp521 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp521 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp521 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp589 = function (_self, _temp579,_temp578)
        if _temp579 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp578 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp578 =  null(_self)

    elseif null then
      _temp578 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp578 =  _self:null()
      elseif _self.null ~= nil then
        _temp578 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp578 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp578 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp580
local _temp581 = nil
    if _type(_temp578) == "function" or (_type(_temp578) == "table" and _rawget(_temp578, "__call_thing")) then
      _temp581 =  _temp578(_self)

    elseif _temp578 then
      _temp581 =  _temp578
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp581 =  _self:var()
      elseif _self.var ~= nil then
        _temp581 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp581 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp581 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp580 =  set_underresult(_self, _temp581)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp580 =  _self:set_underresult(_temp581)
      elseif _self.set_underresult ~= nil then
        _temp580 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp580 =  _self:no_undermethod(string:new("set_result") , _temp581)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp580 =  no_undermethod(_self, string:new("set_result") , _temp581)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp582
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp582 =  my(_self)

    elseif my then
      _temp582 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp582 =  _self:my()
      elseif _self.my ~= nil then
        _temp582 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp582 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp582 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp583
        local _t = _type(_temp579)
        if _t == "table" then
          if _rawget(_temp579, "__call_thing") == nil then
            _temp583 = _temp579
          else
                  if _temp579 == nil then
              if _type(_self._temp579) == "function" or (_type(_self._temp579) == "table" and _rawget(_self._temp579, "__call_thing")) then
        _temp583 =  _self:_temp579()
      elseif _self._temp579 ~= nil then
        _temp583 =  _self._temp579

        elseif _self.no_undermethod ~= nil then
          _temp583 =  _self:no_undermethod(string:new("_temp579"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp583 =  _temp579(_self)
      end

          end
        elseif _t == "number" then
          _temp583 = _temp579
        elseif _t == "function" then
                if _temp579 == nil then
              if _type(_self._temp579) == "function" or (_type(_self._temp579) == "table" and _rawget(_self._temp579, "__call_thing")) then
        _temp583 =  _self:_temp579()
      elseif _self._temp579 ~= nil then
        _temp583 =  _self._temp579

        elseif _self.no_undermethod ~= nil then
          _temp583 =  _self:no_undermethod(string:new("_temp579"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp583 =  _temp579(_self)
      end

        elseif _temp579 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp583)
      if _t == "table" then
                      if _type(_temp583.nodes) == "function" or (_type(_temp583.nodes) == "table" and _rawget(_temp583.nodes, "__call_thing")) then
        _temp583 = _temp583:nodes()
      elseif _temp583.nodes ~= nil then
        _temp583 = _temp583.nodes

        elseif _temp583.no_undermethod ~= nil then
          _temp583 =  _temp583:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp583)
      if _n.nodes ~= nil then
        _temp583 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp583 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp583)
      if _f.nodes ~= nil then
        _temp583 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp583 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp583 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp583))
      end


local _temp589 = function (_self, _temp584)
        if _temp584 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp585 = nil
        local _t = _type(_temp582)
        if _t == "table" then
          if _rawget(_temp582, "__call_thing") == nil then
            _temp585 = _temp582
          else
                  if _temp582 == nil then
              if _type(_self._temp582) == "function" or (_type(_self._temp582) == "table" and _rawget(_self._temp582, "__call_thing")) then
        _temp585 =  _self:_temp582()
      elseif _self._temp582 ~= nil then
        _temp585 =  _self._temp582

        elseif _self.no_undermethod ~= nil then
          _temp585 =  _self:no_undermethod(string:new("_temp582"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp585 =  _temp582(_self)
      end

          end
        elseif _t == "number" then
          _temp585 = _temp582
        elseif _t == "function" then
                if _temp582 == nil then
              if _type(_self._temp582) == "function" or (_type(_self._temp582) == "table" and _rawget(_self._temp582, "__call_thing")) then
        _temp585 =  _self:_temp582()
      elseif _self._temp582 ~= nil then
        _temp585 =  _self._temp582

        elseif _self.no_undermethod ~= nil then
          _temp585 =  _self:no_undermethod(string:new("_temp582"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp585 =  _temp582(_self)
      end

        elseif _temp582 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp586 = nil
    if _type(_temp584) == "function" or (_type(_temp584) == "table" and _rawget(_temp584, "__call_thing")) then
      _temp586 =  _temp584(_self)

    elseif _temp584 then
      _temp586 =  _temp584
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp586 =  _self:n()
      elseif _self.n ~= nil then
        _temp586 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp586 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp586 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp587 = nil
        local _t = _type(_temp580)
        if _t == "table" then
          if _rawget(_temp580, "__call_thing") == nil then
            _temp587 = _temp580
          else
                  if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp587 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp587 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp587 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp587 =  _temp580(_self)
      end

          end
        elseif _t == "number" then
          _temp587 = _temp580
        elseif _t == "function" then
                if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp587 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp587 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp587 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp587 =  _temp580(_self)
      end

        elseif _temp580 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp587)
      if _t == "table" then
                      if _type(_temp587.var) == "function" or (_type(_temp587.var) == "table" and _rawget(_temp587.var, "__call_thing")) then
        _temp587 = _temp587:var()
      elseif _temp587.var ~= nil then
        _temp587 = _temp587.var

        elseif _temp587.no_undermethod ~= nil then
          _temp587 =  _temp587:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp587, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp587)
      if _n.var ~= nil then
        _temp587 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp587 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp587, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp587)
      if _f.var ~= nil then
        _temp587 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp587 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp587, "var"))
      end

      elseif _temp587 == nil then
        _error(exception:null_error("_temp587", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp587))
      end


      local _t = _type(_temp585)
      if _t == "table" then
                      if _type(_temp585.process) == "function" or (_type(_temp585.process) == "table" and _rawget(_temp585.process, "__call_thing")) then
        return _temp585:process(_temp586,_temp587)
      elseif _temp585.process ~= nil then
        return _temp585.process

        elseif _temp585.no_undermethod ~= nil then
          return  _temp585:no_undermethod(string:new("process") , _temp586,_temp587)
        else
          _error(exception:method_error(_temp585, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp585)
      if _n.process ~= nil then
        return _n:process(_temp586,_temp587)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp586,_temp587)
      else
        _error(exception:method_error(_temp585, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp585)
      if _f.process ~= nil then
        return _f:process(_temp586,_temp587)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp586,_temp587)
      else
        _error(exception:method_error(_temp585, "process"))
      end

      elseif _temp585 == nil then
        _error(exception:null_error("_temp585", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp585))
      end

end

      local _t = _type(_temp583)
      if _t == "table" then
                      if _type(_temp583.map) == "function" or (_type(_temp583.map) == "table" and _rawget(_temp583.map, "__call_thing")) then
        _temp583 = _temp583:map(_temp589)
      elseif _temp583.map ~= nil then
        _temp583 = _temp583.map

        elseif _temp583.no_undermethod ~= nil then
          _temp583 =  _temp583:no_undermethod(string:new("map") , _temp589)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp583)
      if _n.map ~= nil then
        _temp583 = _n:map(_temp589)
      elseif _n.no_undermethod ~= nil then
        _temp583 =  _n:no_undermethod(string:new("map") , _temp589)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp583)
      if _f.map ~= nil then
        _temp583 = _f:map(_temp589)
      elseif _f.no_undermethod ~= nil then
        _temp583 =  _f:no_undermethod(string:new("map") , _temp589)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp583 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp583))
      end


do
local _temp590 = nil
        local _t = _type(_temp580)
        if _t == "table" then
          if _rawget(_temp580, "__call_thing") == nil then
            _temp590 = _temp580
          else
                  if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp590 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp590 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp590 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp590 =  _temp580(_self)
      end

          end
        elseif _t == "number" then
          _temp590 = _temp580
        elseif _t == "function" then
                if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp590 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp590 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp590 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp590 =  _temp580(_self)
      end

        elseif _temp580 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp591 = nil
      local _t = _type(_temp590)
      if _t == "table" then
                      if _type(_temp590.out) == "function" or (_type(_temp590.out) == "table" and _rawget(_temp590.out, "__call_thing")) then
        _temp591 = _temp590:out()
      elseif _temp590.out ~= nil then
        _temp591 = _temp590.out

        elseif _temp590.no_undermethod ~= nil then
          _temp591 =  _temp590:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp590, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp590)
      if _n.out ~= nil then
        _temp591 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp591 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp590, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp590)
      if _f.out ~= nil then
        _temp591 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp591 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp590, "out"))
      end

      elseif _temp590 == nil then
        _error(exception:null_error("_temp590", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp590))
      end

local _temp592 = nil
        local _t = _type(_temp583)
        if _t == "table" then
          if _rawget(_temp583, "__call_thing") == nil then
            _temp592 = _temp583
          else
                  if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp592 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp592 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp592 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp592 =  _temp583(_self)
      end

          end
        elseif _t == "number" then
          _temp592 = _temp583
        elseif _t == "function" then
                if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp592 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp592 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp592 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp592 =  _temp583(_self)
      end

        elseif _temp583 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp593 = string:new("out")

      local _t = _type(_temp592)
      if _t == "table" then
                      if _type(_temp592.map) == "function" or (_type(_temp592.map) == "table" and _rawget(_temp592.map, "__call_thing")) then
        _temp592 = _temp592:map(_temp593)
      elseif _temp592.map ~= nil then
        _temp592 = _temp592.map

        elseif _temp592.no_undermethod ~= nil then
          _temp592 =  _temp592:no_undermethod(string:new("map") , _temp593)
        else
          _error(exception:method_error(_temp592, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp592)
      if _n.map ~= nil then
        _temp592 = _n:map(_temp593)
      elseif _n.no_undermethod ~= nil then
        _temp592 =  _n:no_undermethod(string:new("map") , _temp593)
      else
        _error(exception:method_error(_temp592, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp592)
      if _f.map ~= nil then
        _temp592 = _f:map(_temp593)
      elseif _f.no_undermethod ~= nil then
        _temp592 =  _f:no_undermethod(string:new("map") , _temp593)
      else
        _error(exception:method_error(_temp592, "map"))
      end

      elseif _temp592 == nil then
        _error(exception:null_error("_temp592", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp592))
      end

_temp593 = string:new("\n")

      local _t = _type(_temp592)
      if _t == "table" then
                      if _type(_temp592.join) == "function" or (_type(_temp592.join) == "table" and _rawget(_temp592.join, "__call_thing")) then
        _temp592 = _temp592:join(_temp593)
      elseif _temp592.join ~= nil then
        _temp592 = _temp592.join

        elseif _temp592.no_undermethod ~= nil then
          _temp592 =  _temp592:no_undermethod(string:new("join") , _temp593)
        else
          _error(exception:method_error(_temp592, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp592)
      if _n.join ~= nil then
        _temp592 = _n:join(_temp593)
      elseif _n.no_undermethod ~= nil then
        _temp592 =  _n:no_undermethod(string:new("join") , _temp593)
      else
        _error(exception:method_error(_temp592, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp592)
      if _f.join ~= nil then
        _temp592 = _f:join(_temp593)
      elseif _f.no_undermethod ~= nil then
        _temp592 =  _f:no_undermethod(string:new("join") , _temp593)
      else
        _error(exception:method_error(_temp592, "join"))
      end

      elseif _temp592 == nil then
        _error(exception:null_error("_temp592", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp592))
      end

local _temp593
      local _t = _type(_temp591)
      if _t == "table" then
                      if _type(_temp591._less_less) == "function" or (_type(_temp591._less_less) == "table" and _rawget(_temp591._less_less, "__call_thing")) then
        _temp593 = _temp591:_less_less(_temp592)
      elseif _temp591._less_less ~= nil then
        _temp593 = _temp591._less_less

        elseif _temp591.no_undermethod ~= nil then
          _temp593 =  _temp591:no_undermethod(string:new("<<") , _temp592)
        else
          _error(exception:method_error(_temp591, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp591)
      if _n._less_less ~= nil then
        _temp593 = _n:_less_less(_temp592)
      elseif _n.no_undermethod ~= nil then
        _temp593 =  _n:no_undermethod(string:new("<<") , _temp592)
      else
        _error(exception:method_error(_temp591, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp591)
      if _f._less_less ~= nil then
        _temp593 = _f:_less_less(_temp592)
      elseif _f.no_undermethod ~= nil then
        _temp593 =  _f:no_undermethod(string:new("<<") , _temp592)
      else
        _error(exception:method_error(_temp591, "<<"))
      end

      elseif _temp591 == nil then
        _error(exception:null_error("_temp591", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp591))
      end

_dummy_ = _temp593 
end

local _temp589 
do
local _temp594 = nil
        local _t = _type(_temp580)
        if _t == "table" then
          if _rawget(_temp580, "__call_thing") == nil then
            _temp594 = _temp580
          else
                  if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp594 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp594 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp580(_self)
      end

          end
        elseif _t == "number" then
          _temp594 = _temp580
        elseif _t == "function" then
                if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp594 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp594 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp580(_self)
      end

        elseif _temp580 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp595 = nil
      local _t = _type(_temp594)
      if _t == "table" then
                      if _type(_temp594.var) == "function" or (_type(_temp594.var) == "table" and _rawget(_temp594.var, "__call_thing")) then
        _temp595 = _temp594:var()
      elseif _temp594.var ~= nil then
        _temp595 = _temp594.var

        elseif _temp594.no_undermethod ~= nil then
          _temp595 =  _temp594:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp594, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp594)
      if _n.var ~= nil then
        _temp595 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp595 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp594, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp594)
      if _f.var ~= nil then
        _temp595 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp595 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp594, "var"))
      end

      elseif _temp594 == nil then
        _error(exception:null_error("_temp594", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp594))
      end

local _temp596 = nil
        local _t = _type(_temp583)
        if _t == "table" then
          if _rawget(_temp583, "__call_thing") == nil then
            _temp596 = _temp583
          else
                  if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp596 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp596 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp596 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp596 =  _temp583(_self)
      end

          end
        elseif _t == "number" then
          _temp596 = _temp583
        elseif _t == "function" then
                if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp596 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp596 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp596 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp596 =  _temp583(_self)
      end

        elseif _temp583 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp596)
      if _t == "table" then
                      if _type(_temp596.last) == "function" or (_type(_temp596.last) == "table" and _rawget(_temp596.last, "__call_thing")) then
        _temp596 = _temp596:last()
      elseif _temp596.last ~= nil then
        _temp596 = _temp596.last

        elseif _temp596.no_undermethod ~= nil then
          _temp596 =  _temp596:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp596, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp596)
      if _n.last ~= nil then
        _temp596 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp596 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp596, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp596)
      if _f.last ~= nil then
        _temp596 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp596 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp596, "last"))
      end

      elseif _temp596 == nil then
        _error(exception:null_error("_temp596", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp596))
      end

      local _t = _type(_temp596)
      if _t == "table" then
                      if _type(_temp596.var) == "function" or (_type(_temp596.var) == "table" and _rawget(_temp596.var, "__call_thing")) then
        _temp596 = _temp596:var()
      elseif _temp596.var ~= nil then
        _temp596 = _temp596.var

        elseif _temp596.no_undermethod ~= nil then
          _temp596 =  _temp596:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp596, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp596)
      if _n.var ~= nil then
        _temp596 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp596 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp596, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp596)
      if _f.var ~= nil then
        _temp596 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp596 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp596, "var"))
      end

      elseif _temp596 == nil then
        _error(exception:null_error("_temp596", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp596))
      end

local _temp597
      local _t = _type(_temp595)
      if _t == "table" then
                      if _type(_temp595._bang_equal) == "function" or (_type(_temp595._bang_equal) == "table" and _rawget(_temp595._bang_equal, "__call_thing")) then
        _temp597 = _temp595:_bang_equal(_temp596)
      elseif _temp595._bang_equal ~= nil then
        _temp597 = _temp595._bang_equal

        elseif _temp595.no_undermethod ~= nil then
          _temp597 =  _temp595:no_undermethod(string:new("!=") , _temp596)
        else
          _error(exception:method_error(_temp595, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp595)
      if _n._bang_equal ~= nil then
        _temp597 = _n:_bang_equal(_temp596)
      elseif _n.no_undermethod ~= nil then
        _temp597 =  _n:no_undermethod(string:new("!=") , _temp596)
      else
        _error(exception:method_error(_temp595, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp595)
      if _f._bang_equal ~= nil then
        _temp597 = _f:_bang_equal(_temp596)
      elseif _f.no_undermethod ~= nil then
        _temp597 =  _f:no_undermethod(string:new("!=") , _temp596)
      else
        _error(exception:method_error(_temp595, "!="))
      end

      elseif _temp595 == nil then
        _error(exception:null_error("_temp595", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp595))
      end

_temp589 = _temp597 
end


local _temp606 = function (_self)

local _temp598 
do
local _temp599 = nil
        local _t = _type(_temp580)
        if _t == "table" then
          if _rawget(_temp580, "__call_thing") == nil then
            _temp599 = _temp580
          else
                  if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp599 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp599 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp599 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp599 =  _temp580(_self)
      end

          end
        elseif _t == "number" then
          _temp599 = _temp580
        elseif _t == "function" then
                if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp599 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp599 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp599 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp599 =  _temp580(_self)
      end

        elseif _temp580 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp600 = nil
      local _t = _type(_temp599)
      if _t == "table" then
                      if _type(_temp599.out) == "function" or (_type(_temp599.out) == "table" and _rawget(_temp599.out, "__call_thing")) then
        _temp600 = _temp599:out()
      elseif _temp599.out ~= nil then
        _temp600 = _temp599.out

        elseif _temp599.no_undermethod ~= nil then
          _temp600 =  _temp599:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp599, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp599)
      if _n.out ~= nil then
        _temp600 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp599, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp599)
      if _f.out ~= nil then
        _temp600 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp599, "out"))
      end

      elseif _temp599 == nil then
        _error(exception:null_error("_temp599", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp599))
      end

local _temp601 = nil
do
local _temp602 = nil
        local _t = _type(_temp580)
        if _t == "table" then
          if _rawget(_temp580, "__call_thing") == nil then
            _temp602 = _temp580
          else
                  if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp602 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp602 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp580(_self)
      end

          end
        elseif _t == "number" then
          _temp602 = _temp580
        elseif _t == "function" then
                if _temp580 == nil then
              if _type(_self._temp580) == "function" or (_type(_self._temp580) == "table" and _rawget(_self._temp580, "__call_thing")) then
        _temp602 =  _self:_temp580()
      elseif _self._temp580 ~= nil then
        _temp602 =  _self._temp580

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp580"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp580(_self)
      end

        elseif _temp580 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp602)
      if _t == "table" then
                      if _type(_temp602.var) == "function" or (_type(_temp602.var) == "table" and _rawget(_temp602.var, "__call_thing")) then
        _temp602 = _temp602:var()
      elseif _temp602.var ~= nil then
        _temp602 = _temp602.var

        elseif _temp602.no_undermethod ~= nil then
          _temp602 =  _temp602:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp602, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp602)
      if _n.var ~= nil then
        _temp602 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp602 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp602, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp602)
      if _f.var ~= nil then
        _temp602 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp602 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp602, "var"))
      end

      elseif _temp602 == nil then
        _error(exception:null_error("_temp602", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp602))
      end


local _temp603 = nil
        local _t = _type(_temp583)
        if _t == "table" then
          if _rawget(_temp583, "__call_thing") == nil then
            _temp603 = _temp583
          else
                  if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp603 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp603 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp603 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp603 =  _temp583(_self)
      end

          end
        elseif _t == "number" then
          _temp603 = _temp583
        elseif _t == "function" then
                if _temp583 == nil then
              if _type(_self._temp583) == "function" or (_type(_self._temp583) == "table" and _rawget(_self._temp583, "__call_thing")) then
        _temp603 =  _self:_temp583()
      elseif _self._temp583 ~= nil then
        _temp603 =  _self._temp583

        elseif _self.no_undermethod ~= nil then
          _temp603 =  _self:no_undermethod(string:new("_temp583"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp603 =  _temp583(_self)
      end

        elseif _temp583 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp603)
      if _t == "table" then
                      if _type(_temp603.last) == "function" or (_type(_temp603.last) == "table" and _rawget(_temp603.last, "__call_thing")) then
        _temp603 = _temp603:last()
      elseif _temp603.last ~= nil then
        _temp603 = _temp603.last

        elseif _temp603.no_undermethod ~= nil then
          _temp603 =  _temp603:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp603, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp603)
      if _n.last ~= nil then
        _temp603 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp603 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp603, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp603)
      if _f.last ~= nil then
        _temp603 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp603 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp603, "last"))
      end

      elseif _temp603 == nil then
        _error(exception:null_error("_temp603", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp603))
      end

      local _t = _type(_temp603)
      if _t == "table" then
                      if _type(_temp603.var) == "function" or (_type(_temp603.var) == "table" and _rawget(_temp603.var, "__call_thing")) then
        _temp603 = _temp603:var()
      elseif _temp603.var ~= nil then
        _temp603 = _temp603.var

        elseif _temp603.no_undermethod ~= nil then
          _temp603 =  _temp603:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp603, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp603)
      if _n.var ~= nil then
        _temp603 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp603 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp603, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp603)
      if _f.var ~= nil then
        _temp603 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp603 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp603, "var"))
      end

      elseif _temp603 == nil then
        _error(exception:null_error("_temp603", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp603))
      end


_temp601 = string:new("\n" .. _tostring(_temp602) .. " = " .. _tostring(_temp603) .. "\n")
end
local _temp604
      local _t = _type(_temp600)
      if _t == "table" then
                      if _type(_temp600._less_less) == "function" or (_type(_temp600._less_less) == "table" and _rawget(_temp600._less_less, "__call_thing")) then
        _temp604 = _temp600:_less_less(_temp601)
      elseif _temp600._less_less ~= nil then
        _temp604 = _temp600._less_less

        elseif _temp600.no_undermethod ~= nil then
          _temp604 =  _temp600:no_undermethod(string:new("<<") , _temp601)
        else
          _error(exception:method_error(_temp600, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp600)
      if _n._less_less ~= nil then
        _temp604 = _n:_less_less(_temp601)
      elseif _n.no_undermethod ~= nil then
        _temp604 =  _n:no_undermethod(string:new("<<") , _temp601)
      else
        _error(exception:method_error(_temp600, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp600)
      if _f._less_less ~= nil then
        _temp604 = _f:_less_less(_temp601)
      elseif _f.no_undermethod ~= nil then
        _temp604 =  _f:no_undermethod(string:new("<<") , _temp601)
      else
        _error(exception:method_error(_temp600, "<<"))
      end

      elseif _temp600 == nil then
        _error(exception:null_error("_temp600", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp600))
      end

_temp598 = _temp604 
end

return _temp598
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp589,_temp606)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp589,_temp606)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp589,_temp606)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp589,_temp606)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp580) == "function" or (_type(_temp580) == "table" and _rawget(_temp580, "__call_thing")) then
      return  _temp580(_self)

    elseif _temp580 then
      return  _temp580
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp521)
      if _t == "table" then
                      if _type(_temp521.walk) == "function" or (_type(_temp521.walk) == "table" and _rawget(_temp521.walk, "__call_thing")) then
        _dummy_ = _temp521:walk(_temp4,_temp589)
      elseif _temp521.walk ~= nil then
        _dummy_ = _temp521.walk

        elseif _temp521.no_undermethod ~= nil then
          _dummy_ =  _temp521:no_undermethod(string:new("walk") , _temp4,_temp589)
        else
          _error(exception:method_error(_temp521, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp521)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp589)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp589)
      else
        _error(exception:method_error(_temp521, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp521)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp589)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp589)
      else
        _error(exception:method_error(_temp521, "walk"))
      end

      elseif _temp521 == nil then
        _error(exception:null_error("_temp521", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp521))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp589 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp589 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp589 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp589 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp589 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp589 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp589 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp589 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp612 = function (_self, _temp608,_temp607)
        if _temp608 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp607 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp607 =  null(_self)

    elseif null then
      _temp607 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp607 =  _self:null()
      elseif _self.null ~= nil then
        _temp607 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp607 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp607 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp609
local _temp610 = nil
    if _type(_temp608) == "function" or (_type(_temp608) == "table" and _rawget(_temp608, "__call_thing")) then
      _temp610 =  _temp608(_self)

    elseif _temp608 then
      _temp610 =  _temp608
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp610 =  _self:node()
      elseif _self.node ~= nil then
        _temp610 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp610 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp610 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp609 =  reorder_underops(_self, _temp610)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp609 =  _self:reorder_underops(_temp610)
      elseif _self.reorder_underops ~= nil then
        _temp609 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp609 =  _self:no_undermethod(string:new("reorder_ops") , _temp610)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp609 =  no_undermethod(_self, string:new("reorder_ops") , _temp610)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp609) == "function" or (_type(_temp609) == "table" and _rawget(_temp609, "__call_thing")) then
      _temp610 =  _temp609(_self)

    elseif _temp609 then
      _temp610 =  _temp609
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp610 =  _self:res()
      elseif _self.res ~= nil then
        _temp610 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp610 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp610 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp610)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp610)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp610)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp610)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp589)
      if _t == "table" then
                      if _type(_temp589.walk) == "function" or (_type(_temp589.walk) == "table" and _rawget(_temp589.walk, "__call_thing")) then
        _dummy_ = _temp589:walk(_temp4,_temp612)
      elseif _temp589.walk ~= nil then
        _dummy_ = _temp589.walk

        elseif _temp589.no_undermethod ~= nil then
          _dummy_ =  _temp589:no_undermethod(string:new("walk") , _temp4,_temp612)
        else
          _error(exception:method_error(_temp589, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp589)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp612)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp612)
      else
        _error(exception:method_error(_temp589, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp589)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp612)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp612)
      else
        _error(exception:method_error(_temp589, "walk"))
      end

      elseif _temp589 == nil then
        _error(exception:null_error("_temp589", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp589))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp612 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp612 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp612 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp612 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp612 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp612 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp612 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp612 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp612 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp612 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp624 = function (_self, _temp614,_temp613)
        if _temp614 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp613 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp613 =  null(_self)

    elseif null then
      _temp613 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp613 =  _self:null()
      elseif _self.null ~= nil then
        _temp613 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp613 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp613 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp615
local _temp616 = nil
    if _type(_temp613) == "function" or (_type(_temp613) == "table" and _rawget(_temp613, "__call_thing")) then
      _temp616 =  _temp613(_self)

    elseif _temp613 then
      _temp616 =  _temp613
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp616 =  _self:var()
      elseif _self.var ~= nil then
        _temp616 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp616 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp616 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp615 =  set_underresult(_self, _temp616)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp615 =  _self:set_underresult(_temp616)
      elseif _self.set_underresult ~= nil then
        _temp615 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp615 =  _self:no_undermethod(string:new("set_result") , _temp616)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp615 =  no_undermethod(_self, string:new("set_result") , _temp616)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp617 = nil
        local _t = _type(_temp615)
        if _t == "table" then
          if _rawget(_temp615, "__call_thing") == nil then
            _temp617 = _temp615
          else
                  if _temp615 == nil then
              if _type(_self._temp615) == "function" or (_type(_self._temp615) == "table" and _rawget(_self._temp615, "__call_thing")) then
        _temp617 =  _self:_temp615()
      elseif _self._temp615 ~= nil then
        _temp617 =  _self._temp615

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp615"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp617 =  _temp615(_self)
      end

          end
        elseif _t == "number" then
          _temp617 = _temp615
        elseif _t == "function" then
                if _temp615 == nil then
              if _type(_self._temp615) == "function" or (_type(_self._temp615) == "table" and _rawget(_self._temp615, "__call_thing")) then
        _temp617 =  _self:_temp615()
      elseif _self._temp615 ~= nil then
        _temp617 =  _self._temp615

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp615"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp617 =  _temp615(_self)
      end

        elseif _temp615 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp618 = nil
      local _t = _type(_temp617)
      if _t == "table" then
                      if _type(_temp617.out) == "function" or (_type(_temp617.out) == "table" and _rawget(_temp617.out, "__call_thing")) then
        _temp618 = _temp617:out()
      elseif _temp617.out ~= nil then
        _temp618 = _temp617.out

        elseif _temp617.no_undermethod ~= nil then
          _temp618 =  _temp617:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp617, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp617)
      if _n.out ~= nil then
        _temp618 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp618 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp617)
      if _f.out ~= nil then
        _temp618 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp618 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _temp617 == nil then
        _error(exception:null_error("_temp617", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp617))
      end

local _temp619 = nil
local _temp620 = nil
        local _t = _type(_temp614)
        if _t == "table" then
          if _rawget(_temp614, "__call_thing") == nil then
            _temp620 = _temp614
          else
                  if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp620 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp620 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp620 =  _temp614(_self)
      end

          end
        elseif _t == "number" then
          _temp620 = _temp614
        elseif _t == "function" then
                if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp620 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp620 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp620 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp620 =  _temp614(_self)
      end

        elseif _temp614 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.lhs) == "function" or (_type(_temp620.lhs) == "table" and _rawget(_temp620.lhs, "__call_thing")) then
        _temp620 = _temp620:lhs()
      elseif _temp620.lhs ~= nil then
        _temp620 = _temp620.lhs

        elseif _temp620.no_undermethod ~= nil then
          _temp620 =  _temp620:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp620, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.lhs ~= nil then
        _temp620 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp620, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.lhs ~= nil then
        _temp620 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp620, "lhs"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end

      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620.value) == "function" or (_type(_temp620.value) == "table" and _rawget(_temp620.value, "__call_thing")) then
        _temp620 = _temp620:value()
      elseif _temp620.value ~= nil then
        _temp620 = _temp620.value

        elseif _temp620.no_undermethod ~= nil then
          _temp620 =  _temp620:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp620, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n.value ~= nil then
        _temp620 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp620, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f.value ~= nil then
        _temp620 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp620, "value"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end


local _temp621 = nil
        local _t = _type(_temp614)
        if _t == "table" then
          if _rawget(_temp614, "__call_thing") == nil then
            _temp621 = _temp614
          else
                  if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp621 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp621 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp621 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp621 =  _temp614(_self)
      end

          end
        elseif _t == "number" then
          _temp621 = _temp614
        elseif _t == "function" then
                if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp621 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp621 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp621 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp621 =  _temp614(_self)
      end

        elseif _temp614 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp621)
      if _t == "table" then
                      if _type(_temp621.op) == "function" or (_type(_temp621.op) == "table" and _rawget(_temp621.op, "__call_thing")) then
        _temp621 = _temp621:op()
      elseif _temp621.op ~= nil then
        _temp621 = _temp621.op

        elseif _temp621.no_undermethod ~= nil then
          _temp621 =  _temp621:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp621, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp621)
      if _n.op ~= nil then
        _temp621 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp621 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp621, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp621)
      if _f.op ~= nil then
        _temp621 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp621 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp621, "op"))
      end

      elseif _temp621 == nil then
        _error(exception:null_error("_temp621", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp621))
      end


local _temp622 = nil
        local _t = _type(_temp614)
        if _t == "table" then
          if _rawget(_temp614, "__call_thing") == nil then
            _temp622 = _temp614
          else
                  if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp622 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp622 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp622 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp622 =  _temp614(_self)
      end

          end
        elseif _t == "number" then
          _temp622 = _temp614
        elseif _t == "function" then
                if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp622 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp622 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp622 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp622 =  _temp614(_self)
      end

        elseif _temp614 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp622)
      if _t == "table" then
                      if _type(_temp622.rhs) == "function" or (_type(_temp622.rhs) == "table" and _rawget(_temp622.rhs, "__call_thing")) then
        _temp622 = _temp622:rhs()
      elseif _temp622.rhs ~= nil then
        _temp622 = _temp622.rhs

        elseif _temp622.no_undermethod ~= nil then
          _temp622 =  _temp622:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp622, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp622)
      if _n.rhs ~= nil then
        _temp622 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp622 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp622, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp622)
      if _f.rhs ~= nil then
        _temp622 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp622 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp622, "rhs"))
      end

      elseif _temp622 == nil then
        _error(exception:null_error("_temp622", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp622))
      end

      local _t = _type(_temp622)
      if _t == "table" then
                      if _type(_temp622.value) == "function" or (_type(_temp622.value) == "table" and _rawget(_temp622.value, "__call_thing")) then
        _temp622 = _temp622:value()
      elseif _temp622.value ~= nil then
        _temp622 = _temp622.value

        elseif _temp622.no_undermethod ~= nil then
          _temp622 =  _temp622:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp622, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp622)
      if _n.value ~= nil then
        _temp622 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp622 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp622, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp622)
      if _f.value ~= nil then
        _temp622 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp622 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp622, "value"))
      end

      elseif _temp622 == nil then
        _error(exception:null_error("_temp622", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp622))
      end


local _temp623 = nil
        local _t = _type(_temp615)
        if _t == "table" then
          if _rawget(_temp615, "__call_thing") == nil then
            _temp623 = _temp615
          else
                  if _temp615 == nil then
              if _type(_self._temp615) == "function" or (_type(_self._temp615) == "table" and _rawget(_self._temp615, "__call_thing")) then
        _temp623 =  _self:_temp615()
      elseif _self._temp615 ~= nil then
        _temp623 =  _self._temp615

        elseif _self.no_undermethod ~= nil then
          _temp623 =  _self:no_undermethod(string:new("_temp615"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp623 =  _temp615(_self)
      end

          end
        elseif _t == "number" then
          _temp623 = _temp615
        elseif _t == "function" then
                if _temp615 == nil then
              if _type(_self._temp615) == "function" or (_type(_self._temp615) == "table" and _rawget(_self._temp615, "__call_thing")) then
        _temp623 =  _self:_temp615()
      elseif _self._temp615 ~= nil then
        _temp623 =  _self._temp615

        elseif _self.no_undermethod ~= nil then
          _temp623 =  _self:no_undermethod(string:new("_temp615"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp623 =  _temp615(_self)
      end

        elseif _temp615 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp623)
      if _t == "table" then
                      if _type(_temp623.var) == "function" or (_type(_temp623.var) == "table" and _rawget(_temp623.var, "__call_thing")) then
        _temp623 = _temp623:var()
      elseif _temp623.var ~= nil then
        _temp623 = _temp623.var

        elseif _temp623.no_undermethod ~= nil then
          _temp623 =  _temp623:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp623, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp623)
      if _n.var ~= nil then
        _temp623 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp623 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp623, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp623)
      if _f.var ~= nil then
        _temp623 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp623 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp623, "var"))
      end

      elseif _temp623 == nil then
        _error(exception:null_error("_temp623", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp623))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp619 =  invoke_undernumbers(_self, _temp620,_temp621,_temp622,_temp623)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp619 =  _self:invoke_undernumbers(_temp620,_temp621,_temp622,_temp623)
      elseif _self.invoke_undernumbers ~= nil then
        _temp619 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp619 =  _self:no_undermethod(string:new("invoke_numbers") , _temp620,_temp621,_temp622,_temp623)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp619 =  no_undermethod(_self, string:new("invoke_numbers") , _temp620,_temp621,_temp622,_temp623)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp623
      local _t = _type(_temp618)
      if _t == "table" then
                      if _type(_temp618._less_less) == "function" or (_type(_temp618._less_less) == "table" and _rawget(_temp618._less_less, "__call_thing")) then
        _temp623 = _temp618:_less_less(_temp619)
      elseif _temp618._less_less ~= nil then
        _temp623 = _temp618._less_less

        elseif _temp618.no_undermethod ~= nil then
          _temp623 =  _temp618:no_undermethod(string:new("<<") , _temp619)
        else
          _error(exception:method_error(_temp618, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp618)
      if _n._less_less ~= nil then
        _temp623 = _n:_less_less(_temp619)
      elseif _n.no_undermethod ~= nil then
        _temp623 =  _n:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp618, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp618)
      if _f._less_less ~= nil then
        _temp623 = _f:_less_less(_temp619)
      elseif _f.no_undermethod ~= nil then
        _temp623 =  _f:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp618, "<<"))
      end

      elseif _temp618 == nil then
        _error(exception:null_error("_temp618", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp618))
      end

_dummy_ = _temp623 
end

    if _type(_temp615) == "function" or (_type(_temp615) == "table" and _rawget(_temp615, "__call_thing")) then
      return  _temp615(_self)

    elseif _temp615 then
      return  _temp615
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp612)
      if _t == "table" then
                      if _type(_temp612.walk) == "function" or (_type(_temp612.walk) == "table" and _rawget(_temp612.walk, "__call_thing")) then
        _dummy_ = _temp612:walk(_temp4,_temp624)
      elseif _temp612.walk ~= nil then
        _dummy_ = _temp612.walk

        elseif _temp612.no_undermethod ~= nil then
          _dummy_ =  _temp612:no_undermethod(string:new("walk") , _temp4,_temp624)
        else
          _error(exception:method_error(_temp612, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp612)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp624)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp624)
      else
        _error(exception:method_error(_temp612, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp612)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp624)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp624)
      else
        _error(exception:method_error(_temp612, "walk"))
      end

      elseif _temp612 == nil then
        _error(exception:null_error("_temp612", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp612))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp624 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp624 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp624 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp624 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp624 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp624 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp624 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp624 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp643 = function (_self, _temp626,_temp625)
        if _temp626 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp625 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp625 =  null(_self)

    elseif null then
      _temp625 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp625 =  _self:null()
      elseif _self.null ~= nil then
        _temp625 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp625 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp625 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp627
local _temp628 = nil
    if _type(_temp625) == "function" or (_type(_temp625) == "table" and _rawget(_temp625, "__call_thing")) then
      _temp628 =  _temp625(_self)

    elseif _temp625 then
      _temp628 =  _temp625
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp628 =  _self:var()
      elseif _self.var ~= nil then
        _temp628 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp628 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp628 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp627 =  set_underresult(_self, _temp628)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp627 =  _self:set_underresult(_temp628)
      elseif _self.set_underresult ~= nil then
        _temp627 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp627 =  _self:no_undermethod(string:new("set_result") , _temp628)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp627 =  no_undermethod(_self, string:new("set_result") , _temp628)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp629
        local _t = _type(_temp626)
        if _t == "table" then
          if _rawget(_temp626, "__call_thing") == nil then
            _temp628 = _temp626
          else
                  if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp628 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp628 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp628 =  _temp626(_self)
      end

          end
        elseif _t == "number" then
          _temp628 = _temp626
        elseif _t == "function" then
                if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp628 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp628 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp628 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp628 =  _temp626(_self)
      end

        elseif _temp626 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp628)
      if _t == "table" then
                      if _type(_temp628.rhs) == "function" or (_type(_temp628.rhs) == "table" and _rawget(_temp628.rhs, "__call_thing")) then
        _temp628 = _temp628:rhs()
      elseif _temp628.rhs ~= nil then
        _temp628 = _temp628.rhs

        elseif _temp628.no_undermethod ~= nil then
          _temp628 =  _temp628:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp628, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp628)
      if _n.rhs ~= nil then
        _temp628 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp628 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp628, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp628)
      if _f.rhs ~= nil then
        _temp628 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp628 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp628, "rhs"))
      end

      elseif _temp628 == nil then
        _error(exception:null_error("_temp628", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp628))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp629 =  process(_self, _temp628)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp629 =  _self:process(_temp628)
      elseif _self.process ~= nil then
        _temp629 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp629 =  _self:no_undermethod(string:new("process") , _temp628)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp629 =  no_undermethod(_self, string:new("process") , _temp628)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp630 = nil
        local _t = _type(_temp627)
        if _t == "table" then
          if _rawget(_temp627, "__call_thing") == nil then
            _temp630 = _temp627
          else
                  if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp630 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp630 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp630 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp630 =  _temp627(_self)
      end

          end
        elseif _t == "number" then
          _temp630 = _temp627
        elseif _t == "function" then
                if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp630 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp630 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp630 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp630 =  _temp627(_self)
      end

        elseif _temp627 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp631 = nil
      local _t = _type(_temp630)
      if _t == "table" then
                      if _type(_temp630.out) == "function" or (_type(_temp630.out) == "table" and _rawget(_temp630.out, "__call_thing")) then
        _temp631 = _temp630:out()
      elseif _temp630.out ~= nil then
        _temp631 = _temp630.out

        elseif _temp630.no_undermethod ~= nil then
          _temp631 =  _temp630:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp630, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp630)
      if _n.out ~= nil then
        _temp631 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp631 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp630, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp630)
      if _f.out ~= nil then
        _temp631 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp631 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp630, "out"))
      end

      elseif _temp630 == nil then
        _error(exception:null_error("_temp630", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp630))
      end

local _temp632 = nil
        local _t = _type(_temp629)
        if _t == "table" then
          if _rawget(_temp629, "__call_thing") == nil then
            _temp632 = _temp629
          else
                  if _temp629 == nil then
              if _type(_self._temp629) == "function" or (_type(_self._temp629) == "table" and _rawget(_self._temp629, "__call_thing")) then
        _temp632 =  _self:_temp629()
      elseif _self._temp629 ~= nil then
        _temp632 =  _self._temp629

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp629"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp632 =  _temp629(_self)
      end

          end
        elseif _t == "number" then
          _temp632 = _temp629
        elseif _t == "function" then
                if _temp629 == nil then
              if _type(_self._temp629) == "function" or (_type(_self._temp629) == "table" and _rawget(_self._temp629, "__call_thing")) then
        _temp632 =  _self:_temp629()
      elseif _self._temp629 ~= nil then
        _temp632 =  _self._temp629

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp629"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp632 =  _temp629(_self)
      end

        elseif _temp629 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp633 = nil
      local _t = _type(_temp632)
      if _t == "table" then
                      if _type(_temp632.out) == "function" or (_type(_temp632.out) == "table" and _rawget(_temp632.out, "__call_thing")) then
        _temp633 = _temp632:out()
      elseif _temp632.out ~= nil then
        _temp633 = _temp632.out

        elseif _temp632.no_undermethod ~= nil then
          _temp633 =  _temp632:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp632, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp632)
      if _n.out ~= nil then
        _temp633 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp633 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp632, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp632)
      if _f.out ~= nil then
        _temp633 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp633 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp632, "out"))
      end

      elseif _temp632 == nil then
        _error(exception:null_error("_temp632", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp632))
      end

local _temp634 = string:new("\n")
local _temp635
      local _t = _type(_temp631)
      if _t == "table" then
                      if _type(_temp631._less_less) == "function" or (_type(_temp631._less_less) == "table" and _rawget(_temp631._less_less, "__call_thing")) then
        _temp635 = _temp631:_less_less(_temp633)
      elseif _temp631._less_less ~= nil then
        _temp635 = _temp631._less_less

        elseif _temp631.no_undermethod ~= nil then
          _temp635 =  _temp631:no_undermethod(string:new("<<") , _temp633)
        else
          _error(exception:method_error(_temp631, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp631)
      if _n._less_less ~= nil then
        _temp635 = _n:_less_less(_temp633)
      elseif _n.no_undermethod ~= nil then
        _temp635 =  _n:no_undermethod(string:new("<<") , _temp633)
      else
        _error(exception:method_error(_temp631, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp631)
      if _f._less_less ~= nil then
        _temp635 = _f:_less_less(_temp633)
      elseif _f.no_undermethod ~= nil then
        _temp635 =  _f:no_undermethod(string:new("<<") , _temp633)
      else
        _error(exception:method_error(_temp631, "<<"))
      end

      elseif _temp631 == nil then
        _error(exception:null_error("_temp631", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp631))
      end

local _temp633
      local _t = _type(_temp635)
      if _t == "table" then
                      if _type(_temp635._less_less) == "function" or (_type(_temp635._less_less) == "table" and _rawget(_temp635._less_less, "__call_thing")) then
        _temp633 = _temp635:_less_less(_temp634)
      elseif _temp635._less_less ~= nil then
        _temp633 = _temp635._less_less

        elseif _temp635.no_undermethod ~= nil then
          _temp633 =  _temp635:no_undermethod(string:new("<<") , _temp634)
        else
          _error(exception:method_error(_temp635, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp635)
      if _n._less_less ~= nil then
        _temp633 = _n:_less_less(_temp634)
      elseif _n.no_undermethod ~= nil then
        _temp633 =  _n:no_undermethod(string:new("<<") , _temp634)
      else
        _error(exception:method_error(_temp635, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp635)
      if _f._less_less ~= nil then
        _temp633 = _f:_less_less(_temp634)
      elseif _f.no_undermethod ~= nil then
        _temp633 =  _f:no_undermethod(string:new("<<") , _temp634)
      else
        _error(exception:method_error(_temp635, "<<"))
      end

      elseif _temp635 == nil then
        _error(exception:null_error("_temp635", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp635))
      end

_dummy_ = _temp633 
end

do
local _temp636 = nil
        local _t = _type(_temp627)
        if _t == "table" then
          if _rawget(_temp627, "__call_thing") == nil then
            _temp636 = _temp627
          else
                  if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp636 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp636 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp636 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp636 =  _temp627(_self)
      end

          end
        elseif _t == "number" then
          _temp636 = _temp627
        elseif _t == "function" then
                if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp636 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp636 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp636 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp636 =  _temp627(_self)
      end

        elseif _temp627 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp637 = nil
      local _t = _type(_temp636)
      if _t == "table" then
                      if _type(_temp636.out) == "function" or (_type(_temp636.out) == "table" and _rawget(_temp636.out, "__call_thing")) then
        _temp637 = _temp636:out()
      elseif _temp636.out ~= nil then
        _temp637 = _temp636.out

        elseif _temp636.no_undermethod ~= nil then
          _temp637 =  _temp636:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp636, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp636)
      if _n.out ~= nil then
        _temp637 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp637 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp636, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp636)
      if _f.out ~= nil then
        _temp637 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp637 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp636, "out"))
      end

      elseif _temp636 == nil then
        _error(exception:null_error("_temp636", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp636))
      end

local _temp638 = nil
local _temp639 = nil
        local _t = _type(_temp626)
        if _t == "table" then
          if _rawget(_temp626, "__call_thing") == nil then
            _temp639 = _temp626
          else
                  if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp639 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp639 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp626(_self)
      end

          end
        elseif _t == "number" then
          _temp639 = _temp626
        elseif _t == "function" then
                if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp639 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp639 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp639 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp639 =  _temp626(_self)
      end

        elseif _temp626 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639.lhs) == "function" or (_type(_temp639.lhs) == "table" and _rawget(_temp639.lhs, "__call_thing")) then
        _temp639 = _temp639:lhs()
      elseif _temp639.lhs ~= nil then
        _temp639 = _temp639.lhs

        elseif _temp639.no_undermethod ~= nil then
          _temp639 =  _temp639:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp639, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n.lhs ~= nil then
        _temp639 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp639, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f.lhs ~= nil then
        _temp639 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp639, "lhs"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end

      local _t = _type(_temp639)
      if _t == "table" then
                      if _type(_temp639.value) == "function" or (_type(_temp639.value) == "table" and _rawget(_temp639.value, "__call_thing")) then
        _temp639 = _temp639:value()
      elseif _temp639.value ~= nil then
        _temp639 = _temp639.value

        elseif _temp639.no_undermethod ~= nil then
          _temp639 =  _temp639:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp639, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp639)
      if _n.value ~= nil then
        _temp639 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp639 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp639, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp639)
      if _f.value ~= nil then
        _temp639 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp639 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp639, "value"))
      end

      elseif _temp639 == nil then
        _error(exception:null_error("_temp639", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp639))
      end


local _temp640 = nil
        local _t = _type(_temp626)
        if _t == "table" then
          if _rawget(_temp626, "__call_thing") == nil then
            _temp640 = _temp626
          else
                  if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp640 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp640 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp640 =  _temp626(_self)
      end

          end
        elseif _t == "number" then
          _temp640 = _temp626
        elseif _t == "function" then
                if _temp626 == nil then
              if _type(_self._temp626) == "function" or (_type(_self._temp626) == "table" and _rawget(_self._temp626, "__call_thing")) then
        _temp640 =  _self:_temp626()
      elseif _self._temp626 ~= nil then
        _temp640 =  _self._temp626

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp626"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp640 =  _temp626(_self)
      end

        elseif _temp626 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp640)
      if _t == "table" then
                      if _type(_temp640.op) == "function" or (_type(_temp640.op) == "table" and _rawget(_temp640.op, "__call_thing")) then
        _temp640 = _temp640:op()
      elseif _temp640.op ~= nil then
        _temp640 = _temp640.op

        elseif _temp640.no_undermethod ~= nil then
          _temp640 =  _temp640:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp640, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp640)
      if _n.op ~= nil then
        _temp640 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp640 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp640, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp640)
      if _f.op ~= nil then
        _temp640 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp640 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp640, "op"))
      end

      elseif _temp640 == nil then
        _error(exception:null_error("_temp640", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp640))
      end


local _temp641 = nil
        local _t = _type(_temp629)
        if _t == "table" then
          if _rawget(_temp629, "__call_thing") == nil then
            _temp641 = _temp629
          else
                  if _temp629 == nil then
              if _type(_self._temp629) == "function" or (_type(_self._temp629) == "table" and _rawget(_self._temp629, "__call_thing")) then
        _temp641 =  _self:_temp629()
      elseif _self._temp629 ~= nil then
        _temp641 =  _self._temp629

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp629"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp641 =  _temp629(_self)
      end

          end
        elseif _t == "number" then
          _temp641 = _temp629
        elseif _t == "function" then
                if _temp629 == nil then
              if _type(_self._temp629) == "function" or (_type(_self._temp629) == "table" and _rawget(_self._temp629, "__call_thing")) then
        _temp641 =  _self:_temp629()
      elseif _self._temp629 ~= nil then
        _temp641 =  _self._temp629

        elseif _self.no_undermethod ~= nil then
          _temp641 =  _self:no_undermethod(string:new("_temp629"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp641 =  _temp629(_self)
      end

        elseif _temp629 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp641)
      if _t == "table" then
                      if _type(_temp641.var) == "function" or (_type(_temp641.var) == "table" and _rawget(_temp641.var, "__call_thing")) then
        _temp641 = _temp641:var()
      elseif _temp641.var ~= nil then
        _temp641 = _temp641.var

        elseif _temp641.no_undermethod ~= nil then
          _temp641 =  _temp641:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp641, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp641)
      if _n.var ~= nil then
        _temp641 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp641 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp641, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp641)
      if _f.var ~= nil then
        _temp641 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp641 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp641, "var"))
      end

      elseif _temp641 == nil then
        _error(exception:null_error("_temp641", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp641))
      end


local _temp642 = nil
        local _t = _type(_temp627)
        if _t == "table" then
          if _rawget(_temp627, "__call_thing") == nil then
            _temp642 = _temp627
          else
                  if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp642 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp642 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp642 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp642 =  _temp627(_self)
      end

          end
        elseif _t == "number" then
          _temp642 = _temp627
        elseif _t == "function" then
                if _temp627 == nil then
              if _type(_self._temp627) == "function" or (_type(_self._temp627) == "table" and _rawget(_self._temp627, "__call_thing")) then
        _temp642 =  _self:_temp627()
      elseif _self._temp627 ~= nil then
        _temp642 =  _self._temp627

        elseif _self.no_undermethod ~= nil then
          _temp642 =  _self:no_undermethod(string:new("_temp627"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp642 =  _temp627(_self)
      end

        elseif _temp627 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp642)
      if _t == "table" then
                      if _type(_temp642.var) == "function" or (_type(_temp642.var) == "table" and _rawget(_temp642.var, "__call_thing")) then
        _temp642 = _temp642:var()
      elseif _temp642.var ~= nil then
        _temp642 = _temp642.var

        elseif _temp642.no_undermethod ~= nil then
          _temp642 =  _temp642:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp642, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp642)
      if _n.var ~= nil then
        _temp642 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp642 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp642, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp642)
      if _f.var ~= nil then
        _temp642 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp642 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp642, "var"))
      end

      elseif _temp642 == nil then
        _error(exception:null_error("_temp642", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp642))
      end


    if _type(invoke_undernumber_underlhs) == "function" or (_type(invoke_undernumber_underlhs) == "table" and _rawget(invoke_undernumber_underlhs, "__call_thing")) then
      _temp638 =  invoke_undernumber_underlhs(_self, _temp639,_temp640,_temp641,_temp642)

    elseif invoke_undernumber_underlhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_lhs (" .. object.__type(invoke_undernumber_underlhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underlhs) == "function" or (_type(_self.invoke_undernumber_underlhs) == "table" and _rawget(_self.invoke_undernumber_underlhs, "__call_thing")) then
        _temp638 =  _self:invoke_undernumber_underlhs(_temp639,_temp640,_temp641,_temp642)
      elseif _self.invoke_undernumber_underlhs ~= nil then
        _temp638 =  _self.invoke_undernumber_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp638 =  _self:no_undermethod(string:new("invoke_number_lhs") , _temp639,_temp640,_temp641,_temp642)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp638 =  no_undermethod(_self, string:new("invoke_number_lhs") , _temp639,_temp640,_temp641,_temp642)
      else
        _error(exception:name_error("invoke_number_lhs"))
      end
    end
local _temp642
      local _t = _type(_temp637)
      if _t == "table" then
                      if _type(_temp637._less_less) == "function" or (_type(_temp637._less_less) == "table" and _rawget(_temp637._less_less, "__call_thing")) then
        _temp642 = _temp637:_less_less(_temp638)
      elseif _temp637._less_less ~= nil then
        _temp642 = _temp637._less_less

        elseif _temp637.no_undermethod ~= nil then
          _temp642 =  _temp637:no_undermethod(string:new("<<") , _temp638)
        else
          _error(exception:method_error(_temp637, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp637)
      if _n._less_less ~= nil then
        _temp642 = _n:_less_less(_temp638)
      elseif _n.no_undermethod ~= nil then
        _temp642 =  _n:no_undermethod(string:new("<<") , _temp638)
      else
        _error(exception:method_error(_temp637, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp637)
      if _f._less_less ~= nil then
        _temp642 = _f:_less_less(_temp638)
      elseif _f.no_undermethod ~= nil then
        _temp642 =  _f:no_undermethod(string:new("<<") , _temp638)
      else
        _error(exception:method_error(_temp637, "<<"))
      end

      elseif _temp637 == nil then
        _error(exception:null_error("_temp637", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp637))
      end

_dummy_ = _temp642 
end

    if _type(_temp627) == "function" or (_type(_temp627) == "table" and _rawget(_temp627, "__call_thing")) then
      return  _temp627(_self)

    elseif _temp627 then
      return  _temp627
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp624)
      if _t == "table" then
                      if _type(_temp624.walk) == "function" or (_type(_temp624.walk) == "table" and _rawget(_temp624.walk, "__call_thing")) then
        _dummy_ = _temp624:walk(_temp4,_temp643)
      elseif _temp624.walk ~= nil then
        _dummy_ = _temp624.walk

        elseif _temp624.no_undermethod ~= nil then
          _dummy_ =  _temp624:no_undermethod(string:new("walk") , _temp4,_temp643)
        else
          _error(exception:method_error(_temp624, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp624)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp643)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp643)
      else
        _error(exception:method_error(_temp624, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp624)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp643)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp643)
      else
        _error(exception:method_error(_temp624, "walk"))
      end

      elseif _temp624 == nil then
        _error(exception:null_error("_temp624", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp624))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp643 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp643 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp643 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp643 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp643 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp643 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp643 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp643 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp643 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp643 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number_rhs")

local _temp662 = function (_self, _temp645,_temp644)
        if _temp645 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp644 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp644 =  null(_self)

    elseif null then
      _temp644 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp644 =  _self:null()
      elseif _self.null ~= nil then
        _temp644 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp644 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp644 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp646
local _temp647 = nil
    if _type(_temp644) == "function" or (_type(_temp644) == "table" and _rawget(_temp644, "__call_thing")) then
      _temp647 =  _temp644(_self)

    elseif _temp644 then
      _temp647 =  _temp644
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp647 =  _self:var()
      elseif _self.var ~= nil then
        _temp647 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp647 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp647 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp646 =  set_underresult(_self, _temp647)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp646 =  _self:set_underresult(_temp647)
      elseif _self.set_underresult ~= nil then
        _temp646 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp646 =  _self:no_undermethod(string:new("set_result") , _temp647)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp646 =  no_undermethod(_self, string:new("set_result") , _temp647)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp648
        local _t = _type(_temp645)
        if _t == "table" then
          if _rawget(_temp645, "__call_thing") == nil then
            _temp647 = _temp645
          else
                  if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp647 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp647 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp647 =  _temp645(_self)
      end

          end
        elseif _t == "number" then
          _temp647 = _temp645
        elseif _t == "function" then
                if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp647 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp647 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp647 =  _temp645(_self)
      end

        elseif _temp645 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.lhs) == "function" or (_type(_temp647.lhs) == "table" and _rawget(_temp647.lhs, "__call_thing")) then
        _temp647 = _temp647:lhs()
      elseif _temp647.lhs ~= nil then
        _temp647 = _temp647.lhs

        elseif _temp647.no_undermethod ~= nil then
          _temp647 =  _temp647:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp647, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.lhs ~= nil then
        _temp647 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp647 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp647, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.lhs ~= nil then
        _temp647 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp647 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp647, "lhs"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp648 =  process(_self, _temp647)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp648 =  _self:process(_temp647)
      elseif _self.process ~= nil then
        _temp648 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp648 =  _self:no_undermethod(string:new("process") , _temp647)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp648 =  no_undermethod(_self, string:new("process") , _temp647)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp649 = nil
        local _t = _type(_temp646)
        if _t == "table" then
          if _rawget(_temp646, "__call_thing") == nil then
            _temp649 = _temp646
          else
                  if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp649 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp649 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp649 =  _temp646(_self)
      end

          end
        elseif _t == "number" then
          _temp649 = _temp646
        elseif _t == "function" then
                if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp649 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp649 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp649 =  _temp646(_self)
      end

        elseif _temp646 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp650 = nil
      local _t = _type(_temp649)
      if _t == "table" then
                      if _type(_temp649.out) == "function" or (_type(_temp649.out) == "table" and _rawget(_temp649.out, "__call_thing")) then
        _temp650 = _temp649:out()
      elseif _temp649.out ~= nil then
        _temp650 = _temp649.out

        elseif _temp649.no_undermethod ~= nil then
          _temp650 =  _temp649:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp649, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp649)
      if _n.out ~= nil then
        _temp650 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp649, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp649)
      if _f.out ~= nil then
        _temp650 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp649, "out"))
      end

      elseif _temp649 == nil then
        _error(exception:null_error("_temp649", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp649))
      end

local _temp651 = nil
        local _t = _type(_temp648)
        if _t == "table" then
          if _rawget(_temp648, "__call_thing") == nil then
            _temp651 = _temp648
          else
                  if _temp648 == nil then
              if _type(_self._temp648) == "function" or (_type(_self._temp648) == "table" and _rawget(_self._temp648, "__call_thing")) then
        _temp651 =  _self:_temp648()
      elseif _self._temp648 ~= nil then
        _temp651 =  _self._temp648

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp648"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp651 =  _temp648(_self)
      end

          end
        elseif _t == "number" then
          _temp651 = _temp648
        elseif _t == "function" then
                if _temp648 == nil then
              if _type(_self._temp648) == "function" or (_type(_self._temp648) == "table" and _rawget(_self._temp648, "__call_thing")) then
        _temp651 =  _self:_temp648()
      elseif _self._temp648 ~= nil then
        _temp651 =  _self._temp648

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp648"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp651 =  _temp648(_self)
      end

        elseif _temp648 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp652 = nil
      local _t = _type(_temp651)
      if _t == "table" then
                      if _type(_temp651.out) == "function" or (_type(_temp651.out) == "table" and _rawget(_temp651.out, "__call_thing")) then
        _temp652 = _temp651:out()
      elseif _temp651.out ~= nil then
        _temp652 = _temp651.out

        elseif _temp651.no_undermethod ~= nil then
          _temp652 =  _temp651:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp651, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp651)
      if _n.out ~= nil then
        _temp652 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp651, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp651)
      if _f.out ~= nil then
        _temp652 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp651, "out"))
      end

      elseif _temp651 == nil then
        _error(exception:null_error("_temp651", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp651))
      end

local _temp653 = string:new("\n")
local _temp654
      local _t = _type(_temp650)
      if _t == "table" then
                      if _type(_temp650._less_less) == "function" or (_type(_temp650._less_less) == "table" and _rawget(_temp650._less_less, "__call_thing")) then
        _temp654 = _temp650:_less_less(_temp652)
      elseif _temp650._less_less ~= nil then
        _temp654 = _temp650._less_less

        elseif _temp650.no_undermethod ~= nil then
          _temp654 =  _temp650:no_undermethod(string:new("<<") , _temp652)
        else
          _error(exception:method_error(_temp650, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp650)
      if _n._less_less ~= nil then
        _temp654 = _n:_less_less(_temp652)
      elseif _n.no_undermethod ~= nil then
        _temp654 =  _n:no_undermethod(string:new("<<") , _temp652)
      else
        _error(exception:method_error(_temp650, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp650)
      if _f._less_less ~= nil then
        _temp654 = _f:_less_less(_temp652)
      elseif _f.no_undermethod ~= nil then
        _temp654 =  _f:no_undermethod(string:new("<<") , _temp652)
      else
        _error(exception:method_error(_temp650, "<<"))
      end

      elseif _temp650 == nil then
        _error(exception:null_error("_temp650", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp650))
      end

local _temp652
      local _t = _type(_temp654)
      if _t == "table" then
                      if _type(_temp654._less_less) == "function" or (_type(_temp654._less_less) == "table" and _rawget(_temp654._less_less, "__call_thing")) then
        _temp652 = _temp654:_less_less(_temp653)
      elseif _temp654._less_less ~= nil then
        _temp652 = _temp654._less_less

        elseif _temp654.no_undermethod ~= nil then
          _temp652 =  _temp654:no_undermethod(string:new("<<") , _temp653)
        else
          _error(exception:method_error(_temp654, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp654)
      if _n._less_less ~= nil then
        _temp652 = _n:_less_less(_temp653)
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("<<") , _temp653)
      else
        _error(exception:method_error(_temp654, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp654)
      if _f._less_less ~= nil then
        _temp652 = _f:_less_less(_temp653)
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("<<") , _temp653)
      else
        _error(exception:method_error(_temp654, "<<"))
      end

      elseif _temp654 == nil then
        _error(exception:null_error("_temp654", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp654))
      end

_dummy_ = _temp652 
end

do
local _temp655 = nil
        local _t = _type(_temp646)
        if _t == "table" then
          if _rawget(_temp646, "__call_thing") == nil then
            _temp655 = _temp646
          else
                  if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp655 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp655 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp655 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp655 =  _temp646(_self)
      end

          end
        elseif _t == "number" then
          _temp655 = _temp646
        elseif _t == "function" then
                if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp655 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp655 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp655 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp655 =  _temp646(_self)
      end

        elseif _temp646 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp656 = nil
      local _t = _type(_temp655)
      if _t == "table" then
                      if _type(_temp655.out) == "function" or (_type(_temp655.out) == "table" and _rawget(_temp655.out, "__call_thing")) then
        _temp656 = _temp655:out()
      elseif _temp655.out ~= nil then
        _temp656 = _temp655.out

        elseif _temp655.no_undermethod ~= nil then
          _temp656 =  _temp655:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp655, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp655)
      if _n.out ~= nil then
        _temp656 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp656 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp655, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp655)
      if _f.out ~= nil then
        _temp656 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp656 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp655, "out"))
      end

      elseif _temp655 == nil then
        _error(exception:null_error("_temp655", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp655))
      end

local _temp657 = nil
local _temp658 = nil
        local _t = _type(_temp648)
        if _t == "table" then
          if _rawget(_temp648, "__call_thing") == nil then
            _temp658 = _temp648
          else
                  if _temp648 == nil then
              if _type(_self._temp648) == "function" or (_type(_self._temp648) == "table" and _rawget(_self._temp648, "__call_thing")) then
        _temp658 =  _self:_temp648()
      elseif _self._temp648 ~= nil then
        _temp658 =  _self._temp648

        elseif _self.no_undermethod ~= nil then
          _temp658 =  _self:no_undermethod(string:new("_temp648"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp658 =  _temp648(_self)
      end

          end
        elseif _t == "number" then
          _temp658 = _temp648
        elseif _t == "function" then
                if _temp648 == nil then
              if _type(_self._temp648) == "function" or (_type(_self._temp648) == "table" and _rawget(_self._temp648, "__call_thing")) then
        _temp658 =  _self:_temp648()
      elseif _self._temp648 ~= nil then
        _temp658 =  _self._temp648

        elseif _self.no_undermethod ~= nil then
          _temp658 =  _self:no_undermethod(string:new("_temp648"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp658 =  _temp648(_self)
      end

        elseif _temp648 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp658)
      if _t == "table" then
                      if _type(_temp658.var) == "function" or (_type(_temp658.var) == "table" and _rawget(_temp658.var, "__call_thing")) then
        _temp658 = _temp658:var()
      elseif _temp658.var ~= nil then
        _temp658 = _temp658.var

        elseif _temp658.no_undermethod ~= nil then
          _temp658 =  _temp658:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp658, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp658)
      if _n.var ~= nil then
        _temp658 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp658 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp658, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp658)
      if _f.var ~= nil then
        _temp658 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp658 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp658, "var"))
      end

      elseif _temp658 == nil then
        _error(exception:null_error("_temp658", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp658))
      end


local _temp659 = nil
        local _t = _type(_temp645)
        if _t == "table" then
          if _rawget(_temp645, "__call_thing") == nil then
            _temp659 = _temp645
          else
                  if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp659 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp659 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp659 =  _temp645(_self)
      end

          end
        elseif _t == "number" then
          _temp659 = _temp645
        elseif _t == "function" then
                if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp659 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp659 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp659 =  _temp645(_self)
      end

        elseif _temp645 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp659)
      if _t == "table" then
                      if _type(_temp659.op) == "function" or (_type(_temp659.op) == "table" and _rawget(_temp659.op, "__call_thing")) then
        _temp659 = _temp659:op()
      elseif _temp659.op ~= nil then
        _temp659 = _temp659.op

        elseif _temp659.no_undermethod ~= nil then
          _temp659 =  _temp659:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp659, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp659)
      if _n.op ~= nil then
        _temp659 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp659 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp659, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp659)
      if _f.op ~= nil then
        _temp659 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp659 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp659, "op"))
      end

      elseif _temp659 == nil then
        _error(exception:null_error("_temp659", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp659))
      end


local _temp660 = nil
        local _t = _type(_temp645)
        if _t == "table" then
          if _rawget(_temp645, "__call_thing") == nil then
            _temp660 = _temp645
          else
                  if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp660 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp660 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp660 =  _temp645(_self)
      end

          end
        elseif _t == "number" then
          _temp660 = _temp645
        elseif _t == "function" then
                if _temp645 == nil then
              if _type(_self._temp645) == "function" or (_type(_self._temp645) == "table" and _rawget(_self._temp645, "__call_thing")) then
        _temp660 =  _self:_temp645()
      elseif _self._temp645 ~= nil then
        _temp660 =  _self._temp645

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp645"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp660 =  _temp645(_self)
      end

        elseif _temp645 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp660)
      if _t == "table" then
                      if _type(_temp660.rhs) == "function" or (_type(_temp660.rhs) == "table" and _rawget(_temp660.rhs, "__call_thing")) then
        _temp660 = _temp660:rhs()
      elseif _temp660.rhs ~= nil then
        _temp660 = _temp660.rhs

        elseif _temp660.no_undermethod ~= nil then
          _temp660 =  _temp660:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp660, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp660)
      if _n.rhs ~= nil then
        _temp660 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp660, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp660)
      if _f.rhs ~= nil then
        _temp660 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp660, "rhs"))
      end

      elseif _temp660 == nil then
        _error(exception:null_error("_temp660", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp660))
      end

      local _t = _type(_temp660)
      if _t == "table" then
                      if _type(_temp660.value) == "function" or (_type(_temp660.value) == "table" and _rawget(_temp660.value, "__call_thing")) then
        _temp660 = _temp660:value()
      elseif _temp660.value ~= nil then
        _temp660 = _temp660.value

        elseif _temp660.no_undermethod ~= nil then
          _temp660 =  _temp660:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp660, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp660)
      if _n.value ~= nil then
        _temp660 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp660, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp660)
      if _f.value ~= nil then
        _temp660 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp660, "value"))
      end

      elseif _temp660 == nil then
        _error(exception:null_error("_temp660", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp660))
      end


local _temp661 = nil
        local _t = _type(_temp646)
        if _t == "table" then
          if _rawget(_temp646, "__call_thing") == nil then
            _temp661 = _temp646
          else
                  if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp661 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp661 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp661 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp661 =  _temp646(_self)
      end

          end
        elseif _t == "number" then
          _temp661 = _temp646
        elseif _t == "function" then
                if _temp646 == nil then
              if _type(_self._temp646) == "function" or (_type(_self._temp646) == "table" and _rawget(_self._temp646, "__call_thing")) then
        _temp661 =  _self:_temp646()
      elseif _self._temp646 ~= nil then
        _temp661 =  _self._temp646

        elseif _self.no_undermethod ~= nil then
          _temp661 =  _self:no_undermethod(string:new("_temp646"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp661 =  _temp646(_self)
      end

        elseif _temp646 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp661)
      if _t == "table" then
                      if _type(_temp661.var) == "function" or (_type(_temp661.var) == "table" and _rawget(_temp661.var, "__call_thing")) then
        _temp661 = _temp661:var()
      elseif _temp661.var ~= nil then
        _temp661 = _temp661.var

        elseif _temp661.no_undermethod ~= nil then
          _temp661 =  _temp661:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp661, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp661)
      if _n.var ~= nil then
        _temp661 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp661 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp661, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp661)
      if _f.var ~= nil then
        _temp661 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp661 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp661, "var"))
      end

      elseif _temp661 == nil then
        _error(exception:null_error("_temp661", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp661))
      end


    if _type(invoke_undernumber_underrhs) == "function" or (_type(invoke_undernumber_underrhs) == "table" and _rawget(invoke_undernumber_underrhs, "__call_thing")) then
      _temp657 =  invoke_undernumber_underrhs(_self, _temp658,_temp659,_temp660,_temp661)

    elseif invoke_undernumber_underrhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_rhs (" .. object.__type(invoke_undernumber_underrhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underrhs) == "function" or (_type(_self.invoke_undernumber_underrhs) == "table" and _rawget(_self.invoke_undernumber_underrhs, "__call_thing")) then
        _temp657 =  _self:invoke_undernumber_underrhs(_temp658,_temp659,_temp660,_temp661)
      elseif _self.invoke_undernumber_underrhs ~= nil then
        _temp657 =  _self.invoke_undernumber_underrhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp657 =  _self:no_undermethod(string:new("invoke_number_rhs") , _temp658,_temp659,_temp660,_temp661)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp657 =  no_undermethod(_self, string:new("invoke_number_rhs") , _temp658,_temp659,_temp660,_temp661)
      else
        _error(exception:name_error("invoke_number_rhs"))
      end
    end
local _temp661
      local _t = _type(_temp656)
      if _t == "table" then
                      if _type(_temp656._less_less) == "function" or (_type(_temp656._less_less) == "table" and _rawget(_temp656._less_less, "__call_thing")) then
        _temp661 = _temp656:_less_less(_temp657)
      elseif _temp656._less_less ~= nil then
        _temp661 = _temp656._less_less

        elseif _temp656.no_undermethod ~= nil then
          _temp661 =  _temp656:no_undermethod(string:new("<<") , _temp657)
        else
          _error(exception:method_error(_temp656, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp656)
      if _n._less_less ~= nil then
        _temp661 = _n:_less_less(_temp657)
      elseif _n.no_undermethod ~= nil then
        _temp661 =  _n:no_undermethod(string:new("<<") , _temp657)
      else
        _error(exception:method_error(_temp656, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp656)
      if _f._less_less ~= nil then
        _temp661 = _f:_less_less(_temp657)
      elseif _f.no_undermethod ~= nil then
        _temp661 =  _f:no_undermethod(string:new("<<") , _temp657)
      else
        _error(exception:method_error(_temp656, "<<"))
      end

      elseif _temp656 == nil then
        _error(exception:null_error("_temp656", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp656))
      end

_dummy_ = _temp661 
end

    if _type(_temp646) == "function" or (_type(_temp646) == "table" and _rawget(_temp646, "__call_thing")) then
      return  _temp646(_self)

    elseif _temp646 then
      return  _temp646
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp643)
      if _t == "table" then
                      if _type(_temp643.walk) == "function" or (_type(_temp643.walk) == "table" and _rawget(_temp643.walk, "__call_thing")) then
        _dummy_ = _temp643:walk(_temp4,_temp662)
      elseif _temp643.walk ~= nil then
        _dummy_ = _temp643.walk

        elseif _temp643.no_undermethod ~= nil then
          _dummy_ =  _temp643:no_undermethod(string:new("walk") , _temp4,_temp662)
        else
          _error(exception:method_error(_temp643, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp643)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp662)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp662)
      else
        _error(exception:method_error(_temp643, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp643)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp662)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp662)
      else
        _error(exception:method_error(_temp643, "walk"))
      end

      elseif _temp643 == nil then
        _error(exception:null_error("_temp643", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp643))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp662 =  _temp5(_self)

    elseif _temp5 then
      _temp662 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp662 =  _self:c()
      elseif _self.c ~= nil then
        _temp662 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp662 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp662 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp662,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp662,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp662,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp662,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
