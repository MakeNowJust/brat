              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp17 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

local _temp11

_temp11 = 0

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp16 = function (_self)

local _temp12 
do
local _temp13 = nil
_temp13 =  _temp11

local _temp14
      if number._unchanged('_plus')  then
        _temp14 = _temp13 + 1
      else
              local _n = number:new(_temp13)
      if _n._plus ~= nil then
        _temp14 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp14 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp13, "+"))
      end

      end 

_temp12 = _temp14 
end

_temp11 = _temp12

return _temp11
end

        if _type(_temp7) == "table" then
          _temp7["next_underliftable"] = _temp16
        elseif _type(_temp7) == "number" then
          number["next_underliftable"] =  _temp16
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp16
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp17
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp17
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp31 = function (_self, _temp18)
        if _temp18 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp19 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp19 =  my(_self)

    elseif my then
      _temp19 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp19 =  _self:my()
      elseif _self.my ~= nil then
        _temp19 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp19

local _temp20 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp21 = nil
        local _t = _type(_temp18)
        if _t == "table" then
          if _rawget(_temp18, "__call_thing") == nil then
            _temp21 = _temp18
          else
                  if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

          end
        elseif _t == "number" then
          _temp21 = _temp18
        elseif _t == "function" then
                if _temp18 == nil then
              if _type(_self._temp18) == "function" or (_type(_self._temp18) == "table" and _rawget(_self._temp18, "__call_thing")) then
        _temp21 =  _self:_temp18()
      elseif _self._temp18 ~= nil then
        _temp21 =  _self._temp18

        elseif _self.no_undermethod ~= nil then
          _temp21 =  _self:no_undermethod(string:new("_temp18"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp21 =  _temp18(_self)
      end

        elseif _temp18 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.nodes) == "function" or (_type(_temp21.nodes) == "table" and _rawget(_temp21.nodes, "__call_thing")) then
        _temp21 = _temp21:nodes()
      elseif _temp21.nodes ~= nil then
        _temp21 = _temp21.nodes

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp21, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.nodes ~= nil then
        _temp21 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.nodes ~= nil then
        _temp21 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp21, "nodes"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


local _temp26 = function (_self, _temp22)
        if _temp22 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp23 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp23 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp23 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp23 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp23 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp23 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp23 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp24 = nil
    if _type(_temp22) == "function" or (_type(_temp22) == "table" and _rawget(_temp22, "__call_thing")) then
      _temp24 =  _temp22(_self)

    elseif _temp22 then
      _temp24 =  _temp22
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp24 =  _self:n()
      elseif _self.n ~= nil then
        _temp24 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.process) == "function" or (_type(_temp23.process) == "table" and _rawget(_temp23.process, "__call_thing")) then
        return _temp23:process(_temp24)
      elseif _temp23.process ~= nil then
        return _temp23.process

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("process") , _temp24)
        else
          _error(exception:method_error(_temp23, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.process ~= nil then
        return _n:process(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.process ~= nil then
        return _f:process(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp24)
      else
        _error(exception:method_error(_temp23, "process"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.map) == "function" or (_type(_temp21.map) == "table" and _rawget(_temp21.map, "__call_thing")) then
        _temp21 = _temp21:map(_temp26)
      elseif _temp21.map ~= nil then
        _temp21 = _temp21.map

        elseif _temp21.no_undermethod ~= nil then
          _temp21 =  _temp21:no_undermethod(string:new("map") , _temp26)
        else
          _error(exception:method_error(_temp21, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.map ~= nil then
        _temp21 = _n:map(_temp26)
      elseif _n.no_undermethod ~= nil then
        _temp21 =  _n:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.map ~= nil then
        _temp21 = _f:map(_temp26)
      elseif _f.no_undermethod ~= nil then
        _temp21 =  _f:no_undermethod(string:new("map") , _temp26)
      else
        _error(exception:method_error(_temp21, "map"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end


        if _type(_temp20) == "table" then
          _temp20["results"] = _temp21
        elseif _type(_temp20) == "number" then
          number["results"] = _temp21
        else
          _error("Cannot set method on " .. _temp20)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp20 =  _self:my()
      elseif _self.my ~= nil then
        _temp20 =  _self.my

        elseif my ~= nil then
          _temp20 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp26 
do
local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp28 = nil
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.liftable_underfunctions) == "function" or (_type(_temp27.liftable_underfunctions) == "table" and _rawget(_temp27.liftable_underfunctions, "__call_thing")) then
        _temp28 = _temp27:liftable_underfunctions()
      elseif _temp27.liftable_underfunctions ~= nil then
        _temp28 = _temp27.liftable_underfunctions

        elseif _temp27.no_undermethod ~= nil then
          _temp28 =  _temp27:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp27, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.liftable_underfunctions ~= nil then
        _temp28 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.liftable_underfunctions ~= nil then
        _temp28 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp27, "liftable_functions"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp29 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp29 =  _self:my()
      elseif _self.my ~= nil then
        _temp29 =  _self.my

        elseif my ~= nil then
          _temp29 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp29)
      if _t == "table" then
                      if _type(_temp29.results) == "function" or (_type(_temp29.results) == "table" and _rawget(_temp29.results, "__call_thing")) then
        _temp29 = _temp29:results()
      elseif _temp29.results ~= nil then
        _temp29 = _temp29.results

        elseif _temp29.no_undermethod ~= nil then
          _temp29 =  _temp29:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp29, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp29)
      if _n.results ~= nil then
        _temp29 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp29 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp29)
      if _f.results ~= nil then
        _temp29 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp29 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp29, "results"))
      end

      elseif _temp29 == nil then
        _error(exception:null_error("_temp29", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp29))
      end

local _temp30
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28._plus) == "function" or (_type(_temp28._plus) == "table" and _rawget(_temp28._plus, "__call_thing")) then
        _temp30 = _temp28:_plus(_temp29)
      elseif _temp28._plus ~= nil then
        _temp30 = _temp28._plus

        elseif _temp28.no_undermethod ~= nil then
          _temp30 =  _temp28:no_undermethod(string:new("+") , _temp29)
        else
          _error(exception:method_error(_temp28, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp29) == 'number' then
        _temp30 = _temp28 + _temp29
      else
              local _n = number:new(_temp28)
      if _n._plus ~= nil then
        _temp30 = _n:_plus(_temp29)
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f._plus ~= nil then
        _temp30 = _f:_plus(_temp29)
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("+") , _temp29)
      else
        _error(exception:method_error(_temp28, "+"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end

_temp26 = _temp30 
end

        if _type(_temp20) == "table" then
          _temp20["results"] = _temp26
        elseif _type(_temp20) == "number" then
          number["results"] = _temp26
        else
          _error("Cannot set method on " .. _temp20)
        end

return _temp26
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp31)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp36 = function (_self, _temp32)
        if _temp32 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp33
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp33 =  _self:my()
      elseif _self.my ~= nil then
        _temp33 =  _self.my

        elseif my ~= nil then
          _temp33 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.env) == "function" or (_type(_temp33.env) == "table" and _rawget(_temp33.env, "__call_thing")) then
        _temp33 = _temp33:env()
      elseif _temp33.env ~= nil then
        _temp33 = _temp33.env

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.env ~= nil then
        _temp33 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.env ~= nil then
        _temp33 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

local _temp34 = nil
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.lhs) == "function" or (_type(_temp34.lhs) == "table" and _rawget(_temp34.lhs, "__call_thing")) then
        _temp34 = _temp34:lhs()
      elseif _temp34.lhs ~= nil then
        _temp34 = _temp34.lhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp34, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.lhs ~= nil then
        _temp34 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.lhs ~= nil then
        _temp34 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp34, "lhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33.new_undervar) == "function" or (_type(_temp33.new_undervar) == "table" and _rawget(_temp33.new_undervar, "__call_thing")) then
        _temp33 = _temp33:new_undervar(_temp34)
      elseif _temp33.new_undervar ~= nil then
        _temp33 = _temp33.new_undervar

        elseif _temp33.no_undermethod ~= nil then
          _temp33 =  _temp33:no_undermethod(string:new("new_var") , _temp34)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp33)
      if _n.new_undervar ~= nil then
        _temp33 = _n:new_undervar(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp33 =  _n:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f.new_undervar ~= nil then
        _temp33 = _f:new_undervar(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp33 =  _f:no_undermethod(string:new("new_var") , _temp34)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end


local _temp35
        local _t = _type(_temp32)
        if _t == "table" then
          if _rawget(_temp32, "__call_thing") == nil then
            _temp34 = _temp32
          else
                  if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp32
        elseif _t == "function" then
                if _temp32 == nil then
              if _type(_self._temp32) == "function" or (_type(_self._temp32) == "table" and _rawget(_self._temp32, "__call_thing")) then
        _temp34 =  _self:_temp32()
      elseif _self._temp32 ~= nil then
        _temp34 =  _self._temp32

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp32"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp34 =  _temp32(_self)
      end

        elseif _temp32 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.rhs) == "function" or (_type(_temp34.rhs) == "table" and _rawget(_temp34.rhs, "__call_thing")) then
        _temp34 = _temp34:rhs()
      elseif _temp34.rhs ~= nil then
        _temp34 = _temp34.rhs

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp34, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.rhs ~= nil then
        _temp34 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.rhs ~= nil then
        _temp34 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp34, "rhs"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end


local _temp36 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp36 =  _temp33(_self)

    elseif _temp33 then
      _temp36 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp35 =  process(_self, _temp34,_temp36)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp35 =  _self:process(_temp34,_temp36)
      elseif _self.process ~= nil then
        _temp35 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("process") , _temp34,_temp36)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("process") , _temp34,_temp36)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.env) == "function" or (_type(_temp36.env) == "table" and _rawget(_temp36.env, "__call_thing")) then
        _temp36 = _temp36:env()
      elseif _temp36.env ~= nil then
        _temp36 = _temp36.env

        elseif _temp36.no_undermethod ~= nil then
          _temp36 =  _temp36:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp36, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.env ~= nil then
        _temp36 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp36 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.env ~= nil then
        _temp36 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp36 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp36, "env"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp34 =  _temp33(_self)

    elseif _temp33 then
      _temp34 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp34 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp34 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp34 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp34 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37
do
    if _type(_temp35) == "function" or (_type(_temp35) == "table" and _rawget(_temp35, "__call_thing")) then
      _temp37 =  _temp35(_self)

    elseif _temp35 then
      _temp37 =  _temp35
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp37 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp37 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp38 = string:new("type")


_temp37 = _temp37:get(_temp38)
end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.set_undertype) == "function" or (_type(_temp36.set_undertype) == "table" and _rawget(_temp36.set_undertype, "__call_thing")) then
        _dummy_ = _temp36:set_undertype(_temp34,_temp37)
      elseif _temp36.set_undertype ~= nil then
        _dummy_ = _temp36.set_undertype

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("set_type") , _temp34,_temp37)
        else
          _error(exception:method_error(_temp36, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp34,_temp37)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp34,_temp37)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp34,_temp37)
      else
        _error(exception:method_error(_temp36, "set_type"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

local _temp37 
do
local _temp39 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp39 =  _temp33(_self)

    elseif _temp33 then
      _temp39 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp39 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp39 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp40 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp40 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp40 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp40 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp40 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp40 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp40 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.var) == "function" or (_type(_temp40.var) == "table" and _rawget(_temp40.var, "__call_thing")) then
        _temp40 = _temp40:var()
      elseif _temp40.var ~= nil then
        _temp40 = _temp40.var

        elseif _temp40.no_undermethod ~= nil then
          _temp40 =  _temp40:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp40, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.var ~= nil then
        _temp40 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp40 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.var ~= nil then
        _temp40 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp40 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp40, "var"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

local _temp41
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39._equal_equal) == "function" or (_type(_temp39._equal_equal) == "table" and _rawget(_temp39._equal_equal, "__call_thing")) then
        _temp41 = _temp39:_equal_equal(_temp40)
      elseif _temp39._equal_equal ~= nil then
        _temp41 = _temp39._equal_equal

        elseif _temp39.no_undermethod ~= nil then
          _temp41 =  _temp39:no_undermethod(string:new("==") , _temp40)
        else
          _error(exception:method_error(_temp39, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp40) == 'number' then
              if _temp39 == _temp40 then
        _temp41 = object.__true
      else
        _temp41 = object.__false
      end

      else
              local _n = number:new(_temp39)
      if _n._equal_equal ~= nil then
        _temp41 = _n:_equal_equal(_temp40)
      elseif _n.no_undermethod ~= nil then
        _temp41 =  _n:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f._equal_equal ~= nil then
        _temp41 = _f:_equal_equal(_temp40)
      elseif _f.no_undermethod ~= nil then
        _temp41 =  _f:no_undermethod(string:new("==") , _temp40)
      else
        _error(exception:method_error(_temp39, "=="))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end

_temp37 = _temp41 
end


local _temp47 = function (_self)

local _temp42 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp42 =  _temp33(_self)

    elseif _temp33 then
      _temp42 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp44 =  _temp33(_self)

    elseif _temp33 then
      _temp44 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp44 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp44 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp44 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp44 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp45 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp45 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp45 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp45 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp45 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp45 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp45 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp45)
      if _t == "table" then
                      if _type(_temp45.out) == "function" or (_type(_temp45.out) == "table" and _rawget(_temp45.out, "__call_thing")) then
        _temp45 = _temp45:out()
      elseif _temp45.out ~= nil then
        _temp45 = _temp45.out

        elseif _temp45.no_undermethod ~= nil then
          _temp45 =  _temp45:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp45, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp45)
      if _n.out ~= nil then
        _temp45 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp45 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp45)
      if _f.out ~= nil then
        _temp45 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp45 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp45, "out"))
      end

      elseif _temp45 == nil then
        _error(exception:null_error("_temp45", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp45))
      end


_temp43 = string:new("local " .. _tostring(_temp44) .. "\n" .. _tostring(_temp45) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end


local _temp54 = function (_self)

local _temp48 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp48 =  _temp33(_self)

    elseif _temp33 then
      _temp48 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp48 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp48 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp48 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp48 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp49 = nil
do
local _temp50 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp50 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp50 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp50 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp50 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp50 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp50 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp50)
      if _t == "table" then
                      if _type(_temp50.out) == "function" or (_type(_temp50.out) == "table" and _rawget(_temp50.out, "__call_thing")) then
        _temp50 = _temp50:out()
      elseif _temp50.out ~= nil then
        _temp50 = _temp50.out

        elseif _temp50.no_undermethod ~= nil then
          _temp50 =  _temp50:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp50, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp50)
      if _n.out ~= nil then
        _temp50 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp50 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp50)
      if _f.out ~= nil then
        _temp50 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp50 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp50, "out"))
      end

      elseif _temp50 == nil then
        _error(exception:null_error("_temp50", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp50))
      end


local _temp51 = nil
    if _type(_temp33) == "function" or (_type(_temp33) == "table" and _rawget(_temp33, "__call_thing")) then
      _temp51 =  _temp33(_self)

    elseif _temp33 then
      _temp51 =  _temp33
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp51 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp51 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp52 = nil
        local _t = _type(_temp35)
        if _t == "table" then
          if _rawget(_temp35, "__call_thing") == nil then
            _temp52 = _temp35
          else
                  if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp35
        elseif _t == "function" then
                if _temp35 == nil then
              if _type(_self._temp35) == "function" or (_type(_self._temp35) == "table" and _rawget(_self._temp35, "__call_thing")) then
        _temp52 =  _self:_temp35()
      elseif _self._temp35 ~= nil then
        _temp52 =  _self._temp35

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp35"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp52 =  _temp35(_self)
      end

        elseif _temp35 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.var) == "function" or (_type(_temp52.var) == "table" and _rawget(_temp52.var, "__call_thing")) then
        _temp52 = _temp52:var()
      elseif _temp52.var ~= nil then
        _temp52 = _temp52.var

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp52, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.var ~= nil then
        _temp52 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.var ~= nil then
        _temp52 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp52, "var"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = string:new("" .. _tostring(_temp50) .. "\nlocal " .. _tostring(_temp51) .. " = " .. _tostring(_temp52) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp48,_temp49)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp48,_temp49)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp48,_temp49)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp48,_temp49)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp37,_temp47,_temp54)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp37,_temp47,_temp54)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp37,_temp47,_temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp37,_temp47,_temp54)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp31 =  _temp5(_self)

    elseif _temp5 then
      _temp31 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp31 =  _self:c()
      elseif _self.c ~= nil then
        _temp31 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp31 = _temp31["var_underreassign"]
        if _temp31 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp31)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp31)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp31)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp31 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp31 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp31 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp31 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp31 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp31 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["var_underreassign"]
        if _temp36 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp31)
      if _t == "table" then
                      if _type(_temp31.walk) == "function" or (_type(_temp31.walk) == "table" and _rawget(_temp31.walk, "__call_thing")) then
        _dummy_ = _temp31:walk(_temp4,_temp36)
      elseif _temp31.walk ~= nil then
        _dummy_ = _temp31.walk

        elseif _temp31.no_undermethod ~= nil then
          _dummy_ =  _temp31:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp31, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp31)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp31)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp31, "walk"))
      end

      elseif _temp31 == nil then
        _error(exception:null_error("_temp31", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp31))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp76 = function (_self, _temp56,_temp55)
        if _temp56 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp55 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp55 =  null(_self)

    elseif null then
      _temp55 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp55 =  _self:null()
      elseif _self.null ~= nil then
        _temp55 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp57
local _temp58 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.target) == "function" or (_type(_temp58.target) == "table" and _rawget(_temp58.target, "__call_thing")) then
        _temp58 = _temp58:target()
      elseif _temp58.target ~= nil then
        _temp58 = _temp58.target

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp58, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.target ~= nil then
        _temp58 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.target ~= nil then
        _temp58 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp58, "target"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp57 =  process(_self, _temp58)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp57 =  _self:process(_temp58)
      elseif _self.process ~= nil then
        _temp57 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("process") , _temp58)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("process") , _temp58)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp58 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp58 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp58 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp58 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp58 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp58 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.lhs) == "function" or (_type(_temp58.lhs) == "table" and _rawget(_temp58.lhs, "__call_thing")) then
        _temp58 = _temp58:lhs()
      elseif _temp58.lhs ~= nil then
        _temp58 = _temp58.lhs

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp58, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.lhs ~= nil then
        _temp58 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.lhs ~= nil then
        _temp58 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp58, "lhs"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58.field) == "function" or (_type(_temp58.field) == "table" and _rawget(_temp58.field, "__call_thing")) then
        _temp58 = _temp58:field()
      elseif _temp58.field ~= nil then
        _temp58 = _temp58.field

        elseif _temp58.no_undermethod ~= nil then
          _temp58 =  _temp58:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp58, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n.field ~= nil then
        _temp58 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f.field ~= nil then
        _temp58 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp58, "field"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end


_temp55 = _temp58

local _temp59
local _temp60 = nil
        local _t = _type(_temp56)
        if _t == "table" then
          if _rawget(_temp56, "__call_thing") == nil then
            _temp60 = _temp56
          else
                  if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp56
        elseif _t == "function" then
                if _temp56 == nil then
              if _type(_self._temp56) == "function" or (_type(_self._temp56) == "table" and _rawget(_self._temp56, "__call_thing")) then
        _temp60 =  _self:_temp56()
      elseif _self._temp56 ~= nil then
        _temp60 =  _self._temp56

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp56"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp60 =  _temp56(_self)
      end

        elseif _temp56 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.rhs) == "function" or (_type(_temp60.rhs) == "table" and _rawget(_temp60.rhs, "__call_thing")) then
        _temp60 = _temp60:rhs()
      elseif _temp60.rhs ~= nil then
        _temp60 = _temp60.rhs

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp60, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.rhs ~= nil then
        _temp60 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.rhs ~= nil then
        _temp60 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp60, "rhs"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp59 =  process(_self, _temp60)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp59 =  _self:process(_temp60)
      elseif _self.process ~= nil then
        _temp59 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("process") , _temp60)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("process") , _temp60)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp61
do
local _temp62 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp62 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp62 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp62 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp63 = nil
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.out) == "function" or (_type(_temp62.out) == "table" and _rawget(_temp62.out, "__call_thing")) then
        _temp63 = _temp62:out()
      elseif _temp62.out ~= nil then
        _temp63 = _temp62.out

        elseif _temp62.no_undermethod ~= nil then
          _temp63 =  _temp62:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp62, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.out ~= nil then
        _temp63 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.out ~= nil then
        _temp63 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp62, "out"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end

local _temp64 = string:new("\n")

local _temp65 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp65 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp65 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp65 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp66 = nil
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.out) == "function" or (_type(_temp65.out) == "table" and _rawget(_temp65.out, "__call_thing")) then
        _temp66 = _temp65:out()
      elseif _temp65.out ~= nil then
        _temp66 = _temp65.out

        elseif _temp65.no_undermethod ~= nil then
          _temp66 =  _temp65:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp65, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.out ~= nil then
        _temp66 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.out ~= nil then
        _temp66 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp65, "out"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end

local _temp67 = nil
do
local _temp68 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp68 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp68 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp68 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp68 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp68 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp68 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.var) == "function" or (_type(_temp68.var) == "table" and _rawget(_temp68.var, "__call_thing")) then
        _temp68 = _temp68:var()
      elseif _temp68.var ~= nil then
        _temp68 = _temp68.var

        elseif _temp68.no_undermethod ~= nil then
          _temp68 =  _temp68:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp68, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.var ~= nil then
        _temp68 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp68 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.var ~= nil then
        _temp68 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp68 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp68, "var"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end


local _temp69 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp69 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp69 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp69 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp69 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp69 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp69 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp69)
      if _t == "table" then
                      if _type(_temp69.var) == "function" or (_type(_temp69.var) == "table" and _rawget(_temp69.var, "__call_thing")) then
        _temp69 = _temp69:var()
      elseif _temp69.var ~= nil then
        _temp69 = _temp69.var

        elseif _temp69.no_undermethod ~= nil then
          _temp69 =  _temp69:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp69, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp69)
      if _n.var ~= nil then
        _temp69 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp69 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp69)
      if _f.var ~= nil then
        _temp69 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp69 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp69, "var"))
      end

      elseif _temp69 == nil then
        _error(exception:null_error("_temp69", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp69))
      end


local _temp70 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp70 =  _temp55(_self)

    elseif _temp55 then
      _temp70 =  _temp55
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp70 =  _self:var()
      elseif _self.var ~= nil then
        _temp70 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp71 = nil
        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp71 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp71 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp71 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp71 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp71 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp71 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp71)
      if _t == "table" then
                      if _type(_temp71.var) == "function" or (_type(_temp71.var) == "table" and _rawget(_temp71.var, "__call_thing")) then
        _temp71 = _temp71:var()
      elseif _temp71.var ~= nil then
        _temp71 = _temp71.var

        elseif _temp71.no_undermethod ~= nil then
          _temp71 =  _temp71:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp71, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp71)
      if _n.var ~= nil then
        _temp71 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp71 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp71)
      if _f.var ~= nil then
        _temp71 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp71 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp71, "var"))
      end

      elseif _temp71 == nil then
        _error(exception:null_error("_temp71", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp71))
      end


local _temp72 = nil
        local _t = _type(_temp57)
        if _t == "table" then
          if _rawget(_temp57, "__call_thing") == nil then
            _temp72 = _temp57
          else
                  if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

          end
        elseif _t == "number" then
          _temp72 = _temp57
        elseif _t == "function" then
                if _temp57 == nil then
              if _type(_self._temp57) == "function" or (_type(_self._temp57) == "table" and _rawget(_self._temp57, "__call_thing")) then
        _temp72 =  _self:_temp57()
      elseif _self._temp57 ~= nil then
        _temp72 =  _self._temp57

        elseif _self.no_undermethod ~= nil then
          _temp72 =  _self:no_undermethod(string:new("_temp57"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp72 =  _temp57(_self)
      end

        elseif _temp57 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.var) == "function" or (_type(_temp72.var) == "table" and _rawget(_temp72.var, "__call_thing")) then
        _temp72 = _temp72:var()
      elseif _temp72.var ~= nil then
        _temp72 = _temp72.var

        elseif _temp72.no_undermethod ~= nil then
          _temp72 =  _temp72:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp72, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.var ~= nil then
        _temp72 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp72 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.var ~= nil then
        _temp72 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp72 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp72, "var"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end


_temp67 = string:new("\n    if _type(" .. _tostring(_temp68) .. ") == 'table' then\n      " .. _tostring(_temp69) .. "['" .. _tostring(_temp70) .. "'] = " .. _tostring(_temp71) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp72) .. ")\n    end\n    ")
end
local _temp73
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63._less_less) == "function" or (_type(_temp63._less_less) == "table" and _rawget(_temp63._less_less, "__call_thing")) then
        _temp73 = _temp63:_less_less(_temp64)
      elseif _temp63._less_less ~= nil then
        _temp73 = _temp63._less_less

        elseif _temp63.no_undermethod ~= nil then
          _temp73 =  _temp63:no_undermethod(string:new("<<") , _temp64)
        else
          _error(exception:method_error(_temp63, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n._less_less ~= nil then
        _temp73 = _n:_less_less(_temp64)
      elseif _n.no_undermethod ~= nil then
        _temp73 =  _n:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f._less_less ~= nil then
        _temp73 = _f:_less_less(_temp64)
      elseif _f.no_undermethod ~= nil then
        _temp73 =  _f:no_undermethod(string:new("<<") , _temp64)
      else
        _error(exception:method_error(_temp63, "<<"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end

local _temp64
      local _t = _type(_temp73)
      if _t == "table" then
                      if _type(_temp73._less_less) == "function" or (_type(_temp73._less_less) == "table" and _rawget(_temp73._less_less, "__call_thing")) then
        _temp64 = _temp73:_less_less(_temp66)
      elseif _temp73._less_less ~= nil then
        _temp64 = _temp73._less_less

        elseif _temp73.no_undermethod ~= nil then
          _temp64 =  _temp73:no_undermethod(string:new("<<") , _temp66)
        else
          _error(exception:method_error(_temp73, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp73)
      if _n._less_less ~= nil then
        _temp64 = _n:_less_less(_temp66)
      elseif _n.no_undermethod ~= nil then
        _temp64 =  _n:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp73)
      if _f._less_less ~= nil then
        _temp64 = _f:_less_less(_temp66)
      elseif _f.no_undermethod ~= nil then
        _temp64 =  _f:no_undermethod(string:new("<<") , _temp66)
      else
        _error(exception:method_error(_temp73, "<<"))
      end

      elseif _temp73 == nil then
        _error(exception:null_error("_temp73", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp73))
      end

local _temp66
      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64._less_less) == "function" or (_type(_temp64._less_less) == "table" and _rawget(_temp64._less_less, "__call_thing")) then
        _temp66 = _temp64:_less_less(_temp67)
      elseif _temp64._less_less ~= nil then
        _temp66 = _temp64._less_less

        elseif _temp64.no_undermethod ~= nil then
          _temp66 =  _temp64:no_undermethod(string:new("<<") , _temp67)
        else
          _error(exception:method_error(_temp64, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n._less_less ~= nil then
        _temp66 = _n:_less_less(_temp67)
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f._less_less ~= nil then
        _temp66 = _f:_less_less(_temp67)
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("<<") , _temp67)
      else
        _error(exception:method_error(_temp64, "<<"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

_temp61 = _temp66 
end

        local _t = _type(_temp59)
        if _t == "table" then
          if _rawget(_temp59, "__call_thing") == nil then
            _temp60 = _temp59
          else
                  if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

          end
        elseif _t == "number" then
          _temp60 = _temp59
        elseif _t == "function" then
                if _temp59 == nil then
              if _type(_self._temp59) == "function" or (_type(_self._temp59) == "table" and _rawget(_self._temp59, "__call_thing")) then
        _temp60 =  _self:_temp59()
      elseif _self._temp59 ~= nil then
        _temp60 =  _self._temp59

        elseif _self.no_undermethod ~= nil then
          _temp60 =  _self:no_undermethod(string:new("_temp59"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp60 =  _temp59(_self)
      end

        elseif _temp59 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.var) == "function" or (_type(_temp60.var) == "table" and _rawget(_temp60.var, "__call_thing")) then
        _temp60 = _temp60:var()
      elseif _temp60.var ~= nil then
        _temp60 = _temp60.var

        elseif _temp60.no_undermethod ~= nil then
          _temp60 =  _temp60:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp60, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.var ~= nil then
        _temp60 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.var ~= nil then
        _temp60 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp60, "var"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end


local _temp74 = nil
    if _type(_temp61) == "function" or (_type(_temp61) == "table" and _rawget(_temp61, "__call_thing")) then
      _temp74 =  _temp61(_self)

    elseif _temp61 then
      _temp74 =  _temp61
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp74 =  _self:out()
      elseif _self.out ~= nil then
        _temp74 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp60,_temp74)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp60,_temp74)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp60,_temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp60,_temp74)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp36 =  _temp5(_self)

    elseif _temp5 then
      _temp36 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp36 =  _self:c()
      elseif _self.c ~= nil then
        _temp36 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp36 = _temp36["get_undera_undervalue"]
        if _temp36 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp36)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp36)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp36)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp36)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp36)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp36 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp36 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp36 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp36 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp36 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp36 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp76 =  _temp5(_self)

    elseif _temp5 then
      _temp76 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp76 =  _self:c()
      elseif _self.c ~= nil then
        _temp76 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp76 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp76 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp76 = _temp76["get_undera_undervalue"]
        if _temp76 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.walk) == "function" or (_type(_temp36.walk) == "table" and _rawget(_temp36.walk, "__call_thing")) then
        _dummy_ = _temp36:walk(_temp4,_temp76)
      elseif _temp36.walk ~= nil then
        _dummy_ = _temp36.walk

        elseif _temp36.no_undermethod ~= nil then
          _dummy_ =  _temp36:no_undermethod(string:new("walk") , _temp4,_temp76)
        else
          _error(exception:method_error(_temp36, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp76)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp76)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp76)
      else
        _error(exception:method_error(_temp36, "walk"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp76 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp76 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp76 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp76 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp76 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp76 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp86 = function (_self, _temp78,_temp77)
        if _temp78 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp77 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp77 =  null(_self)

    elseif null then
      _temp77 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp77 =  _self:null()
      elseif _self.null ~= nil then
        _temp77 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp79
local _temp80 = nil
    if _type(_temp77) == "function" or (_type(_temp77) == "table" and _rawget(_temp77, "__call_thing")) then
      _temp80 =  _temp77(_self)

    elseif _temp77 then
      _temp80 =  _temp77
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp80 =  _self:var()
      elseif _self.var ~= nil then
        _temp80 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp80 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp80 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp79 =  set_underresult(_self, _temp80)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp79 =  _self:set_underresult(_temp80)
      elseif _self.set_underresult ~= nil then
        _temp79 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("set_result") , _temp80)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("set_result") , _temp80)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp81 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp81 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp81 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp81 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp81 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp81 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp81 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp82 = nil
      local _t = _type(_temp81)
      if _t == "table" then
                      if _type(_temp81.out) == "function" or (_type(_temp81.out) == "table" and _rawget(_temp81.out, "__call_thing")) then
        _temp82 = _temp81:out()
      elseif _temp81.out ~= nil then
        _temp82 = _temp81.out

        elseif _temp81.no_undermethod ~= nil then
          _temp82 =  _temp81:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp81, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp81)
      if _n.out ~= nil then
        _temp82 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp82 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp81)
      if _f.out ~= nil then
        _temp82 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp82 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp81, "out"))
      end

      elseif _temp81 == nil then
        _error(exception:null_error("_temp81", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp81))
      end

local _temp83 = nil
local _temp84 = nil
        local _t = _type(_temp78)
        if _t == "table" then
          if _rawget(_temp78, "__call_thing") == nil then
            _temp84 = _temp78
          else
                  if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

          end
        elseif _t == "number" then
          _temp84 = _temp78
        elseif _t == "function" then
                if _temp78 == nil then
              if _type(_self._temp78) == "function" or (_type(_self._temp78) == "table" and _rawget(_self._temp78, "__call_thing")) then
        _temp84 =  _self:_temp78()
      elseif _self._temp78 ~= nil then
        _temp84 =  _self._temp78

        elseif _self.no_undermethod ~= nil then
          _temp84 =  _self:no_undermethod(string:new("_temp78"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp84 =  _temp78(_self)
      end

        elseif _temp78 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.value) == "function" or (_type(_temp84.value) == "table" and _rawget(_temp84.value, "__call_thing")) then
        _temp84 = _temp84:value()
      elseif _temp84.value ~= nil then
        _temp84 = _temp84.value

        elseif _temp84.no_undermethod ~= nil then
          _temp84 =  _temp84:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp84, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.value ~= nil then
        _temp84 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp84 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.value ~= nil then
        _temp84 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp84 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp84, "value"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end


local _temp85 = nil
        local _t = _type(_temp79)
        if _t == "table" then
          if _rawget(_temp79, "__call_thing") == nil then
            _temp85 = _temp79
          else
                  if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

          end
        elseif _t == "number" then
          _temp85 = _temp79
        elseif _t == "function" then
                if _temp79 == nil then
              if _type(_self._temp79) == "function" or (_type(_self._temp79) == "table" and _rawget(_self._temp79, "__call_thing")) then
        _temp85 =  _self:_temp79()
      elseif _self._temp79 ~= nil then
        _temp85 =  _self._temp79

        elseif _self.no_undermethod ~= nil then
          _temp85 =  _self:no_undermethod(string:new("_temp79"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp85 =  _temp79(_self)
      end

        elseif _temp79 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp85)
      if _t == "table" then
                      if _type(_temp85.var) == "function" or (_type(_temp85.var) == "table" and _rawget(_temp85.var, "__call_thing")) then
        _temp85 = _temp85:var()
      elseif _temp85.var ~= nil then
        _temp85 = _temp85.var

        elseif _temp85.no_undermethod ~= nil then
          _temp85 =  _temp85:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp85, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp85)
      if _n.var ~= nil then
        _temp85 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp85)
      if _f.var ~= nil then
        _temp85 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp85, "var"))
      end

      elseif _temp85 == nil then
        _error(exception:null_error("_temp85", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp85))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp83 =  get_undervalue(_self, _temp84,_temp85)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp83 =  _self:get_undervalue(_temp84,_temp85)
      elseif _self.get_undervalue ~= nil then
        _temp83 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("get_value") , _temp84,_temp85)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("get_value") , _temp84,_temp85)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp85
      local _t = _type(_temp82)
      if _t == "table" then
                      if _type(_temp82._less_less) == "function" or (_type(_temp82._less_less) == "table" and _rawget(_temp82._less_less, "__call_thing")) then
        _temp85 = _temp82:_less_less(_temp83)
      elseif _temp82._less_less ~= nil then
        _temp85 = _temp82._less_less

        elseif _temp82.no_undermethod ~= nil then
          _temp85 =  _temp82:no_undermethod(string:new("<<") , _temp83)
        else
          _error(exception:method_error(_temp82, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp82)
      if _n._less_less ~= nil then
        _temp85 = _n:_less_less(_temp83)
      elseif _n.no_undermethod ~= nil then
        _temp85 =  _n:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp82)
      if _f._less_less ~= nil then
        _temp85 = _f:_less_less(_temp83)
      elseif _f.no_undermethod ~= nil then
        _temp85 =  _f:no_undermethod(string:new("<<") , _temp83)
      else
        _error(exception:method_error(_temp82, "<<"))
      end

      elseif _temp82 == nil then
        _error(exception:null_error("_temp82", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp82))
      end

_dummy_ = _temp85 
end

    if _type(_temp79) == "function" or (_type(_temp79) == "table" and _rawget(_temp79, "__call_thing")) then
      return  _temp79(_self)

    elseif _temp79 then
      return  _temp79
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.walk) == "function" or (_type(_temp76.walk) == "table" and _rawget(_temp76.walk, "__call_thing")) then
        _dummy_ = _temp76:walk(_temp4,_temp86)
      elseif _temp76.walk ~= nil then
        _dummy_ = _temp76.walk

        elseif _temp76.no_undermethod ~= nil then
          _dummy_ =  _temp76:no_undermethod(string:new("walk") , _temp4,_temp86)
        else
          _error(exception:method_error(_temp76, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp86)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp86)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp86)
      else
        _error(exception:method_error(_temp76, "walk"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp86 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp86 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp86 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp86 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp86 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp86 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp94 = function (_self, _temp88,_temp87)
        if _temp88 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp87 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp87 =  null(_self)

    elseif null then
      _temp87 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp87 =  _self:null()
      elseif _self.null ~= nil then
        _temp87 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp89 = nil
    if _type(_temp88) == "function" or (_type(_temp88) == "table" and _rawget(_temp88, "__call_thing")) then
      _temp89 =  _temp88(_self)

    elseif _temp88 then
      _temp89 =  _temp88
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp89 =  _self:node()
      elseif _self.node ~= nil then
        _temp89 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp90 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp90 =  null(_self)

    elseif null then
      _temp90 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp90 =  _self:null()
      elseif _self.null ~= nil then
        _temp90 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp90 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp90 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp91 = nil

        if invoke_underlocal == nil then
          _temp91 = _self["invoke_underlocal"]
          if _temp91 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp91 = invoke_underlocal
        end

local _temp92 = nil
    if _type(_temp87) == "function" or (_type(_temp87) == "table" and _rawget(_temp87, "__call_thing")) then
      _temp92 =  _temp87(_self)

    elseif _temp87 then
      _temp92 =  _temp87
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp92 =  _self:var()
      elseif _self.var ~= nil then
        _temp92 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp89,_temp90,_temp91,_temp92)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp89,_temp90,_temp91,_temp92)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp89,_temp90,_temp91,_temp92)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp86)
      if _t == "table" then
                      if _type(_temp86.walk) == "function" or (_type(_temp86.walk) == "table" and _rawget(_temp86.walk, "__call_thing")) then
        _dummy_ = _temp86:walk(_temp4,_temp94)
      elseif _temp86.walk ~= nil then
        _dummy_ = _temp86.walk

        elseif _temp86.no_undermethod ~= nil then
          _dummy_ =  _temp86:no_undermethod(string:new("walk") , _temp4,_temp94)
        else
          _error(exception:method_error(_temp86, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp86)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp94)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp86)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp94)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp94)
      else
        _error(exception:method_error(_temp86, "walk"))
      end

      elseif _temp86 == nil then
        _error(exception:null_error("_temp86", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp86))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp94 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp94 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp94 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp94 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp94 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp94 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp102 = function (_self, _temp96,_temp95)
        if _temp96 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp95 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp95 =  null(_self)

    elseif null then
      _temp95 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp95 =  _self:null()
      elseif _self.null ~= nil then
        _temp95 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp97 = nil
    if _type(_temp96) == "function" or (_type(_temp96) == "table" and _rawget(_temp96, "__call_thing")) then
      _temp97 =  _temp96(_self)

    elseif _temp96 then
      _temp97 =  _temp96
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp97 =  _self:node()
      elseif _self.node ~= nil then
        _temp97 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp98 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp98 =  null(_self)

    elseif null then
      _temp98 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp98 =  _self:null()
      elseif _self.null ~= nil then
        _temp98 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp98 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp98 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp99 = nil

        if invoke_underlocal == nil then
          _temp99 = _self["invoke_underlocal"]
          if _temp99 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp99 = invoke_underlocal
        end

local _temp100 = nil
    if _type(_temp95) == "function" or (_type(_temp95) == "table" and _rawget(_temp95, "__call_thing")) then
      _temp100 =  _temp95(_self)

    elseif _temp95 then
      _temp100 =  _temp95
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp100 =  _self:var()
      elseif _self.var ~= nil then
        _temp100 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp97,_temp98,_temp99,_temp100)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp97,_temp98,_temp99,_temp100)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp97,_temp98,_temp99,_temp100)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp94)
      if _t == "table" then
                      if _type(_temp94.walk) == "function" or (_type(_temp94.walk) == "table" and _rawget(_temp94.walk, "__call_thing")) then
        _dummy_ = _temp94:walk(_temp4,_temp102)
      elseif _temp94.walk ~= nil then
        _dummy_ = _temp94.walk

        elseif _temp94.no_undermethod ~= nil then
          _dummy_ =  _temp94:no_undermethod(string:new("walk") , _temp4,_temp102)
        else
          _error(exception:method_error(_temp94, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp94)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp102)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp94)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp102)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp102)
      else
        _error(exception:method_error(_temp94, "walk"))
      end

      elseif _temp94 == nil then
        _error(exception:null_error("_temp94", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp94))
      end

local _temp103
do
_temp103 = {}
local _temp102
_temp102 = string:new("true_question")

_temp103[1] = _temp102
_temp103 = array:new(_temp103)
end

local _temp104
_temp104 = function (_self, _temp105)
        if _temp105 == nil then
          _error(exception:argument_error("inlineable?", 1, 0))

end
local _temp106 
do
local _temp107 = nil
        local _t = _type(_temp105)
        if _t == "table" then
          if _rawget(_temp105, "__call_thing") == nil then
            _temp107 = _temp105
          else
                  if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp107 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp107 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp107 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp107 =  _temp105(_self)
      end

          end
        elseif _t == "number" then
          _temp107 = _temp105
        elseif _t == "function" then
                if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp107 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp107 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp107 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp107 =  _temp105(_self)
      end

        elseif _temp105 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp108 = nil
      local _t = _type(_temp107)
      if _t == "table" then
                      if _type(_temp107.null_question) == "function" or (_type(_temp107.null_question) == "table" and _rawget(_temp107.null_question, "__call_thing")) then
        _temp108 = _temp107:null_question()
      elseif _temp107.null_question ~= nil then
        _temp108 = _temp107.null_question

        elseif _temp107.no_undermethod ~= nil then
          _temp108 =  _temp107:no_undermethod(string:new("null?"))
        else
          _error(exception:method_error(_temp107, "null?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp107)
      if _n.null_question ~= nil then
        _temp108 = _n:null_question()
      elseif _n.no_undermethod ~= nil then
        _temp108 =  _n:no_undermethod(string:new("null?"))
      else
        _error(exception:method_error(_temp107, "null?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp107)
      if _f.null_question ~= nil then
        _temp108 = _f:null_question()
      elseif _f.no_undermethod ~= nil then
        _temp108 =  _f:no_undermethod(string:new("null?"))
      else
        _error(exception:method_error(_temp107, "null?"))
      end

      elseif _temp107 == nil then
        _error(exception:null_error("_temp107", "invoke null? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp107))
      end


local _temp122 = function (_self)

local _temp109 
do
local _temp110 = nil
        local _t = _type(_temp105)
        if _t == "table" then
          if _rawget(_temp105, "__call_thing") == nil then
            _temp110 = _temp105
          else
                  if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp110 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp110 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp110 =  _temp105(_self)
      end

          end
        elseif _t == "number" then
          _temp110 = _temp105
        elseif _t == "function" then
                if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp110 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp110 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp110 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp110 =  _temp105(_self)
      end

        elseif _temp105 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp111 = nil
      local _t = _type(_temp110)
      if _t == "table" then
                      if _type(_temp110.name) == "function" or (_type(_temp110.name) == "table" and _rawget(_temp110.name, "__call_thing")) then
        _temp111 = _temp110:name()
      elseif _temp110.name ~= nil then
        _temp111 = _temp110.name

        elseif _temp110.no_undermethod ~= nil then
          _temp111 =  _temp110:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp110, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp110)
      if _n.name ~= nil then
        _temp111 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp111 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp110, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp110)
      if _f.name ~= nil then
        _temp111 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp111 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp110, "name"))
      end

      elseif _temp110 == nil then
        _error(exception:null_error("_temp110", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp110))
      end

local _temp112 = string:new("function")


local _temp119 = function (_self)

local _temp113 
do
local _temp114 = nil
        local _t = _type(_temp105)
        if _t == "table" then
          if _rawget(_temp105, "__call_thing") == nil then
            _temp114 = _temp105
          else
                  if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp114 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp114 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp114 =  _temp105(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp105
        elseif _t == "function" then
                if _temp105 == nil then
              if _type(_self._temp105) == "function" or (_type(_self._temp105) == "table" and _rawget(_self._temp105, "__call_thing")) then
        _temp114 =  _self:_temp105()
      elseif _self._temp105 ~= nil then
        _temp114 =  _self._temp105

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp105"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp114 =  _temp105(_self)
      end

        elseif _temp105 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp115 = nil
      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.name) == "function" or (_type(_temp114.name) == "table" and _rawget(_temp114.name, "__call_thing")) then
        _temp115 = _temp114:name()
      elseif _temp114.name ~= nil then
        _temp115 = _temp114.name

        elseif _temp114.no_undermethod ~= nil then
          _temp115 =  _temp114:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp114, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.name ~= nil then
        _temp115 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp115 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp114, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.name ~= nil then
        _temp115 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp115 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp114, "name"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end

local _temp116 = string:new("liftable_function")
local _temp117
      local _t = _type(_temp115)
      if _t == "table" then
                      if _type(_temp115._equal_equal) == "function" or (_type(_temp115._equal_equal) == "table" and _rawget(_temp115._equal_equal, "__call_thing")) then
        _temp117 = _temp115:_equal_equal(_temp116)
      elseif _temp115._equal_equal ~= nil then
        _temp117 = _temp115._equal_equal

        elseif _temp115.no_undermethod ~= nil then
          _temp117 =  _temp115:no_undermethod(string:new("==") , _temp116)
        else
          _error(exception:method_error(_temp115, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp116) == 'number' then
              if _temp115 == _temp116 then
        _temp117 = object.__true
      else
        _temp117 = object.__false
      end

      else
              local _n = number:new(_temp115)
      if _n._equal_equal ~= nil then
        _temp117 = _n:_equal_equal(_temp116)
      elseif _n.no_undermethod ~= nil then
        _temp117 =  _n:no_undermethod(string:new("==") , _temp116)
      else
        _error(exception:method_error(_temp115, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp115)
      if _f._equal_equal ~= nil then
        _temp117 = _f:_equal_equal(_temp116)
      elseif _f.no_undermethod ~= nil then
        _temp117 =  _f:no_undermethod(string:new("==") , _temp116)
      else
        _error(exception:method_error(_temp115, "=="))
      end

      elseif _temp115 == nil then
        _error(exception:null_error("_temp115", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp115))
      end

_temp113 = _temp117 
end

return _temp113
end
local _temp120
      local _t = _type(_temp111)
      if _t == "table" then
                      if _type(_temp111._equal_equal) == "function" or (_type(_temp111._equal_equal) == "table" and _rawget(_temp111._equal_equal, "__call_thing")) then
        _temp120 = _temp111:_equal_equal(_temp112)
      elseif _temp111._equal_equal ~= nil then
        _temp120 = _temp111._equal_equal

        elseif _temp111.no_undermethod ~= nil then
          _temp120 =  _temp111:no_undermethod(string:new("==") , _temp112)
        else
          _error(exception:method_error(_temp111, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp112) == 'number' then
              if _temp111 == _temp112 then
        _temp120 = object.__true
      else
        _temp120 = object.__false
      end

      else
              local _n = number:new(_temp111)
      if _n._equal_equal ~= nil then
        _temp120 = _n:_equal_equal(_temp112)
      elseif _n.no_undermethod ~= nil then
        _temp120 =  _n:no_undermethod(string:new("==") , _temp112)
      else
        _error(exception:method_error(_temp111, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp111)
      if _f._equal_equal ~= nil then
        _temp120 = _f:_equal_equal(_temp112)
      elseif _f.no_undermethod ~= nil then
        _temp120 =  _f:no_undermethod(string:new("==") , _temp112)
      else
        _error(exception:method_error(_temp111, "=="))
      end

      elseif _temp111 == nil then
        _error(exception:null_error("_temp111", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp111))
      end

local _temp112
      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120._or_or) == "function" or (_type(_temp120._or_or) == "table" and _rawget(_temp120._or_or, "__call_thing")) then
        _temp112 = _temp120:_or_or(_temp119)
      elseif _temp120._or_or ~= nil then
        _temp112 = _temp120._or_or

        elseif _temp120.no_undermethod ~= nil then
          _temp112 =  _temp120:no_undermethod(string:new("||") , _temp119)
        else
          _error(exception:method_error(_temp120, "||"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n._or_or ~= nil then
        _temp112 = _n:_or_or(_temp119)
      elseif _n.no_undermethod ~= nil then
        _temp112 =  _n:no_undermethod(string:new("||") , _temp119)
      else
        _error(exception:method_error(_temp120, "||"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f._or_or ~= nil then
        _temp112 = _f:_or_or(_temp119)
      elseif _f.no_undermethod ~= nil then
        _temp112 =  _f:no_undermethod(string:new("||") , _temp119)
      else
        _error(exception:method_error(_temp120, "||"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke || on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

_temp109 = _temp112 
end

return _temp109
end
local _temp123
      local _t = _type(_temp108)
      if _t == "table" then
                      if _type(_temp108._or_or) == "function" or (_type(_temp108._or_or) == "table" and _rawget(_temp108._or_or, "__call_thing")) then
        _temp123 = _temp108:_or_or(_temp122)
      elseif _temp108._or_or ~= nil then
        _temp123 = _temp108._or_or

        elseif _temp108.no_undermethod ~= nil then
          _temp123 =  _temp108:no_undermethod(string:new("||") , _temp122)
        else
          _error(exception:method_error(_temp108, "||"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp108)
      if _n._or_or ~= nil then
        _temp123 = _n:_or_or(_temp122)
      elseif _n.no_undermethod ~= nil then
        _temp123 =  _n:no_undermethod(string:new("||") , _temp122)
      else
        _error(exception:method_error(_temp108, "||"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp108)
      if _f._or_or ~= nil then
        _temp123 = _f:_or_or(_temp122)
      elseif _f.no_undermethod ~= nil then
        _temp123 =  _f:no_undermethod(string:new("||") , _temp122)
      else
        _error(exception:method_error(_temp108, "||"))
      end

      elseif _temp108 == nil then
        _error(exception:null_error("_temp108", "invoke || on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp108))
      end

_temp106 = _temp123 
end

return _temp106
end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp102 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp102 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp102 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp102 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp102 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp102 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp150 = function (_self, _temp126,_temp125)
        if _temp126 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp125 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp125 =  null(_self)

    elseif null then
      _temp125 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp125 =  _self:null()
      elseif _self.null ~= nil then
        _temp125 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp127 
do
local _temp128 = nil
        local _t = _type(_temp103)
        if _t == "table" then
          if _rawget(_temp103, "__call_thing") == nil then
            _temp128 = _temp103
          else
                  if _temp103 == nil then
              if _type(_self._temp103) == "function" or (_type(_self._temp103) == "table" and _rawget(_self._temp103, "__call_thing")) then
        _temp128 =  _self:_temp103()
      elseif _self._temp103 ~= nil then
        _temp128 =  _self._temp103

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp103"))
        else
          _error(exception:null_error("conds", "invoke method"))
        end
      else 
        _temp128 =  _temp103(_self)
      end

          end
        elseif _t == "number" then
          _temp128 = _temp103
        elseif _t == "function" then
                if _temp103 == nil then
              if _type(_self._temp103) == "function" or (_type(_self._temp103) == "table" and _rawget(_self._temp103, "__call_thing")) then
        _temp128 =  _self:_temp103()
      elseif _self._temp103 ~= nil then
        _temp128 =  _self._temp103

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp103"))
        else
          _error(exception:null_error("conds", "invoke method"))
        end
      else 
        _temp128 =  _temp103(_self)
      end

        elseif _temp103 == nil then
          _error(exception:null_error("conds", "cannot call method on it"))
        else
          _error(exception:method_error("self", "conds"))
        end

local _temp129 = nil
local _temp130 = nil
        local _t = _type(_temp126)
        if _t == "table" then
          if _rawget(_temp126, "__call_thing") == nil then
            _temp130 = _temp126
          else
                  if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp130 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp130 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp130 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp130 =  _temp126(_self)
      end

          end
        elseif _t == "number" then
          _temp130 = _temp126
        elseif _t == "function" then
                if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp130 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp130 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp130 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp130 =  _temp126(_self)
      end

        elseif _temp126 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp130)
      if _t == "table" then
                      if _type(_temp130.method) == "function" or (_type(_temp130.method) == "table" and _rawget(_temp130.method, "__call_thing")) then
        _temp130 = _temp130:method()
      elseif _temp130.method ~= nil then
        _temp130 = _temp130.method

        elseif _temp130.no_undermethod ~= nil then
          _temp130 =  _temp130:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp130, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp130)
      if _n.method ~= nil then
        _temp130 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp130 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp130, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp130)
      if _f.method ~= nil then
        _temp130 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp130 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp130, "method"))
      end

      elseif _temp130 == nil then
        _error(exception:null_error("_temp130", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp130))
      end



      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.include_question) == "function" or (_type(_temp128.include_question) == "table" and _rawget(_temp128.include_question, "__call_thing")) then
        _temp129 = _temp128:include_question(_temp130)
      elseif _temp128.include_question ~= nil then
        _temp129 = _temp128.include_question

        elseif _temp128.no_undermethod ~= nil then
          _temp129 =  _temp128:no_undermethod(string:new("include?") , _temp130)
        else
          _error(exception:method_error(_temp128, "include?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.include_question ~= nil then
        _temp129 = _n:include_question(_temp130)
      elseif _n.no_undermethod ~= nil then
        _temp129 =  _n:no_undermethod(string:new("include?") , _temp130)
      else
        _error(exception:method_error(_temp128, "include?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.include_question ~= nil then
        _temp129 = _f:include_question(_temp130)
      elseif _f.no_undermethod ~= nil then
        _temp129 =  _f:no_undermethod(string:new("include?") , _temp130)
      else
        _error(exception:method_error(_temp128, "include?"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke include? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end


local _temp138 = function (_self)

local _temp131 
do
local _temp132 = nil
local _temp133
do
        local _t = _type(_temp126)
        if _t == "table" then
          if _rawget(_temp126, "__call_thing") == nil then
            _temp133 = _temp126
          else
                  if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp133 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp133 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp133 =  _temp126(_self)
      end

          end
        elseif _t == "number" then
          _temp133 = _temp126
        elseif _t == "function" then
                if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp133 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp133 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp133 =  _temp126(_self)
      end

        elseif _temp126 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp133)
      if _t == "table" then
                      if _type(_temp133.args) == "function" or (_type(_temp133.args) == "table" and _rawget(_temp133.args, "__call_thing")) then
        _temp133 = _temp133:args()
      elseif _temp133.args ~= nil then
        _temp133 = _temp133.args

        elseif _temp133.no_undermethod ~= nil then
          _temp133 =  _temp133:no_undermethod(string:new("args"))
        else
          _error(exception:method_error(_temp133, "args"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp133)
      if _n.args ~= nil then
        _temp133 = _n:args()
      elseif _n.no_undermethod ~= nil then
        _temp133 =  _n:no_undermethod(string:new("args"))
      else
        _error(exception:method_error(_temp133, "args"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp133)
      if _f.args ~= nil then
        _temp133 = _f:args()
      elseif _f.no_undermethod ~= nil then
        _temp133 =  _f:no_undermethod(string:new("args"))
      else
        _error(exception:method_error(_temp133, "args"))
      end

      elseif _temp133 == nil then
        _error(exception:null_error("_temp133", "invoke args on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp133))
      end



_temp133 = _temp133:get(1)
end

_temp132 =  _temp104(_self, _temp133)

local _temp136 = function (_self)

local _temp134
do
        local _t = _type(_temp126)
        if _t == "table" then
          if _rawget(_temp126, "__call_thing") == nil then
            _temp134 = _temp126
          else
                  if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp134 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp134 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp134 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp134 =  _temp126(_self)
      end

          end
        elseif _t == "number" then
          _temp134 = _temp126
        elseif _t == "function" then
                if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp134 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp134 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp134 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp134 =  _temp126(_self)
      end

        elseif _temp126 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp134)
      if _t == "table" then
                      if _type(_temp134.args) == "function" or (_type(_temp134.args) == "table" and _rawget(_temp134.args, "__call_thing")) then
        _temp134 = _temp134:args()
      elseif _temp134.args ~= nil then
        _temp134 = _temp134.args

        elseif _temp134.no_undermethod ~= nil then
          _temp134 =  _temp134:no_undermethod(string:new("args"))
        else
          _error(exception:method_error(_temp134, "args"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp134)
      if _n.args ~= nil then
        _temp134 = _n:args()
      elseif _n.no_undermethod ~= nil then
        _temp134 =  _n:no_undermethod(string:new("args"))
      else
        _error(exception:method_error(_temp134, "args"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp134)
      if _f.args ~= nil then
        _temp134 = _f:args()
      elseif _f.no_undermethod ~= nil then
        _temp134 =  _f:no_undermethod(string:new("args"))
      else
        _error(exception:method_error(_temp134, "args"))
      end

      elseif _temp134 == nil then
        _error(exception:null_error("_temp134", "invoke args on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp134))
      end



_temp134 = _temp134:get(2)
end

return  _temp104(_self, _temp134)

end
local _temp133
      local _t = _type(_temp132)
      if _t == "table" then
                      if _type(_temp132._and_and) == "function" or (_type(_temp132._and_and) == "table" and _rawget(_temp132._and_and, "__call_thing")) then
        _temp133 = _temp132:_and_and(_temp136)
      elseif _temp132._and_and ~= nil then
        _temp133 = _temp132._and_and

        elseif _temp132.no_undermethod ~= nil then
          _temp133 =  _temp132:no_undermethod(string:new("&&") , _temp136)
        else
          _error(exception:method_error(_temp132, "&&"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp132)
      if _n._and_and ~= nil then
        _temp133 = _n:_and_and(_temp136)
      elseif _n.no_undermethod ~= nil then
        _temp133 =  _n:no_undermethod(string:new("&&") , _temp136)
      else
        _error(exception:method_error(_temp132, "&&"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp132)
      if _f._and_and ~= nil then
        _temp133 = _f:_and_and(_temp136)
      elseif _f.no_undermethod ~= nil then
        _temp133 =  _f:no_undermethod(string:new("&&") , _temp136)
      else
        _error(exception:method_error(_temp132, "&&"))
      end

      elseif _temp132 == nil then
        _error(exception:null_error("_temp132", "invoke && on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp132))
      end

_temp131 = _temp133 
end

return _temp131
end
local _temp130
      local _t = _type(_temp129)
      if _t == "table" then
                      if _type(_temp129._and_and) == "function" or (_type(_temp129._and_and) == "table" and _rawget(_temp129._and_and, "__call_thing")) then
        _temp130 = _temp129:_and_and(_temp138)
      elseif _temp129._and_and ~= nil then
        _temp130 = _temp129._and_and

        elseif _temp129.no_undermethod ~= nil then
          _temp130 =  _temp129:no_undermethod(string:new("&&") , _temp138)
        else
          _error(exception:method_error(_temp129, "&&"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp129)
      if _n._and_and ~= nil then
        _temp130 = _n:_and_and(_temp138)
      elseif _n.no_undermethod ~= nil then
        _temp130 =  _n:no_undermethod(string:new("&&") , _temp138)
      else
        _error(exception:method_error(_temp129, "&&"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp129)
      if _f._and_and ~= nil then
        _temp130 = _f:_and_and(_temp138)
      elseif _f.no_undermethod ~= nil then
        _temp130 =  _f:no_undermethod(string:new("&&") , _temp138)
      else
        _error(exception:method_error(_temp129, "&&"))
      end

      elseif _temp129 == nil then
        _error(exception:null_error("_temp129", "invoke && on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp129))
      end

_temp127 = _temp130 
end


local _temp142 = function (_self)

local _temp139 = nil
    if _type(_temp126) == "function" or (_type(_temp126) == "table" and _rawget(_temp126, "__call_thing")) then
      _temp139 =  _temp126(_self)

    elseif _temp126 then
      _temp139 =  _temp126
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp139 =  _self:node()
      elseif _self.node ~= nil then
        _temp139 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp140 = nil
    if _type(_temp125) == "function" or (_type(_temp125) == "table" and _rawget(_temp125, "__call_thing")) then
      _temp140 =  _temp125(_self)

    elseif _temp125 then
      _temp140 =  _temp125
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp140 =  _self:var()
      elseif _self.var ~= nil then
        _temp140 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp140 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp140 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(true_underif) == "function" or (_type(true_underif) == "table" and _rawget(true_underif, "__call_thing")) then
      return  true_underif(_self, _temp139,_temp140)

    elseif true_underif then
      _error(exception:new("Tried to invoke non-method: true_if (" .. object.__type(true_underif) .. ")"))
    else
            if _type(_self.true_underif) == "function" or (_type(_self.true_underif) == "table" and _rawget(_self.true_underif, "__call_thing")) then
        return  _self:true_underif(_temp139,_temp140)
      elseif _self.true_underif ~= nil then
        return  _self.true_underif

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true_if") , _temp139,_temp140)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true_if") , _temp139,_temp140)
      else
        _error(exception:name_error("true_if"))
      end
    end

end


local _temp148 = function (_self)

local _temp143 = nil
    if _type(_temp126) == "function" or (_type(_temp126) == "table" and _rawget(_temp126, "__call_thing")) then
      _temp143 =  _temp126(_self)

    elseif _temp126 then
      _temp143 =  _temp126
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp143 =  _self:node()
      elseif _self.node ~= nil then
        _temp143 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp144 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp144 =  null(_self)

    elseif null then
      _temp144 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp144 =  _self:null()
      elseif _self.null ~= nil then
        _temp144 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp144 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp144 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp145 = nil

        if invoke_underself == nil then
          _temp145 = _self["invoke_underself"]
          if _temp145 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp145 = invoke_underself
        end

local _temp146 = nil
    if _type(_temp125) == "function" or (_type(_temp125) == "table" and _rawget(_temp125, "__call_thing")) then
      _temp146 =  _temp125(_self)

    elseif _temp125 then
      _temp146 =  _temp125
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp146 =  _self:var()
      elseif _self.var ~= nil then
        _temp146 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp146 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp146 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp143,_temp144,_temp145,_temp146)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp143,_temp144,_temp145,_temp146)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp143,_temp144,_temp145,_temp146)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp143,_temp144,_temp145,_temp146)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp127,_temp142,_temp148)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp127,_temp142,_temp148)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp127,_temp142,_temp148)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp127,_temp142,_temp148)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp102)
      if _t == "table" then
                      if _type(_temp102.walk) == "function" or (_type(_temp102.walk) == "table" and _rawget(_temp102.walk, "__call_thing")) then
        _dummy_ = _temp102:walk(_temp4,_temp150)
      elseif _temp102.walk ~= nil then
        _dummy_ = _temp102.walk

        elseif _temp102.no_undermethod ~= nil then
          _dummy_ =  _temp102:no_undermethod(string:new("walk") , _temp4,_temp150)
        else
          _error(exception:method_error(_temp102, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp102)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp150)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp150)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp102)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp150)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp150)
      else
        _error(exception:method_error(_temp102, "walk"))
      end

      elseif _temp102 == nil then
        _error(exception:null_error("_temp102", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp102))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp150 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp150 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp150 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp150 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp150 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp150 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp150 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp150 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp160 = function (_self, _temp152,_temp151)
        if _temp152 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp151 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp151 =  null(_self)

    elseif null then
      _temp151 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp151 =  _self:null()
      elseif _self.null ~= nil then
        _temp151 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp153
local _temp154 = nil
        local _t = _type(_temp152)
        if _t == "table" then
          if _rawget(_temp152, "__call_thing") == nil then
            _temp154 = _temp152
          else
                  if _temp152 == nil then
              if _type(_self._temp152) == "function" or (_type(_self._temp152) == "table" and _rawget(_self._temp152, "__call_thing")) then
        _temp154 =  _self:_temp152()
      elseif _self._temp152 ~= nil then
        _temp154 =  _self._temp152

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp152"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp154 =  _temp152(_self)
      end

          end
        elseif _t == "number" then
          _temp154 = _temp152
        elseif _t == "function" then
                if _temp152 == nil then
              if _type(_self._temp152) == "function" or (_type(_self._temp152) == "table" and _rawget(_self._temp152, "__call_thing")) then
        _temp154 =  _self:_temp152()
      elseif _self._temp152 ~= nil then
        _temp154 =  _self._temp152

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp152"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp154 =  _temp152(_self)
      end

        elseif _temp152 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp154)
      if _t == "table" then
                      if _type(_temp154.target) == "function" or (_type(_temp154.target) == "table" and _rawget(_temp154.target, "__call_thing")) then
        _temp154 = _temp154:target()
      elseif _temp154.target ~= nil then
        _temp154 = _temp154.target

        elseif _temp154.no_undermethod ~= nil then
          _temp154 =  _temp154:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp154, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp154)
      if _n.target ~= nil then
        _temp154 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp154 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp154, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp154)
      if _f.target ~= nil then
        _temp154 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp154 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp154, "target"))
      end

      elseif _temp154 == nil then
        _error(exception:null_error("_temp154", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp154))
      end


local _temp155 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp155 =  _temp151(_self)

    elseif _temp151 then
      _temp155 =  _temp151
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp155 =  _self:var()
      elseif _self.var ~= nil then
        _temp155 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp153 =  process(_self, _temp154,_temp155)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp153 =  _self:process(_temp154,_temp155)
      elseif _self.process ~= nil then
        _temp153 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp153 =  _self:no_undermethod(string:new("process") , _temp154,_temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp153 =  no_undermethod(_self, string:new("process") , _temp154,_temp155)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp152)
        if _t == "table" then
          if _rawget(_temp152, "__call_thing") == nil then
            _temp155 = _temp152
          else
                  if _temp152 == nil then
              if _type(_self._temp152) == "function" or (_type(_self._temp152) == "table" and _rawget(_self._temp152, "__call_thing")) then
        _temp155 =  _self:_temp152()
      elseif _self._temp152 ~= nil then
        _temp155 =  _self._temp152

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp152"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp155 =  _temp152(_self)
      end

          end
        elseif _t == "number" then
          _temp155 = _temp152
        elseif _t == "function" then
                if _temp152 == nil then
              if _type(_self._temp152) == "function" or (_type(_self._temp152) == "table" and _rawget(_self._temp152, "__call_thing")) then
        _temp155 =  _self:_temp152()
      elseif _self._temp152 ~= nil then
        _temp155 =  _self._temp152

        elseif _self.no_undermethod ~= nil then
          _temp155 =  _self:no_undermethod(string:new("_temp152"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp155 =  _temp152(_self)
      end

        elseif _temp152 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp154 =  null(_self)

    elseif null then
      _temp154 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp154 =  _self:null()
      elseif _self.null ~= nil then
        _temp154 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp154 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp154 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp155) == "table" then
          _temp155["method"] = _temp154
        elseif _type(_temp155) == "number" then
          number["method"] = _temp154
        else
          _error("Cannot set method on " .. _temp155)
        end

    if _type(_temp152) == "function" or (_type(_temp152) == "table" and _rawget(_temp152, "__call_thing")) then
      _temp155 =  _temp152(_self)

    elseif _temp152 then
      _temp155 =  _temp152
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp155 =  _self:node()
      elseif _self.node ~= nil then
        _temp155 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp156 = nil
    if _type(_temp153) == "function" or (_type(_temp153) == "table" and _rawget(_temp153, "__call_thing")) then
      _temp156 =  _temp153(_self)

    elseif _temp153 then
      _temp156 =  _temp153
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp156 =  _self:target()
      elseif _self.target ~= nil then
        _temp156 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp156 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp156 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp157 = nil

        if invoke_underindex_underget == nil then
          _temp157 = _self["invoke_underindex_underget"]
          if _temp157 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp157 = invoke_underindex_underget
        end

local _temp158 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp158 =  _temp151(_self)

    elseif _temp151 then
      _temp158 =  _temp151
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp158 =  _self:var()
      elseif _self.var ~= nil then
        _temp158 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp158 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp158 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp155,_temp156,_temp157,_temp158)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp155,_temp156,_temp157,_temp158)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp155,_temp156,_temp157,_temp158)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp155,_temp156,_temp157,_temp158)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp150)
      if _t == "table" then
                      if _type(_temp150.walk) == "function" or (_type(_temp150.walk) == "table" and _rawget(_temp150.walk, "__call_thing")) then
        _dummy_ = _temp150:walk(_temp4,_temp160)
      elseif _temp150.walk ~= nil then
        _dummy_ = _temp150.walk

        elseif _temp150.no_undermethod ~= nil then
          _dummy_ =  _temp150:no_undermethod(string:new("walk") , _temp4,_temp160)
        else
          _error(exception:method_error(_temp150, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp150)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp160)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp160)
      else
        _error(exception:method_error(_temp150, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp150)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp160)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp160)
      else
        _error(exception:method_error(_temp150, "walk"))
      end

      elseif _temp150 == nil then
        _error(exception:null_error("_temp150", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp150))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp160 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp160 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp160 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp160 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp160 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp160 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp160 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp160 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_get")

local _temp168 = function (_self, _temp162,_temp161)
        if _temp162 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp161 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp161 =  null(_self)

    elseif null then
      _temp161 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp161 =  _self:null()
      elseif _self.null ~= nil then
        _temp161 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp161 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp161 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp163
local _temp164 = nil
        local _t = _type(_temp162)
        if _t == "table" then
          if _rawget(_temp162, "__call_thing") == nil then
            _temp164 = _temp162
          else
                  if _temp162 == nil then
              if _type(_self._temp162) == "function" or (_type(_self._temp162) == "table" and _rawget(_self._temp162, "__call_thing")) then
        _temp164 =  _self:_temp162()
      elseif _self._temp162 ~= nil then
        _temp164 =  _self._temp162

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp162"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp164 =  _temp162(_self)
      end

          end
        elseif _t == "number" then
          _temp164 = _temp162
        elseif _t == "function" then
                if _temp162 == nil then
              if _type(_self._temp162) == "function" or (_type(_self._temp162) == "table" and _rawget(_self._temp162, "__call_thing")) then
        _temp164 =  _self:_temp162()
      elseif _self._temp162 ~= nil then
        _temp164 =  _self._temp162

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp162"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp164 =  _temp162(_self)
      end

        elseif _temp162 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp164)
      if _t == "table" then
                      if _type(_temp164.target) == "function" or (_type(_temp164.target) == "table" and _rawget(_temp164.target, "__call_thing")) then
        _temp164 = _temp164:target()
      elseif _temp164.target ~= nil then
        _temp164 = _temp164.target

        elseif _temp164.no_undermethod ~= nil then
          _temp164 =  _temp164:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp164, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp164)
      if _n.target ~= nil then
        _temp164 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp164 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp164, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp164)
      if _f.target ~= nil then
        _temp164 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp164 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp164, "target"))
      end

      elseif _temp164 == nil then
        _error(exception:null_error("_temp164", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp164))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp163 =  process(_self, _temp164)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp163 =  _self:process(_temp164)
      elseif _self.process ~= nil then
        _temp163 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("process") , _temp164)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("process") , _temp164)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp162) == "function" or (_type(_temp162) == "table" and _rawget(_temp162, "__call_thing")) then
      _temp164 =  _temp162(_self)

    elseif _temp162 then
      _temp164 =  _temp162
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp164 =  _self:node()
      elseif _self.node ~= nil then
        _temp164 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp164 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp164 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp165 = nil
    if _type(_temp163) == "function" or (_type(_temp163) == "table" and _rawget(_temp163, "__call_thing")) then
      _temp165 =  _temp163(_self)

    elseif _temp163 then
      _temp165 =  _temp163
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp165 =  _self:target()
      elseif _self.target ~= nil then
        _temp165 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp165 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp165 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp166 = nil
    if _type(_temp161) == "function" or (_type(_temp161) == "table" and _rawget(_temp161, "__call_thing")) then
      _temp166 =  _temp161(_self)

    elseif _temp161 then
      _temp166 =  _temp161
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp166 =  _self:var()
      elseif _self.var ~= nil then
        _temp166 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp166 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp166 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underget_underdirect) == "function" or (_type(invoke_underindex_underget_underdirect) == "table" and _rawget(invoke_underindex_underget_underdirect, "__call_thing")) then
      return  invoke_underindex_underget_underdirect(_self, _temp164,_temp165,_temp166)

    elseif invoke_underindex_underget_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_get_direct (" .. object.__type(invoke_underindex_underget_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underget_underdirect) == "function" or (_type(_self.invoke_underindex_underget_underdirect) == "table" and _rawget(_self.invoke_underindex_underget_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underget_underdirect(_temp164,_temp165,_temp166)
      elseif _self.invoke_underindex_underget_underdirect ~= nil then
        return  _self.invoke_underindex_underget_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_get_direct") , _temp164,_temp165,_temp166)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_get_direct") , _temp164,_temp165,_temp166)
      else
        _error(exception:name_error("invoke_index_get_direct"))
      end
    end

end

      local _t = _type(_temp160)
      if _t == "table" then
                      if _type(_temp160.walk) == "function" or (_type(_temp160.walk) == "table" and _rawget(_temp160.walk, "__call_thing")) then
        _dummy_ = _temp160:walk(_temp4,_temp168)
      elseif _temp160.walk ~= nil then
        _dummy_ = _temp160.walk

        elseif _temp160.no_undermethod ~= nil then
          _dummy_ =  _temp160:no_undermethod(string:new("walk") , _temp4,_temp168)
        else
          _error(exception:method_error(_temp160, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp160)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp168)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp168)
      else
        _error(exception:method_error(_temp160, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp160)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp168)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp168)
      else
        _error(exception:method_error(_temp160, "walk"))
      end

      elseif _temp160 == nil then
        _error(exception:null_error("_temp160", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp160))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp168 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp168 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp168 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp168 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp168 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp168 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp168 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp168 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp168 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp168 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_index_set")

local _temp176 = function (_self, _temp170,_temp169)
        if _temp170 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp169 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp169 =  null(_self)

    elseif null then
      _temp169 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp169 =  _self:null()
      elseif _self.null ~= nil then
        _temp169 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp169 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp169 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp171
local _temp172 = nil
        local _t = _type(_temp170)
        if _t == "table" then
          if _rawget(_temp170, "__call_thing") == nil then
            _temp172 = _temp170
          else
                  if _temp170 == nil then
              if _type(_self._temp170) == "function" or (_type(_self._temp170) == "table" and _rawget(_self._temp170, "__call_thing")) then
        _temp172 =  _self:_temp170()
      elseif _self._temp170 ~= nil then
        _temp172 =  _self._temp170

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp170"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp170(_self)
      end

          end
        elseif _t == "number" then
          _temp172 = _temp170
        elseif _t == "function" then
                if _temp170 == nil then
              if _type(_self._temp170) == "function" or (_type(_self._temp170) == "table" and _rawget(_self._temp170, "__call_thing")) then
        _temp172 =  _self:_temp170()
      elseif _self._temp170 ~= nil then
        _temp172 =  _self._temp170

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp170"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp172 =  _temp170(_self)
      end

        elseif _temp170 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.target) == "function" or (_type(_temp172.target) == "table" and _rawget(_temp172.target, "__call_thing")) then
        _temp172 = _temp172:target()
      elseif _temp172.target ~= nil then
        _temp172 = _temp172.target

        elseif _temp172.no_undermethod ~= nil then
          _temp172 =  _temp172:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp172, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.target ~= nil then
        _temp172 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp172 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp172, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.target ~= nil then
        _temp172 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp172 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp172, "target"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp171 =  process(_self, _temp172)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp171 =  _self:process(_temp172)
      elseif _self.process ~= nil then
        _temp171 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("process") , _temp172)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("process") , _temp172)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp170) == "function" or (_type(_temp170) == "table" and _rawget(_temp170, "__call_thing")) then
      _temp172 =  _temp170(_self)

    elseif _temp170 then
      _temp172 =  _temp170
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp172 =  _self:node()
      elseif _self.node ~= nil then
        _temp172 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp172 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp172 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp173 = nil
    if _type(_temp171) == "function" or (_type(_temp171) == "table" and _rawget(_temp171, "__call_thing")) then
      _temp173 =  _temp171(_self)

    elseif _temp171 then
      _temp173 =  _temp171
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp173 =  _self:target()
      elseif _self.target ~= nil then
        _temp173 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp173 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp173 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

local _temp174 = nil
    if _type(_temp169) == "function" or (_type(_temp169) == "table" and _rawget(_temp169, "__call_thing")) then
      _temp174 =  _temp169(_self)

    elseif _temp169 then
      _temp174 =  _temp169
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp174 =  _self:var()
      elseif _self.var ~= nil then
        _temp174 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp174 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp174 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke_underindex_underset_underdirect) == "function" or (_type(invoke_underindex_underset_underdirect) == "table" and _rawget(invoke_underindex_underset_underdirect, "__call_thing")) then
      return  invoke_underindex_underset_underdirect(_self, _temp172,_temp173,_temp174)

    elseif invoke_underindex_underset_underdirect then
      _error(exception:new("Tried to invoke non-method: invoke_index_set_direct (" .. object.__type(invoke_underindex_underset_underdirect) .. ")"))
    else
            if _type(_self.invoke_underindex_underset_underdirect) == "function" or (_type(_self.invoke_underindex_underset_underdirect) == "table" and _rawget(_self.invoke_underindex_underset_underdirect, "__call_thing")) then
        return  _self:invoke_underindex_underset_underdirect(_temp172,_temp173,_temp174)
      elseif _self.invoke_underindex_underset_underdirect ~= nil then
        return  _self.invoke_underindex_underset_underdirect

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke_index_set_direct") , _temp172,_temp173,_temp174)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke_index_set_direct") , _temp172,_temp173,_temp174)
      else
        _error(exception:name_error("invoke_index_set_direct"))
      end
    end

end

      local _t = _type(_temp168)
      if _t == "table" then
                      if _type(_temp168.walk) == "function" or (_type(_temp168.walk) == "table" and _rawget(_temp168.walk, "__call_thing")) then
        _dummy_ = _temp168:walk(_temp4,_temp176)
      elseif _temp168.walk ~= nil then
        _dummy_ = _temp168.walk

        elseif _temp168.no_undermethod ~= nil then
          _dummy_ =  _temp168:no_undermethod(string:new("walk") , _temp4,_temp176)
        else
          _error(exception:method_error(_temp168, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp168)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp176)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp176)
      else
        _error(exception:method_error(_temp168, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp168)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp176)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp176)
      else
        _error(exception:method_error(_temp168, "walk"))
      end

      elseif _temp168 == nil then
        _error(exception:null_error("_temp168", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp168))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp176 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp176 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp176 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp176 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp176 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp176 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp176 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp176 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp176 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp186 = function (_self, _temp178,_temp177)
        if _temp178 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp177 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp177 =  null(_self)

    elseif null then
      _temp177 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp177 =  _self:null()
      elseif _self.null ~= nil then
        _temp177 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp177 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp177 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp179
local _temp180 = nil
        local _t = _type(_temp178)
        if _t == "table" then
          if _rawget(_temp178, "__call_thing") == nil then
            _temp180 = _temp178
          else
                  if _temp178 == nil then
              if _type(_self._temp178) == "function" or (_type(_self._temp178) == "table" and _rawget(_self._temp178, "__call_thing")) then
        _temp180 =  _self:_temp178()
      elseif _self._temp178 ~= nil then
        _temp180 =  _self._temp178

        elseif _self.no_undermethod ~= nil then
          _temp180 =  _self:no_undermethod(string:new("_temp178"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp180 =  _temp178(_self)
      end

          end
        elseif _t == "number" then
          _temp180 = _temp178
        elseif _t == "function" then
                if _temp178 == nil then
              if _type(_self._temp178) == "function" or (_type(_self._temp178) == "table" and _rawget(_self._temp178, "__call_thing")) then
        _temp180 =  _self:_temp178()
      elseif _self._temp178 ~= nil then
        _temp180 =  _self._temp178

        elseif _self.no_undermethod ~= nil then
          _temp180 =  _self:no_undermethod(string:new("_temp178"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp180 =  _temp178(_self)
      end

        elseif _temp178 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp180)
      if _t == "table" then
                      if _type(_temp180.target) == "function" or (_type(_temp180.target) == "table" and _rawget(_temp180.target, "__call_thing")) then
        _temp180 = _temp180:target()
      elseif _temp180.target ~= nil then
        _temp180 = _temp180.target

        elseif _temp180.no_undermethod ~= nil then
          _temp180 =  _temp180:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp180, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp180)
      if _n.target ~= nil then
        _temp180 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp180 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp180, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp180)
      if _f.target ~= nil then
        _temp180 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp180 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp180, "target"))
      end

      elseif _temp180 == nil then
        _error(exception:null_error("_temp180", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp180))
      end


local _temp181 = nil
    if _type(_temp177) == "function" or (_type(_temp177) == "table" and _rawget(_temp177, "__call_thing")) then
      _temp181 =  _temp177(_self)

    elseif _temp177 then
      _temp181 =  _temp177
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp181 =  _self:var()
      elseif _self.var ~= nil then
        _temp181 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp181 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp181 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp179 =  process(_self, _temp180,_temp181)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp179 =  _self:process(_temp180,_temp181)
      elseif _self.process ~= nil then
        _temp179 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("process") , _temp180,_temp181)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("process") , _temp180,_temp181)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp178)
        if _t == "table" then
          if _rawget(_temp178, "__call_thing") == nil then
            _temp181 = _temp178
          else
                  if _temp178 == nil then
              if _type(_self._temp178) == "function" or (_type(_self._temp178) == "table" and _rawget(_self._temp178, "__call_thing")) then
        _temp181 =  _self:_temp178()
      elseif _self._temp178 ~= nil then
        _temp181 =  _self._temp178

        elseif _self.no_undermethod ~= nil then
          _temp181 =  _self:no_undermethod(string:new("_temp178"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp181 =  _temp178(_self)
      end

          end
        elseif _t == "number" then
          _temp181 = _temp178
        elseif _t == "function" then
                if _temp178 == nil then
              if _type(_self._temp178) == "function" or (_type(_self._temp178) == "table" and _rawget(_self._temp178, "__call_thing")) then
        _temp181 =  _self:_temp178()
      elseif _self._temp178 ~= nil then
        _temp181 =  _self._temp178

        elseif _self.no_undermethod ~= nil then
          _temp181 =  _self:no_undermethod(string:new("_temp178"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp181 =  _temp178(_self)
      end

        elseif _temp178 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp180 =  null(_self)

    elseif null then
      _temp180 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp180 =  _self:null()
      elseif _self.null ~= nil then
        _temp180 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp180 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp180 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp181) == "table" then
          _temp181["method"] = _temp180
        elseif _type(_temp181) == "number" then
          number["method"] = _temp180
        else
          _error("Cannot set method on " .. _temp181)
        end

    if _type(_temp178) == "function" or (_type(_temp178) == "table" and _rawget(_temp178, "__call_thing")) then
      _temp181 =  _temp178(_self)

    elseif _temp178 then
      _temp181 =  _temp178
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp181 =  _self:node()
      elseif _self.node ~= nil then
        _temp181 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp181 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp181 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp182 = nil
    if _type(_temp179) == "function" or (_type(_temp179) == "table" and _rawget(_temp179, "__call_thing")) then
      _temp182 =  _temp179(_self)

    elseif _temp179 then
      _temp182 =  _temp179
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp182 =  _self:target()
      elseif _self.target ~= nil then
        _temp182 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp182 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp182 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp183 = nil

        if invoke_underfunction == nil then
          _temp183 = _self["invoke_underfunction"]
          if _temp183 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp183 = invoke_underfunction
        end

local _temp184 = nil
    if _type(_temp177) == "function" or (_type(_temp177) == "table" and _rawget(_temp177, "__call_thing")) then
      _temp184 =  _temp177(_self)

    elseif _temp177 then
      _temp184 =  _temp177
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp184 =  _self:var()
      elseif _self.var ~= nil then
        _temp184 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp184 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp184 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp181,_temp182,_temp183,_temp184)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp181,_temp182,_temp183,_temp184)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp181,_temp182,_temp183,_temp184)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp181,_temp182,_temp183,_temp184)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp176)
      if _t == "table" then
                      if _type(_temp176.walk) == "function" or (_type(_temp176.walk) == "table" and _rawget(_temp176.walk, "__call_thing")) then
        _dummy_ = _temp176:walk(_temp4,_temp186)
      elseif _temp176.walk ~= nil then
        _dummy_ = _temp176.walk

        elseif _temp176.no_undermethod ~= nil then
          _dummy_ =  _temp176:no_undermethod(string:new("walk") , _temp4,_temp186)
        else
          _error(exception:method_error(_temp176, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp176)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp186)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp186)
      else
        _error(exception:method_error(_temp176, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp176)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp186)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp186)
      else
        _error(exception:method_error(_temp176, "walk"))
      end

      elseif _temp176 == nil then
        _error(exception:null_error("_temp176", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp176))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp186 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp186 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp186 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp186 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp186 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp186 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp186 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp186 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp186 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp195 = function (_self, _temp188,_temp187)
        if _temp188 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp187 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp187 =  null(_self)

    elseif null then
      _temp187 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp187 =  _self:null()
      elseif _self.null ~= nil then
        _temp187 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp189
local _temp190 = nil
        local _t = _type(_temp188)
        if _t == "table" then
          if _rawget(_temp188, "__call_thing") == nil then
            _temp190 = _temp188
          else
                  if _temp188 == nil then
              if _type(_self._temp188) == "function" or (_type(_self._temp188) == "table" and _rawget(_self._temp188, "__call_thing")) then
        _temp190 =  _self:_temp188()
      elseif _self._temp188 ~= nil then
        _temp190 =  _self._temp188

        elseif _self.no_undermethod ~= nil then
          _temp190 =  _self:no_undermethod(string:new("_temp188"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp190 =  _temp188(_self)
      end

          end
        elseif _t == "number" then
          _temp190 = _temp188
        elseif _t == "function" then
                if _temp188 == nil then
              if _type(_self._temp188) == "function" or (_type(_self._temp188) == "table" and _rawget(_self._temp188, "__call_thing")) then
        _temp190 =  _self:_temp188()
      elseif _self._temp188 ~= nil then
        _temp190 =  _self._temp188

        elseif _self.no_undermethod ~= nil then
          _temp190 =  _self:no_undermethod(string:new("_temp188"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp190 =  _temp188(_self)
      end

        elseif _temp188 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp190)
      if _t == "table" then
                      if _type(_temp190.target) == "function" or (_type(_temp190.target) == "table" and _rawget(_temp190.target, "__call_thing")) then
        _temp190 = _temp190:target()
      elseif _temp190.target ~= nil then
        _temp190 = _temp190.target

        elseif _temp190.no_undermethod ~= nil then
          _temp190 =  _temp190:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp190, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp190)
      if _n.target ~= nil then
        _temp190 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp190 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp190, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp190)
      if _f.target ~= nil then
        _temp190 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp190 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp190, "target"))
      end

      elseif _temp190 == nil then
        _error(exception:null_error("_temp190", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp190))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp189 =  process(_self, _temp190)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp189 =  _self:process(_temp190)
      elseif _self.process ~= nil then
        _temp189 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp189 =  _self:no_undermethod(string:new("process") , _temp190)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp189 =  no_undermethod(_self, string:new("process") , _temp190)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp188) == "function" or (_type(_temp188) == "table" and _rawget(_temp188, "__call_thing")) then
      _temp190 =  _temp188(_self)

    elseif _temp188 then
      _temp190 =  _temp188
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp190 =  _self:node()
      elseif _self.node ~= nil then
        _temp190 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp190 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp190 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp191 = nil
    if _type(_temp189) == "function" or (_type(_temp189) == "table" and _rawget(_temp189, "__call_thing")) then
      _temp191 =  _temp189(_self)

    elseif _temp189 then
      _temp191 =  _temp189
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp191 =  _self:target()
      elseif _self.target ~= nil then
        _temp191 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp192 = nil

        if invoke_undermethod == nil then
          _temp192 = _self["invoke_undermethod"]
          if _temp192 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp192 = invoke_undermethod
        end

local _temp193 = nil
    if _type(_temp187) == "function" or (_type(_temp187) == "table" and _rawget(_temp187, "__call_thing")) then
      _temp193 =  _temp187(_self)

    elseif _temp187 then
      _temp193 =  _temp187
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp193 =  _self:var()
      elseif _self.var ~= nil then
        _temp193 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp193 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp193 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp190,_temp191,_temp192,_temp193)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp190,_temp191,_temp192,_temp193)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp190,_temp191,_temp192,_temp193)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp190,_temp191,_temp192,_temp193)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp186)
      if _t == "table" then
                      if _type(_temp186.walk) == "function" or (_type(_temp186.walk) == "table" and _rawget(_temp186.walk, "__call_thing")) then
        _dummy_ = _temp186:walk(_temp4,_temp195)
      elseif _temp186.walk ~= nil then
        _dummy_ = _temp186.walk

        elseif _temp186.no_undermethod ~= nil then
          _dummy_ =  _temp186:no_undermethod(string:new("walk") , _temp4,_temp195)
        else
          _error(exception:method_error(_temp186, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp186)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp195)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp195)
      else
        _error(exception:method_error(_temp186, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp186)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp195)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp195)
      else
        _error(exception:method_error(_temp186, "walk"))
      end

      elseif _temp186 == nil then
        _error(exception:null_error("_temp186", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp186))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp195 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp195 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp195 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp195 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp195 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp195 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp195 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp195 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp195 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp195 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp202 = function (_self, _temp196)
        if _temp196 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp197
        local _t = _type(_temp196)
        if _t == "table" then
          if _rawget(_temp196, "__call_thing") == nil then
            _temp197 = _temp196
          else
                  if _temp196 == nil then
              if _type(_self._temp196) == "function" or (_type(_self._temp196) == "table" and _rawget(_self._temp196, "__call_thing")) then
        _temp197 =  _self:_temp196()
      elseif _self._temp196 ~= nil then
        _temp197 =  _self._temp196

        elseif _self.no_undermethod ~= nil then
          _temp197 =  _self:no_undermethod(string:new("_temp196"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp197 =  _temp196(_self)
      end

          end
        elseif _t == "number" then
          _temp197 = _temp196
        elseif _t == "function" then
                if _temp196 == nil then
              if _type(_self._temp196) == "function" or (_type(_self._temp196) == "table" and _rawget(_self._temp196, "__call_thing")) then
        _temp197 =  _self:_temp196()
      elseif _self._temp196 ~= nil then
        _temp197 =  _self._temp196

        elseif _self.no_undermethod ~= nil then
          _temp197 =  _self:no_undermethod(string:new("_temp196"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp197 =  _temp196(_self)
      end

        elseif _temp196 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp197)
      if _t == "table" then
                      if _type(_temp197.value) == "function" or (_type(_temp197.value) == "table" and _rawget(_temp197.value, "__call_thing")) then
        _temp197 = _temp197:value()
      elseif _temp197.value ~= nil then
        _temp197 = _temp197.value

        elseif _temp197.no_undermethod ~= nil then
          _temp197 =  _temp197:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp197)
      if _n.value ~= nil then
        _temp197 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp197 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp197)
      if _f.value ~= nil then
        _temp197 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp197 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp197 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp197))
      end

      local _t = _type(_temp197)
      if _t == "table" then
                      if _type(_temp197.to_underf) == "function" or (_type(_temp197.to_underf) == "table" and _rawget(_temp197.to_underf, "__call_thing")) then
        _temp197 = _temp197:to_underf()
      elseif _temp197.to_underf ~= nil then
        _temp197 = _temp197.to_underf

        elseif _temp197.no_undermethod ~= nil then
          _temp197 =  _temp197:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp197)
      if _n.to_underf ~= nil then
        _temp197 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp197 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp197)
      if _f.to_underf ~= nil then
        _temp197 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp197 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp197 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp197))
      end


local _temp198 = nil
    if _type(_temp197) == "function" or (_type(_temp197) == "table" and _rawget(_temp197, "__call_thing")) then
      _temp198 =  _temp197(_self)

    elseif _temp197 then
      _temp198 =  _temp197
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp198 =  _self:val()
      elseif _self.val ~= nil then
        _temp198 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp198 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp198 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp199 = string:new("")

local _temp200 = string:new("number")

local _temp201 = {}
_temp201[string:new("type")] = _temp200
_temp201 = hash:new(_temp201)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp198,_temp199,_temp201)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp198,_temp199,_temp201)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp198,_temp199,_temp201)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp198,_temp199,_temp201)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195.walk) == "function" or (_type(_temp195.walk) == "table" and _rawget(_temp195.walk, "__call_thing")) then
        _dummy_ = _temp195:walk(_temp4,_temp202)
      elseif _temp195.walk ~= nil then
        _dummy_ = _temp195.walk

        elseif _temp195.no_undermethod ~= nil then
          _dummy_ =  _temp195:no_undermethod(string:new("walk") , _temp4,_temp202)
        else
          _error(exception:method_error(_temp195, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp202)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp202)
      else
        _error(exception:method_error(_temp195, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp202)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp202)
      else
        _error(exception:method_error(_temp195, "walk"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp202 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp202 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp202 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp202 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp202 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp202 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp202 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp202 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp202 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp202 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp246 = function (_self, _temp204,_temp203)
        if _temp204 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp203 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp203 =  null(_self)

    elseif null then
      _temp203 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp203 =  _self:null()
      elseif _self.null ~= nil then
        _temp203 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp205 = nil
        local _t = _type(_temp204)
        if _t == "table" then
          if _rawget(_temp204, "__call_thing") == nil then
            _temp205 = _temp204
          else
                  if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp205 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp205 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp205 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp205 =  _temp204(_self)
      end

          end
        elseif _t == "number" then
          _temp205 = _temp204
        elseif _t == "function" then
                if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp205 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp205 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp205 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp205 =  _temp204(_self)
      end

        elseif _temp204 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp205)
      if _t == "table" then
                      if _type(_temp205.nodes) == "function" or (_type(_temp205.nodes) == "table" and _rawget(_temp205.nodes, "__call_thing")) then
        _temp205 = _temp205:nodes()
      elseif _temp205.nodes ~= nil then
        _temp205 = _temp205.nodes

        elseif _temp205.no_undermethod ~= nil then
          _temp205 =  _temp205:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp205, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp205)
      if _n.nodes ~= nil then
        _temp205 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp205 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp205, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp205)
      if _f.nodes ~= nil then
        _temp205 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp205 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp205, "nodes"))
      end

      elseif _temp205 == nil then
        _error(exception:null_error("_temp205", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp205))
      end

      local _t = _type(_temp205)
      if _t == "table" then
                      if _type(_temp205.empty_question) == "function" or (_type(_temp205.empty_question) == "table" and _rawget(_temp205.empty_question, "__call_thing")) then
        _temp205 = _temp205:empty_question()
      elseif _temp205.empty_question ~= nil then
        _temp205 = _temp205.empty_question

        elseif _temp205.no_undermethod ~= nil then
          _temp205 =  _temp205:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp205, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp205)
      if _n.empty_question ~= nil then
        _temp205 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp205 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp205, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp205)
      if _f.empty_question ~= nil then
        _temp205 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp205 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp205, "empty?"))
      end

      elseif _temp205 == nil then
        _error(exception:null_error("_temp205", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp205))
      end



local _temp210 = function (_self)

local _temp206 = nil
    if _type(_temp203) == "function" or (_type(_temp203) == "table" and _rawget(_temp203, "__call_thing")) then
      _temp206 =  _temp203(_self)

    elseif _temp203 then
      _temp206 =  _temp203
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp206 =  _self:var()
      elseif _self.var ~= nil then
        _temp206 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp206 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp206 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp207 = string:new("array:new()")

local _temp208 = string:new("array")

local _temp209 = {}
_temp209[string:new("type")] = _temp208
_temp209 = hash:new(_temp209)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp206,_temp207,_temp209)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp206,_temp207,_temp209)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp206,_temp207,_temp209)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp206,_temp207,_temp209)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp244 = function (_self)

local _temp211
local _temp212 = nil
    if _type(_temp203) == "function" or (_type(_temp203) == "table" and _rawget(_temp203, "__call_thing")) then
      _temp212 =  _temp203(_self)

    elseif _temp203 then
      _temp212 =  _temp203
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp212 =  _self:var()
      elseif _self.var ~= nil then
        _temp212 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp212 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp212 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp211 =  set_underresult(_self, _temp212)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp211 =  _self:set_underresult(_temp212)
      elseif _self.set_underresult ~= nil then
        _temp211 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("set_result") , _temp212)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("set_result") , _temp212)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp213
        local _t = _type(_temp211)
        if _t == "table" then
          if _rawget(_temp211, "__call_thing") == nil then
            _temp213 = _temp211
          else
                  if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp213 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp213 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp213 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp213 =  _temp211(_self)
      end

          end
        elseif _t == "number" then
          _temp213 = _temp211
        elseif _t == "function" then
                if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp213 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp213 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp213 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp213 =  _temp211(_self)
      end

        elseif _temp211 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp213)
      if _t == "table" then
                      if _type(_temp213.var) == "function" or (_type(_temp213.var) == "table" and _rawget(_temp213.var, "__call_thing")) then
        _temp213 = _temp213:var()
      elseif _temp213.var ~= nil then
        _temp213 = _temp213.var

        elseif _temp213.no_undermethod ~= nil then
          _temp213 =  _temp213:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp213)
      if _n.var ~= nil then
        _temp213 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp213 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp213)
      if _f.var ~= nil then
        _temp213 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp213 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp213 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp213))
      end


local _temp214
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp214 =  _self:my()
      elseif _self.my ~= nil then
        _temp214 =  _self.my

        elseif my ~= nil then
          _temp214 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp214)
      if _t == "table" then
                      if _type(_temp214.env) == "function" or (_type(_temp214.env) == "table" and _rawget(_temp214.env, "__call_thing")) then
        _temp214 = _temp214:env()
      elseif _temp214.env ~= nil then
        _temp214 = _temp214.env

        elseif _temp214.no_undermethod ~= nil then
          _temp214 =  _temp214:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp214)
      if _n.env ~= nil then
        _temp214 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp214 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp214)
      if _f.env ~= nil then
        _temp214 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp214 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp214 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp214))
      end

      local _t = _type(_temp214)
      if _t == "table" then
                      if _type(_temp214.next_undertemp) == "function" or (_type(_temp214.next_undertemp) == "table" and _rawget(_temp214.next_undertemp, "__call_thing")) then
        _temp214 = _temp214:next_undertemp()
      elseif _temp214.next_undertemp ~= nil then
        _temp214 = _temp214.next_undertemp

        elseif _temp214.no_undermethod ~= nil then
          _temp214 =  _temp214:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp214)
      if _n.next_undertemp ~= nil then
        _temp214 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp214 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp214)
      if _f.next_undertemp ~= nil then
        _temp214 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp214 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp214 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp214))
      end


local _temp215
do
local _temp216 = nil
        local _t = _type(_temp211)
        if _t == "table" then
          if _rawget(_temp211, "__call_thing") == nil then
            _temp216 = _temp211
          else
                  if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp216 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp216 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp216 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp216 =  _temp211(_self)
      end

          end
        elseif _t == "number" then
          _temp216 = _temp211
        elseif _t == "function" then
                if _temp211 == nil then
              if _type(_self._temp211) == "function" or (_type(_self._temp211) == "table" and _rawget(_self._temp211, "__call_thing")) then
        _temp216 =  _self:_temp211()
      elseif _self._temp211 ~= nil then
        _temp216 =  _self._temp211

        elseif _self.no_undermethod ~= nil then
          _temp216 =  _self:no_undermethod(string:new("_temp211"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp216 =  _temp211(_self)
      end

        elseif _temp211 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp216)
      if _t == "table" then
                      if _type(_temp216.out) == "function" or (_type(_temp216.out) == "table" and _rawget(_temp216.out, "__call_thing")) then
        _temp216 = _temp216:out()
      elseif _temp216.out ~= nil then
        _temp216 = _temp216.out

        elseif _temp216.no_undermethod ~= nil then
          _temp216 =  _temp216:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp216, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp216)
      if _n.out ~= nil then
        _temp216 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp216 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp216, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp216)
      if _f.out ~= nil then
        _temp216 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp216 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp216, "out"))
      end

      elseif _temp216 == nil then
        _error(exception:null_error("_temp216", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp216))
      end


local _temp217 = nil
    if _type(_temp214) == "function" or (_type(_temp214) == "table" and _rawget(_temp214, "__call_thing")) then
      _temp217 =  _temp214(_self)

    elseif _temp214 then
      _temp217 =  _temp214
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp217 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp217 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp218 = nil
    if _type(_temp213) == "function" or (_type(_temp213) == "table" and _rawget(_temp213, "__call_thing")) then
      _temp218 =  _temp213(_self)

    elseif _temp213 then
      _temp218 =  _temp213
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp218 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp218 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp218 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp218 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp215 = string:new("" .. _tostring(_temp216) .. "\ndo\nlocal " .. _tostring(_temp217) .. "\n" .. _tostring(_temp218) .. " = {}\n")
end

local _temp219
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp219 =  my(_self)

    elseif my then
      _temp219 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp219 =  _self:my()
      elseif _self.my ~= nil then
        _temp219 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp204)
        if _t == "table" then
          if _rawget(_temp204, "__call_thing") == nil then
            _temp212 = _temp204
          else
                  if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp212 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp212 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp212 =  _temp204(_self)
      end

          end
        elseif _t == "number" then
          _temp212 = _temp204
        elseif _t == "function" then
                if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp212 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp212 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp212 =  _temp204(_self)
      end

        elseif _temp204 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.nodes) == "function" or (_type(_temp212.nodes) == "table" and _rawget(_temp212.nodes, "__call_thing")) then
        _temp212 = _temp212:nodes()
      elseif _temp212.nodes ~= nil then
        _temp212 = _temp212.nodes

        elseif _temp212.no_undermethod ~= nil then
          _temp212 =  _temp212:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp212, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.nodes ~= nil then
        _temp212 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp212 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp212, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.nodes ~= nil then
        _temp212 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp212 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp212, "nodes"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("_temp212", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end


local _temp236 = function (_self, _temp220, _temp221)
        if _temp220 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp221 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp222
        local _t = _type(_temp219)
        if _t == "table" then
          if _rawget(_temp219, "__call_thing") == nil then
            _temp222 = _temp219
          else
                  if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp222 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp222 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp222 =  _temp219(_self)
      end

          end
        elseif _t == "number" then
          _temp222 = _temp219
        elseif _t == "function" then
                if _temp219 == nil then
              if _type(_self._temp219) == "function" or (_type(_self._temp219) == "table" and _rawget(_self._temp219, "__call_thing")) then
        _temp222 =  _self:_temp219()
      elseif _self._temp219 ~= nil then
        _temp222 =  _self._temp219

        elseif _self.no_undermethod ~= nil then
          _temp222 =  _self:no_undermethod(string:new("_temp219"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp222 =  _temp219(_self)
      end

        elseif _temp219 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp223 = nil
    if _type(_temp220) == "function" or (_type(_temp220) == "table" and _rawget(_temp220, "__call_thing")) then
      _temp223 =  _temp220(_self)

    elseif _temp220 then
      _temp223 =  _temp220
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp223 =  _self:n()
      elseif _self.n ~= nil then
        _temp223 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp224 = nil
    if _type(_temp214) == "function" or (_type(_temp214) == "table" and _rawget(_temp214, "__call_thing")) then
      _temp224 =  _temp214(_self)

    elseif _temp214 then
      _temp224 =  _temp214
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp224 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp224 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp224 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp224 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp222)
      if _t == "table" then
                      if _type(_temp222.process) == "function" or (_type(_temp222.process) == "table" and _rawget(_temp222.process, "__call_thing")) then
        _temp222 = _temp222:process(_temp223,_temp224)
      elseif _temp222.process ~= nil then
        _temp222 = _temp222.process

        elseif _temp222.no_undermethod ~= nil then
          _temp222 =  _temp222:no_undermethod(string:new("process") , _temp223,_temp224)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp222)
      if _n.process ~= nil then
        _temp222 = _n:process(_temp223,_temp224)
      elseif _n.no_undermethod ~= nil then
        _temp222 =  _n:no_undermethod(string:new("process") , _temp223,_temp224)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp222)
      if _f.process ~= nil then
        _temp222 = _f:process(_temp223,_temp224)
      elseif _f.no_undermethod ~= nil then
        _temp222 =  _f:no_undermethod(string:new("process") , _temp223,_temp224)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp222 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp222))
      end


local _temp224 
do
local _temp225 = nil
_temp225 =  _temp215

local _temp226 = nil
        local _t = _type(_temp222)
        if _t == "table" then
          if _rawget(_temp222, "__call_thing") == nil then
            _temp226 = _temp222
          else
                  if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp226 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp226 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp226 =  _temp222(_self)
      end

          end
        elseif _t == "number" then
          _temp226 = _temp222
        elseif _t == "function" then
                if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp226 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp226 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp226 =  _temp222(_self)
      end

        elseif _temp222 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp227 = nil
      local _t = _type(_temp226)
      if _t == "table" then
                      if _type(_temp226.out) == "function" or (_type(_temp226.out) == "table" and _rawget(_temp226.out, "__call_thing")) then
        _temp227 = _temp226:out()
      elseif _temp226.out ~= nil then
        _temp227 = _temp226.out

        elseif _temp226.no_undermethod ~= nil then
          _temp227 =  _temp226:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp226, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp226)
      if _n.out ~= nil then
        _temp227 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp227 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp226, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp226)
      if _f.out ~= nil then
        _temp227 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp227 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp226, "out"))
      end

      elseif _temp226 == nil then
        _error(exception:null_error("_temp226", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp226))
      end

local _temp228 = string:new("\n")

local _temp229 = nil
do
local _temp230 = nil
    if _type(_temp213) == "function" or (_type(_temp213) == "table" and _rawget(_temp213, "__call_thing")) then
      _temp230 =  _temp213(_self)

    elseif _temp213 then
      _temp230 =  _temp213
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp230 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp230 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp230 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp230 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp231 
do
local _temp232 = nil
    if _type(_temp221) == "function" or (_type(_temp221) == "table" and _rawget(_temp221, "__call_thing")) then
      _temp232 =  _temp221(_self)

    elseif _temp221 then
      _temp232 =  _temp221
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp232 =  _self:i()
      elseif _self.i ~= nil then
        _temp232 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp232 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp232 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp233
      local _t = _type(_temp232)
      if _t == "table" then
                      if _type(_temp232._plus) == "function" or (_type(_temp232._plus) == "table" and _rawget(_temp232._plus, "__call_thing")) then
        _temp233 = _temp232:_plus(1)
      elseif _temp232._plus ~= nil then
        _temp233 = _temp232._plus

        elseif _temp232.no_undermethod ~= nil then
          _temp233 =  _temp232:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp232, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp233 = _temp232 + 1
      else
              local _n = number:new(_temp232)
      if _n._plus ~= nil then
        _temp233 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp233 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp232, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp232)
      if _f._plus ~= nil then
        _temp233 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp233 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp232, "+"))
      end

      elseif _temp232 == nil then
        _error(exception:null_error("_temp232", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp232))
      end

_temp231 = _temp233 
end

local _temp234 = nil
        local _t = _type(_temp222)
        if _t == "table" then
          if _rawget(_temp222, "__call_thing") == nil then
            _temp234 = _temp222
          else
                  if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp234 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp234 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp234 =  _temp222(_self)
      end

          end
        elseif _t == "number" then
          _temp234 = _temp222
        elseif _t == "function" then
                if _temp222 == nil then
              if _type(_self._temp222) == "function" or (_type(_self._temp222) == "table" and _rawget(_self._temp222, "__call_thing")) then
        _temp234 =  _self:_temp222()
      elseif _self._temp222 ~= nil then
        _temp234 =  _self._temp222

        elseif _self.no_undermethod ~= nil then
          _temp234 =  _self:no_undermethod(string:new("_temp222"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp234 =  _temp222(_self)
      end

        elseif _temp222 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp234)
      if _t == "table" then
                      if _type(_temp234.var) == "function" or (_type(_temp234.var) == "table" and _rawget(_temp234.var, "__call_thing")) then
        _temp234 = _temp234:var()
      elseif _temp234.var ~= nil then
        _temp234 = _temp234.var

        elseif _temp234.no_undermethod ~= nil then
          _temp234 =  _temp234:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp234, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp234)
      if _n.var ~= nil then
        _temp234 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp234 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp234, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp234)
      if _f.var ~= nil then
        _temp234 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp234 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp234, "var"))
      end

      elseif _temp234 == nil then
        _error(exception:null_error("_temp234", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp234))
      end


_temp229 = string:new("" .. _tostring(_temp230) .. "[" .. _tostring(_temp231) .. "] = " .. _tostring(_temp234) .. "\n")
end
local _temp235
              if _type(_temp225._less_less) == "function" or (_type(_temp225._less_less) == "table" and _rawget(_temp225._less_less, "__call_thing")) then
        _temp235 = _temp225:_less_less(_temp227)
      elseif _temp225._less_less ~= nil then
        _temp235 = _temp225._less_less

        elseif _temp225.no_undermethod ~= nil then
          _temp235 =  _temp225:no_undermethod(string:new("<<") , _temp227)
        else
          _error(exception:method_error(_temp225, "<<"))
        end

local _temp227
      local _t = _type(_temp235)
      if _t == "table" then
                      if _type(_temp235._less_less) == "function" or (_type(_temp235._less_less) == "table" and _rawget(_temp235._less_less, "__call_thing")) then
        _temp227 = _temp235:_less_less(_temp228)
      elseif _temp235._less_less ~= nil then
        _temp227 = _temp235._less_less

        elseif _temp235.no_undermethod ~= nil then
          _temp227 =  _temp235:no_undermethod(string:new("<<") , _temp228)
        else
          _error(exception:method_error(_temp235, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp235)
      if _n._less_less ~= nil then
        _temp227 = _n:_less_less(_temp228)
      elseif _n.no_undermethod ~= nil then
        _temp227 =  _n:no_undermethod(string:new("<<") , _temp228)
      else
        _error(exception:method_error(_temp235, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp235)
      if _f._less_less ~= nil then
        _temp227 = _f:_less_less(_temp228)
      elseif _f.no_undermethod ~= nil then
        _temp227 =  _f:no_undermethod(string:new("<<") , _temp228)
      else
        _error(exception:method_error(_temp235, "<<"))
      end

      elseif _temp235 == nil then
        _error(exception:null_error("_temp235", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp235))
      end

local _temp228
      local _t = _type(_temp227)
      if _t == "table" then
                      if _type(_temp227._less_less) == "function" or (_type(_temp227._less_less) == "table" and _rawget(_temp227._less_less, "__call_thing")) then
        _temp228 = _temp227:_less_less(_temp229)
      elseif _temp227._less_less ~= nil then
        _temp228 = _temp227._less_less

        elseif _temp227.no_undermethod ~= nil then
          _temp228 =  _temp227:no_undermethod(string:new("<<") , _temp229)
        else
          _error(exception:method_error(_temp227, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp227)
      if _n._less_less ~= nil then
        _temp228 = _n:_less_less(_temp229)
      elseif _n.no_undermethod ~= nil then
        _temp228 =  _n:no_undermethod(string:new("<<") , _temp229)
      else
        _error(exception:method_error(_temp227, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp227)
      if _f._less_less ~= nil then
        _temp228 = _f:_less_less(_temp229)
      elseif _f.no_undermethod ~= nil then
        _temp228 =  _f:no_undermethod(string:new("<<") , _temp229)
      else
        _error(exception:method_error(_temp227, "<<"))
      end

      elseif _temp227 == nil then
        _error(exception:null_error("_temp227", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp227))
      end

_temp224 = _temp228 
end

return _temp224
end

      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.each_underwith_underindex) == "function" or (_type(_temp212.each_underwith_underindex) == "table" and _rawget(_temp212.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp212:each_underwith_underindex(_temp236)
      elseif _temp212.each_underwith_underindex ~= nil then
        _dummy_ = _temp212.each_underwith_underindex

        elseif _temp212.no_undermethod ~= nil then
          _dummy_ =  _temp212:no_undermethod(string:new("each_with_index") , _temp236)
        else
          _error(exception:method_error(_temp212, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp236)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp236)
      else
        _error(exception:method_error(_temp212, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp236)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp236)
      else
        _error(exception:method_error(_temp212, "each_with_index"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("_temp212", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end

do
local _temp237 = nil
_temp237 =  _temp215

local _temp238 = nil
do
local _temp239 = nil
    if _type(_temp213) == "function" or (_type(_temp213) == "table" and _rawget(_temp213, "__call_thing")) then
      _temp239 =  _temp213(_self)

    elseif _temp213 then
      _temp239 =  _temp213
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp239 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp239 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp239 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp239 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp240 = nil
    if _type(_temp213) == "function" or (_type(_temp213) == "table" and _rawget(_temp213, "__call_thing")) then
      _temp240 =  _temp213(_self)

    elseif _temp213 then
      _temp240 =  _temp213
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp240 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp240 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp240 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp240 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp238 = string:new("" .. _tostring(_temp239) .. " = array:new(" .. _tostring(_temp240) .. ")\nend\n")
end
local _temp241
              if _type(_temp237._less_less) == "function" or (_type(_temp237._less_less) == "table" and _rawget(_temp237._less_less, "__call_thing")) then
        _temp241 = _temp237:_less_less(_temp238)
      elseif _temp237._less_less ~= nil then
        _temp241 = _temp237._less_less

        elseif _temp237.no_undermethod ~= nil then
          _temp241 =  _temp237:no_undermethod(string:new("<<") , _temp238)
        else
          _error(exception:method_error(_temp237, "<<"))
        end

_dummy_ = _temp241 
end

    if _type(_temp213) == "function" or (_type(_temp213) == "table" and _rawget(_temp213, "__call_thing")) then
      _temp236 =  _temp213(_self)

    elseif _temp213 then
      _temp236 =  _temp213
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp236 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp236 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp236 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp236 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp212 =  _temp215

local _temp242 = string:new("array")

local _temp243 = {}
_temp243[string:new("type")] = _temp242
_temp243 = hash:new(_temp243)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp236,_temp212,_temp243)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp236,_temp212,_temp243)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp236,_temp212,_temp243)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp236,_temp212,_temp243)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp205,_temp210,_temp244)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp205,_temp210,_temp244)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp205,_temp210,_temp244)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp205,_temp210,_temp244)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp202)
      if _t == "table" then
                      if _type(_temp202.walk) == "function" or (_type(_temp202.walk) == "table" and _rawget(_temp202.walk, "__call_thing")) then
        _dummy_ = _temp202:walk(_temp4,_temp246)
      elseif _temp202.walk ~= nil then
        _dummy_ = _temp202.walk

        elseif _temp202.no_undermethod ~= nil then
          _dummy_ =  _temp202:no_undermethod(string:new("walk") , _temp4,_temp246)
        else
          _error(exception:method_error(_temp202, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp202)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp246)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp246)
      else
        _error(exception:method_error(_temp202, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp202)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp246)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp246)
      else
        _error(exception:method_error(_temp202, "walk"))
      end

      elseif _temp202 == nil then
        _error(exception:null_error("_temp202", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp202))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp246 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp246 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp246 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp246 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp246 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp246 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp246 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp246 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp246 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp246 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp288 = function (_self, _temp248,_temp247)
        if _temp248 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp247 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp247 =  null(_self)

    elseif null then
      _temp247 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp247 =  _self:null()
      elseif _self.null ~= nil then
        _temp247 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp247 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp247 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp249 = nil
        local _t = _type(_temp248)
        if _t == "table" then
          if _rawget(_temp248, "__call_thing") == nil then
            _temp249 = _temp248
          else
                  if _temp248 == nil then
              if _type(_self._temp248) == "function" or (_type(_self._temp248) == "table" and _rawget(_self._temp248, "__call_thing")) then
        _temp249 =  _self:_temp248()
      elseif _self._temp248 ~= nil then
        _temp249 =  _self._temp248

        elseif _self.no_undermethod ~= nil then
          _temp249 =  _self:no_undermethod(string:new("_temp248"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp249 =  _temp248(_self)
      end

          end
        elseif _t == "number" then
          _temp249 = _temp248
        elseif _t == "function" then
                if _temp248 == nil then
              if _type(_self._temp248) == "function" or (_type(_self._temp248) == "table" and _rawget(_self._temp248, "__call_thing")) then
        _temp249 =  _self:_temp248()
      elseif _self._temp248 ~= nil then
        _temp249 =  _self._temp248

        elseif _self.no_undermethod ~= nil then
          _temp249 =  _self:no_undermethod(string:new("_temp248"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp249 =  _temp248(_self)
      end

        elseif _temp248 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp249)
      if _t == "table" then
                      if _type(_temp249.nodes) == "function" or (_type(_temp249.nodes) == "table" and _rawget(_temp249.nodes, "__call_thing")) then
        _temp249 = _temp249:nodes()
      elseif _temp249.nodes ~= nil then
        _temp249 = _temp249.nodes

        elseif _temp249.no_undermethod ~= nil then
          _temp249 =  _temp249:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp249, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp249)
      if _n.nodes ~= nil then
        _temp249 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp249 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp249, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp249)
      if _f.nodes ~= nil then
        _temp249 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp249 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp249, "nodes"))
      end

      elseif _temp249 == nil then
        _error(exception:null_error("_temp249", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp249))
      end

      local _t = _type(_temp249)
      if _t == "table" then
                      if _type(_temp249.empty_question) == "function" or (_type(_temp249.empty_question) == "table" and _rawget(_temp249.empty_question, "__call_thing")) then
        _temp249 = _temp249:empty_question()
      elseif _temp249.empty_question ~= nil then
        _temp249 = _temp249.empty_question

        elseif _temp249.no_undermethod ~= nil then
          _temp249 =  _temp249:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp249, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp249)
      if _n.empty_question ~= nil then
        _temp249 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp249 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp249, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp249)
      if _f.empty_question ~= nil then
        _temp249 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp249 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp249, "empty?"))
      end

      elseif _temp249 == nil then
        _error(exception:null_error("_temp249", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp249))
      end



local _temp254 = function (_self)

local _temp250 = nil
    if _type(_temp247) == "function" or (_type(_temp247) == "table" and _rawget(_temp247, "__call_thing")) then
      _temp250 =  _temp247(_self)

    elseif _temp247 then
      _temp250 =  _temp247
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp250 =  _self:var()
      elseif _self.var ~= nil then
        _temp250 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp250 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp250 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp251 = string:new("hash:new()")

local _temp252 = string:new("hash")

local _temp253 = {}
_temp253[string:new("type")] = _temp252
_temp253 = hash:new(_temp253)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp250,_temp251,_temp253)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp250,_temp251,_temp253)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp250,_temp251,_temp253)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp250,_temp251,_temp253)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp286 = function (_self)

local _temp255
local _temp256 = nil
    if _type(_temp247) == "function" or (_type(_temp247) == "table" and _rawget(_temp247, "__call_thing")) then
      _temp256 =  _temp247(_self)

    elseif _temp247 then
      _temp256 =  _temp247
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp256 =  _self:var()
      elseif _self.var ~= nil then
        _temp256 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp256 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp256 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp257 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp255 =  set_underresult(_self, _temp256,_temp257)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp255 =  _self:set_underresult(_temp256,_temp257)
      elseif _self.set_underresult ~= nil then
        _temp255 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp255 =  _self:no_undermethod(string:new("set_result") , _temp256,_temp257)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp255 =  no_undermethod(_self, string:new("set_result") , _temp256,_temp257)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp258
        local _t = _type(_temp255)
        if _t == "table" then
          if _rawget(_temp255, "__call_thing") == nil then
            _temp258 = _temp255
          else
                  if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp258 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp258 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp258 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp258 =  _temp255(_self)
      end

          end
        elseif _t == "number" then
          _temp258 = _temp255
        elseif _t == "function" then
                if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp258 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp258 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp258 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp258 =  _temp255(_self)
      end

        elseif _temp255 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp258)
      if _t == "table" then
                      if _type(_temp258.var) == "function" or (_type(_temp258.var) == "table" and _rawget(_temp258.var, "__call_thing")) then
        _temp258 = _temp258:var()
      elseif _temp258.var ~= nil then
        _temp258 = _temp258.var

        elseif _temp258.no_undermethod ~= nil then
          _temp258 =  _temp258:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp258)
      if _n.var ~= nil then
        _temp258 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp258 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp258)
      if _f.var ~= nil then
        _temp258 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp258 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp258 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp258))
      end


local _temp259
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp259 =  _self:my()
      elseif _self.my ~= nil then
        _temp259 =  _self.my

        elseif my ~= nil then
          _temp259 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp259)
      if _t == "table" then
                      if _type(_temp259.env) == "function" or (_type(_temp259.env) == "table" and _rawget(_temp259.env, "__call_thing")) then
        _temp259 = _temp259:env()
      elseif _temp259.env ~= nil then
        _temp259 = _temp259.env

        elseif _temp259.no_undermethod ~= nil then
          _temp259 =  _temp259:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp259)
      if _n.env ~= nil then
        _temp259 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp259 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp259)
      if _f.env ~= nil then
        _temp259 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp259 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp259 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp259))
      end

      local _t = _type(_temp259)
      if _t == "table" then
                      if _type(_temp259.next_undertemp) == "function" or (_type(_temp259.next_undertemp) == "table" and _rawget(_temp259.next_undertemp, "__call_thing")) then
        _temp259 = _temp259:next_undertemp()
      elseif _temp259.next_undertemp ~= nil then
        _temp259 = _temp259.next_undertemp

        elseif _temp259.no_undermethod ~= nil then
          _temp259 =  _temp259:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp259)
      if _n.next_undertemp ~= nil then
        _temp259 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp259 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp259)
      if _f.next_undertemp ~= nil then
        _temp259 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp259 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp259 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp259))
      end


local _temp260
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp260 =  _self:my()
      elseif _self.my ~= nil then
        _temp260 =  _self.my

        elseif my ~= nil then
          _temp260 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp260)
      if _t == "table" then
                      if _type(_temp260.env) == "function" or (_type(_temp260.env) == "table" and _rawget(_temp260.env, "__call_thing")) then
        _temp260 = _temp260:env()
      elseif _temp260.env ~= nil then
        _temp260 = _temp260.env

        elseif _temp260.no_undermethod ~= nil then
          _temp260 =  _temp260:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp260)
      if _n.env ~= nil then
        _temp260 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp260 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp260)
      if _f.env ~= nil then
        _temp260 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp260 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp260 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp260))
      end

      local _t = _type(_temp260)
      if _t == "table" then
                      if _type(_temp260.next_undertemp) == "function" or (_type(_temp260.next_undertemp) == "table" and _rawget(_temp260.next_undertemp, "__call_thing")) then
        _temp260 = _temp260:next_undertemp()
      elseif _temp260.next_undertemp ~= nil then
        _temp260 = _temp260.next_undertemp

        elseif _temp260.no_undermethod ~= nil then
          _temp260 =  _temp260:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp260)
      if _n.next_undertemp ~= nil then
        _temp260 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp260 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp260)
      if _f.next_undertemp ~= nil then
        _temp260 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp260 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp260 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp260))
      end


local _temp261
do
local _temp262 = nil
        local _t = _type(_temp255)
        if _t == "table" then
          if _rawget(_temp255, "__call_thing") == nil then
            _temp262 = _temp255
          else
                  if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp262 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp262 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp262 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp262 =  _temp255(_self)
      end

          end
        elseif _t == "number" then
          _temp262 = _temp255
        elseif _t == "function" then
                if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp262 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp262 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp262 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp262 =  _temp255(_self)
      end

        elseif _temp255 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp262)
      if _t == "table" then
                      if _type(_temp262.out) == "function" or (_type(_temp262.out) == "table" and _rawget(_temp262.out, "__call_thing")) then
        _temp262 = _temp262:out()
      elseif _temp262.out ~= nil then
        _temp262 = _temp262.out

        elseif _temp262.no_undermethod ~= nil then
          _temp262 =  _temp262:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp262, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp262)
      if _n.out ~= nil then
        _temp262 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp262 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp262, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp262)
      if _f.out ~= nil then
        _temp262 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp262 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp262, "out"))
      end

      elseif _temp262 == nil then
        _error(exception:null_error("_temp262", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp262))
      end


local _temp263 = nil
    if _type(_temp259) == "function" or (_type(_temp259) == "table" and _rawget(_temp259, "__call_thing")) then
      _temp263 =  _temp259(_self)

    elseif _temp259 then
      _temp263 =  _temp259
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp263 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp263 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp263 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp263 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp264 = nil
    if _type(_temp260) == "function" or (_type(_temp260) == "table" and _rawget(_temp260, "__call_thing")) then
      _temp264 =  _temp260(_self)

    elseif _temp260 then
      _temp264 =  _temp260
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp264 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp264 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp264 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp264 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp261 = string:new("" .. _tostring(_temp262) .. "\ndo\nlocal " .. _tostring(_temp263) .. ";local " .. _tostring(_temp264) .. "\n")
end

local _temp265
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp265 =  my(_self)

    elseif my then
      _temp265 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp265 =  _self:my()
      elseif _self.my ~= nil then
        _temp265 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp265 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp265 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp248)
        if _t == "table" then
          if _rawget(_temp248, "__call_thing") == nil then
            _temp257 = _temp248
          else
                  if _temp248 == nil then
              if _type(_self._temp248) == "function" or (_type(_self._temp248) == "table" and _rawget(_self._temp248, "__call_thing")) then
        _temp257 =  _self:_temp248()
      elseif _self._temp248 ~= nil then
        _temp257 =  _self._temp248

        elseif _self.no_undermethod ~= nil then
          _temp257 =  _self:no_undermethod(string:new("_temp248"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp257 =  _temp248(_self)
      end

          end
        elseif _t == "number" then
          _temp257 = _temp248
        elseif _t == "function" then
                if _temp248 == nil then
              if _type(_self._temp248) == "function" or (_type(_self._temp248) == "table" and _rawget(_self._temp248, "__call_thing")) then
        _temp257 =  _self:_temp248()
      elseif _self._temp248 ~= nil then
        _temp257 =  _self._temp248

        elseif _self.no_undermethod ~= nil then
          _temp257 =  _self:no_undermethod(string:new("_temp248"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp257 =  _temp248(_self)
      end

        elseif _temp248 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.nodes) == "function" or (_type(_temp257.nodes) == "table" and _rawget(_temp257.nodes, "__call_thing")) then
        _temp257 = _temp257:nodes()
      elseif _temp257.nodes ~= nil then
        _temp257 = _temp257.nodes

        elseif _temp257.no_undermethod ~= nil then
          _temp257 =  _temp257:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp257, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.nodes ~= nil then
        _temp257 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp257 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp257, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.nodes ~= nil then
        _temp257 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp257 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp257, "nodes"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end


local _temp279 = function (_self, _temp266)
        if _temp266 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp267
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp267 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp267 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp267 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp267 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp267 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp267 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp267 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp267 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp267 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp267 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp268 = nil
        local _t = _type(_temp266)
        if _t == "table" then
          if _rawget(_temp266, "__call_thing") == nil then
            _temp268 = _temp266
          else
                  if _temp266 == nil then
              if _type(_self._temp266) == "function" or (_type(_self._temp266) == "table" and _rawget(_self._temp266, "__call_thing")) then
        _temp268 =  _self:_temp266()
      elseif _self._temp266 ~= nil then
        _temp268 =  _self._temp266

        elseif _self.no_undermethod ~= nil then
          _temp268 =  _self:no_undermethod(string:new("_temp266"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp268 =  _temp266(_self)
      end

          end
        elseif _t == "number" then
          _temp268 = _temp266
        elseif _t == "function" then
                if _temp266 == nil then
              if _type(_self._temp266) == "function" or (_type(_self._temp266) == "table" and _rawget(_self._temp266, "__call_thing")) then
        _temp268 =  _self:_temp266()
      elseif _self._temp266 ~= nil then
        _temp268 =  _self._temp266

        elseif _self.no_undermethod ~= nil then
          _temp268 =  _self:no_undermethod(string:new("_temp266"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp268 =  _temp266(_self)
      end

        elseif _temp266 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp268)
      if _t == "table" then
                      if _type(_temp268.first) == "function" or (_type(_temp268.first) == "table" and _rawget(_temp268.first, "__call_thing")) then
        _temp268 = _temp268:first()
      elseif _temp268.first ~= nil then
        _temp268 = _temp268.first

        elseif _temp268.no_undermethod ~= nil then
          _temp268 =  _temp268:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp268, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp268)
      if _n.first ~= nil then
        _temp268 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp268 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp268, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp268)
      if _f.first ~= nil then
        _temp268 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp268 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp268, "first"))
      end

      elseif _temp268 == nil then
        _error(exception:null_error("_temp268", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp268))
      end


local _temp269 = nil
    if _type(_temp259) == "function" or (_type(_temp259) == "table" and _rawget(_temp259, "__call_thing")) then
      _temp269 =  _temp259(_self)

    elseif _temp259 then
      _temp269 =  _temp259
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp269 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp269 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp269 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp269 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp267)
      if _t == "table" then
                      if _type(_temp267.process) == "function" or (_type(_temp267.process) == "table" and _rawget(_temp267.process, "__call_thing")) then
        _temp267 = _temp267:process(_temp268,_temp269)
      elseif _temp267.process ~= nil then
        _temp267 = _temp267.process

        elseif _temp267.no_undermethod ~= nil then
          _temp267 =  _temp267:no_undermethod(string:new("process") , _temp268,_temp269)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp267)
      if _n.process ~= nil then
        _temp267 = _n:process(_temp268,_temp269)
      elseif _n.no_undermethod ~= nil then
        _temp267 =  _n:no_undermethod(string:new("process") , _temp268,_temp269)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp267)
      if _f.process ~= nil then
        _temp267 = _f:process(_temp268,_temp269)
      elseif _f.no_undermethod ~= nil then
        _temp267 =  _f:no_undermethod(string:new("process") , _temp268,_temp269)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp267 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp267))
      end


local _temp270
        local _t = _type(_temp265)
        if _t == "table" then
          if _rawget(_temp265, "__call_thing") == nil then
            _temp270 = _temp265
          else
                  if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp270 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp270 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp270 =  _temp265(_self)
      end

          end
        elseif _t == "number" then
          _temp270 = _temp265
        elseif _t == "function" then
                if _temp265 == nil then
              if _type(_self._temp265) == "function" or (_type(_self._temp265) == "table" and _rawget(_self._temp265, "__call_thing")) then
        _temp270 =  _self:_temp265()
      elseif _self._temp265 ~= nil then
        _temp270 =  _self._temp265

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp265"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp270 =  _temp265(_self)
      end

        elseif _temp265 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp266)
        if _t == "table" then
          if _rawget(_temp266, "__call_thing") == nil then
            _temp269 = _temp266
          else
                  if _temp266 == nil then
              if _type(_self._temp266) == "function" or (_type(_self._temp266) == "table" and _rawget(_self._temp266, "__call_thing")) then
        _temp269 =  _self:_temp266()
      elseif _self._temp266 ~= nil then
        _temp269 =  _self._temp266

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp266"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp269 =  _temp266(_self)
      end

          end
        elseif _t == "number" then
          _temp269 = _temp266
        elseif _t == "function" then
                if _temp266 == nil then
              if _type(_self._temp266) == "function" or (_type(_self._temp266) == "table" and _rawget(_self._temp266, "__call_thing")) then
        _temp269 =  _self:_temp266()
      elseif _self._temp266 ~= nil then
        _temp269 =  _self._temp266

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp266"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp269 =  _temp266(_self)
      end

        elseif _temp266 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp269)
      if _t == "table" then
                      if _type(_temp269.last) == "function" or (_type(_temp269.last) == "table" and _rawget(_temp269.last, "__call_thing")) then
        _temp269 = _temp269:last()
      elseif _temp269.last ~= nil then
        _temp269 = _temp269.last

        elseif _temp269.no_undermethod ~= nil then
          _temp269 =  _temp269:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp269, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp269)
      if _n.last ~= nil then
        _temp269 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp269 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp269, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp269)
      if _f.last ~= nil then
        _temp269 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp269 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp269, "last"))
      end

      elseif _temp269 == nil then
        _error(exception:null_error("_temp269", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp269))
      end


    if _type(_temp260) == "function" or (_type(_temp260) == "table" and _rawget(_temp260, "__call_thing")) then
      _temp268 =  _temp260(_self)

    elseif _temp260 then
      _temp268 =  _temp260
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp268 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp268 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp268 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp268 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.process) == "function" or (_type(_temp270.process) == "table" and _rawget(_temp270.process, "__call_thing")) then
        _temp270 = _temp270:process(_temp269,_temp268)
      elseif _temp270.process ~= nil then
        _temp270 = _temp270.process

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("process") , _temp269,_temp268)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.process ~= nil then
        _temp270 = _n:process(_temp269,_temp268)
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("process") , _temp269,_temp268)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.process ~= nil then
        _temp270 = _f:process(_temp269,_temp268)
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("process") , _temp269,_temp268)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end


local _temp268 
do
local _temp271 = nil
_temp271 =  _temp261

local _temp272 = nil
do
local _temp273 = nil
        local _t = _type(_temp267)
        if _t == "table" then
          if _rawget(_temp267, "__call_thing") == nil then
            _temp273 = _temp267
          else
                  if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp273 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp273 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp273 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp273 =  _temp267(_self)
      end

          end
        elseif _t == "number" then
          _temp273 = _temp267
        elseif _t == "function" then
                if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp273 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp273 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp273 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp273 =  _temp267(_self)
      end

        elseif _temp267 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp273)
      if _t == "table" then
                      if _type(_temp273.out) == "function" or (_type(_temp273.out) == "table" and _rawget(_temp273.out, "__call_thing")) then
        _temp273 = _temp273:out()
      elseif _temp273.out ~= nil then
        _temp273 = _temp273.out

        elseif _temp273.no_undermethod ~= nil then
          _temp273 =  _temp273:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp273, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp273)
      if _n.out ~= nil then
        _temp273 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp273 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp273, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp273)
      if _f.out ~= nil then
        _temp273 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp273 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp273, "out"))
      end

      elseif _temp273 == nil then
        _error(exception:null_error("_temp273", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp273))
      end


local _temp274 = nil
        local _t = _type(_temp270)
        if _t == "table" then
          if _rawget(_temp270, "__call_thing") == nil then
            _temp274 = _temp270
          else
                  if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp274 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp274 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp274 =  _temp270(_self)
      end

          end
        elseif _t == "number" then
          _temp274 = _temp270
        elseif _t == "function" then
                if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp274 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp274 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp274 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp274 =  _temp270(_self)
      end

        elseif _temp270 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp274)
      if _t == "table" then
                      if _type(_temp274.out) == "function" or (_type(_temp274.out) == "table" and _rawget(_temp274.out, "__call_thing")) then
        _temp274 = _temp274:out()
      elseif _temp274.out ~= nil then
        _temp274 = _temp274.out

        elseif _temp274.no_undermethod ~= nil then
          _temp274 =  _temp274:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp274, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp274)
      if _n.out ~= nil then
        _temp274 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp274 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp274, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp274)
      if _f.out ~= nil then
        _temp274 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp274 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp274, "out"))
      end

      elseif _temp274 == nil then
        _error(exception:null_error("_temp274", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp274))
      end


local _temp275 = nil
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp275 =  _temp258(_self)

    elseif _temp258 then
      _temp275 =  _temp258
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp275 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp275 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp275 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp275 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp276 = nil
        local _t = _type(_temp267)
        if _t == "table" then
          if _rawget(_temp267, "__call_thing") == nil then
            _temp276 = _temp267
          else
                  if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp276 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp276 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp276 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp276 =  _temp267(_self)
      end

          end
        elseif _t == "number" then
          _temp276 = _temp267
        elseif _t == "function" then
                if _temp267 == nil then
              if _type(_self._temp267) == "function" or (_type(_self._temp267) == "table" and _rawget(_self._temp267, "__call_thing")) then
        _temp276 =  _self:_temp267()
      elseif _self._temp267 ~= nil then
        _temp276 =  _self._temp267

        elseif _self.no_undermethod ~= nil then
          _temp276 =  _self:no_undermethod(string:new("_temp267"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp276 =  _temp267(_self)
      end

        elseif _temp267 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp276)
      if _t == "table" then
                      if _type(_temp276.var) == "function" or (_type(_temp276.var) == "table" and _rawget(_temp276.var, "__call_thing")) then
        _temp276 = _temp276:var()
      elseif _temp276.var ~= nil then
        _temp276 = _temp276.var

        elseif _temp276.no_undermethod ~= nil then
          _temp276 =  _temp276:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp276, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp276)
      if _n.var ~= nil then
        _temp276 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp276 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp276, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp276)
      if _f.var ~= nil then
        _temp276 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp276 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp276, "var"))
      end

      elseif _temp276 == nil then
        _error(exception:null_error("_temp276", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp276))
      end


local _temp277 = nil
        local _t = _type(_temp270)
        if _t == "table" then
          if _rawget(_temp270, "__call_thing") == nil then
            _temp277 = _temp270
          else
                  if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp277 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp277 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp277 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp277 =  _temp270(_self)
      end

          end
        elseif _t == "number" then
          _temp277 = _temp270
        elseif _t == "function" then
                if _temp270 == nil then
              if _type(_self._temp270) == "function" or (_type(_self._temp270) == "table" and _rawget(_self._temp270, "__call_thing")) then
        _temp277 =  _self:_temp270()
      elseif _self._temp270 ~= nil then
        _temp277 =  _self._temp270

        elseif _self.no_undermethod ~= nil then
          _temp277 =  _self:no_undermethod(string:new("_temp270"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp277 =  _temp270(_self)
      end

        elseif _temp270 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp277)
      if _t == "table" then
                      if _type(_temp277.var) == "function" or (_type(_temp277.var) == "table" and _rawget(_temp277.var, "__call_thing")) then
        _temp277 = _temp277:var()
      elseif _temp277.var ~= nil then
        _temp277 = _temp277.var

        elseif _temp277.no_undermethod ~= nil then
          _temp277 =  _temp277:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp277, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp277)
      if _n.var ~= nil then
        _temp277 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp277 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp277, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp277)
      if _f.var ~= nil then
        _temp277 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp277 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp277, "var"))
      end

      elseif _temp277 == nil then
        _error(exception:null_error("_temp277", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp277))
      end


_temp272 = string:new("" .. _tostring(_temp273) .. "\n" .. _tostring(_temp274) .. "\n" .. _tostring(_temp275) .. "[" .. _tostring(_temp276) .. "] = " .. _tostring(_temp277) .. "\n")
end
local _temp278
              if _type(_temp271._less_less) == "function" or (_type(_temp271._less_less) == "table" and _rawget(_temp271._less_less, "__call_thing")) then
        _temp278 = _temp271:_less_less(_temp272)
      elseif _temp271._less_less ~= nil then
        _temp278 = _temp271._less_less

        elseif _temp271.no_undermethod ~= nil then
          _temp278 =  _temp271:no_undermethod(string:new("<<") , _temp272)
        else
          _error(exception:method_error(_temp271, "<<"))
        end

_temp268 = _temp278 
end

return _temp268
end

      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.each) == "function" or (_type(_temp257.each) == "table" and _rawget(_temp257.each, "__call_thing")) then
        _dummy_ = _temp257:each(_temp279)
      elseif _temp257.each ~= nil then
        _dummy_ = _temp257.each

        elseif _temp257.no_undermethod ~= nil then
          _dummy_ =  _temp257:no_undermethod(string:new("each") , _temp279)
        else
          _error(exception:method_error(_temp257, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp279)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp279)
      else
        _error(exception:method_error(_temp257, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp279)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp279)
      else
        _error(exception:method_error(_temp257, "each"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp279 =  _self:my()
      elseif _self.my ~= nil then
        _temp279 =  _self.my

        elseif my ~= nil then
          _temp279 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.env) == "function" or (_type(_temp279.env) == "table" and _rawget(_temp279.env, "__call_thing")) then
        _temp279 = _temp279:env()
      elseif _temp279.env ~= nil then
        _temp279 = _temp279.env

        elseif _temp279.no_undermethod ~= nil then
          _temp279 =  _temp279:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp279, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.env ~= nil then
        _temp279 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp279 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.env ~= nil then
        _temp279 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp279 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp279, "env"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

    if _type(_temp259) == "function" or (_type(_temp259) == "table" and _rawget(_temp259, "__call_thing")) then
      _temp257 =  _temp259(_self)

    elseif _temp259 then
      _temp257 =  _temp259
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp257 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp257 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp257 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp257 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.unset) == "function" or (_type(_temp279.unset) == "table" and _rawget(_temp279.unset, "__call_thing")) then
        _dummy_ = _temp279:unset(_temp257)
      elseif _temp279.unset ~= nil then
        _dummy_ = _temp279.unset

        elseif _temp279.no_undermethod ~= nil then
          _dummy_ =  _temp279:no_undermethod(string:new("unset") , _temp257)
        else
          _error(exception:method_error(_temp279, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp257)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp257)
      else
        _error(exception:method_error(_temp279, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp257)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp257)
      else
        _error(exception:method_error(_temp279, "unset"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("_temp279", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp257 =  _self:my()
      elseif _self.my ~= nil then
        _temp257 =  _self.my

        elseif my ~= nil then
          _temp257 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.env) == "function" or (_type(_temp257.env) == "table" and _rawget(_temp257.env, "__call_thing")) then
        _temp257 = _temp257:env()
      elseif _temp257.env ~= nil then
        _temp257 = _temp257.env

        elseif _temp257.no_undermethod ~= nil then
          _temp257 =  _temp257:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp257, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.env ~= nil then
        _temp257 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp257 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp257, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.env ~= nil then
        _temp257 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp257 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp257, "env"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

    if _type(_temp260) == "function" or (_type(_temp260) == "table" and _rawget(_temp260, "__call_thing")) then
      _temp279 =  _temp260(_self)

    elseif _temp260 then
      _temp279 =  _temp260
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp279 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp279 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.unset) == "function" or (_type(_temp257.unset) == "table" and _rawget(_temp257.unset, "__call_thing")) then
        _dummy_ = _temp257:unset(_temp279)
      elseif _temp257.unset ~= nil then
        _dummy_ = _temp257.unset

        elseif _temp257.no_undermethod ~= nil then
          _dummy_ =  _temp257:no_undermethod(string:new("unset") , _temp279)
        else
          _error(exception:method_error(_temp257, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp279)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp279)
      else
        _error(exception:method_error(_temp257, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp279)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp279)
      else
        _error(exception:method_error(_temp257, "unset"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

do
local _temp280 = nil
_temp280 =  _temp261

local _temp281 = nil
do
local _temp282 = nil
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp282 =  _temp258(_self)

    elseif _temp258 then
      _temp282 =  _temp258
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp282 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp282 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp282 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp282 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp283 = nil
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp283 =  _temp258(_self)

    elseif _temp258 then
      _temp283 =  _temp258
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp283 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp283 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp283 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp283 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp281 = string:new("\n" .. _tostring(_temp282) .. " = hash:new(" .. _tostring(_temp283) .. ")\nend\n")
end
local _temp284
              if _type(_temp280._less_less) == "function" or (_type(_temp280._less_less) == "table" and _rawget(_temp280._less_less, "__call_thing")) then
        _temp284 = _temp280:_less_less(_temp281)
      elseif _temp280._less_less ~= nil then
        _temp284 = _temp280._less_less

        elseif _temp280.no_undermethod ~= nil then
          _temp284 =  _temp280:no_undermethod(string:new("<<") , _temp281)
        else
          _error(exception:method_error(_temp280, "<<"))
        end

_dummy_ = _temp284 
end

    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp279 =  _temp258(_self)

    elseif _temp258 then
      _temp279 =  _temp258
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp279 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp279 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp279 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp279 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp257 =  _temp261

_temp256 = string:new("hash")

local _temp285 = {}
_temp285[string:new("type")] = _temp256
_temp285 = hash:new(_temp285)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp279,_temp257,_temp285)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp279,_temp257,_temp285)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp279,_temp257,_temp285)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp279,_temp257,_temp285)
      else
        _error(exception:name_error("r"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp249,_temp254,_temp286)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp249,_temp254,_temp286)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp249,_temp254,_temp286)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp249,_temp254,_temp286)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp246)
      if _t == "table" then
                      if _type(_temp246.walk) == "function" or (_type(_temp246.walk) == "table" and _rawget(_temp246.walk, "__call_thing")) then
        _dummy_ = _temp246:walk(_temp4,_temp288)
      elseif _temp246.walk ~= nil then
        _dummy_ = _temp246.walk

        elseif _temp246.no_undermethod ~= nil then
          _dummy_ =  _temp246:no_undermethod(string:new("walk") , _temp4,_temp288)
        else
          _error(exception:method_error(_temp246, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp246)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp288)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp288)
      else
        _error(exception:method_error(_temp246, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp246)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp288)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp288)
      else
        _error(exception:method_error(_temp246, "walk"))
      end

      elseif _temp246 == nil then
        _error(exception:null_error("_temp246", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp246))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp288 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp288 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp288 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp288 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp288 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp288 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp288 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp288 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp288 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp288 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp305 = function (_self, _temp290,_temp289)
        if _temp290 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp289 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp289 =  null(_self)

    elseif null then
      _temp289 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp289 =  _self:null()
      elseif _self.null ~= nil then
        _temp289 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp289 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp289 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp291 = nil
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp291 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp291 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp291 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp291 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp291 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp291)
      if _t == "table" then
                      if _type(_temp291.nodes) == "function" or (_type(_temp291.nodes) == "table" and _rawget(_temp291.nodes, "__call_thing")) then
        _temp291 = _temp291:nodes()
      elseif _temp291.nodes ~= nil then
        _temp291 = _temp291.nodes

        elseif _temp291.no_undermethod ~= nil then
          _temp291 =  _temp291:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp291, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp291)
      if _n.nodes ~= nil then
        _temp291 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp291, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp291)
      if _f.nodes ~= nil then
        _temp291 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp291, "nodes"))
      end

      elseif _temp291 == nil then
        _error(exception:null_error("_temp291", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp291))
      end

      local _t = _type(_temp291)
      if _t == "table" then
                      if _type(_temp291.empty_question) == "function" or (_type(_temp291.empty_question) == "table" and _rawget(_temp291.empty_question, "__call_thing")) then
        _temp291 = _temp291:empty_question()
      elseif _temp291.empty_question ~= nil then
        _temp291 = _temp291.empty_question

        elseif _temp291.no_undermethod ~= nil then
          _temp291 =  _temp291:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp291, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp291)
      if _n.empty_question ~= nil then
        _temp291 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp291, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp291)
      if _f.empty_question ~= nil then
        _temp291 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp291, "empty?"))
      end

      elseif _temp291 == nil then
        _error(exception:null_error("_temp291", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp291))
      end



local _temp296 = function (_self)

local _temp292 = nil
    if _type(_temp289) == "function" or (_type(_temp289) == "table" and _rawget(_temp289, "__call_thing")) then
      _temp292 =  _temp289(_self)

    elseif _temp289 then
      _temp292 =  _temp289
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp292 =  _self:var()
      elseif _self.var ~= nil then
        _temp292 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp292 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp292 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp293 = string:new("string:new(\"\")")

local _temp294 = string:new("string")

local _temp295 = {}
_temp295[string:new("type")] = _temp294
_temp295 = hash:new(_temp295)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp292,_temp293,_temp295)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp292,_temp293,_temp295)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp292,_temp293,_temp295)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp292,_temp293,_temp295)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp303 = function (_self)

local _temp297 = nil
    if _type(_temp289) == "function" or (_type(_temp289) == "table" and _rawget(_temp289, "__call_thing")) then
      _temp297 =  _temp289(_self)

    elseif _temp289 then
      _temp297 =  _temp289
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp297 =  _self:var()
      elseif _self.var ~= nil then
        _temp297 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp297 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp297 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp298 = nil
do
local _temp299 = nil
local _temp300 = nil
        local _t = _type(_temp290)
        if _t == "table" then
          if _rawget(_temp290, "__call_thing") == nil then
            _temp300 = _temp290
          else
                  if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp300 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp300 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp300 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp300 =  _temp290(_self)
      end

          end
        elseif _t == "number" then
          _temp300 = _temp290
        elseif _t == "function" then
                if _temp290 == nil then
              if _type(_self._temp290) == "function" or (_type(_self._temp290) == "table" and _rawget(_self._temp290, "__call_thing")) then
        _temp300 =  _self:_temp290()
      elseif _self._temp290 ~= nil then
        _temp300 =  _self._temp290

        elseif _self.no_undermethod ~= nil then
          _temp300 =  _self:no_undermethod(string:new("_temp290"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp300 =  _temp290(_self)
      end

        elseif _temp290 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp300)
      if _t == "table" then
                      if _type(_temp300.value) == "function" or (_type(_temp300.value) == "table" and _rawget(_temp300.value, "__call_thing")) then
        _temp300 = _temp300:value()
      elseif _temp300.value ~= nil then
        _temp300 = _temp300.value

        elseif _temp300.no_undermethod ~= nil then
          _temp300 =  _temp300:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp300, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp300)
      if _n.value ~= nil then
        _temp300 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp300 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp300, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp300)
      if _f.value ~= nil then
        _temp300 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp300 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp300, "value"))
      end

      elseif _temp300 == nil then
        _error(exception:null_error("_temp300", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp300))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp299 =  escape_understring(_self, _temp300)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp299 =  _self:escape_understring(_temp300)
      elseif _self.escape_understring ~= nil then
        _temp299 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp299 =  _self:no_undermethod(string:new("escape_string") , _temp300)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp299 =  no_undermethod(_self, string:new("escape_string") , _temp300)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp298 = string:new("string:new(\"" .. _tostring(_temp299) .. "\")")
end

local _temp301 = string:new("string")

local _temp302 = {}
_temp302[string:new("type")] = _temp301
_temp302 = hash:new(_temp302)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp297,_temp298,_temp302)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp297,_temp298,_temp302)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp297,_temp298,_temp302)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp297,_temp298,_temp302)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp291,_temp296,_temp303)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp291,_temp296,_temp303)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp291,_temp296,_temp303)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp291,_temp296,_temp303)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp288)
      if _t == "table" then
                      if _type(_temp288.walk) == "function" or (_type(_temp288.walk) == "table" and _rawget(_temp288.walk, "__call_thing")) then
        _dummy_ = _temp288:walk(_temp4,_temp305)
      elseif _temp288.walk ~= nil then
        _dummy_ = _temp288.walk

        elseif _temp288.no_undermethod ~= nil then
          _dummy_ =  _temp288:no_undermethod(string:new("walk") , _temp4,_temp305)
        else
          _error(exception:method_error(_temp288, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp288)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp305)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp305)
      else
        _error(exception:method_error(_temp288, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp288)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp305)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp305)
      else
        _error(exception:method_error(_temp288, "walk"))
      end

      elseif _temp288 == nil then
        _error(exception:null_error("_temp288", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp288))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp305 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp305 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp305 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp305 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp305 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp305 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp305 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp305 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp305 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp315 = function (_self, _temp307,_temp306)
        if _temp307 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp306 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp306 =  null(_self)

    elseif null then
      _temp306 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp306 =  _self:null()
      elseif _self.null ~= nil then
        _temp306 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp306 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp306 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp308 = nil
    if _type(_temp306) == "function" or (_type(_temp306) == "table" and _rawget(_temp306, "__call_thing")) then
      _temp308 =  _temp306(_self)

    elseif _temp306 then
      _temp308 =  _temp306
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp308 =  _self:var()
      elseif _self.var ~= nil then
        _temp308 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp308 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp308 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp309 = nil
do
local _temp310 = nil
        local _t = _type(_temp307)
        if _t == "table" then
          if _rawget(_temp307, "__call_thing") == nil then
            _temp310 = _temp307
          else
                  if _temp307 == nil then
              if _type(_self._temp307) == "function" or (_type(_self._temp307) == "table" and _rawget(_self._temp307, "__call_thing")) then
        _temp310 =  _self:_temp307()
      elseif _self._temp307 ~= nil then
        _temp310 =  _self._temp307

        elseif _self.no_undermethod ~= nil then
          _temp310 =  _self:no_undermethod(string:new("_temp307"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp310 =  _temp307(_self)
      end

          end
        elseif _t == "number" then
          _temp310 = _temp307
        elseif _t == "function" then
                if _temp307 == nil then
              if _type(_self._temp307) == "function" or (_type(_self._temp307) == "table" and _rawget(_self._temp307, "__call_thing")) then
        _temp310 =  _self:_temp307()
      elseif _self._temp307 ~= nil then
        _temp310 =  _self._temp307

        elseif _self.no_undermethod ~= nil then
          _temp310 =  _self:no_undermethod(string:new("_temp307"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp310 =  _temp307(_self)
      end

        elseif _temp307 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310.value) == "function" or (_type(_temp310.value) == "table" and _rawget(_temp310.value, "__call_thing")) then
        _temp310 = _temp310:value()
      elseif _temp310.value ~= nil then
        _temp310 = _temp310.value

        elseif _temp310.no_undermethod ~= nil then
          _temp310 =  _temp310:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp310, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n.value ~= nil then
        _temp310 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp310, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f.value ~= nil then
        _temp310 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp310, "value"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end

local _temp311 = regex:new("\\n")

local _temp312 = string:new("\\n")

      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310.sub) == "function" or (_type(_temp310.sub) == "table" and _rawget(_temp310.sub, "__call_thing")) then
        _temp310 = _temp310:sub(_temp311,_temp312)
      elseif _temp310.sub ~= nil then
        _temp310 = _temp310.sub

        elseif _temp310.no_undermethod ~= nil then
          _temp310 =  _temp310:no_undermethod(string:new("sub") , _temp311,_temp312)
        else
          _error(exception:method_error(_temp310, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n.sub ~= nil then
        _temp310 = _n:sub(_temp311,_temp312)
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("sub") , _temp311,_temp312)
      else
        _error(exception:method_error(_temp310, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f.sub ~= nil then
        _temp310 = _f:sub(_temp311,_temp312)
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("sub") , _temp311,_temp312)
      else
        _error(exception:method_error(_temp310, "sub"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end


_temp309 = string:new("string:new('" .. _tostring(_temp310) .. "')")
end

local _temp313 = string:new("string")

local _temp314 = {}
_temp314[string:new("type")] = _temp313
_temp314 = hash:new(_temp314)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp308,_temp309,_temp314)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp308,_temp309,_temp314)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp308,_temp309,_temp314)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp308,_temp309,_temp314)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp305)
      if _t == "table" then
                      if _type(_temp305.walk) == "function" or (_type(_temp305.walk) == "table" and _rawget(_temp305.walk, "__call_thing")) then
        _dummy_ = _temp305:walk(_temp4,_temp315)
      elseif _temp305.walk ~= nil then
        _dummy_ = _temp305.walk

        elseif _temp305.no_undermethod ~= nil then
          _dummy_ =  _temp305:no_undermethod(string:new("walk") , _temp4,_temp315)
        else
          _error(exception:method_error(_temp305, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp305)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp315)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp315)
      else
        _error(exception:method_error(_temp305, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp305)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp315)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp315)
      else
        _error(exception:method_error(_temp305, "walk"))
      end

      elseif _temp305 == nil then
        _error(exception:null_error("_temp305", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp305))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp315 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp315 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp315 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp315 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp315 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp315 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp315 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp315 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp315 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp322 = function (_self, _temp317,_temp316)
        if _temp317 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp316 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp316 =  null(_self)

    elseif null then
      _temp316 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp316 =  _self:null()
      elseif _self.null ~= nil then
        _temp316 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp316 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp316 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp318
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp318 =  my(_self)

    elseif my then
      _temp318 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp318 =  _self:my()
      elseif _self.my ~= nil then
        _temp318 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp318 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp318 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp319 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp319 =  _self:my()
      elseif _self.my ~= nil then
        _temp319 =  _self.my

        elseif my ~= nil then
          _temp319 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp319)
      if _t == "table" then
                      if _type(_temp319.env) == "function" or (_type(_temp319.env) == "table" and _rawget(_temp319.env, "__call_thing")) then
        _temp319 = _temp319:env()
      elseif _temp319.env ~= nil then
        _temp319 = _temp319.env

        elseif _temp319.no_undermethod ~= nil then
          _temp319 =  _temp319:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp319, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp319)
      if _n.env ~= nil then
        _temp319 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp319 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp319, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp319)
      if _f.env ~= nil then
        _temp319 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp319 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp319, "env"))
      end

      elseif _temp319 == nil then
        _error(exception:null_error("_temp319", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp319))
      end

      local _t = _type(_temp319)
      if _t == "table" then
                      if _type(_temp319.new_underscope) == "function" or (_type(_temp319.new_underscope) == "table" and _rawget(_temp319.new_underscope, "__call_thing")) then
        _dummy_ = _temp319:new_underscope()
      elseif _temp319.new_underscope ~= nil then
        _dummy_ = _temp319.new_underscope

        elseif _temp319.no_undermethod ~= nil then
          _dummy_ =  _temp319:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp319, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp319)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp319, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp319)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp319, "new_scope"))
      end

      elseif _temp319 == nil then
        _error(exception:null_error("_temp319", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp319))
      end

local _temp320
    if _type(_temp317) == "function" or (_type(_temp317) == "table" and _rawget(_temp317, "__call_thing")) then
      _temp319 =  _temp317(_self)

    elseif _temp317 then
      _temp319 =  _temp317
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp319 =  _self:node()
      elseif _self.node ~= nil then
        _temp319 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp319 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp319 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp320 =  do_underargs(_self, _temp319)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp320 =  _self:do_underargs(_temp319)
      elseif _self.do_underargs ~= nil then
        _temp320 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp320 =  _self:no_undermethod(string:new("do_args") , _temp319)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp320 =  no_undermethod(_self, string:new("do_args") , _temp319)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp321
    if _type(_temp316) == "function" or (_type(_temp316) == "table" and _rawget(_temp316, "__call_thing")) then
      _temp319 =  _temp316(_self)

    elseif _temp316 then
      _temp319 =  _temp316
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp319 =  _self:var()
      elseif _self.var ~= nil then
        _temp319 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp319 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp319 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp322 = nil
do
local _temp323
do
    if _type(_temp320) == "function" or (_type(_temp320) == "table" and _rawget(_temp320, "__call_thing")) then
      _temp323 =  _temp320(_self)

    elseif _temp320 then
      _temp323 =  _temp320
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp323 =  _self:args()
      elseif _self.args ~= nil then
        _temp323 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp323 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp323 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp324 = string:new("arg_list")


_temp323 = _temp323:get(_temp324)
end

_temp322 = string:new("function(" .. _tostring(_temp323) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp321 =  set_underresult(_self, _temp319,_temp322)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp321 =  _self:set_underresult(_temp319,_temp322)
      elseif _self.set_underresult ~= nil then
        _temp321 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp321 =  _self:no_undermethod(string:new("set_result") , _temp319,_temp322)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp321 =  no_undermethod(_self, string:new("set_result") , _temp319,_temp322)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp325 = nil
        local _t = _type(_temp321)
        if _t == "table" then
          if _rawget(_temp321, "__call_thing") == nil then
            _temp325 = _temp321
          else
                  if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp325 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp325 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp325 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp325 =  _temp321(_self)
      end

          end
        elseif _t == "number" then
          _temp325 = _temp321
        elseif _t == "function" then
                if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp325 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp325 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp325 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp325 =  _temp321(_self)
      end

        elseif _temp321 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp326 = nil
      local _t = _type(_temp325)
      if _t == "table" then
                      if _type(_temp325.out) == "function" or (_type(_temp325.out) == "table" and _rawget(_temp325.out, "__call_thing")) then
        _temp326 = _temp325:out()
      elseif _temp325.out ~= nil then
        _temp326 = _temp325.out

        elseif _temp325.no_undermethod ~= nil then
          _temp326 =  _temp325:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp325, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp325)
      if _n.out ~= nil then
        _temp326 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp326 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp325, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp325)
      if _f.out ~= nil then
        _temp326 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp326 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp325, "out"))
      end

      elseif _temp325 == nil then
        _error(exception:null_error("_temp325", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp325))
      end

local _temp327
do
    if _type(_temp320) == "function" or (_type(_temp320) == "table" and _rawget(_temp320, "__call_thing")) then
      _temp327 =  _temp320(_self)

    elseif _temp320 then
      _temp327 =  _temp320
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp327 =  _self:args()
      elseif _self.args ~= nil then
        _temp327 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp327 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp327 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp328 = string:new("out")


_temp327 = _temp327:get(_temp328)
end
local _temp329
      local _t = _type(_temp326)
      if _t == "table" then
                      if _type(_temp326._less_less) == "function" or (_type(_temp326._less_less) == "table" and _rawget(_temp326._less_less, "__call_thing")) then
        _temp329 = _temp326:_less_less(_temp327)
      elseif _temp326._less_less ~= nil then
        _temp329 = _temp326._less_less

        elseif _temp326.no_undermethod ~= nil then
          _temp329 =  _temp326:no_undermethod(string:new("<<") , _temp327)
        else
          _error(exception:method_error(_temp326, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp326)
      if _n._less_less ~= nil then
        _temp329 = _n:_less_less(_temp327)
      elseif _n.no_undermethod ~= nil then
        _temp329 =  _n:no_undermethod(string:new("<<") , _temp327)
      else
        _error(exception:method_error(_temp326, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp326)
      if _f._less_less ~= nil then
        _temp329 = _f:_less_less(_temp327)
      elseif _f.no_undermethod ~= nil then
        _temp329 =  _f:no_undermethod(string:new("<<") , _temp327)
      else
        _error(exception:method_error(_temp326, "<<"))
      end

      elseif _temp326 == nil then
        _error(exception:null_error("_temp326", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp326))
      end

_dummy_ = _temp329 
end

local _temp330
        local _t = _type(_temp317)
        if _t == "table" then
          if _rawget(_temp317, "__call_thing") == nil then
            _temp330 = _temp317
          else
                  if _temp317 == nil then
              if _type(_self._temp317) == "function" or (_type(_self._temp317) == "table" and _rawget(_self._temp317, "__call_thing")) then
        _temp330 =  _self:_temp317()
      elseif _self._temp317 ~= nil then
        _temp330 =  _self._temp317

        elseif _self.no_undermethod ~= nil then
          _temp330 =  _self:no_undermethod(string:new("_temp317"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp330 =  _temp317(_self)
      end

          end
        elseif _t == "number" then
          _temp330 = _temp317
        elseif _t == "function" then
                if _temp317 == nil then
              if _type(_self._temp317) == "function" or (_type(_self._temp317) == "table" and _rawget(_self._temp317, "__call_thing")) then
        _temp330 =  _self:_temp317()
      elseif _self._temp317 ~= nil then
        _temp330 =  _self._temp317

        elseif _self.no_undermethod ~= nil then
          _temp330 =  _self:no_undermethod(string:new("_temp317"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp330 =  _temp317(_self)
      end

        elseif _temp317 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp330)
      if _t == "table" then
                      if _type(_temp330.body) == "function" or (_type(_temp330.body) == "table" and _rawget(_temp330.body, "__call_thing")) then
        _temp330 = _temp330:body()
      elseif _temp330.body ~= nil then
        _temp330 = _temp330.body

        elseif _temp330.no_undermethod ~= nil then
          _temp330 =  _temp330:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp330)
      if _n.body ~= nil then
        _temp330 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp330 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp330)
      if _f.body ~= nil then
        _temp330 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp330 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp330 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp330))
      end

      local _t = _type(_temp330)
      if _t == "table" then
                      if _type(_temp330.copy) == "function" or (_type(_temp330.copy) == "table" and _rawget(_temp330.copy, "__call_thing")) then
        _temp330 = _temp330:copy()
      elseif _temp330.copy ~= nil then
        _temp330 = _temp330.copy

        elseif _temp330.no_undermethod ~= nil then
          _temp330 =  _temp330:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp330)
      if _n.copy ~= nil then
        _temp330 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp330 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp330)
      if _f.copy ~= nil then
        _temp330 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp330 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp330 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp330))
      end


local _temp331
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp331 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp331 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp331 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp331 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp331 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp331 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp331 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp331 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp331)
      if _t == "table" then
                      if _type(_temp331.pop) == "function" or (_type(_temp331.pop) == "table" and _rawget(_temp331.pop, "__call_thing")) then
        _temp331 = _temp331:pop()
      elseif _temp331.pop ~= nil then
        _temp331 = _temp331.pop

        elseif _temp331.no_undermethod ~= nil then
          _temp331 =  _temp331:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp331)
      if _n.pop ~= nil then
        _temp331 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp331 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp331)
      if _f.pop ~= nil then
        _temp331 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp331 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp331 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp331))
      end


local _temp332
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp332 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp332 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp332 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp332 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp332 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp332 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp332 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp332 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp332 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp335 = function (_self, _temp333)
        if _temp333 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp334 = nil
        local _t = _type(_temp318)
        if _t == "table" then
          if _rawget(_temp318, "__call_thing") == nil then
            _temp334 = _temp318
          else
                  if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp334 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp334 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp334 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp334 =  _temp318(_self)
      end

          end
        elseif _t == "number" then
          _temp334 = _temp318
        elseif _t == "function" then
                if _temp318 == nil then
              if _type(_self._temp318) == "function" or (_type(_self._temp318) == "table" and _rawget(_self._temp318, "__call_thing")) then
        _temp334 =  _self:_temp318()
      elseif _self._temp318 ~= nil then
        _temp334 =  _self._temp318

        elseif _self.no_undermethod ~= nil then
          _temp334 =  _self:no_undermethod(string:new("_temp318"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp334 =  _temp318(_self)
      end

        elseif _temp318 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp335 = nil
    if _type(_temp333) == "function" or (_type(_temp333) == "table" and _rawget(_temp333, "__call_thing")) then
      _temp335 =  _temp333(_self)

    elseif _temp333 then
      _temp335 =  _temp333
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp335 =  _self:n()
      elseif _self.n ~= nil then
        _temp335 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp335 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp335 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp336 = string:new("_dummy")

      local _t = _type(_temp334)
      if _t == "table" then
                      if _type(_temp334.process) == "function" or (_type(_temp334.process) == "table" and _rawget(_temp334.process, "__call_thing")) then
        _temp334 = _temp334:process(_temp335,_temp336)
      elseif _temp334.process ~= nil then
        _temp334 = _temp334.process

        elseif _temp334.no_undermethod ~= nil then
          _temp334 =  _temp334:no_undermethod(string:new("process") , _temp335,_temp336)
        else
          _error(exception:method_error(_temp334, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp334)
      if _n.process ~= nil then
        _temp334 = _n:process(_temp335,_temp336)
      elseif _n.no_undermethod ~= nil then
        _temp334 =  _n:no_undermethod(string:new("process") , _temp335,_temp336)
      else
        _error(exception:method_error(_temp334, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp334)
      if _f.process ~= nil then
        _temp334 = _f:process(_temp335,_temp336)
      elseif _f.no_undermethod ~= nil then
        _temp334 =  _f:no_undermethod(string:new("process") , _temp335,_temp336)
      else
        _error(exception:method_error(_temp334, "process"))
      end

      elseif _temp334 == nil then
        _error(exception:null_error("_temp334", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp334))
      end

      local _t = _type(_temp334)
      if _t == "table" then
                      if _type(_temp334.out) == "function" or (_type(_temp334.out) == "table" and _rawget(_temp334.out, "__call_thing")) then
        return _temp334:out()
      elseif _temp334.out ~= nil then
        return _temp334.out

        elseif _temp334.no_undermethod ~= nil then
          return  _temp334:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp334, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp334)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp334, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp334)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp334, "out"))
      end

      elseif _temp334 == nil then
        _error(exception:null_error("_temp334", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp334))
      end

end

      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.map) == "function" or (_type(_temp332.map) == "table" and _rawget(_temp332.map, "__call_thing")) then
        _temp332 = _temp332:map(_temp335)
      elseif _temp332.map ~= nil then
        _temp332 = _temp332.map

        elseif _temp332.no_undermethod ~= nil then
          _temp332 =  _temp332:no_undermethod(string:new("map") , _temp335)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.map ~= nil then
        _temp332 = _n:map(_temp335)
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("map") , _temp335)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.map ~= nil then
        _temp332 = _f:map(_temp335)
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("map") , _temp335)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

_temp335 = string:new("\n")

      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332.join) == "function" or (_type(_temp332.join) == "table" and _rawget(_temp332.join, "__call_thing")) then
        _temp332 = _temp332:join(_temp335)
      elseif _temp332.join ~= nil then
        _temp332 = _temp332.join

        elseif _temp332.no_undermethod ~= nil then
          _temp332 =  _temp332:no_undermethod(string:new("join") , _temp335)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n.join ~= nil then
        _temp332 = _n:join(_temp335)
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("join") , _temp335)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f.join ~= nil then
        _temp332 = _f:join(_temp335)
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("join") , _temp335)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end


do
local _temp337 = nil
        local _t = _type(_temp321)
        if _t == "table" then
          if _rawget(_temp321, "__call_thing") == nil then
            _temp337 = _temp321
          else
                  if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp337 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp337 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp337 =  _temp321(_self)
      end

          end
        elseif _t == "number" then
          _temp337 = _temp321
        elseif _t == "function" then
                if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp337 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp337 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp337 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp337 =  _temp321(_self)
      end

        elseif _temp321 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp338 = nil
      local _t = _type(_temp337)
      if _t == "table" then
                      if _type(_temp337.out) == "function" or (_type(_temp337.out) == "table" and _rawget(_temp337.out, "__call_thing")) then
        _temp338 = _temp337:out()
      elseif _temp337.out ~= nil then
        _temp338 = _temp337.out

        elseif _temp337.no_undermethod ~= nil then
          _temp338 =  _temp337:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp337, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp337)
      if _n.out ~= nil then
        _temp338 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp338 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp337, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp337)
      if _f.out ~= nil then
        _temp338 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp338 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp337, "out"))
      end

      elseif _temp337 == nil then
        _error(exception:null_error("_temp337", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp337))
      end

local _temp339 = nil
    if _type(_temp332) == "function" or (_type(_temp332) == "table" and _rawget(_temp332, "__call_thing")) then
      _temp339 =  _temp332(_self)

    elseif _temp332 then
      _temp339 =  _temp332
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp339 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp339 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp339 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp339 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp340
      local _t = _type(_temp338)
      if _t == "table" then
                      if _type(_temp338._less_less) == "function" or (_type(_temp338._less_less) == "table" and _rawget(_temp338._less_less, "__call_thing")) then
        _temp340 = _temp338:_less_less(_temp339)
      elseif _temp338._less_less ~= nil then
        _temp340 = _temp338._less_less

        elseif _temp338.no_undermethod ~= nil then
          _temp340 =  _temp338:no_undermethod(string:new("<<") , _temp339)
        else
          _error(exception:method_error(_temp338, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp338)
      if _n._less_less ~= nil then
        _temp340 = _n:_less_less(_temp339)
      elseif _n.no_undermethod ~= nil then
        _temp340 =  _n:no_undermethod(string:new("<<") , _temp339)
      else
        _error(exception:method_error(_temp338, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp338)
      if _f._less_less ~= nil then
        _temp340 = _f:_less_less(_temp339)
      elseif _f.no_undermethod ~= nil then
        _temp340 =  _f:no_undermethod(string:new("<<") , _temp339)
      else
        _error(exception:method_error(_temp338, "<<"))
      end

      elseif _temp338 == nil then
        _error(exception:null_error("_temp338", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp338))
      end

_dummy_ = _temp340 
end

    if _type(_temp331) == "function" or (_type(_temp331) == "table" and _rawget(_temp331, "__call_thing")) then
      _temp335 =  _temp331(_self)

    elseif _temp331 then
      _temp335 =  _temp331
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp335 =  _self:last()
      elseif _self.last ~= nil then
        _temp335 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp335 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp335 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp352 = function (_self)

local _temp341
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp341 =  _self:my()
      elseif _self.my ~= nil then
        _temp341 =  _self.my

        elseif my ~= nil then
          _temp341 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp342 = nil
    if _type(_temp331) == "function" or (_type(_temp331) == "table" and _rawget(_temp331, "__call_thing")) then
      _temp342 =  _temp331(_self)

    elseif _temp331 then
      _temp342 =  _temp331
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp342 =  _self:last()
      elseif _self.last ~= nil then
        _temp342 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp342 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp342 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp341)
      if _t == "table" then
                      if _type(_temp341.process) == "function" or (_type(_temp341.process) == "table" and _rawget(_temp341.process, "__call_thing")) then
        _temp341 = _temp341:process(_temp342)
      elseif _temp341.process ~= nil then
        _temp341 = _temp341.process

        elseif _temp341.no_undermethod ~= nil then
          _temp341 =  _temp341:no_undermethod(string:new("process") , _temp342)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp341)
      if _n.process ~= nil then
        _temp341 = _n:process(_temp342)
      elseif _n.no_undermethod ~= nil then
        _temp341 =  _n:no_undermethod(string:new("process") , _temp342)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp341)
      if _f.process ~= nil then
        _temp341 = _f:process(_temp342)
      elseif _f.no_undermethod ~= nil then
        _temp341 =  _f:no_undermethod(string:new("process") , _temp342)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp341 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp341))
      end


local _temp342 
do
local _temp343 = nil
        local _t = _type(_temp321)
        if _t == "table" then
          if _rawget(_temp321, "__call_thing") == nil then
            _temp343 = _temp321
          else
                  if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp343 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp343 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp343 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp343 =  _temp321(_self)
      end

          end
        elseif _t == "number" then
          _temp343 = _temp321
        elseif _t == "function" then
                if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp343 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp343 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp343 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp343 =  _temp321(_self)
      end

        elseif _temp321 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp344 = nil
      local _t = _type(_temp343)
      if _t == "table" then
                      if _type(_temp343.out) == "function" or (_type(_temp343.out) == "table" and _rawget(_temp343.out, "__call_thing")) then
        _temp344 = _temp343:out()
      elseif _temp343.out ~= nil then
        _temp344 = _temp343.out

        elseif _temp343.no_undermethod ~= nil then
          _temp344 =  _temp343:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp343, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp343)
      if _n.out ~= nil then
        _temp344 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp344 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp343, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp343)
      if _f.out ~= nil then
        _temp344 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp344 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp343, "out"))
      end

      elseif _temp343 == nil then
        _error(exception:null_error("_temp343", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp343))
      end

local _temp345 = nil
        local _t = _type(_temp341)
        if _t == "table" then
          if _rawget(_temp341, "__call_thing") == nil then
            _temp345 = _temp341
          else
                  if _temp341 == nil then
              if _type(_self._temp341) == "function" or (_type(_self._temp341) == "table" and _rawget(_self._temp341, "__call_thing")) then
        _temp345 =  _self:_temp341()
      elseif _self._temp341 ~= nil then
        _temp345 =  _self._temp341

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp341"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp345 =  _temp341(_self)
      end

          end
        elseif _t == "number" then
          _temp345 = _temp341
        elseif _t == "function" then
                if _temp341 == nil then
              if _type(_self._temp341) == "function" or (_type(_self._temp341) == "table" and _rawget(_self._temp341, "__call_thing")) then
        _temp345 =  _self:_temp341()
      elseif _self._temp341 ~= nil then
        _temp345 =  _self._temp341

        elseif _self.no_undermethod ~= nil then
          _temp345 =  _self:no_undermethod(string:new("_temp341"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp345 =  _temp341(_self)
      end

        elseif _temp341 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp346 = nil
      local _t = _type(_temp345)
      if _t == "table" then
                      if _type(_temp345.out) == "function" or (_type(_temp345.out) == "table" and _rawget(_temp345.out, "__call_thing")) then
        _temp346 = _temp345:out()
      elseif _temp345.out ~= nil then
        _temp346 = _temp345.out

        elseif _temp345.no_undermethod ~= nil then
          _temp346 =  _temp345:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp345, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp345)
      if _n.out ~= nil then
        _temp346 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp346 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp345, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp345)
      if _f.out ~= nil then
        _temp346 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp346 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp345, "out"))
      end

      elseif _temp345 == nil then
        _error(exception:null_error("_temp345", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp345))
      end

local _temp347 = string:new("\n")

local _temp348 = nil
do
local _temp349 = nil
        local _t = _type(_temp341)
        if _t == "table" then
          if _rawget(_temp341, "__call_thing") == nil then
            _temp349 = _temp341
          else
                  if _temp341 == nil then
              if _type(_self._temp341) == "function" or (_type(_self._temp341) == "table" and _rawget(_self._temp341, "__call_thing")) then
        _temp349 =  _self:_temp341()
      elseif _self._temp341 ~= nil then
        _temp349 =  _self._temp341

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp341"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp349 =  _temp341(_self)
      end

          end
        elseif _t == "number" then
          _temp349 = _temp341
        elseif _t == "function" then
                if _temp341 == nil then
              if _type(_self._temp341) == "function" or (_type(_self._temp341) == "table" and _rawget(_self._temp341, "__call_thing")) then
        _temp349 =  _self:_temp341()
      elseif _self._temp341 ~= nil then
        _temp349 =  _self._temp341

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp341"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp349 =  _temp341(_self)
      end

        elseif _temp341 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp349)
      if _t == "table" then
                      if _type(_temp349.var) == "function" or (_type(_temp349.var) == "table" and _rawget(_temp349.var, "__call_thing")) then
        _temp349 = _temp349:var()
      elseif _temp349.var ~= nil then
        _temp349 = _temp349.var

        elseif _temp349.no_undermethod ~= nil then
          _temp349 =  _temp349:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp349, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp349)
      if _n.var ~= nil then
        _temp349 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp349 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp349, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp349)
      if _f.var ~= nil then
        _temp349 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp349 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp349, "var"))
      end

      elseif _temp349 == nil then
        _error(exception:null_error("_temp349", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp349))
      end


_temp348 = string:new("return " .. _tostring(_temp349) .. "\n")
end
local _temp350
      local _t = _type(_temp344)
      if _t == "table" then
                      if _type(_temp344._less_less) == "function" or (_type(_temp344._less_less) == "table" and _rawget(_temp344._less_less, "__call_thing")) then
        _temp350 = _temp344:_less_less(_temp346)
      elseif _temp344._less_less ~= nil then
        _temp350 = _temp344._less_less

        elseif _temp344.no_undermethod ~= nil then
          _temp350 =  _temp344:no_undermethod(string:new("<<") , _temp346)
        else
          _error(exception:method_error(_temp344, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp344)
      if _n._less_less ~= nil then
        _temp350 = _n:_less_less(_temp346)
      elseif _n.no_undermethod ~= nil then
        _temp350 =  _n:no_undermethod(string:new("<<") , _temp346)
      else
        _error(exception:method_error(_temp344, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp344)
      if _f._less_less ~= nil then
        _temp350 = _f:_less_less(_temp346)
      elseif _f.no_undermethod ~= nil then
        _temp350 =  _f:no_undermethod(string:new("<<") , _temp346)
      else
        _error(exception:method_error(_temp344, "<<"))
      end

      elseif _temp344 == nil then
        _error(exception:null_error("_temp344", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp344))
      end

local _temp346
      local _t = _type(_temp350)
      if _t == "table" then
                      if _type(_temp350._less_less) == "function" or (_type(_temp350._less_less) == "table" and _rawget(_temp350._less_less, "__call_thing")) then
        _temp346 = _temp350:_less_less(_temp347)
      elseif _temp350._less_less ~= nil then
        _temp346 = _temp350._less_less

        elseif _temp350.no_undermethod ~= nil then
          _temp346 =  _temp350:no_undermethod(string:new("<<") , _temp347)
        else
          _error(exception:method_error(_temp350, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp350)
      if _n._less_less ~= nil then
        _temp346 = _n:_less_less(_temp347)
      elseif _n.no_undermethod ~= nil then
        _temp346 =  _n:no_undermethod(string:new("<<") , _temp347)
      else
        _error(exception:method_error(_temp350, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp350)
      if _f._less_less ~= nil then
        _temp346 = _f:_less_less(_temp347)
      elseif _f.no_undermethod ~= nil then
        _temp346 =  _f:no_undermethod(string:new("<<") , _temp347)
      else
        _error(exception:method_error(_temp350, "<<"))
      end

      elseif _temp350 == nil then
        _error(exception:null_error("_temp350", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp350))
      end

local _temp347
      local _t = _type(_temp346)
      if _t == "table" then
                      if _type(_temp346._less_less) == "function" or (_type(_temp346._less_less) == "table" and _rawget(_temp346._less_less, "__call_thing")) then
        _temp347 = _temp346:_less_less(_temp348)
      elseif _temp346._less_less ~= nil then
        _temp347 = _temp346._less_less

        elseif _temp346.no_undermethod ~= nil then
          _temp347 =  _temp346:no_undermethod(string:new("<<") , _temp348)
        else
          _error(exception:method_error(_temp346, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp346)
      if _n._less_less ~= nil then
        _temp347 = _n:_less_less(_temp348)
      elseif _n.no_undermethod ~= nil then
        _temp347 =  _n:no_undermethod(string:new("<<") , _temp348)
      else
        _error(exception:method_error(_temp346, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp346)
      if _f._less_less ~= nil then
        _temp347 = _f:_less_less(_temp348)
      elseif _f.no_undermethod ~= nil then
        _temp347 =  _f:no_undermethod(string:new("<<") , _temp348)
      else
        _error(exception:method_error(_temp346, "<<"))
      end

      elseif _temp346 == nil then
        _error(exception:null_error("_temp346", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp346))
      end

_temp342 = _temp347 
end

return _temp342
end


local _temp362 = function (_self)

local _temp353 = nil
        local _t = _type(_temp330)
        if _t == "table" then
          if _rawget(_temp330, "__call_thing") == nil then
            _temp353 = _temp330
          else
                  if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp353 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp353 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp353 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp353 =  _temp330(_self)
      end

          end
        elseif _t == "number" then
          _temp353 = _temp330
        elseif _t == "function" then
                if _temp330 == nil then
              if _type(_self._temp330) == "function" or (_type(_self._temp330) == "table" and _rawget(_self._temp330, "__call_thing")) then
        _temp353 =  _self:_temp330()
      elseif _self._temp330 ~= nil then
        _temp353 =  _self._temp330

        elseif _self.no_undermethod ~= nil then
          _temp353 =  _self:no_undermethod(string:new("_temp330"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp353 =  _temp330(_self)
      end

        elseif _temp330 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp353)
      if _t == "table" then
                      if _type(_temp353.empty_question) == "function" or (_type(_temp353.empty_question) == "table" and _rawget(_temp353.empty_question, "__call_thing")) then
        _temp353 = _temp353:empty_question()
      elseif _temp353.empty_question ~= nil then
        _temp353 = _temp353.empty_question

        elseif _temp353.no_undermethod ~= nil then
          _temp353 =  _temp353:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp353, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp353)
      if _n.empty_question ~= nil then
        _temp353 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp353 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp353, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp353)
      if _f.empty_question ~= nil then
        _temp353 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp353 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp353, "empty?"))
      end

      elseif _temp353 == nil then
        _error(exception:null_error("_temp353", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp353))
      end



local _temp360 = function (_self)

local _temp354 
do
local _temp355 = nil
        local _t = _type(_temp321)
        if _t == "table" then
          if _rawget(_temp321, "__call_thing") == nil then
            _temp355 = _temp321
          else
                  if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp355 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp355 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp355 =  _temp321(_self)
      end

          end
        elseif _t == "number" then
          _temp355 = _temp321
        elseif _t == "function" then
                if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp355 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp355 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp355 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp355 =  _temp321(_self)
      end

        elseif _temp321 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp356 = nil
      local _t = _type(_temp355)
      if _t == "table" then
                      if _type(_temp355.out) == "function" or (_type(_temp355.out) == "table" and _rawget(_temp355.out, "__call_thing")) then
        _temp356 = _temp355:out()
      elseif _temp355.out ~= nil then
        _temp356 = _temp355.out

        elseif _temp355.no_undermethod ~= nil then
          _temp356 =  _temp355:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp355, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp355)
      if _n.out ~= nil then
        _temp356 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp356 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp355, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp355)
      if _f.out ~= nil then
        _temp356 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp356 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp355, "out"))
      end

      elseif _temp355 == nil then
        _error(exception:null_error("_temp355", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp355))
      end

local _temp357 = string:new("return object:null()")
local _temp358
      local _t = _type(_temp356)
      if _t == "table" then
                      if _type(_temp356._less_less) == "function" or (_type(_temp356._less_less) == "table" and _rawget(_temp356._less_less, "__call_thing")) then
        _temp358 = _temp356:_less_less(_temp357)
      elseif _temp356._less_less ~= nil then
        _temp358 = _temp356._less_less

        elseif _temp356.no_undermethod ~= nil then
          _temp358 =  _temp356:no_undermethod(string:new("<<") , _temp357)
        else
          _error(exception:method_error(_temp356, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp356)
      if _n._less_less ~= nil then
        _temp358 = _n:_less_less(_temp357)
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("<<") , _temp357)
      else
        _error(exception:method_error(_temp356, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp356)
      if _f._less_less ~= nil then
        _temp358 = _f:_less_less(_temp357)
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("<<") , _temp357)
      else
        _error(exception:method_error(_temp356, "<<"))
      end

      elseif _temp356 == nil then
        _error(exception:null_error("_temp356", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp356))
      end

_temp354 = _temp358 
end

return _temp354
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp353,_temp360)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp353,_temp360)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp353,_temp360)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp353,_temp360)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp335,_temp352,_temp362)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp335,_temp352,_temp362)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp335,_temp352,_temp362)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp335,_temp352,_temp362)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp362 =  _self:my()
      elseif _self.my ~= nil then
        _temp362 =  _self.my

        elseif my ~= nil then
          _temp362 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362.env) == "function" or (_type(_temp362.env) == "table" and _rawget(_temp362.env, "__call_thing")) then
        _temp362 = _temp362:env()
      elseif _temp362.env ~= nil then
        _temp362 = _temp362.env

        elseif _temp362.no_undermethod ~= nil then
          _temp362 =  _temp362:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp362, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n.env ~= nil then
        _temp362 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp362 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp362, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f.env ~= nil then
        _temp362 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp362 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp362, "env"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362.pop_underscope) == "function" or (_type(_temp362.pop_underscope) == "table" and _rawget(_temp362.pop_underscope, "__call_thing")) then
        _dummy_ = _temp362:pop_underscope()
      elseif _temp362.pop_underscope ~= nil then
        _dummy_ = _temp362.pop_underscope

        elseif _temp362.no_undermethod ~= nil then
          _dummy_ =  _temp362:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp362, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp362, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp362, "pop_scope"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

do
local _temp363 = nil
        local _t = _type(_temp321)
        if _t == "table" then
          if _rawget(_temp321, "__call_thing") == nil then
            _temp363 = _temp321
          else
                  if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp363 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp363 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp321(_self)
      end

          end
        elseif _t == "number" then
          _temp363 = _temp321
        elseif _t == "function" then
                if _temp321 == nil then
              if _type(_self._temp321) == "function" or (_type(_self._temp321) == "table" and _rawget(_self._temp321, "__call_thing")) then
        _temp363 =  _self:_temp321()
      elseif _self._temp321 ~= nil then
        _temp363 =  _self._temp321

        elseif _self.no_undermethod ~= nil then
          _temp363 =  _self:no_undermethod(string:new("_temp321"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp363 =  _temp321(_self)
      end

        elseif _temp321 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp364 = nil
      local _t = _type(_temp363)
      if _t == "table" then
                      if _type(_temp363.out) == "function" or (_type(_temp363.out) == "table" and _rawget(_temp363.out, "__call_thing")) then
        _temp364 = _temp363:out()
      elseif _temp363.out ~= nil then
        _temp364 = _temp363.out

        elseif _temp363.no_undermethod ~= nil then
          _temp364 =  _temp363:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp363, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp363)
      if _n.out ~= nil then
        _temp364 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp364 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp363)
      if _f.out ~= nil then
        _temp364 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp364 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp363, "out"))
      end

      elseif _temp363 == nil then
        _error(exception:null_error("_temp363", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp363))
      end

local _temp365 = string:new("\nend\n")
local _temp366
      local _t = _type(_temp364)
      if _t == "table" then
                      if _type(_temp364._less_less) == "function" or (_type(_temp364._less_less) == "table" and _rawget(_temp364._less_less, "__call_thing")) then
        _temp366 = _temp364:_less_less(_temp365)
      elseif _temp364._less_less ~= nil then
        _temp366 = _temp364._less_less

        elseif _temp364.no_undermethod ~= nil then
          _temp366 =  _temp364:no_undermethod(string:new("<<") , _temp365)
        else
          _error(exception:method_error(_temp364, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp364)
      if _n._less_less ~= nil then
        _temp366 = _n:_less_less(_temp365)
      elseif _n.no_undermethod ~= nil then
        _temp366 =  _n:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp364)
      if _f._less_less ~= nil then
        _temp366 = _f:_less_less(_temp365)
      elseif _f.no_undermethod ~= nil then
        _temp366 =  _f:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp364, "<<"))
      end

      elseif _temp364 == nil then
        _error(exception:null_error("_temp364", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp364))
      end

_dummy_ = _temp366 
end

do
local _temp352
    if _type(_temp321) == "function" or (_type(_temp321) == "table" and _rawget(_temp321, "__call_thing")) then
      _temp352 =  _temp321(_self)

    elseif _temp321 then
      _temp352 =  _temp321
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp352 =  _self:res()
      elseif _self.res ~= nil then
        _temp352 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp352 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp352 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp367 = string:new("function")

local _temp368 = string:new("type")

_temp352:set(_temp368, _temp367)
end

    if _type(_temp321) == "function" or (_type(_temp321) == "table" and _rawget(_temp321, "__call_thing")) then
      return  _temp321(_self)

    elseif _temp321 then
      return  _temp321
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp315)
      if _t == "table" then
                      if _type(_temp315.walk) == "function" or (_type(_temp315.walk) == "table" and _rawget(_temp315.walk, "__call_thing")) then
        _dummy_ = _temp315:walk(_temp4,_temp322)
      elseif _temp315.walk ~= nil then
        _dummy_ = _temp315.walk

        elseif _temp315.no_undermethod ~= nil then
          _dummy_ =  _temp315:no_undermethod(string:new("walk") , _temp4,_temp322)
        else
          _error(exception:method_error(_temp315, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp315)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp322)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp322)
      else
        _error(exception:method_error(_temp315, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp315)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp322)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp322)
      else
        _error(exception:method_error(_temp315, "walk"))
      end

      elseif _temp315 == nil then
        _error(exception:null_error("_temp315", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp315))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp322 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp322 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp322 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp322 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp322 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp322 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp322 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp322 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp322 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp322 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp455 = function (_self, _temp370,_temp369)
        if _temp370 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp369 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp369 =  null(_self)

    elseif null then
      _temp369 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp369 =  _self:null()
      elseif _self.null ~= nil then
        _temp369 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp369 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp369 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp371
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp371 =  my(_self)

    elseif my then
      _temp371 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp371 =  _self:my()
      elseif _self.my ~= nil then
        _temp371 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp371 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp371 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp372 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp372 =  _self:my()
      elseif _self.my ~= nil then
        _temp372 =  _self.my

        elseif my ~= nil then
          _temp372 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.env) == "function" or (_type(_temp372.env) == "table" and _rawget(_temp372.env, "__call_thing")) then
        _temp372 = _temp372:env()
      elseif _temp372.env ~= nil then
        _temp372 = _temp372.env

        elseif _temp372.no_undermethod ~= nil then
          _temp372 =  _temp372:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp372, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.env ~= nil then
        _temp372 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp372 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp372, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.env ~= nil then
        _temp372 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp372 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp372, "env"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.new_underscope) == "function" or (_type(_temp372.new_underscope) == "table" and _rawget(_temp372.new_underscope, "__call_thing")) then
        _dummy_ = _temp372:new_underscope()
      elseif _temp372.new_underscope ~= nil then
        _dummy_ = _temp372.new_underscope

        elseif _temp372.no_undermethod ~= nil then
          _dummy_ =  _temp372:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp372, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp372, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp372, "new_scope"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

local _temp373
    if _type(_temp370) == "function" or (_type(_temp370) == "table" and _rawget(_temp370, "__call_thing")) then
      _temp372 =  _temp370(_self)

    elseif _temp370 then
      _temp372 =  _temp370
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp372 =  _self:node()
      elseif _self.node ~= nil then
        _temp372 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp372 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp372 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp373 =  do_underargs(_self, _temp372)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp373 =  _self:do_underargs(_temp372)
      elseif _self.do_underargs ~= nil then
        _temp373 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp373 =  _self:no_undermethod(string:new("do_args") , _temp372)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp373 =  no_undermethod(_self, string:new("do_args") , _temp372)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp374
        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp372 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp372 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp372 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp372 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp372 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp372 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp372 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp372 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.upvars) == "function" or (_type(_temp372.upvars) == "table" and _rawget(_temp372.upvars, "__call_thing")) then
        _temp372 = _temp372:upvars()
      elseif _temp372.upvars ~= nil then
        _temp372 = _temp372.upvars

        elseif _temp372.no_undermethod ~= nil then
          _temp372 =  _temp372:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp372, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.upvars ~= nil then
        _temp372 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp372 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp372, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.upvars ~= nil then
        _temp372 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp372 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp372, "upvars"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end



local _temp381 = function (_self)

local _temp375 = nil
do
local _temp376 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp376 =  _self:my()
      elseif _self.my ~= nil then
        _temp376 =  _self.my

        elseif my ~= nil then
          _temp376 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp376)
      if _t == "table" then
                      if _type(_temp376.next_underliftable) == "function" or (_type(_temp376.next_underliftable) == "table" and _rawget(_temp376.next_underliftable, "__call_thing")) then
        _temp376 = _temp376:next_underliftable()
      elseif _temp376.next_underliftable ~= nil then
        _temp376 = _temp376.next_underliftable

        elseif _temp376.no_undermethod ~= nil then
          _temp376 =  _temp376:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp376, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp376)
      if _n.next_underliftable ~= nil then
        _temp376 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp376 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp376, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp376)
      if _f.next_underliftable ~= nil then
        _temp376 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp376 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp376, "next_liftable"))
      end

      elseif _temp376 == nil then
        _error(exception:null_error("_temp376", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp376))
      end


_temp375 = string:new("_lifted[" .. _tostring(_temp376) .. "]")
end

local _temp377 = nil
do
local _temp378
do
    if _type(_temp373) == "function" or (_type(_temp373) == "table" and _rawget(_temp373, "__call_thing")) then
      _temp378 =  _temp373(_self)

    elseif _temp373 then
      _temp378 =  _temp373
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp378 =  _self:args()
      elseif _self.args ~= nil then
        _temp378 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp378 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp378 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp379 = string:new("arg_list")


_temp378 = _temp378:get(_temp379)
end

_temp377 = string:new("function(_argtable, " .. _tostring(_temp378) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp375,_temp377)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp375,_temp377)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp375,_temp377)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp375,_temp377)
      else
        _error(exception:name_error("set_result"))
      end
    end

end


local _temp388 = function (_self)

local _temp382 = nil
do
local _temp383 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp383 =  _self:my()
      elseif _self.my ~= nil then
        _temp383 =  _self.my

        elseif my ~= nil then
          _temp383 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp383)
      if _t == "table" then
                      if _type(_temp383.next_underliftable) == "function" or (_type(_temp383.next_underliftable) == "table" and _rawget(_temp383.next_underliftable, "__call_thing")) then
        _temp383 = _temp383:next_underliftable()
      elseif _temp383.next_underliftable ~= nil then
        _temp383 = _temp383.next_underliftable

        elseif _temp383.no_undermethod ~= nil then
          _temp383 =  _temp383:no_undermethod(string:new("next_liftable"))
        else
          _error(exception:method_error(_temp383, "next_liftable"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp383)
      if _n.next_underliftable ~= nil then
        _temp383 = _n:next_underliftable()
      elseif _n.no_undermethod ~= nil then
        _temp383 =  _n:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp383, "next_liftable"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp383)
      if _f.next_underliftable ~= nil then
        _temp383 = _f:next_underliftable()
      elseif _f.no_undermethod ~= nil then
        _temp383 =  _f:no_undermethod(string:new("next_liftable"))
      else
        _error(exception:method_error(_temp383, "next_liftable"))
      end

      elseif _temp383 == nil then
        _error(exception:null_error("_temp383", "invoke next_liftable on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp383))
      end


_temp382 = string:new("_lifted[" .. _tostring(_temp383) .. "]")
end

local _temp384 = nil
do
local _temp385
do
    if _type(_temp373) == "function" or (_type(_temp373) == "table" and _rawget(_temp373, "__call_thing")) then
      _temp385 =  _temp373(_self)

    elseif _temp373 then
      _temp385 =  _temp373
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp385 =  _self:args()
      elseif _self.args ~= nil then
        _temp385 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp385 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp385 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp386 = string:new("arg_list")


_temp385 = _temp385:get(_temp386)
end

_temp384 = string:new("function(" .. _tostring(_temp385) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp382,_temp384)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp382,_temp384)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp382,_temp384)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp382,_temp384)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp374 =  true_question(_self, _temp372,_temp381,_temp388)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp374 =  _self:true_question(_temp372,_temp381,_temp388)
      elseif _self.true_question ~= nil then
        _temp374 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp374 =  _self:no_undermethod(string:new("true?") , _temp372,_temp381,_temp388)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp374 =  no_undermethod(_self, string:new("true?") , _temp372,_temp381,_temp388)
      else
        _error(exception:name_error("true?"))
      end
    end

        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp388 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp388 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp388 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp388 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp388 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp388 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp388 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp388 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp388 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp388 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp388)
      if _t == "table" then
                      if _type(_temp388.upvars) == "function" or (_type(_temp388.upvars) == "table" and _rawget(_temp388.upvars, "__call_thing")) then
        _temp388 = _temp388:upvars()
      elseif _temp388.upvars ~= nil then
        _temp388 = _temp388.upvars

        elseif _temp388.no_undermethod ~= nil then
          _temp388 =  _temp388:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp388, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp388)
      if _n.upvars ~= nil then
        _temp388 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp388 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp388, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp388)
      if _f.upvars ~= nil then
        _temp388 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp388 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp388, "upvars"))
      end

      elseif _temp388 == nil then
        _error(exception:null_error("_temp388", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp388))
      end



local _temp402 = function (_self)

local _temp389 
do
local _temp390 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp390 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp390 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp390 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp390 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp390 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp390 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp390 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp390 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp390 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp390 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp391 = nil
      local _t = _type(_temp390)
      if _t == "table" then
                      if _type(_temp390.out) == "function" or (_type(_temp390.out) == "table" and _rawget(_temp390.out, "__call_thing")) then
        _temp391 = _temp390:out()
      elseif _temp390.out ~= nil then
        _temp391 = _temp390.out

        elseif _temp390.no_undermethod ~= nil then
          _temp391 =  _temp390:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp390, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp390)
      if _n.out ~= nil then
        _temp391 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp391 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp390, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp390)
      if _f.out ~= nil then
        _temp391 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp391 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp390, "out"))
      end

      elseif _temp390 == nil then
        _error(exception:null_error("_temp390", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp390))
      end

local _temp392 = nil
        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp392 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp392 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp392 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp392 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp392 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp392 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp392 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp392 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp392 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp392 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp392)
      if _t == "table" then
                      if _type(_temp392.upvars) == "function" or (_type(_temp392.upvars) == "table" and _rawget(_temp392.upvars, "__call_thing")) then
        _temp392 = _temp392:upvars()
      elseif _temp392.upvars ~= nil then
        _temp392 = _temp392.upvars

        elseif _temp392.no_undermethod ~= nil then
          _temp392 =  _temp392:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp392, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp392)
      if _n.upvars ~= nil then
        _temp392 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp392 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp392, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp392)
      if _f.upvars ~= nil then
        _temp392 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp392 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp392, "upvars"))
      end

      elseif _temp392 == nil then
        _error(exception:null_error("_temp392", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp392))
      end


local _temp400 = function (_self, _temp393)
        if _temp393 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp394 = nil
do
local _temp395
do
        local _t = _type(_temp371)
        if _t == "table" then
          if _rawget(_temp371, "__call_thing") == nil then
            _temp395 = _temp371
          else
                  if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp395 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp395 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp395 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp395 =  _temp371(_self)
      end

          end
        elseif _t == "number" then
          _temp395 = _temp371
        elseif _t == "function" then
                if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp395 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp395 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp395 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp395 =  _temp371(_self)
      end

        elseif _temp371 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp395)
      if _t == "table" then
                      if _type(_temp395.env) == "function" or (_type(_temp395.env) == "table" and _rawget(_temp395.env, "__call_thing")) then
        _temp395 = _temp395:env()
      elseif _temp395.env ~= nil then
        _temp395 = _temp395.env

        elseif _temp395.no_undermethod ~= nil then
          _temp395 =  _temp395:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp395, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp395)
      if _n.env ~= nil then
        _temp395 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp395 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp395, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp395)
      if _f.env ~= nil then
        _temp395 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp395 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp395, "env"))
      end

      elseif _temp395 == nil then
        _error(exception:null_error("_temp395", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp395))
      end

local _temp396 = nil
    if _type(_temp393) == "function" or (_type(_temp393) == "table" and _rawget(_temp393, "__call_thing")) then
      _temp396 =  _temp393(_self)

    elseif _temp393 then
      _temp396 =  _temp393
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp396 =  _self:u()
      elseif _self.u ~= nil then
        _temp396 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp396 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp396 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp395 = _temp395:get(_temp396)
end

local _temp397
do
        local _t = _type(_temp371)
        if _t == "table" then
          if _rawget(_temp371, "__call_thing") == nil then
            _temp397 = _temp371
          else
                  if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp397 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp397 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp397 =  _temp371(_self)
      end

          end
        elseif _t == "number" then
          _temp397 = _temp371
        elseif _t == "function" then
                if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp397 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp397 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp397 =  _temp371(_self)
      end

        elseif _temp371 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.env) == "function" or (_type(_temp397.env) == "table" and _rawget(_temp397.env, "__call_thing")) then
        _temp397 = _temp397:env()
      elseif _temp397.env ~= nil then
        _temp397 = _temp397.env

        elseif _temp397.no_undermethod ~= nil then
          _temp397 =  _temp397:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp397, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.env ~= nil then
        _temp397 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp397 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp397, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.env ~= nil then
        _temp397 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp397 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp397, "env"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end

local _temp398 = nil
    if _type(_temp393) == "function" or (_type(_temp393) == "table" and _rawget(_temp393, "__call_thing")) then
      _temp398 =  _temp393(_self)

    elseif _temp393 then
      _temp398 =  _temp393
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp398 =  _self:u()
      elseif _self.u ~= nil then
        _temp398 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp398 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp398 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp397 = _temp397:get(_temp398)
end

_temp394 = string:new("local " .. _tostring(_temp395) .. " = _argtable['" .. _tostring(_temp397) .. "']")
end

return _temp394
end

      local _t = _type(_temp392)
      if _t == "table" then
                      if _type(_temp392.map) == "function" or (_type(_temp392.map) == "table" and _rawget(_temp392.map, "__call_thing")) then
        _temp392 = _temp392:map(_temp400)
      elseif _temp392.map ~= nil then
        _temp392 = _temp392.map

        elseif _temp392.no_undermethod ~= nil then
          _temp392 =  _temp392:no_undermethod(string:new("map") , _temp400)
        else
          _error(exception:method_error(_temp392, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp392)
      if _n.map ~= nil then
        _temp392 = _n:map(_temp400)
      elseif _n.no_undermethod ~= nil then
        _temp392 =  _n:no_undermethod(string:new("map") , _temp400)
      else
        _error(exception:method_error(_temp392, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp392)
      if _f.map ~= nil then
        _temp392 = _f:map(_temp400)
      elseif _f.no_undermethod ~= nil then
        _temp392 =  _f:no_undermethod(string:new("map") , _temp400)
      else
        _error(exception:method_error(_temp392, "map"))
      end

      elseif _temp392 == nil then
        _error(exception:null_error("_temp392", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp392))
      end

_temp400 = string:new("\n")

      local _t = _type(_temp392)
      if _t == "table" then
                      if _type(_temp392.join) == "function" or (_type(_temp392.join) == "table" and _rawget(_temp392.join, "__call_thing")) then
        _temp392 = _temp392:join(_temp400)
      elseif _temp392.join ~= nil then
        _temp392 = _temp392.join

        elseif _temp392.no_undermethod ~= nil then
          _temp392 =  _temp392:no_undermethod(string:new("join") , _temp400)
        else
          _error(exception:method_error(_temp392, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp392)
      if _n.join ~= nil then
        _temp392 = _n:join(_temp400)
      elseif _n.no_undermethod ~= nil then
        _temp392 =  _n:no_undermethod(string:new("join") , _temp400)
      else
        _error(exception:method_error(_temp392, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp392)
      if _f.join ~= nil then
        _temp392 = _f:join(_temp400)
      elseif _f.no_undermethod ~= nil then
        _temp392 =  _f:no_undermethod(string:new("join") , _temp400)
      else
        _error(exception:method_error(_temp392, "join"))
      end

      elseif _temp392 == nil then
        _error(exception:null_error("_temp392", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp392))
      end

local _temp400
      local _t = _type(_temp391)
      if _t == "table" then
                      if _type(_temp391._less_less) == "function" or (_type(_temp391._less_less) == "table" and _rawget(_temp391._less_less, "__call_thing")) then
        _temp400 = _temp391:_less_less(_temp392)
      elseif _temp391._less_less ~= nil then
        _temp400 = _temp391._less_less

        elseif _temp391.no_undermethod ~= nil then
          _temp400 =  _temp391:no_undermethod(string:new("<<") , _temp392)
        else
          _error(exception:method_error(_temp391, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp391)
      if _n._less_less ~= nil then
        _temp400 = _n:_less_less(_temp392)
      elseif _n.no_undermethod ~= nil then
        _temp400 =  _n:no_undermethod(string:new("<<") , _temp392)
      else
        _error(exception:method_error(_temp391, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp391)
      if _f._less_less ~= nil then
        _temp400 = _f:_less_less(_temp392)
      elseif _f.no_undermethod ~= nil then
        _temp400 =  _f:no_undermethod(string:new("<<") , _temp392)
      else
        _error(exception:method_error(_temp391, "<<"))
      end

      elseif _temp391 == nil then
        _error(exception:null_error("_temp391", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp391))
      end

_temp389 = _temp400 
end

return _temp389
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp388,_temp402)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp388,_temp402)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp388,_temp402)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp388,_temp402)
      else
        _error(exception:name_error("true?"))
      end
    end

do
local _temp403 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp403 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp403 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp403 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp403 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp403 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp403 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp403 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp403 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp403 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp404 = nil
      local _t = _type(_temp403)
      if _t == "table" then
                      if _type(_temp403.out) == "function" or (_type(_temp403.out) == "table" and _rawget(_temp403.out, "__call_thing")) then
        _temp404 = _temp403:out()
      elseif _temp403.out ~= nil then
        _temp404 = _temp403.out

        elseif _temp403.no_undermethod ~= nil then
          _temp404 =  _temp403:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp403, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp403)
      if _n.out ~= nil then
        _temp404 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp404 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp403, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp403)
      if _f.out ~= nil then
        _temp404 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp404 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp403, "out"))
      end

      elseif _temp403 == nil then
        _error(exception:null_error("_temp403", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp403))
      end

local _temp405
do
    if _type(_temp373) == "function" or (_type(_temp373) == "table" and _rawget(_temp373, "__call_thing")) then
      _temp405 =  _temp373(_self)

    elseif _temp373 then
      _temp405 =  _temp373
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp405 =  _self:args()
      elseif _self.args ~= nil then
        _temp405 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp405 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp405 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp406 = string:new("out")


_temp405 = _temp405:get(_temp406)
end
local _temp407
      local _t = _type(_temp404)
      if _t == "table" then
                      if _type(_temp404._less_less) == "function" or (_type(_temp404._less_less) == "table" and _rawget(_temp404._less_less, "__call_thing")) then
        _temp407 = _temp404:_less_less(_temp405)
      elseif _temp404._less_less ~= nil then
        _temp407 = _temp404._less_less

        elseif _temp404.no_undermethod ~= nil then
          _temp407 =  _temp404:no_undermethod(string:new("<<") , _temp405)
        else
          _error(exception:method_error(_temp404, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp404)
      if _n._less_less ~= nil then
        _temp407 = _n:_less_less(_temp405)
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("<<") , _temp405)
      else
        _error(exception:method_error(_temp404, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp404)
      if _f._less_less ~= nil then
        _temp407 = _f:_less_less(_temp405)
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("<<") , _temp405)
      else
        _error(exception:method_error(_temp404, "<<"))
      end

      elseif _temp404 == nil then
        _error(exception:null_error("_temp404", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp404))
      end

_dummy_ = _temp407 
end

local _temp408
        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp408 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp408 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp408 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp408 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp408 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp408 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp408 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp408 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp408 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp408 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp408)
      if _t == "table" then
                      if _type(_temp408.body) == "function" or (_type(_temp408.body) == "table" and _rawget(_temp408.body, "__call_thing")) then
        _temp408 = _temp408:body()
      elseif _temp408.body ~= nil then
        _temp408 = _temp408.body

        elseif _temp408.no_undermethod ~= nil then
          _temp408 =  _temp408:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp408)
      if _n.body ~= nil then
        _temp408 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp408 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp408)
      if _f.body ~= nil then
        _temp408 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp408 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp408 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp408))
      end

      local _t = _type(_temp408)
      if _t == "table" then
                      if _type(_temp408.copy) == "function" or (_type(_temp408.copy) == "table" and _rawget(_temp408.copy, "__call_thing")) then
        _temp408 = _temp408:copy()
      elseif _temp408.copy ~= nil then
        _temp408 = _temp408.copy

        elseif _temp408.no_undermethod ~= nil then
          _temp408 =  _temp408:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp408)
      if _n.copy ~= nil then
        _temp408 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp408 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp408)
      if _f.copy ~= nil then
        _temp408 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp408 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp408 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp408))
      end


local _temp409
        local _t = _type(_temp408)
        if _t == "table" then
          if _rawget(_temp408, "__call_thing") == nil then
            _temp409 = _temp408
          else
                  if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp409 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp409 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp409 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp409 =  _temp408(_self)
      end

          end
        elseif _t == "number" then
          _temp409 = _temp408
        elseif _t == "function" then
                if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp409 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp409 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp409 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp409 =  _temp408(_self)
      end

        elseif _temp408 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp409)
      if _t == "table" then
                      if _type(_temp409.pop) == "function" or (_type(_temp409.pop) == "table" and _rawget(_temp409.pop, "__call_thing")) then
        _temp409 = _temp409:pop()
      elseif _temp409.pop ~= nil then
        _temp409 = _temp409.pop

        elseif _temp409.no_undermethod ~= nil then
          _temp409 =  _temp409:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp409)
      if _n.pop ~= nil then
        _temp409 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp409 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp409)
      if _f.pop ~= nil then
        _temp409 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp409 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp409 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp409))
      end


local _temp410
        local _t = _type(_temp408)
        if _t == "table" then
          if _rawget(_temp408, "__call_thing") == nil then
            _temp410 = _temp408
          else
                  if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp410 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp410 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp410 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp410 =  _temp408(_self)
      end

          end
        elseif _t == "number" then
          _temp410 = _temp408
        elseif _t == "function" then
                if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp410 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp410 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp410 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp410 =  _temp408(_self)
      end

        elseif _temp408 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp413 = function (_self, _temp411)
        if _temp411 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp412 = nil
        local _t = _type(_temp371)
        if _t == "table" then
          if _rawget(_temp371, "__call_thing") == nil then
            _temp412 = _temp371
          else
                  if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp412 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp412 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp412 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp412 =  _temp371(_self)
      end

          end
        elseif _t == "number" then
          _temp412 = _temp371
        elseif _t == "function" then
                if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp412 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp412 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp412 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp412 =  _temp371(_self)
      end

        elseif _temp371 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp413 = nil
    if _type(_temp411) == "function" or (_type(_temp411) == "table" and _rawget(_temp411, "__call_thing")) then
      _temp413 =  _temp411(_self)

    elseif _temp411 then
      _temp413 =  _temp411
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp413 =  _self:n()
      elseif _self.n ~= nil then
        _temp413 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp413 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp413 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp414 = string:new("_dummy")

      local _t = _type(_temp412)
      if _t == "table" then
                      if _type(_temp412.process) == "function" or (_type(_temp412.process) == "table" and _rawget(_temp412.process, "__call_thing")) then
        _temp412 = _temp412:process(_temp413,_temp414)
      elseif _temp412.process ~= nil then
        _temp412 = _temp412.process

        elseif _temp412.no_undermethod ~= nil then
          _temp412 =  _temp412:no_undermethod(string:new("process") , _temp413,_temp414)
        else
          _error(exception:method_error(_temp412, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp412)
      if _n.process ~= nil then
        _temp412 = _n:process(_temp413,_temp414)
      elseif _n.no_undermethod ~= nil then
        _temp412 =  _n:no_undermethod(string:new("process") , _temp413,_temp414)
      else
        _error(exception:method_error(_temp412, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp412)
      if _f.process ~= nil then
        _temp412 = _f:process(_temp413,_temp414)
      elseif _f.no_undermethod ~= nil then
        _temp412 =  _f:no_undermethod(string:new("process") , _temp413,_temp414)
      else
        _error(exception:method_error(_temp412, "process"))
      end

      elseif _temp412 == nil then
        _error(exception:null_error("_temp412", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp412))
      end

      local _t = _type(_temp412)
      if _t == "table" then
                      if _type(_temp412.out) == "function" or (_type(_temp412.out) == "table" and _rawget(_temp412.out, "__call_thing")) then
        return _temp412:out()
      elseif _temp412.out ~= nil then
        return _temp412.out

        elseif _temp412.no_undermethod ~= nil then
          return  _temp412:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp412, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp412)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp412, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp412)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp412, "out"))
      end

      elseif _temp412 == nil then
        _error(exception:null_error("_temp412", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp412))
      end

end

      local _t = _type(_temp410)
      if _t == "table" then
                      if _type(_temp410.map) == "function" or (_type(_temp410.map) == "table" and _rawget(_temp410.map, "__call_thing")) then
        _temp410 = _temp410:map(_temp413)
      elseif _temp410.map ~= nil then
        _temp410 = _temp410.map

        elseif _temp410.no_undermethod ~= nil then
          _temp410 =  _temp410:no_undermethod(string:new("map") , _temp413)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp410)
      if _n.map ~= nil then
        _temp410 = _n:map(_temp413)
      elseif _n.no_undermethod ~= nil then
        _temp410 =  _n:no_undermethod(string:new("map") , _temp413)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp410)
      if _f.map ~= nil then
        _temp410 = _f:map(_temp413)
      elseif _f.no_undermethod ~= nil then
        _temp410 =  _f:no_undermethod(string:new("map") , _temp413)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp410 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp410))
      end

_temp413 = string:new("\n")

      local _t = _type(_temp410)
      if _t == "table" then
                      if _type(_temp410.join) == "function" or (_type(_temp410.join) == "table" and _rawget(_temp410.join, "__call_thing")) then
        _temp410 = _temp410:join(_temp413)
      elseif _temp410.join ~= nil then
        _temp410 = _temp410.join

        elseif _temp410.no_undermethod ~= nil then
          _temp410 =  _temp410:no_undermethod(string:new("join") , _temp413)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp410)
      if _n.join ~= nil then
        _temp410 = _n:join(_temp413)
      elseif _n.no_undermethod ~= nil then
        _temp410 =  _n:no_undermethod(string:new("join") , _temp413)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp410)
      if _f.join ~= nil then
        _temp410 = _f:join(_temp413)
      elseif _f.no_undermethod ~= nil then
        _temp410 =  _f:no_undermethod(string:new("join") , _temp413)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp410 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp410))
      end


do
local _temp415 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp415 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp415 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp415 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp415 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp415 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp415 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp415 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp415 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp416 = nil
      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.out) == "function" or (_type(_temp415.out) == "table" and _rawget(_temp415.out, "__call_thing")) then
        _temp416 = _temp415:out()
      elseif _temp415.out ~= nil then
        _temp416 = _temp415.out

        elseif _temp415.no_undermethod ~= nil then
          _temp416 =  _temp415:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp415, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.out ~= nil then
        _temp416 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp416 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp415, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.out ~= nil then
        _temp416 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp416 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp415, "out"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end

local _temp417 = nil
    if _type(_temp410) == "function" or (_type(_temp410) == "table" and _rawget(_temp410, "__call_thing")) then
      _temp417 =  _temp410(_self)

    elseif _temp410 then
      _temp417 =  _temp410
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp417 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp417 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp417 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp417 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp418
      local _t = _type(_temp416)
      if _t == "table" then
                      if _type(_temp416._less_less) == "function" or (_type(_temp416._less_less) == "table" and _rawget(_temp416._less_less, "__call_thing")) then
        _temp418 = _temp416:_less_less(_temp417)
      elseif _temp416._less_less ~= nil then
        _temp418 = _temp416._less_less

        elseif _temp416.no_undermethod ~= nil then
          _temp418 =  _temp416:no_undermethod(string:new("<<") , _temp417)
        else
          _error(exception:method_error(_temp416, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp416)
      if _n._less_less ~= nil then
        _temp418 = _n:_less_less(_temp417)
      elseif _n.no_undermethod ~= nil then
        _temp418 =  _n:no_undermethod(string:new("<<") , _temp417)
      else
        _error(exception:method_error(_temp416, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp416)
      if _f._less_less ~= nil then
        _temp418 = _f:_less_less(_temp417)
      elseif _f.no_undermethod ~= nil then
        _temp418 =  _f:no_undermethod(string:new("<<") , _temp417)
      else
        _error(exception:method_error(_temp416, "<<"))
      end

      elseif _temp416 == nil then
        _error(exception:null_error("_temp416", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp416))
      end

_dummy_ = _temp418 
end

    if _type(_temp409) == "function" or (_type(_temp409) == "table" and _rawget(_temp409, "__call_thing")) then
      _temp413 =  _temp409(_self)

    elseif _temp409 then
      _temp413 =  _temp409
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp413 =  _self:last()
      elseif _self.last ~= nil then
        _temp413 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp413 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp413 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp430 = function (_self)

local _temp419
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp419 =  _self:my()
      elseif _self.my ~= nil then
        _temp419 =  _self.my

        elseif my ~= nil then
          _temp419 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp420 = nil
    if _type(_temp409) == "function" or (_type(_temp409) == "table" and _rawget(_temp409, "__call_thing")) then
      _temp420 =  _temp409(_self)

    elseif _temp409 then
      _temp420 =  _temp409
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp420 =  _self:last()
      elseif _self.last ~= nil then
        _temp420 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp420 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp420 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp419)
      if _t == "table" then
                      if _type(_temp419.process) == "function" or (_type(_temp419.process) == "table" and _rawget(_temp419.process, "__call_thing")) then
        _temp419 = _temp419:process(_temp420)
      elseif _temp419.process ~= nil then
        _temp419 = _temp419.process

        elseif _temp419.no_undermethod ~= nil then
          _temp419 =  _temp419:no_undermethod(string:new("process") , _temp420)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp419)
      if _n.process ~= nil then
        _temp419 = _n:process(_temp420)
      elseif _n.no_undermethod ~= nil then
        _temp419 =  _n:no_undermethod(string:new("process") , _temp420)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp419)
      if _f.process ~= nil then
        _temp419 = _f:process(_temp420)
      elseif _f.no_undermethod ~= nil then
        _temp419 =  _f:no_undermethod(string:new("process") , _temp420)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp419 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp419))
      end


local _temp420 
do
local _temp421 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp421 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp421 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp421 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp421 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp421 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp421 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp421 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp421 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp421 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp421 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp422 = nil
      local _t = _type(_temp421)
      if _t == "table" then
                      if _type(_temp421.out) == "function" or (_type(_temp421.out) == "table" and _rawget(_temp421.out, "__call_thing")) then
        _temp422 = _temp421:out()
      elseif _temp421.out ~= nil then
        _temp422 = _temp421.out

        elseif _temp421.no_undermethod ~= nil then
          _temp422 =  _temp421:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp421, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp421)
      if _n.out ~= nil then
        _temp422 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp422 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp421, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp421)
      if _f.out ~= nil then
        _temp422 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp422 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp421, "out"))
      end

      elseif _temp421 == nil then
        _error(exception:null_error("_temp421", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp421))
      end

local _temp423 = nil
        local _t = _type(_temp419)
        if _t == "table" then
          if _rawget(_temp419, "__call_thing") == nil then
            _temp423 = _temp419
          else
                  if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp423 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp423 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp423 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp423 =  _temp419(_self)
      end

          end
        elseif _t == "number" then
          _temp423 = _temp419
        elseif _t == "function" then
                if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp423 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp423 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp423 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp423 =  _temp419(_self)
      end

        elseif _temp419 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp424 = nil
      local _t = _type(_temp423)
      if _t == "table" then
                      if _type(_temp423.out) == "function" or (_type(_temp423.out) == "table" and _rawget(_temp423.out, "__call_thing")) then
        _temp424 = _temp423:out()
      elseif _temp423.out ~= nil then
        _temp424 = _temp423.out

        elseif _temp423.no_undermethod ~= nil then
          _temp424 =  _temp423:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp423, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp423)
      if _n.out ~= nil then
        _temp424 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp423, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp423)
      if _f.out ~= nil then
        _temp424 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp423, "out"))
      end

      elseif _temp423 == nil then
        _error(exception:null_error("_temp423", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp423))
      end

local _temp425 = string:new("\n")

local _temp426 = nil
do
local _temp427 = nil
        local _t = _type(_temp419)
        if _t == "table" then
          if _rawget(_temp419, "__call_thing") == nil then
            _temp427 = _temp419
          else
                  if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp427 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp427 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp427 =  _temp419(_self)
      end

          end
        elseif _t == "number" then
          _temp427 = _temp419
        elseif _t == "function" then
                if _temp419 == nil then
              if _type(_self._temp419) == "function" or (_type(_self._temp419) == "table" and _rawget(_self._temp419, "__call_thing")) then
        _temp427 =  _self:_temp419()
      elseif _self._temp419 ~= nil then
        _temp427 =  _self._temp419

        elseif _self.no_undermethod ~= nil then
          _temp427 =  _self:no_undermethod(string:new("_temp419"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp427 =  _temp419(_self)
      end

        elseif _temp419 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp427)
      if _t == "table" then
                      if _type(_temp427.var) == "function" or (_type(_temp427.var) == "table" and _rawget(_temp427.var, "__call_thing")) then
        _temp427 = _temp427:var()
      elseif _temp427.var ~= nil then
        _temp427 = _temp427.var

        elseif _temp427.no_undermethod ~= nil then
          _temp427 =  _temp427:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp427, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp427)
      if _n.var ~= nil then
        _temp427 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp427 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp427, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp427)
      if _f.var ~= nil then
        _temp427 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp427 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp427, "var"))
      end

      elseif _temp427 == nil then
        _error(exception:null_error("_temp427", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp427))
      end


_temp426 = string:new("return " .. _tostring(_temp427) .. "\n")
end
local _temp428
      local _t = _type(_temp422)
      if _t == "table" then
                      if _type(_temp422._less_less) == "function" or (_type(_temp422._less_less) == "table" and _rawget(_temp422._less_less, "__call_thing")) then
        _temp428 = _temp422:_less_less(_temp424)
      elseif _temp422._less_less ~= nil then
        _temp428 = _temp422._less_less

        elseif _temp422.no_undermethod ~= nil then
          _temp428 =  _temp422:no_undermethod(string:new("<<") , _temp424)
        else
          _error(exception:method_error(_temp422, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp422)
      if _n._less_less ~= nil then
        _temp428 = _n:_less_less(_temp424)
      elseif _n.no_undermethod ~= nil then
        _temp428 =  _n:no_undermethod(string:new("<<") , _temp424)
      else
        _error(exception:method_error(_temp422, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp422)
      if _f._less_less ~= nil then
        _temp428 = _f:_less_less(_temp424)
      elseif _f.no_undermethod ~= nil then
        _temp428 =  _f:no_undermethod(string:new("<<") , _temp424)
      else
        _error(exception:method_error(_temp422, "<<"))
      end

      elseif _temp422 == nil then
        _error(exception:null_error("_temp422", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp422))
      end

local _temp424
      local _t = _type(_temp428)
      if _t == "table" then
                      if _type(_temp428._less_less) == "function" or (_type(_temp428._less_less) == "table" and _rawget(_temp428._less_less, "__call_thing")) then
        _temp424 = _temp428:_less_less(_temp425)
      elseif _temp428._less_less ~= nil then
        _temp424 = _temp428._less_less

        elseif _temp428.no_undermethod ~= nil then
          _temp424 =  _temp428:no_undermethod(string:new("<<") , _temp425)
        else
          _error(exception:method_error(_temp428, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp428)
      if _n._less_less ~= nil then
        _temp424 = _n:_less_less(_temp425)
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("<<") , _temp425)
      else
        _error(exception:method_error(_temp428, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp428)
      if _f._less_less ~= nil then
        _temp424 = _f:_less_less(_temp425)
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("<<") , _temp425)
      else
        _error(exception:method_error(_temp428, "<<"))
      end

      elseif _temp428 == nil then
        _error(exception:null_error("_temp428", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp428))
      end

local _temp425
      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424._less_less) == "function" or (_type(_temp424._less_less) == "table" and _rawget(_temp424._less_less, "__call_thing")) then
        _temp425 = _temp424:_less_less(_temp426)
      elseif _temp424._less_less ~= nil then
        _temp425 = _temp424._less_less

        elseif _temp424.no_undermethod ~= nil then
          _temp425 =  _temp424:no_undermethod(string:new("<<") , _temp426)
        else
          _error(exception:method_error(_temp424, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n._less_less ~= nil then
        _temp425 = _n:_less_less(_temp426)
      elseif _n.no_undermethod ~= nil then
        _temp425 =  _n:no_undermethod(string:new("<<") , _temp426)
      else
        _error(exception:method_error(_temp424, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f._less_less ~= nil then
        _temp425 = _f:_less_less(_temp426)
      elseif _f.no_undermethod ~= nil then
        _temp425 =  _f:no_undermethod(string:new("<<") , _temp426)
      else
        _error(exception:method_error(_temp424, "<<"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end

_temp420 = _temp425 
end

return _temp420
end


local _temp440 = function (_self)

local _temp431 = nil
        local _t = _type(_temp408)
        if _t == "table" then
          if _rawget(_temp408, "__call_thing") == nil then
            _temp431 = _temp408
          else
                  if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp431 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp431 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp431 =  _temp408(_self)
      end

          end
        elseif _t == "number" then
          _temp431 = _temp408
        elseif _t == "function" then
                if _temp408 == nil then
              if _type(_self._temp408) == "function" or (_type(_self._temp408) == "table" and _rawget(_self._temp408, "__call_thing")) then
        _temp431 =  _self:_temp408()
      elseif _self._temp408 ~= nil then
        _temp431 =  _self._temp408

        elseif _self.no_undermethod ~= nil then
          _temp431 =  _self:no_undermethod(string:new("_temp408"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp431 =  _temp408(_self)
      end

        elseif _temp408 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp431)
      if _t == "table" then
                      if _type(_temp431.empty_question) == "function" or (_type(_temp431.empty_question) == "table" and _rawget(_temp431.empty_question, "__call_thing")) then
        _temp431 = _temp431:empty_question()
      elseif _temp431.empty_question ~= nil then
        _temp431 = _temp431.empty_question

        elseif _temp431.no_undermethod ~= nil then
          _temp431 =  _temp431:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp431, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp431)
      if _n.empty_question ~= nil then
        _temp431 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp431 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp431, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp431)
      if _f.empty_question ~= nil then
        _temp431 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp431 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp431, "empty?"))
      end

      elseif _temp431 == nil then
        _error(exception:null_error("_temp431", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp431))
      end



local _temp438 = function (_self)

local _temp432 
do
local _temp433 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp433 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp433 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp433 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp433 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp433 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp433 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp433 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp433 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp433 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp433 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp434 = nil
      local _t = _type(_temp433)
      if _t == "table" then
                      if _type(_temp433.out) == "function" or (_type(_temp433.out) == "table" and _rawget(_temp433.out, "__call_thing")) then
        _temp434 = _temp433:out()
      elseif _temp433.out ~= nil then
        _temp434 = _temp433.out

        elseif _temp433.no_undermethod ~= nil then
          _temp434 =  _temp433:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp433, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp433)
      if _n.out ~= nil then
        _temp434 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp434 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp433, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp433)
      if _f.out ~= nil then
        _temp434 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp434 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp433, "out"))
      end

      elseif _temp433 == nil then
        _error(exception:null_error("_temp433", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp433))
      end

local _temp435 = string:new("return object:null()")
local _temp436
      local _t = _type(_temp434)
      if _t == "table" then
                      if _type(_temp434._less_less) == "function" or (_type(_temp434._less_less) == "table" and _rawget(_temp434._less_less, "__call_thing")) then
        _temp436 = _temp434:_less_less(_temp435)
      elseif _temp434._less_less ~= nil then
        _temp436 = _temp434._less_less

        elseif _temp434.no_undermethod ~= nil then
          _temp436 =  _temp434:no_undermethod(string:new("<<") , _temp435)
        else
          _error(exception:method_error(_temp434, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp434)
      if _n._less_less ~= nil then
        _temp436 = _n:_less_less(_temp435)
      elseif _n.no_undermethod ~= nil then
        _temp436 =  _n:no_undermethod(string:new("<<") , _temp435)
      else
        _error(exception:method_error(_temp434, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp434)
      if _f._less_less ~= nil then
        _temp436 = _f:_less_less(_temp435)
      elseif _f.no_undermethod ~= nil then
        _temp436 =  _f:no_undermethod(string:new("<<") , _temp435)
      else
        _error(exception:method_error(_temp434, "<<"))
      end

      elseif _temp434 == nil then
        _error(exception:null_error("_temp434", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp434))
      end

_temp432 = _temp436 
end

return _temp432
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp431,_temp438)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp431,_temp438)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp431,_temp438)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp431,_temp438)
      else
        _error(exception:name_error("true?"))
      end
    end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp413,_temp430,_temp440)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp413,_temp430,_temp440)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp413,_temp430,_temp440)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp413,_temp430,_temp440)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp440 =  _self:my()
      elseif _self.my ~= nil then
        _temp440 =  _self.my

        elseif my ~= nil then
          _temp440 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp440)
      if _t == "table" then
                      if _type(_temp440.env) == "function" or (_type(_temp440.env) == "table" and _rawget(_temp440.env, "__call_thing")) then
        _temp440 = _temp440:env()
      elseif _temp440.env ~= nil then
        _temp440 = _temp440.env

        elseif _temp440.no_undermethod ~= nil then
          _temp440 =  _temp440:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp440, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp440)
      if _n.env ~= nil then
        _temp440 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp440 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp440, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp440)
      if _f.env ~= nil then
        _temp440 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp440 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp440, "env"))
      end

      elseif _temp440 == nil then
        _error(exception:null_error("_temp440", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp440))
      end

      local _t = _type(_temp440)
      if _t == "table" then
                      if _type(_temp440.pop_underscope) == "function" or (_type(_temp440.pop_underscope) == "table" and _rawget(_temp440.pop_underscope, "__call_thing")) then
        _dummy_ = _temp440:pop_underscope()
      elseif _temp440.pop_underscope ~= nil then
        _dummy_ = _temp440.pop_underscope

        elseif _temp440.no_undermethod ~= nil then
          _dummy_ =  _temp440:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp440, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp440)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp440, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp440)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp440, "pop_scope"))
      end

      elseif _temp440 == nil then
        _error(exception:null_error("_temp440", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp440))
      end

do
local _temp441 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp441 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp441 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp441 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp441 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp441 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp441 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp441 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp441 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp441 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp441 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp442 = nil
      local _t = _type(_temp441)
      if _t == "table" then
                      if _type(_temp441.out) == "function" or (_type(_temp441.out) == "table" and _rawget(_temp441.out, "__call_thing")) then
        _temp442 = _temp441:out()
      elseif _temp441.out ~= nil then
        _temp442 = _temp441.out

        elseif _temp441.no_undermethod ~= nil then
          _temp442 =  _temp441:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp441, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp441)
      if _n.out ~= nil then
        _temp442 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp442 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp441, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp441)
      if _f.out ~= nil then
        _temp442 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp442 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp441, "out"))
      end

      elseif _temp441 == nil then
        _error(exception:null_error("_temp441", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp441))
      end

local _temp443 = string:new("\nend\n")
local _temp444
      local _t = _type(_temp442)
      if _t == "table" then
                      if _type(_temp442._less_less) == "function" or (_type(_temp442._less_less) == "table" and _rawget(_temp442._less_less, "__call_thing")) then
        _temp444 = _temp442:_less_less(_temp443)
      elseif _temp442._less_less ~= nil then
        _temp444 = _temp442._less_less

        elseif _temp442.no_undermethod ~= nil then
          _temp444 =  _temp442:no_undermethod(string:new("<<") , _temp443)
        else
          _error(exception:method_error(_temp442, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp442)
      if _n._less_less ~= nil then
        _temp444 = _n:_less_less(_temp443)
      elseif _n.no_undermethod ~= nil then
        _temp444 =  _n:no_undermethod(string:new("<<") , _temp443)
      else
        _error(exception:method_error(_temp442, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp442)
      if _f._less_less ~= nil then
        _temp444 = _f:_less_less(_temp443)
      elseif _f.no_undermethod ~= nil then
        _temp444 =  _f:no_undermethod(string:new("<<") , _temp443)
      else
        _error(exception:method_error(_temp442, "<<"))
      end

      elseif _temp442 == nil then
        _error(exception:null_error("_temp442", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp442))
      end

_dummy_ = _temp444 
end

do
local _temp430
    if _type(_temp374) == "function" or (_type(_temp374) == "table" and _rawget(_temp374, "__call_thing")) then
      _temp430 =  _temp374(_self)

    elseif _temp374 then
      _temp430 =  _temp374
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp430 =  _self:res()
      elseif _self.res ~= nil then
        _temp430 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp430 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp430 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp445 = string:new("function")

local _temp446 = string:new("type")

_temp430:set(_temp446, _temp445)
end

do
local _temp447 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp447 =  _self:my()
      elseif _self.my ~= nil then
        _temp447 =  _self.my

        elseif my ~= nil then
          _temp447 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp448 = nil
      local _t = _type(_temp447)
      if _t == "table" then
                      if _type(_temp447.liftable_underfunctions) == "function" or (_type(_temp447.liftable_underfunctions) == "table" and _rawget(_temp447.liftable_underfunctions, "__call_thing")) then
        _temp448 = _temp447:liftable_underfunctions()
      elseif _temp447.liftable_underfunctions ~= nil then
        _temp448 = _temp447.liftable_underfunctions

        elseif _temp447.no_undermethod ~= nil then
          _temp448 =  _temp447:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp447, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp447)
      if _n.liftable_underfunctions ~= nil then
        _temp448 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp448 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp447, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp447)
      if _f.liftable_underfunctions ~= nil then
        _temp448 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp448 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp447, "liftable_functions"))
      end

      elseif _temp447 == nil then
        _error(exception:null_error("_temp447", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp447))
      end

local _temp449 = nil
    if _type(_temp374) == "function" or (_type(_temp374) == "table" and _rawget(_temp374, "__call_thing")) then
      _temp449 =  _temp374(_self)

    elseif _temp374 then
      _temp449 =  _temp374
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp449 =  _self:res()
      elseif _self.res ~= nil then
        _temp449 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp449 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp449 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp450
      local _t = _type(_temp448)
      if _t == "table" then
                      if _type(_temp448._less_less) == "function" or (_type(_temp448._less_less) == "table" and _rawget(_temp448._less_less, "__call_thing")) then
        _temp450 = _temp448:_less_less(_temp449)
      elseif _temp448._less_less ~= nil then
        _temp450 = _temp448._less_less

        elseif _temp448.no_undermethod ~= nil then
          _temp450 =  _temp448:no_undermethod(string:new("<<") , _temp449)
        else
          _error(exception:method_error(_temp448, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp448)
      if _n._less_less ~= nil then
        _temp450 = _n:_less_less(_temp449)
      elseif _n.no_undermethod ~= nil then
        _temp450 =  _n:no_undermethod(string:new("<<") , _temp449)
      else
        _error(exception:method_error(_temp448, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp448)
      if _f._less_less ~= nil then
        _temp450 = _f:_less_less(_temp449)
      elseif _f.no_undermethod ~= nil then
        _temp450 =  _f:no_undermethod(string:new("<<") , _temp449)
      else
        _error(exception:method_error(_temp448, "<<"))
      end

      elseif _temp448 == nil then
        _error(exception:null_error("_temp448", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp448))
      end

_dummy_ = _temp450 
end

local _temp451
        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp413 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp413 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp413 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp413 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp413 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp413 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp413 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp413 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp413 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp413)
      if _t == "table" then
                      if _type(_temp413.upvars) == "function" or (_type(_temp413.upvars) == "table" and _rawget(_temp413.upvars, "__call_thing")) then
        _temp413 = _temp413:upvars()
      elseif _temp413.upvars ~= nil then
        _temp413 = _temp413.upvars

        elseif _temp413.no_undermethod ~= nil then
          _temp413 =  _temp413:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp413, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp413)
      if _n.upvars ~= nil then
        _temp413 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp413 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp413, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp413)
      if _f.upvars ~= nil then
        _temp413 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp413 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp413, "upvars"))
      end

      elseif _temp413 == nil then
        _error(exception:null_error("_temp413", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp413))
      end



local _temp455 = function (_self)

local _temp452 = nil
do
local _temp453 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp453 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp453 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp453 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp453 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp453 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp453 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp453 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp453 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp453 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp453)
      if _t == "table" then
                      if _type(_temp453.var) == "function" or (_type(_temp453.var) == "table" and _rawget(_temp453.var, "__call_thing")) then
        _temp453 = _temp453:var()
      elseif _temp453.var ~= nil then
        _temp453 = _temp453.var

        elseif _temp453.no_undermethod ~= nil then
          _temp453 =  _temp453:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp453, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp453)
      if _n.var ~= nil then
        _temp453 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp453 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp453)
      if _f.var ~= nil then
        _temp453 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp453 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp453, "var"))
      end

      elseif _temp453 == nil then
        _error(exception:null_error("_temp453", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp453))
      end


_temp452 = string:new("_lifted_call(" .. _tostring(_temp453) .. ", {})")
end

return _temp452
end


local _temp458 = function (_self)

local _temp456 = nil
        local _t = _type(_temp374)
        if _t == "table" then
          if _rawget(_temp374, "__call_thing") == nil then
            _temp456 = _temp374
          else
                  if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp456 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp456 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp456 =  _temp374(_self)
      end

          end
        elseif _t == "number" then
          _temp456 = _temp374
        elseif _t == "function" then
                if _temp374 == nil then
              if _type(_self._temp374) == "function" or (_type(_self._temp374) == "table" and _rawget(_self._temp374, "__call_thing")) then
        _temp456 =  _self:_temp374()
      elseif _self._temp374 ~= nil then
        _temp456 =  _self._temp374

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp374"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp456 =  _temp374(_self)
      end

        elseif _temp374 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp456)
      if _t == "table" then
                      if _type(_temp456.var) == "function" or (_type(_temp456.var) == "table" and _rawget(_temp456.var, "__call_thing")) then
        return _temp456:var()
      elseif _temp456.var ~= nil then
        return _temp456.var

        elseif _temp456.no_undermethod ~= nil then
          return  _temp456:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp456, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp456)
      if _n.var ~= nil then
        return _n:var()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp456, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp456)
      if _f.var ~= nil then
        return _f:var()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp456, "var"))
      end

      elseif _temp456 == nil then
        _error(exception:null_error("_temp456", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp456))
      end

end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _temp451 =  true_question(_self, _temp413,_temp455,_temp458)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _temp451 =  _self:true_question(_temp413,_temp455,_temp458)
      elseif _self.true_question ~= nil then
        _temp451 =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp451 =  _self:no_undermethod(string:new("true?") , _temp413,_temp455,_temp458)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp451 =  no_undermethod(_self, string:new("true?") , _temp413,_temp455,_temp458)
      else
        _error(exception:name_error("true?"))
      end
    end

local _temp459
    if _type(_temp369) == "function" or (_type(_temp369) == "table" and _rawget(_temp369, "__call_thing")) then
      _temp458 =  _temp369(_self)

    elseif _temp369 then
      _temp458 =  _temp369
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp458 =  _self:var()
      elseif _self.var ~= nil then
        _temp458 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp458 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp458 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(_temp451) == "function" or (_type(_temp451) == "table" and _rawget(_temp451, "__call_thing")) then
      _temp455 =  _temp451(_self)

    elseif _temp451 then
      _temp455 =  _temp451
    else
            if _type(_self.lifted_undercall) == "function" or (_type(_self.lifted_undercall) == "table" and _rawget(_self.lifted_undercall, "__call_thing")) then
        _temp455 =  _self:lifted_undercall()
      elseif _self.lifted_undercall ~= nil then
        _temp455 =  _self.lifted_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp455 =  _self:no_undermethod(string:new("lifted_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp455 =  no_undermethod(_self, string:new("lifted_call"))
      else
        _error(exception:name_error("lifted_call"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp459 =  set_underresult(_self, _temp458,_temp455)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp459 =  _self:set_underresult(_temp458,_temp455)
      elseif _self.set_underresult ~= nil then
        _temp459 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp459 =  _self:no_undermethod(string:new("set_result") , _temp458,_temp455)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp459 =  no_undermethod(_self, string:new("set_result") , _temp458,_temp455)
      else
        _error(exception:name_error("set_result"))
      end
    end

        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp455 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp455 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp455 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp455 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp455 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp455 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp455 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp455 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp455)
      if _t == "table" then
                      if _type(_temp455.upvars) == "function" or (_type(_temp455.upvars) == "table" and _rawget(_temp455.upvars, "__call_thing")) then
        _temp455 = _temp455:upvars()
      elseif _temp455.upvars ~= nil then
        _temp455 = _temp455.upvars

        elseif _temp455.no_undermethod ~= nil then
          _temp455 =  _temp455:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp455, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp455)
      if _n.upvars ~= nil then
        _temp455 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp455 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp455, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp455)
      if _f.upvars ~= nil then
        _temp455 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp455 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp455, "upvars"))
      end

      elseif _temp455 == nil then
        _error(exception:null_error("_temp455", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp455))
      end



local _temp475 = function (_self)

local _temp460
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp460 =  _self:my()
      elseif _self.my ~= nil then
        _temp460 =  _self.my

        elseif my ~= nil then
          _temp460 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp460)
      if _t == "table" then
                      if _type(_temp460.env) == "function" or (_type(_temp460.env) == "table" and _rawget(_temp460.env, "__call_thing")) then
        _temp460 = _temp460:env()
      elseif _temp460.env ~= nil then
        _temp460 = _temp460.env

        elseif _temp460.no_undermethod ~= nil then
          _temp460 =  _temp460:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("e", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp460)
      if _n.env ~= nil then
        _temp460 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp460 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp460)
      if _f.env ~= nil then
        _temp460 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp460 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("e", "env"))
      end

      elseif _temp460 == nil then
        _error(exception:null_error("e", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp460))
      end


local _temp461 
do
local _temp462 = nil
        local _t = _type(_temp459)
        if _t == "table" then
          if _rawget(_temp459, "__call_thing") == nil then
            _temp462 = _temp459
          else
                  if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp462 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp462 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp462 =  _temp459(_self)
      end

          end
        elseif _t == "number" then
          _temp462 = _temp459
        elseif _t == "function" then
                if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp462 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp462 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp462 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp462 =  _temp459(_self)
      end

        elseif _temp459 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp463 = nil
      local _t = _type(_temp462)
      if _t == "table" then
                      if _type(_temp462.out) == "function" or (_type(_temp462.out) == "table" and _rawget(_temp462.out, "__call_thing")) then
        _temp463 = _temp462:out()
      elseif _temp462.out ~= nil then
        _temp463 = _temp462.out

        elseif _temp462.no_undermethod ~= nil then
          _temp463 =  _temp462:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp462, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp462)
      if _n.out ~= nil then
        _temp463 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp463 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp462, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp462)
      if _f.out ~= nil then
        _temp463 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp463 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp462, "out"))
      end

      elseif _temp462 == nil then
        _error(exception:null_error("_temp462", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp462))
      end

local _temp464 = nil
        local _t = _type(_temp370)
        if _t == "table" then
          if _rawget(_temp370, "__call_thing") == nil then
            _temp464 = _temp370
          else
                  if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp464 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp464 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp464 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp464 =  _temp370(_self)
      end

          end
        elseif _t == "number" then
          _temp464 = _temp370
        elseif _t == "function" then
                if _temp370 == nil then
              if _type(_self._temp370) == "function" or (_type(_self._temp370) == "table" and _rawget(_self._temp370, "__call_thing")) then
        _temp464 =  _self:_temp370()
      elseif _self._temp370 ~= nil then
        _temp464 =  _self._temp370

        elseif _self.no_undermethod ~= nil then
          _temp464 =  _self:no_undermethod(string:new("_temp370"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp464 =  _temp370(_self)
      end

        elseif _temp370 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp464)
      if _t == "table" then
                      if _type(_temp464.upvars) == "function" or (_type(_temp464.upvars) == "table" and _rawget(_temp464.upvars, "__call_thing")) then
        _temp464 = _temp464:upvars()
      elseif _temp464.upvars ~= nil then
        _temp464 = _temp464.upvars

        elseif _temp464.no_undermethod ~= nil then
          _temp464 =  _temp464:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp464, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp464)
      if _n.upvars ~= nil then
        _temp464 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp464 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp464, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp464)
      if _f.upvars ~= nil then
        _temp464 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp464 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp464, "upvars"))
      end

      elseif _temp464 == nil then
        _error(exception:null_error("_temp464", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp464))
      end


local _temp473 = function (_self, _temp465)
        if _temp465 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp466 = nil
do
local _temp467 = nil
        local _t = _type(_temp459)
        if _t == "table" then
          if _rawget(_temp459, "__call_thing") == nil then
            _temp467 = _temp459
          else
                  if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp467 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp467 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp467 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp467 =  _temp459(_self)
      end

          end
        elseif _t == "number" then
          _temp467 = _temp459
        elseif _t == "function" then
                if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp467 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp467 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp467 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp467 =  _temp459(_self)
      end

        elseif _temp459 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp467)
      if _t == "table" then
                      if _type(_temp467.var) == "function" or (_type(_temp467.var) == "table" and _rawget(_temp467.var, "__call_thing")) then
        _temp467 = _temp467:var()
      elseif _temp467.var ~= nil then
        _temp467 = _temp467.var

        elseif _temp467.no_undermethod ~= nil then
          _temp467 =  _temp467:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp467, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp467)
      if _n.var ~= nil then
        _temp467 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp467 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp467, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp467)
      if _f.var ~= nil then
        _temp467 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp467 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp467, "var"))
      end

      elseif _temp467 == nil then
        _error(exception:null_error("_temp467", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp467))
      end


local _temp468
do
        local _t = _type(_temp371)
        if _t == "table" then
          if _rawget(_temp371, "__call_thing") == nil then
            _temp468 = _temp371
          else
                  if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp468 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp468 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp468 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp468 =  _temp371(_self)
      end

          end
        elseif _t == "number" then
          _temp468 = _temp371
        elseif _t == "function" then
                if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp468 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp468 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp468 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp468 =  _temp371(_self)
      end

        elseif _temp371 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp468)
      if _t == "table" then
                      if _type(_temp468.env) == "function" or (_type(_temp468.env) == "table" and _rawget(_temp468.env, "__call_thing")) then
        _temp468 = _temp468:env()
      elseif _temp468.env ~= nil then
        _temp468 = _temp468.env

        elseif _temp468.no_undermethod ~= nil then
          _temp468 =  _temp468:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp468, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp468)
      if _n.env ~= nil then
        _temp468 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp468 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp468, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp468)
      if _f.env ~= nil then
        _temp468 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp468 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp468, "env"))
      end

      elseif _temp468 == nil then
        _error(exception:null_error("_temp468", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp468))
      end

local _temp469 = nil
    if _type(_temp465) == "function" or (_type(_temp465) == "table" and _rawget(_temp465, "__call_thing")) then
      _temp469 =  _temp465(_self)

    elseif _temp465 then
      _temp469 =  _temp465
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp469 =  _self:u()
      elseif _self.u ~= nil then
        _temp469 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp469 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp469 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp468 = _temp468:get(_temp469)
end

local _temp470
do
        local _t = _type(_temp371)
        if _t == "table" then
          if _rawget(_temp371, "__call_thing") == nil then
            _temp470 = _temp371
          else
                  if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp470 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp470 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp470 =  _temp371(_self)
      end

          end
        elseif _t == "number" then
          _temp470 = _temp371
        elseif _t == "function" then
                if _temp371 == nil then
              if _type(_self._temp371) == "function" or (_type(_self._temp371) == "table" and _rawget(_self._temp371, "__call_thing")) then
        _temp470 =  _self:_temp371()
      elseif _self._temp371 ~= nil then
        _temp470 =  _self._temp371

        elseif _self.no_undermethod ~= nil then
          _temp470 =  _self:no_undermethod(string:new("_temp371"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp470 =  _temp371(_self)
      end

        elseif _temp371 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp470)
      if _t == "table" then
                      if _type(_temp470.env) == "function" or (_type(_temp470.env) == "table" and _rawget(_temp470.env, "__call_thing")) then
        _temp470 = _temp470:env()
      elseif _temp470.env ~= nil then
        _temp470 = _temp470.env

        elseif _temp470.no_undermethod ~= nil then
          _temp470 =  _temp470:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp470, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp470)
      if _n.env ~= nil then
        _temp470 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp470 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp470, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp470)
      if _f.env ~= nil then
        _temp470 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp470 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp470, "env"))
      end

      elseif _temp470 == nil then
        _error(exception:null_error("_temp470", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp470))
      end

local _temp471 = nil
    if _type(_temp465) == "function" or (_type(_temp465) == "table" and _rawget(_temp465, "__call_thing")) then
      _temp471 =  _temp465(_self)

    elseif _temp465 then
      _temp471 =  _temp465
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp471 =  _self:u()
      elseif _self.u ~= nil then
        _temp471 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp471 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp471 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp470 = _temp470:get(_temp471)
end

_temp466 = string:new("" .. _tostring(_temp467) .. ".arg_table['" .. _tostring(_temp468) .. "'] = " .. _tostring(_temp470) .. "")
end

return _temp466
end

      local _t = _type(_temp464)
      if _t == "table" then
                      if _type(_temp464.map) == "function" or (_type(_temp464.map) == "table" and _rawget(_temp464.map, "__call_thing")) then
        _temp464 = _temp464:map(_temp473)
      elseif _temp464.map ~= nil then
        _temp464 = _temp464.map

        elseif _temp464.no_undermethod ~= nil then
          _temp464 =  _temp464:no_undermethod(string:new("map") , _temp473)
        else
          _error(exception:method_error(_temp464, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp464)
      if _n.map ~= nil then
        _temp464 = _n:map(_temp473)
      elseif _n.no_undermethod ~= nil then
        _temp464 =  _n:no_undermethod(string:new("map") , _temp473)
      else
        _error(exception:method_error(_temp464, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp464)
      if _f.map ~= nil then
        _temp464 = _f:map(_temp473)
      elseif _f.no_undermethod ~= nil then
        _temp464 =  _f:no_undermethod(string:new("map") , _temp473)
      else
        _error(exception:method_error(_temp464, "map"))
      end

      elseif _temp464 == nil then
        _error(exception:null_error("_temp464", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp464))
      end

_temp473 = string:new("\n")

      local _t = _type(_temp464)
      if _t == "table" then
                      if _type(_temp464.join) == "function" or (_type(_temp464.join) == "table" and _rawget(_temp464.join, "__call_thing")) then
        _temp464 = _temp464:join(_temp473)
      elseif _temp464.join ~= nil then
        _temp464 = _temp464.join

        elseif _temp464.no_undermethod ~= nil then
          _temp464 =  _temp464:no_undermethod(string:new("join") , _temp473)
        else
          _error(exception:method_error(_temp464, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp464)
      if _n.join ~= nil then
        _temp464 = _n:join(_temp473)
      elseif _n.no_undermethod ~= nil then
        _temp464 =  _n:no_undermethod(string:new("join") , _temp473)
      else
        _error(exception:method_error(_temp464, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp464)
      if _f.join ~= nil then
        _temp464 = _f:join(_temp473)
      elseif _f.no_undermethod ~= nil then
        _temp464 =  _f:no_undermethod(string:new("join") , _temp473)
      else
        _error(exception:method_error(_temp464, "join"))
      end

      elseif _temp464 == nil then
        _error(exception:null_error("_temp464", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp464))
      end

local _temp473
      local _t = _type(_temp463)
      if _t == "table" then
                      if _type(_temp463._less_less) == "function" or (_type(_temp463._less_less) == "table" and _rawget(_temp463._less_less, "__call_thing")) then
        _temp473 = _temp463:_less_less(_temp464)
      elseif _temp463._less_less ~= nil then
        _temp473 = _temp463._less_less

        elseif _temp463.no_undermethod ~= nil then
          _temp473 =  _temp463:no_undermethod(string:new("<<") , _temp464)
        else
          _error(exception:method_error(_temp463, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp463)
      if _n._less_less ~= nil then
        _temp473 = _n:_less_less(_temp464)
      elseif _n.no_undermethod ~= nil then
        _temp473 =  _n:no_undermethod(string:new("<<") , _temp464)
      else
        _error(exception:method_error(_temp463, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp463)
      if _f._less_less ~= nil then
        _temp473 = _f:_less_less(_temp464)
      elseif _f.no_undermethod ~= nil then
        _temp473 =  _f:no_undermethod(string:new("<<") , _temp464)
      else
        _error(exception:method_error(_temp463, "<<"))
      end

      elseif _temp463 == nil then
        _error(exception:null_error("_temp463", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp463))
      end

_temp461 = _temp473 
end

return _temp461
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp455,_temp475)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp455,_temp475)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp455,_temp475)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp455,_temp475)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp459) == "function" or (_type(_temp459) == "table" and _rawget(_temp459, "__call_thing")) then
      return  _temp459(_self)

    elseif _temp459 then
      return  _temp459
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp322)
      if _t == "table" then
                      if _type(_temp322.walk) == "function" or (_type(_temp322.walk) == "table" and _rawget(_temp322.walk, "__call_thing")) then
        _dummy_ = _temp322:walk(_temp4,_temp455)
      elseif _temp322.walk ~= nil then
        _dummy_ = _temp322.walk

        elseif _temp322.no_undermethod ~= nil then
          _dummy_ =  _temp322:no_undermethod(string:new("walk") , _temp4,_temp455)
        else
          _error(exception:method_error(_temp322, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp322)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp455)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp455)
      else
        _error(exception:method_error(_temp322, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp322)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp455)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp455)
      else
        _error(exception:method_error(_temp322, "walk"))
      end

      elseif _temp322 == nil then
        _error(exception:null_error("_temp322", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp322))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp455 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp455 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp455 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp455 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp455 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp455 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp455 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp455 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp483 = function (_self, _temp477,_temp476)
        if _temp477 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp476 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp476 =  null(_self)

    elseif null then
      _temp476 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp476 =  _self:null()
      elseif _self.null ~= nil then
        _temp476 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp476 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp476 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp478
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp478 =  _self:my()
      elseif _self.my ~= nil then
        _temp478 =  _self.my

        elseif my ~= nil then
          _temp478 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp478)
      if _t == "table" then
                      if _type(_temp478.env) == "function" or (_type(_temp478.env) == "table" and _rawget(_temp478.env, "__call_thing")) then
        _temp478 = _temp478:env()
      elseif _temp478.env ~= nil then
        _temp478 = _temp478.env

        elseif _temp478.no_undermethod ~= nil then
          _temp478 =  _temp478:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp478)
      if _n.env ~= nil then
        _temp478 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp478 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp478)
      if _f.env ~= nil then
        _temp478 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp478 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp478 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp478))
      end

local _temp479 = nil
        local _t = _type(_temp477)
        if _t == "table" then
          if _rawget(_temp477, "__call_thing") == nil then
            _temp479 = _temp477
          else
                  if _temp477 == nil then
              if _type(_self._temp477) == "function" or (_type(_self._temp477) == "table" and _rawget(_self._temp477, "__call_thing")) then
        _temp479 =  _self:_temp477()
      elseif _self._temp477 ~= nil then
        _temp479 =  _self._temp477

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp477"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp479 =  _temp477(_self)
      end

          end
        elseif _t == "number" then
          _temp479 = _temp477
        elseif _t == "function" then
                if _temp477 == nil then
              if _type(_self._temp477) == "function" or (_type(_self._temp477) == "table" and _rawget(_self._temp477, "__call_thing")) then
        _temp479 =  _self:_temp477()
      elseif _self._temp477 ~= nil then
        _temp479 =  _self._temp477

        elseif _self.no_undermethod ~= nil then
          _temp479 =  _self:no_undermethod(string:new("_temp477"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp479 =  _temp477(_self)
      end

        elseif _temp477 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp479)
      if _t == "table" then
                      if _type(_temp479.id) == "function" or (_type(_temp479.id) == "table" and _rawget(_temp479.id, "__call_thing")) then
        _temp479 = _temp479:id()
      elseif _temp479.id ~= nil then
        _temp479 = _temp479.id

        elseif _temp479.no_undermethod ~= nil then
          _temp479 =  _temp479:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp479, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp479)
      if _n.id ~= nil then
        _temp479 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp479 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp479, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp479)
      if _f.id ~= nil then
        _temp479 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp479 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp479, "id"))
      end

      elseif _temp479 == nil then
        _error(exception:null_error("_temp479", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp479))
      end


      local _t = _type(_temp478)
      if _t == "table" then
                      if _type(_temp478.new_undervar) == "function" or (_type(_temp478.new_undervar) == "table" and _rawget(_temp478.new_undervar, "__call_thing")) then
        _temp478 = _temp478:new_undervar(_temp479)
      elseif _temp478.new_undervar ~= nil then
        _temp478 = _temp478.new_undervar

        elseif _temp478.no_undermethod ~= nil then
          _temp478 =  _temp478:no_undermethod(string:new("new_var") , _temp479)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp478)
      if _n.new_undervar ~= nil then
        _temp478 = _n:new_undervar(_temp479)
      elseif _n.no_undermethod ~= nil then
        _temp478 =  _n:no_undermethod(string:new("new_var") , _temp479)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp478)
      if _f.new_undervar ~= nil then
        _temp478 = _f:new_undervar(_temp479)
      elseif _f.no_undermethod ~= nil then
        _temp478 =  _f:no_undermethod(string:new("new_var") , _temp479)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp478 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp478))
      end


    if _type(_temp478) == "function" or (_type(_temp478) == "table" and _rawget(_temp478, "__call_thing")) then
      _temp479 =  _temp478(_self)

    elseif _temp478 then
      _temp479 =  _temp478
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp479 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp479 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp479 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp479 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp480 = string:new("")

local _temp481 = string:new("arg")

local _temp482 = {}
_temp482[string:new("arg_type")] = _temp481
_temp482 = hash:new(_temp482)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp479,_temp480,_temp482)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp479,_temp480,_temp482)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp479,_temp480,_temp482)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp479,_temp480,_temp482)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp455)
      if _t == "table" then
                      if _type(_temp455.walk) == "function" or (_type(_temp455.walk) == "table" and _rawget(_temp455.walk, "__call_thing")) then
        _dummy_ = _temp455:walk(_temp4,_temp483)
      elseif _temp455.walk ~= nil then
        _dummy_ = _temp455.walk

        elseif _temp455.no_undermethod ~= nil then
          _dummy_ =  _temp455:no_undermethod(string:new("walk") , _temp4,_temp483)
        else
          _error(exception:method_error(_temp455, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp455)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp483)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp483)
      else
        _error(exception:method_error(_temp455, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp455)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp483)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp483)
      else
        _error(exception:method_error(_temp455, "walk"))
      end

      elseif _temp455 == nil then
        _error(exception:null_error("_temp455", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp455))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp483 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp483 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp483 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp483 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp483 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp483 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp483 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp483 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp483 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp492 = function (_self, _temp485,_temp484)
        if _temp485 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp484 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp484 =  null(_self)

    elseif null then
      _temp484 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp484 =  _self:null()
      elseif _self.null ~= nil then
        _temp484 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp484 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp484 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp486
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp486 =  _self:my()
      elseif _self.my ~= nil then
        _temp486 =  _self.my

        elseif my ~= nil then
          _temp486 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp486)
      if _t == "table" then
                      if _type(_temp486.env) == "function" or (_type(_temp486.env) == "table" and _rawget(_temp486.env, "__call_thing")) then
        _temp486 = _temp486:env()
      elseif _temp486.env ~= nil then
        _temp486 = _temp486.env

        elseif _temp486.no_undermethod ~= nil then
          _temp486 =  _temp486:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp486)
      if _n.env ~= nil then
        _temp486 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp486 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp486)
      if _f.env ~= nil then
        _temp486 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp486 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp486 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp486))
      end

local _temp487 = nil
        local _t = _type(_temp485)
        if _t == "table" then
          if _rawget(_temp485, "__call_thing") == nil then
            _temp487 = _temp485
          else
                  if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp487 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp487 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp485(_self)
      end

          end
        elseif _t == "number" then
          _temp487 = _temp485
        elseif _t == "function" then
                if _temp485 == nil then
              if _type(_self._temp485) == "function" or (_type(_self._temp485) == "table" and _rawget(_self._temp485, "__call_thing")) then
        _temp487 =  _self:_temp485()
      elseif _self._temp485 ~= nil then
        _temp487 =  _self._temp485

        elseif _self.no_undermethod ~= nil then
          _temp487 =  _self:no_undermethod(string:new("_temp485"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp487 =  _temp485(_self)
      end

        elseif _temp485 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487.id) == "function" or (_type(_temp487.id) == "table" and _rawget(_temp487.id, "__call_thing")) then
        _temp487 = _temp487:id()
      elseif _temp487.id ~= nil then
        _temp487 = _temp487.id

        elseif _temp487.no_undermethod ~= nil then
          _temp487 =  _temp487:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp487, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n.id ~= nil then
        _temp487 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp487, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f.id ~= nil then
        _temp487 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp487, "id"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end


      local _t = _type(_temp486)
      if _t == "table" then
                      if _type(_temp486.new_undervar) == "function" or (_type(_temp486.new_undervar) == "table" and _rawget(_temp486.new_undervar, "__call_thing")) then
        _temp486 = _temp486:new_undervar(_temp487)
      elseif _temp486.new_undervar ~= nil then
        _temp486 = _temp486.new_undervar

        elseif _temp486.no_undermethod ~= nil then
          _temp486 =  _temp486:no_undermethod(string:new("new_var") , _temp487)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp486)
      if _n.new_undervar ~= nil then
        _temp486 = _n:new_undervar(_temp487)
      elseif _n.no_undermethod ~= nil then
        _temp486 =  _n:no_undermethod(string:new("new_var") , _temp487)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp486)
      if _f.new_undervar ~= nil then
        _temp486 = _f:new_undervar(_temp487)
      elseif _f.no_undermethod ~= nil then
        _temp486 =  _f:no_undermethod(string:new("new_var") , _temp487)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp486 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp486))
      end


_temp487 = string:new("...")

local _temp488 = nil
do
local _temp489 = nil
    if _type(_temp486) == "function" or (_type(_temp486) == "table" and _rawget(_temp486, "__call_thing")) then
      _temp489 =  _temp486(_self)

    elseif _temp486 then
      _temp489 =  _temp486
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp489 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp489 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp489 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp489 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp488 = string:new("local " .. _tostring(_temp489) .. " = array:new(...)\n")
end

local _temp490 = string:new("var_arg")

local _temp491 = {}
_temp491[string:new("arg_type")] = _temp490
_temp491 = hash:new(_temp491)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp487,_temp488,_temp491)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp487,_temp488,_temp491)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp487,_temp488,_temp491)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp487,_temp488,_temp491)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp483)
      if _t == "table" then
                      if _type(_temp483.walk) == "function" or (_type(_temp483.walk) == "table" and _rawget(_temp483.walk, "__call_thing")) then
        _dummy_ = _temp483:walk(_temp4,_temp492)
      elseif _temp483.walk ~= nil then
        _dummy_ = _temp483.walk

        elseif _temp483.no_undermethod ~= nil then
          _dummy_ =  _temp483:no_undermethod(string:new("walk") , _temp4,_temp492)
        else
          _error(exception:method_error(_temp483, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp483)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp492)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp492)
      else
        _error(exception:method_error(_temp483, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp483)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp492)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp492)
      else
        _error(exception:method_error(_temp483, "walk"))
      end

      elseif _temp483 == nil then
        _error(exception:null_error("_temp483", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp483))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp492 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp492 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp492 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp492 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp492 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp492 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp492 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp492 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp492 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp492 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp518 = function (_self, _temp494,_temp493)
        if _temp494 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp493 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp493 =  null(_self)

    elseif null then
      _temp493 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp493 =  _self:null()
      elseif _self.null ~= nil then
        _temp493 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp493 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp493 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp495
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp495 =  _self:my()
      elseif _self.my ~= nil then
        _temp495 =  _self.my

        elseif my ~= nil then
          _temp495 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.env) == "function" or (_type(_temp495.env) == "table" and _rawget(_temp495.env, "__call_thing")) then
        _temp495 = _temp495:env()
      elseif _temp495.env ~= nil then
        _temp495 = _temp495.env

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.env ~= nil then
        _temp495 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.env ~= nil then
        _temp495 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end

local _temp496 = nil
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp496 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp496 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp496 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp496 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp496 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp496 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp496)
      if _t == "table" then
                      if _type(_temp496.id) == "function" or (_type(_temp496.id) == "table" and _rawget(_temp496.id, "__call_thing")) then
        _temp496 = _temp496:id()
      elseif _temp496.id ~= nil then
        _temp496 = _temp496.id

        elseif _temp496.no_undermethod ~= nil then
          _temp496 =  _temp496:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp496, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp496)
      if _n.id ~= nil then
        _temp496 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp496 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp496, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp496)
      if _f.id ~= nil then
        _temp496 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp496 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp496, "id"))
      end

      elseif _temp496 == nil then
        _error(exception:null_error("_temp496", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp496))
      end


      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.new_undervar) == "function" or (_type(_temp495.new_undervar) == "table" and _rawget(_temp495.new_undervar, "__call_thing")) then
        _temp495 = _temp495:new_undervar(_temp496)
      elseif _temp495.new_undervar ~= nil then
        _temp495 = _temp495.new_undervar

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("new_var") , _temp496)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.new_undervar ~= nil then
        _temp495 = _n:new_undervar(_temp496)
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("new_var") , _temp496)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.new_undervar ~= nil then
        _temp495 = _f:new_undervar(_temp496)
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("new_var") , _temp496)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end


local _temp497
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp496 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp496 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp496 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp496 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp496 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp496 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp496 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp496 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp496)
      if _t == "table" then
                      if _type(_temp496.value) == "function" or (_type(_temp496.value) == "table" and _rawget(_temp496.value, "__call_thing")) then
        _temp496 = _temp496:value()
      elseif _temp496.value ~= nil then
        _temp496 = _temp496.value

        elseif _temp496.no_undermethod ~= nil then
          _temp496 =  _temp496:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp496, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp496)
      if _n.value ~= nil then
        _temp496 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp496 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp496, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp496)
      if _f.value ~= nil then
        _temp496 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp496 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp496, "value"))
      end

      elseif _temp496 == nil then
        _error(exception:null_error("_temp496", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp496))
      end


local _temp498 = nil
    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp498 =  _temp495(_self)

    elseif _temp495 then
      _temp498 =  _temp495
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp498 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp498 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp498 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp498 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp497 =  process(_self, _temp496,_temp498)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp497 =  _self:process(_temp496,_temp498)
      elseif _self.process ~= nil then
        _temp497 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp497 =  _self:no_undermethod(string:new("process") , _temp496,_temp498)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp497 =  no_undermethod(_self, string:new("process") , _temp496,_temp498)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp499
do
local _temp500 = nil
    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp500 =  _temp495(_self)

    elseif _temp495 then
      _temp500 =  _temp495
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp500 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp500 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp500 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp500 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp501 = nil
        local _t = _type(_temp497)
        if _t == "table" then
          if _rawget(_temp497, "__call_thing") == nil then
            _temp501 = _temp497
          else
                  if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp501 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp501 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp501 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp501 =  _temp497(_self)
      end

          end
        elseif _t == "number" then
          _temp501 = _temp497
        elseif _t == "function" then
                if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp501 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp501 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp501 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp501 =  _temp497(_self)
      end

        elseif _temp497 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp501)
      if _t == "table" then
                      if _type(_temp501.out) == "function" or (_type(_temp501.out) == "table" and _rawget(_temp501.out, "__call_thing")) then
        _temp501 = _temp501:out()
      elseif _temp501.out ~= nil then
        _temp501 = _temp501.out

        elseif _temp501.no_undermethod ~= nil then
          _temp501 =  _temp501:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp501, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp501)
      if _n.out ~= nil then
        _temp501 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp501 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp501, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp501)
      if _f.out ~= nil then
        _temp501 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp501 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp501, "out"))
      end

      elseif _temp501 == nil then
        _error(exception:null_error("_temp501", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp501))
      end


_temp499 = string:new("\n    if " .. _tostring(_temp500) .. " == nil then\n      " .. _tostring(_temp501) .. "\n  ")
end

local _temp498 
do
local _temp502 = nil
        local _t = _type(_temp497)
        if _t == "table" then
          if _rawget(_temp497, "__call_thing") == nil then
            _temp502 = _temp497
          else
                  if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp502 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp502 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp502 =  _temp497(_self)
      end

          end
        elseif _t == "number" then
          _temp502 = _temp497
        elseif _t == "function" then
                if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp502 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp502 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp502 =  _temp497(_self)
      end

        elseif _temp497 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp503 = nil
      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502.var) == "function" or (_type(_temp502.var) == "table" and _rawget(_temp502.var, "__call_thing")) then
        _temp503 = _temp502:var()
      elseif _temp502.var ~= nil then
        _temp503 = _temp502.var

        elseif _temp502.no_undermethod ~= nil then
          _temp503 =  _temp502:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp502, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n.var ~= nil then
        _temp503 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp503 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp502, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f.var ~= nil then
        _temp503 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp503 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp502, "var"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("_temp502", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end

local _temp504 = nil
    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp504 =  _temp495(_self)

    elseif _temp495 then
      _temp504 =  _temp495
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp504 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp504 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp504 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp504 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp505
      local _t = _type(_temp503)
      if _t == "table" then
                      if _type(_temp503._equal_equal) == "function" or (_type(_temp503._equal_equal) == "table" and _rawget(_temp503._equal_equal, "__call_thing")) then
        _temp505 = _temp503:_equal_equal(_temp504)
      elseif _temp503._equal_equal ~= nil then
        _temp505 = _temp503._equal_equal

        elseif _temp503.no_undermethod ~= nil then
          _temp505 =  _temp503:no_undermethod(string:new("==") , _temp504)
        else
          _error(exception:method_error(_temp503, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp504) == 'number' then
              if _temp503 == _temp504 then
        _temp505 = object.__true
      else
        _temp505 = object.__false
      end

      else
              local _n = number:new(_temp503)
      if _n._equal_equal ~= nil then
        _temp505 = _n:_equal_equal(_temp504)
      elseif _n.no_undermethod ~= nil then
        _temp505 =  _n:no_undermethod(string:new("==") , _temp504)
      else
        _error(exception:method_error(_temp503, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp503)
      if _f._equal_equal ~= nil then
        _temp505 = _f:_equal_equal(_temp504)
      elseif _f.no_undermethod ~= nil then
        _temp505 =  _f:no_undermethod(string:new("==") , _temp504)
      else
        _error(exception:method_error(_temp503, "=="))
      end

      elseif _temp503 == nil then
        _error(exception:null_error("_temp503", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp503))
      end

_temp498 = _temp505 
end


local _temp513 = function (_self)

local _temp506 
do
local _temp507 = nil
_temp507 =  _temp499

local _temp508 = nil
do
local _temp509 = nil
    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp509 =  _temp495(_self)

    elseif _temp495 then
      _temp509 =  _temp495
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp509 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp509 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp509 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp509 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp510 = nil
        local _t = _type(_temp497)
        if _t == "table" then
          if _rawget(_temp497, "__call_thing") == nil then
            _temp510 = _temp497
          else
                  if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp510 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp510 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp510 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp510 =  _temp497(_self)
      end

          end
        elseif _t == "number" then
          _temp510 = _temp497
        elseif _t == "function" then
                if _temp497 == nil then
              if _type(_self._temp497) == "function" or (_type(_self._temp497) == "table" and _rawget(_self._temp497, "__call_thing")) then
        _temp510 =  _self:_temp497()
      elseif _self._temp497 ~= nil then
        _temp510 =  _self._temp497

        elseif _self.no_undermethod ~= nil then
          _temp510 =  _self:no_undermethod(string:new("_temp497"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp510 =  _temp497(_self)
      end

        elseif _temp497 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp510)
      if _t == "table" then
                      if _type(_temp510.var) == "function" or (_type(_temp510.var) == "table" and _rawget(_temp510.var, "__call_thing")) then
        _temp510 = _temp510:var()
      elseif _temp510.var ~= nil then
        _temp510 = _temp510.var

        elseif _temp510.no_undermethod ~= nil then
          _temp510 =  _temp510:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp510, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp510)
      if _n.var ~= nil then
        _temp510 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp510 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp510, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp510)
      if _f.var ~= nil then
        _temp510 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp510 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp510, "var"))
      end

      elseif _temp510 == nil then
        _error(exception:null_error("_temp510", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp510))
      end


_temp508 = string:new("" .. _tostring(_temp509) .. " = " .. _tostring(_temp510) .. "\n")
end
local _temp511
              if _type(_temp507._less_less) == "function" or (_type(_temp507._less_less) == "table" and _rawget(_temp507._less_less, "__call_thing")) then
        _temp511 = _temp507:_less_less(_temp508)
      elseif _temp507._less_less ~= nil then
        _temp511 = _temp507._less_less

        elseif _temp507.no_undermethod ~= nil then
          _temp511 =  _temp507:no_undermethod(string:new("<<") , _temp508)
        else
          _error(exception:method_error(_temp507, "<<"))
        end

_temp506 = _temp511 
end

return _temp506
end

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp498,_temp513)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp498,_temp513)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp498,_temp513)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp498,_temp513)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp514 = nil
_temp514 =  _temp499

local _temp515 = string:new("end\n")
local _temp516
              if _type(_temp514._less_less) == "function" or (_type(_temp514._less_less) == "table" and _rawget(_temp514._less_less, "__call_thing")) then
        _temp516 = _temp514:_less_less(_temp515)
      elseif _temp514._less_less ~= nil then
        _temp516 = _temp514._less_less

        elseif _temp514.no_undermethod ~= nil then
          _temp516 =  _temp514:no_undermethod(string:new("<<") , _temp515)
        else
          _error(exception:method_error(_temp514, "<<"))
        end

_dummy_ = _temp516 
end

    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp513 =  _temp495(_self)

    elseif _temp495 then
      _temp513 =  _temp495
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp513 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp513 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp513 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp513 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp498 =  _temp499

_temp496 = string:new("def_arg")

local _temp517 = {}
_temp517[string:new("arg_type")] = _temp496
_temp517 = hash:new(_temp517)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp513,_temp498,_temp517)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp513,_temp498,_temp517)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp513,_temp498,_temp517)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp513,_temp498,_temp517)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp492)
      if _t == "table" then
                      if _type(_temp492.walk) == "function" or (_type(_temp492.walk) == "table" and _rawget(_temp492.walk, "__call_thing")) then
        _dummy_ = _temp492:walk(_temp4,_temp518)
      elseif _temp492.walk ~= nil then
        _dummy_ = _temp492.walk

        elseif _temp492.no_undermethod ~= nil then
          _dummy_ =  _temp492:no_undermethod(string:new("walk") , _temp4,_temp518)
        else
          _error(exception:method_error(_temp492, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp492)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp518)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp518)
      else
        _error(exception:method_error(_temp492, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp492)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp518)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp518)
      else
        _error(exception:method_error(_temp492, "walk"))
      end

      elseif _temp492 == nil then
        _error(exception:null_error("_temp492", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp492))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp518 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp518 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp518 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp518 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp518 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp518 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp518 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp518 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp518 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp528 = function (_self, _temp520,_temp519)
        if _temp520 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp519 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp519 =  null(_self)

    elseif null then
      _temp519 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp519 =  _self:null()
      elseif _self.null ~= nil then
        _temp519 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp519 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp519 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp521
local _temp522 = nil
    if _type(_temp519) == "function" or (_type(_temp519) == "table" and _rawget(_temp519, "__call_thing")) then
      _temp522 =  _temp519(_self)

    elseif _temp519 then
      _temp522 =  _temp519
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp522 =  _self:var()
      elseif _self.var ~= nil then
        _temp522 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp522 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp522 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp521 =  set_underresult(_self, _temp522)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp521 =  _self:set_underresult(_temp522)
      elseif _self.set_underresult ~= nil then
        _temp521 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp521 =  _self:no_undermethod(string:new("set_result") , _temp522)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp521 =  no_undermethod(_self, string:new("set_result") , _temp522)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp523 = nil
        local _t = _type(_temp521)
        if _t == "table" then
          if _rawget(_temp521, "__call_thing") == nil then
            _temp523 = _temp521
          else
                  if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp523 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp523 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp521(_self)
      end

          end
        elseif _t == "number" then
          _temp523 = _temp521
        elseif _t == "function" then
                if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp523 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp523 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp523 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp523 =  _temp521(_self)
      end

        elseif _temp521 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp524 = nil
      local _t = _type(_temp523)
      if _t == "table" then
                      if _type(_temp523.out) == "function" or (_type(_temp523.out) == "table" and _rawget(_temp523.out, "__call_thing")) then
        _temp524 = _temp523:out()
      elseif _temp523.out ~= nil then
        _temp524 = _temp523.out

        elseif _temp523.no_undermethod ~= nil then
          _temp524 =  _temp523:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp523, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp523)
      if _n.out ~= nil then
        _temp524 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp524 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp523, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp523)
      if _f.out ~= nil then
        _temp524 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp524 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp523, "out"))
      end

      elseif _temp523 == nil then
        _error(exception:null_error("_temp523", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp523))
      end

local _temp525 = nil
local _temp526 = nil
        local _t = _type(_temp520)
        if _t == "table" then
          if _rawget(_temp520, "__call_thing") == nil then
            _temp526 = _temp520
          else
                  if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp526 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp526 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp526 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp526 =  _temp520(_self)
      end

          end
        elseif _t == "number" then
          _temp526 = _temp520
        elseif _t == "function" then
                if _temp520 == nil then
              if _type(_self._temp520) == "function" or (_type(_self._temp520) == "table" and _rawget(_self._temp520, "__call_thing")) then
        _temp526 =  _self:_temp520()
      elseif _self._temp520 ~= nil then
        _temp526 =  _self._temp520

        elseif _self.no_undermethod ~= nil then
          _temp526 =  _self:no_undermethod(string:new("_temp520"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp526 =  _temp520(_self)
      end

        elseif _temp520 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp526)
      if _t == "table" then
                      if _type(_temp526.method) == "function" or (_type(_temp526.method) == "table" and _rawget(_temp526.method, "__call_thing")) then
        _temp526 = _temp526:method()
      elseif _temp526.method ~= nil then
        _temp526 = _temp526.method

        elseif _temp526.no_undermethod ~= nil then
          _temp526 =  _temp526:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp526, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp526)
      if _n.method ~= nil then
        _temp526 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp526 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp526, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp526)
      if _f.method ~= nil then
        _temp526 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp526 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp526, "method"))
      end

      elseif _temp526 == nil then
        _error(exception:null_error("_temp526", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp526))
      end


local _temp527 = nil
        local _t = _type(_temp521)
        if _t == "table" then
          if _rawget(_temp521, "__call_thing") == nil then
            _temp527 = _temp521
          else
                  if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp527 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp527 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp527 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp527 =  _temp521(_self)
      end

          end
        elseif _t == "number" then
          _temp527 = _temp521
        elseif _t == "function" then
                if _temp521 == nil then
              if _type(_self._temp521) == "function" or (_type(_self._temp521) == "table" and _rawget(_self._temp521, "__call_thing")) then
        _temp527 =  _self:_temp521()
      elseif _self._temp521 ~= nil then
        _temp527 =  _self._temp521

        elseif _self.no_undermethod ~= nil then
          _temp527 =  _self:no_undermethod(string:new("_temp521"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp527 =  _temp521(_self)
      end

        elseif _temp521 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp527)
      if _t == "table" then
                      if _type(_temp527.var) == "function" or (_type(_temp527.var) == "table" and _rawget(_temp527.var, "__call_thing")) then
        _temp527 = _temp527:var()
      elseif _temp527.var ~= nil then
        _temp527 = _temp527.var

        elseif _temp527.no_undermethod ~= nil then
          _temp527 =  _temp527:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp527, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp527)
      if _n.var ~= nil then
        _temp527 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp527, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp527)
      if _f.var ~= nil then
        _temp527 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp527, "var"))
      end

      elseif _temp527 == nil then
        _error(exception:null_error("_temp527", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp527))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp525 =  get_undermethod_underlocal(_self, _temp526,_temp527)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp525 =  _self:get_undermethod_underlocal(_temp526,_temp527)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp525 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp525 =  _self:no_undermethod(string:new("get_method_local") , _temp526,_temp527)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp525 =  no_undermethod(_self, string:new("get_method_local") , _temp526,_temp527)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp527
      local _t = _type(_temp524)
      if _t == "table" then
                      if _type(_temp524._less_less) == "function" or (_type(_temp524._less_less) == "table" and _rawget(_temp524._less_less, "__call_thing")) then
        _temp527 = _temp524:_less_less(_temp525)
      elseif _temp524._less_less ~= nil then
        _temp527 = _temp524._less_less

        elseif _temp524.no_undermethod ~= nil then
          _temp527 =  _temp524:no_undermethod(string:new("<<") , _temp525)
        else
          _error(exception:method_error(_temp524, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp524)
      if _n._less_less ~= nil then
        _temp527 = _n:_less_less(_temp525)
      elseif _n.no_undermethod ~= nil then
        _temp527 =  _n:no_undermethod(string:new("<<") , _temp525)
      else
        _error(exception:method_error(_temp524, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp524)
      if _f._less_less ~= nil then
        _temp527 = _f:_less_less(_temp525)
      elseif _f.no_undermethod ~= nil then
        _temp527 =  _f:no_undermethod(string:new("<<") , _temp525)
      else
        _error(exception:method_error(_temp524, "<<"))
      end

      elseif _temp524 == nil then
        _error(exception:null_error("_temp524", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp524))
      end

_dummy_ = _temp527 
end

    if _type(_temp521) == "function" or (_type(_temp521) == "table" and _rawget(_temp521, "__call_thing")) then
      return  _temp521(_self)

    elseif _temp521 then
      return  _temp521
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518.walk) == "function" or (_type(_temp518.walk) == "table" and _rawget(_temp518.walk, "__call_thing")) then
        _dummy_ = _temp518:walk(_temp4,_temp528)
      elseif _temp518.walk ~= nil then
        _dummy_ = _temp518.walk

        elseif _temp518.no_undermethod ~= nil then
          _dummy_ =  _temp518:no_undermethod(string:new("walk") , _temp4,_temp528)
        else
          _error(exception:method_error(_temp518, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp518)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp528)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp528)
      else
        _error(exception:method_error(_temp518, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp528)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp528)
      else
        _error(exception:method_error(_temp518, "walk"))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("_temp518", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp528 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp528 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp528 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp528 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp528 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp528 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp528 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp528 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp528 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp528 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp538 = function (_self, _temp530,_temp529)
        if _temp530 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp529 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp529 =  null(_self)

    elseif null then
      _temp529 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp529 =  _self:null()
      elseif _self.null ~= nil then
        _temp529 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp529 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp529 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp531
local _temp532 = nil
    if _type(_temp529) == "function" or (_type(_temp529) == "table" and _rawget(_temp529, "__call_thing")) then
      _temp532 =  _temp529(_self)

    elseif _temp529 then
      _temp532 =  _temp529
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp532 =  _self:var()
      elseif _self.var ~= nil then
        _temp532 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp532 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp532 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp531 =  set_underresult(_self, _temp532)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp531 =  _self:set_underresult(_temp532)
      elseif _self.set_underresult ~= nil then
        _temp531 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp531 =  _self:no_undermethod(string:new("set_result") , _temp532)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp531 =  no_undermethod(_self, string:new("set_result") , _temp532)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp533 = nil
        local _t = _type(_temp531)
        if _t == "table" then
          if _rawget(_temp531, "__call_thing") == nil then
            _temp533 = _temp531
          else
                  if _temp531 == nil then
              if _type(_self._temp531) == "function" or (_type(_self._temp531) == "table" and _rawget(_self._temp531, "__call_thing")) then
        _temp533 =  _self:_temp531()
      elseif _self._temp531 ~= nil then
        _temp533 =  _self._temp531

        elseif _self.no_undermethod ~= nil then
          _temp533 =  _self:no_undermethod(string:new("_temp531"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp533 =  _temp531(_self)
      end

          end
        elseif _t == "number" then
          _temp533 = _temp531
        elseif _t == "function" then
                if _temp531 == nil then
              if _type(_self._temp531) == "function" or (_type(_self._temp531) == "table" and _rawget(_self._temp531, "__call_thing")) then
        _temp533 =  _self:_temp531()
      elseif _self._temp531 ~= nil then
        _temp533 =  _self._temp531

        elseif _self.no_undermethod ~= nil then
          _temp533 =  _self:no_undermethod(string:new("_temp531"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp533 =  _temp531(_self)
      end

        elseif _temp531 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp534 = nil
      local _t = _type(_temp533)
      if _t == "table" then
                      if _type(_temp533.out) == "function" or (_type(_temp533.out) == "table" and _rawget(_temp533.out, "__call_thing")) then
        _temp534 = _temp533:out()
      elseif _temp533.out ~= nil then
        _temp534 = _temp533.out

        elseif _temp533.no_undermethod ~= nil then
          _temp534 =  _temp533:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp533, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp533)
      if _n.out ~= nil then
        _temp534 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp534 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp533, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp533)
      if _f.out ~= nil then
        _temp534 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp534 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp533, "out"))
      end

      elseif _temp533 == nil then
        _error(exception:null_error("_temp533", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp533))
      end

local _temp535 = nil
local _temp536 = nil
        local _t = _type(_temp530)
        if _t == "table" then
          if _rawget(_temp530, "__call_thing") == nil then
            _temp536 = _temp530
          else
                  if _temp530 == nil then
              if _type(_self._temp530) == "function" or (_type(_self._temp530) == "table" and _rawget(_self._temp530, "__call_thing")) then
        _temp536 =  _self:_temp530()
      elseif _self._temp530 ~= nil then
        _temp536 =  _self._temp530

        elseif _self.no_undermethod ~= nil then
          _temp536 =  _self:no_undermethod(string:new("_temp530"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp536 =  _temp530(_self)
      end

          end
        elseif _t == "number" then
          _temp536 = _temp530
        elseif _t == "function" then
                if _temp530 == nil then
              if _type(_self._temp530) == "function" or (_type(_self._temp530) == "table" and _rawget(_self._temp530, "__call_thing")) then
        _temp536 =  _self:_temp530()
      elseif _self._temp530 ~= nil then
        _temp536 =  _self._temp530

        elseif _self.no_undermethod ~= nil then
          _temp536 =  _self:no_undermethod(string:new("_temp530"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp536 =  _temp530(_self)
      end

        elseif _temp530 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp536)
      if _t == "table" then
                      if _type(_temp536.method) == "function" or (_type(_temp536.method) == "table" and _rawget(_temp536.method, "__call_thing")) then
        _temp536 = _temp536:method()
      elseif _temp536.method ~= nil then
        _temp536 = _temp536.method

        elseif _temp536.no_undermethod ~= nil then
          _temp536 =  _temp536:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp536, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp536)
      if _n.method ~= nil then
        _temp536 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp536 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp536, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp536)
      if _f.method ~= nil then
        _temp536 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp536 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp536, "method"))
      end

      elseif _temp536 == nil then
        _error(exception:null_error("_temp536", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp536))
      end


local _temp537 = nil
        local _t = _type(_temp531)
        if _t == "table" then
          if _rawget(_temp531, "__call_thing") == nil then
            _temp537 = _temp531
          else
                  if _temp531 == nil then
              if _type(_self._temp531) == "function" or (_type(_self._temp531) == "table" and _rawget(_self._temp531, "__call_thing")) then
        _temp537 =  _self:_temp531()
      elseif _self._temp531 ~= nil then
        _temp537 =  _self._temp531

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp531"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp537 =  _temp531(_self)
      end

          end
        elseif _t == "number" then
          _temp537 = _temp531
        elseif _t == "function" then
                if _temp531 == nil then
              if _type(_self._temp531) == "function" or (_type(_self._temp531) == "table" and _rawget(_self._temp531, "__call_thing")) then
        _temp537 =  _self:_temp531()
      elseif _self._temp531 ~= nil then
        _temp537 =  _self._temp531

        elseif _self.no_undermethod ~= nil then
          _temp537 =  _self:no_undermethod(string:new("_temp531"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp537 =  _temp531(_self)
      end

        elseif _temp531 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp537)
      if _t == "table" then
                      if _type(_temp537.var) == "function" or (_type(_temp537.var) == "table" and _rawget(_temp537.var, "__call_thing")) then
        _temp537 = _temp537:var()
      elseif _temp537.var ~= nil then
        _temp537 = _temp537.var

        elseif _temp537.no_undermethod ~= nil then
          _temp537 =  _temp537:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp537, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp537)
      if _n.var ~= nil then
        _temp537 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp537 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp537, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp537)
      if _f.var ~= nil then
        _temp537 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp537 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp537, "var"))
      end

      elseif _temp537 == nil then
        _error(exception:null_error("_temp537", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp537))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp535 =  get_undermethod_underlocal(_self, _temp536,_temp537)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp535 =  _self:get_undermethod_underlocal(_temp536,_temp537)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp535 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp535 =  _self:no_undermethod(string:new("get_method_local") , _temp536,_temp537)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp535 =  no_undermethod(_self, string:new("get_method_local") , _temp536,_temp537)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp537
      local _t = _type(_temp534)
      if _t == "table" then
                      if _type(_temp534._less_less) == "function" or (_type(_temp534._less_less) == "table" and _rawget(_temp534._less_less, "__call_thing")) then
        _temp537 = _temp534:_less_less(_temp535)
      elseif _temp534._less_less ~= nil then
        _temp537 = _temp534._less_less

        elseif _temp534.no_undermethod ~= nil then
          _temp537 =  _temp534:no_undermethod(string:new("<<") , _temp535)
        else
          _error(exception:method_error(_temp534, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp534)
      if _n._less_less ~= nil then
        _temp537 = _n:_less_less(_temp535)
      elseif _n.no_undermethod ~= nil then
        _temp537 =  _n:no_undermethod(string:new("<<") , _temp535)
      else
        _error(exception:method_error(_temp534, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp534)
      if _f._less_less ~= nil then
        _temp537 = _f:_less_less(_temp535)
      elseif _f.no_undermethod ~= nil then
        _temp537 =  _f:no_undermethod(string:new("<<") , _temp535)
      else
        _error(exception:method_error(_temp534, "<<"))
      end

      elseif _temp534 == nil then
        _error(exception:null_error("_temp534", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp534))
      end

_dummy_ = _temp537 
end

    if _type(_temp531) == "function" or (_type(_temp531) == "table" and _rawget(_temp531, "__call_thing")) then
      return  _temp531(_self)

    elseif _temp531 then
      return  _temp531
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp528)
      if _t == "table" then
                      if _type(_temp528.walk) == "function" or (_type(_temp528.walk) == "table" and _rawget(_temp528.walk, "__call_thing")) then
        _dummy_ = _temp528:walk(_temp4,_temp538)
      elseif _temp528.walk ~= nil then
        _dummy_ = _temp528.walk

        elseif _temp528.no_undermethod ~= nil then
          _dummy_ =  _temp528:no_undermethod(string:new("walk") , _temp4,_temp538)
        else
          _error(exception:method_error(_temp528, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp528)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp538)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp538)
      else
        _error(exception:method_error(_temp528, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp528)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp538)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp538)
      else
        _error(exception:method_error(_temp528, "walk"))
      end

      elseif _temp528 == nil then
        _error(exception:null_error("_temp528", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp528))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp538 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp538 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp538 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp538 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp538 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp538 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp538 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp538 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp538 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp548 = function (_self, _temp540,_temp539)
        if _temp540 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp539 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp539 =  null(_self)

    elseif null then
      _temp539 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp539 =  _self:null()
      elseif _self.null ~= nil then
        _temp539 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp539 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp539 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp541
local _temp542 = nil
    if _type(_temp539) == "function" or (_type(_temp539) == "table" and _rawget(_temp539, "__call_thing")) then
      _temp542 =  _temp539(_self)

    elseif _temp539 then
      _temp542 =  _temp539
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp542 =  _self:var()
      elseif _self.var ~= nil then
        _temp542 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp542 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp542 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp541 =  set_underresult(_self, _temp542)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp541 =  _self:set_underresult(_temp542)
      elseif _self.set_underresult ~= nil then
        _temp541 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp541 =  _self:no_undermethod(string:new("set_result") , _temp542)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp541 =  no_undermethod(_self, string:new("set_result") , _temp542)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp543 = nil
        local _t = _type(_temp541)
        if _t == "table" then
          if _rawget(_temp541, "__call_thing") == nil then
            _temp543 = _temp541
          else
                  if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp543 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp543 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp543 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp543 =  _temp541(_self)
      end

          end
        elseif _t == "number" then
          _temp543 = _temp541
        elseif _t == "function" then
                if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp543 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp543 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp543 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp543 =  _temp541(_self)
      end

        elseif _temp541 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp544 = nil
      local _t = _type(_temp543)
      if _t == "table" then
                      if _type(_temp543.out) == "function" or (_type(_temp543.out) == "table" and _rawget(_temp543.out, "__call_thing")) then
        _temp544 = _temp543:out()
      elseif _temp543.out ~= nil then
        _temp544 = _temp543.out

        elseif _temp543.no_undermethod ~= nil then
          _temp544 =  _temp543:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp543, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp543)
      if _n.out ~= nil then
        _temp544 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp544 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp543, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp543)
      if _f.out ~= nil then
        _temp544 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp544 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp543, "out"))
      end

      elseif _temp543 == nil then
        _error(exception:null_error("_temp543", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp543))
      end

local _temp545 = nil
local _temp546 = nil
        local _t = _type(_temp540)
        if _t == "table" then
          if _rawget(_temp540, "__call_thing") == nil then
            _temp546 = _temp540
          else
                  if _temp540 == nil then
              if _type(_self._temp540) == "function" or (_type(_self._temp540) == "table" and _rawget(_self._temp540, "__call_thing")) then
        _temp546 =  _self:_temp540()
      elseif _self._temp540 ~= nil then
        _temp546 =  _self._temp540

        elseif _self.no_undermethod ~= nil then
          _temp546 =  _self:no_undermethod(string:new("_temp540"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp546 =  _temp540(_self)
      end

          end
        elseif _t == "number" then
          _temp546 = _temp540
        elseif _t == "function" then
                if _temp540 == nil then
              if _type(_self._temp540) == "function" or (_type(_self._temp540) == "table" and _rawget(_self._temp540, "__call_thing")) then
        _temp546 =  _self:_temp540()
      elseif _self._temp540 ~= nil then
        _temp546 =  _self._temp540

        elseif _self.no_undermethod ~= nil then
          _temp546 =  _self:no_undermethod(string:new("_temp540"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp546 =  _temp540(_self)
      end

        elseif _temp540 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp546)
      if _t == "table" then
                      if _type(_temp546.method) == "function" or (_type(_temp546.method) == "table" and _rawget(_temp546.method, "__call_thing")) then
        _temp546 = _temp546:method()
      elseif _temp546.method ~= nil then
        _temp546 = _temp546.method

        elseif _temp546.no_undermethod ~= nil then
          _temp546 =  _temp546:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp546, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp546)
      if _n.method ~= nil then
        _temp546 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp546 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp546, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp546)
      if _f.method ~= nil then
        _temp546 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp546 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp546, "method"))
      end

      elseif _temp546 == nil then
        _error(exception:null_error("_temp546", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp546))
      end


local _temp547 = nil
        local _t = _type(_temp541)
        if _t == "table" then
          if _rawget(_temp541, "__call_thing") == nil then
            _temp547 = _temp541
          else
                  if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp547 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp547 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp547 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp547 =  _temp541(_self)
      end

          end
        elseif _t == "number" then
          _temp547 = _temp541
        elseif _t == "function" then
                if _temp541 == nil then
              if _type(_self._temp541) == "function" or (_type(_self._temp541) == "table" and _rawget(_self._temp541, "__call_thing")) then
        _temp547 =  _self:_temp541()
      elseif _self._temp541 ~= nil then
        _temp547 =  _self._temp541

        elseif _self.no_undermethod ~= nil then
          _temp547 =  _self:no_undermethod(string:new("_temp541"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp547 =  _temp541(_self)
      end

        elseif _temp541 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp547)
      if _t == "table" then
                      if _type(_temp547.var) == "function" or (_type(_temp547.var) == "table" and _rawget(_temp547.var, "__call_thing")) then
        _temp547 = _temp547:var()
      elseif _temp547.var ~= nil then
        _temp547 = _temp547.var

        elseif _temp547.no_undermethod ~= nil then
          _temp547 =  _temp547:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp547, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp547)
      if _n.var ~= nil then
        _temp547 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp547 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp547, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp547)
      if _f.var ~= nil then
        _temp547 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp547 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp547, "var"))
      end

      elseif _temp547 == nil then
        _error(exception:null_error("_temp547", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp547))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp545 =  get_undermethod_underself(_self, _temp546,_temp547)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp545 =  _self:get_undermethod_underself(_temp546,_temp547)
      elseif _self.get_undermethod_underself ~= nil then
        _temp545 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp545 =  _self:no_undermethod(string:new("get_method_self") , _temp546,_temp547)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp545 =  no_undermethod(_self, string:new("get_method_self") , _temp546,_temp547)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp547
      local _t = _type(_temp544)
      if _t == "table" then
                      if _type(_temp544._less_less) == "function" or (_type(_temp544._less_less) == "table" and _rawget(_temp544._less_less, "__call_thing")) then
        _temp547 = _temp544:_less_less(_temp545)
      elseif _temp544._less_less ~= nil then
        _temp547 = _temp544._less_less

        elseif _temp544.no_undermethod ~= nil then
          _temp547 =  _temp544:no_undermethod(string:new("<<") , _temp545)
        else
          _error(exception:method_error(_temp544, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp544)
      if _n._less_less ~= nil then
        _temp547 = _n:_less_less(_temp545)
      elseif _n.no_undermethod ~= nil then
        _temp547 =  _n:no_undermethod(string:new("<<") , _temp545)
      else
        _error(exception:method_error(_temp544, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp544)
      if _f._less_less ~= nil then
        _temp547 = _f:_less_less(_temp545)
      elseif _f.no_undermethod ~= nil then
        _temp547 =  _f:no_undermethod(string:new("<<") , _temp545)
      else
        _error(exception:method_error(_temp544, "<<"))
      end

      elseif _temp544 == nil then
        _error(exception:null_error("_temp544", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp544))
      end

_dummy_ = _temp547 
end

    if _type(_temp541) == "function" or (_type(_temp541) == "table" and _rawget(_temp541, "__call_thing")) then
      return  _temp541(_self)

    elseif _temp541 then
      return  _temp541
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp538)
      if _t == "table" then
                      if _type(_temp538.walk) == "function" or (_type(_temp538.walk) == "table" and _rawget(_temp538.walk, "__call_thing")) then
        _dummy_ = _temp538:walk(_temp4,_temp548)
      elseif _temp538.walk ~= nil then
        _dummy_ = _temp538.walk

        elseif _temp538.no_undermethod ~= nil then
          _dummy_ =  _temp538:no_undermethod(string:new("walk") , _temp4,_temp548)
        else
          _error(exception:method_error(_temp538, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp538)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp548)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp548)
      else
        _error(exception:method_error(_temp538, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp538)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp548)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp548)
      else
        _error(exception:method_error(_temp538, "walk"))
      end

      elseif _temp538 == nil then
        _error(exception:null_error("_temp538", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp538))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp548 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp548 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp548 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp548 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp548 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp548 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp548 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp548 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp548 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp548 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp564 = function (_self, _temp550,_temp549)
        if _temp550 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp549 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp549 =  null(_self)

    elseif null then
      _temp549 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp549 =  _self:null()
      elseif _self.null ~= nil then
        _temp549 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp549 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp549 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp551
local _temp552 = nil
    if _type(_temp549) == "function" or (_type(_temp549) == "table" and _rawget(_temp549, "__call_thing")) then
      _temp552 =  _temp549(_self)

    elseif _temp549 then
      _temp552 =  _temp549
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp552 =  _self:var()
      elseif _self.var ~= nil then
        _temp552 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp552 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp552 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp551 =  set_underresult(_self, _temp552)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp551 =  _self:set_underresult(_temp552)
      elseif _self.set_underresult ~= nil then
        _temp551 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp551 =  _self:no_undermethod(string:new("set_result") , _temp552)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp551 =  no_undermethod(_self, string:new("set_result") , _temp552)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp553
        local _t = _type(_temp550)
        if _t == "table" then
          if _rawget(_temp550, "__call_thing") == nil then
            _temp552 = _temp550
          else
                  if _temp550 == nil then
              if _type(_self._temp550) == "function" or (_type(_self._temp550) == "table" and _rawget(_self._temp550, "__call_thing")) then
        _temp552 =  _self:_temp550()
      elseif _self._temp550 ~= nil then
        _temp552 =  _self._temp550

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp550"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp552 =  _temp550(_self)
      end

          end
        elseif _t == "number" then
          _temp552 = _temp550
        elseif _t == "function" then
                if _temp550 == nil then
              if _type(_self._temp550) == "function" or (_type(_self._temp550) == "table" and _rawget(_self._temp550, "__call_thing")) then
        _temp552 =  _self:_temp550()
      elseif _self._temp550 ~= nil then
        _temp552 =  _self._temp550

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp550"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp552 =  _temp550(_self)
      end

        elseif _temp550 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp552)
      if _t == "table" then
                      if _type(_temp552.target) == "function" or (_type(_temp552.target) == "table" and _rawget(_temp552.target, "__call_thing")) then
        _temp552 = _temp552:target()
      elseif _temp552.target ~= nil then
        _temp552 = _temp552.target

        elseif _temp552.no_undermethod ~= nil then
          _temp552 =  _temp552:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp552, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp552)
      if _n.target ~= nil then
        _temp552 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp552 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp552, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp552)
      if _f.target ~= nil then
        _temp552 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp552 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp552, "target"))
      end

      elseif _temp552 == nil then
        _error(exception:null_error("_temp552", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp552))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp553 =  process(_self, _temp552)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp553 =  _self:process(_temp552)
      elseif _self.process ~= nil then
        _temp553 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp553 =  _self:no_undermethod(string:new("process") , _temp552)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp553 =  no_undermethod(_self, string:new("process") , _temp552)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp554 = nil
        local _t = _type(_temp551)
        if _t == "table" then
          if _rawget(_temp551, "__call_thing") == nil then
            _temp554 = _temp551
          else
                  if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp554 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp554 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp554 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp554 =  _temp551(_self)
      end

          end
        elseif _t == "number" then
          _temp554 = _temp551
        elseif _t == "function" then
                if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp554 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp554 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp554 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp554 =  _temp551(_self)
      end

        elseif _temp551 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp555 = nil
      local _t = _type(_temp554)
      if _t == "table" then
                      if _type(_temp554.out) == "function" or (_type(_temp554.out) == "table" and _rawget(_temp554.out, "__call_thing")) then
        _temp555 = _temp554:out()
      elseif _temp554.out ~= nil then
        _temp555 = _temp554.out

        elseif _temp554.no_undermethod ~= nil then
          _temp555 =  _temp554:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp554, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp554)
      if _n.out ~= nil then
        _temp555 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp555 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp554, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp554)
      if _f.out ~= nil then
        _temp555 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp555 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp554, "out"))
      end

      elseif _temp554 == nil then
        _error(exception:null_error("_temp554", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp554))
      end

local _temp556 = nil
        local _t = _type(_temp553)
        if _t == "table" then
          if _rawget(_temp553, "__call_thing") == nil then
            _temp556 = _temp553
          else
                  if _temp553 == nil then
              if _type(_self._temp553) == "function" or (_type(_self._temp553) == "table" and _rawget(_self._temp553, "__call_thing")) then
        _temp556 =  _self:_temp553()
      elseif _self._temp553 ~= nil then
        _temp556 =  _self._temp553

        elseif _self.no_undermethod ~= nil then
          _temp556 =  _self:no_undermethod(string:new("_temp553"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp556 =  _temp553(_self)
      end

          end
        elseif _t == "number" then
          _temp556 = _temp553
        elseif _t == "function" then
                if _temp553 == nil then
              if _type(_self._temp553) == "function" or (_type(_self._temp553) == "table" and _rawget(_self._temp553, "__call_thing")) then
        _temp556 =  _self:_temp553()
      elseif _self._temp553 ~= nil then
        _temp556 =  _self._temp553

        elseif _self.no_undermethod ~= nil then
          _temp556 =  _self:no_undermethod(string:new("_temp553"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp556 =  _temp553(_self)
      end

        elseif _temp553 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp556)
      if _t == "table" then
                      if _type(_temp556.out) == "function" or (_type(_temp556.out) == "table" and _rawget(_temp556.out, "__call_thing")) then
        _temp556 = _temp556:out()
      elseif _temp556.out ~= nil then
        _temp556 = _temp556.out

        elseif _temp556.no_undermethod ~= nil then
          _temp556 =  _temp556:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp556, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp556)
      if _n.out ~= nil then
        _temp556 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp556 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp556, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp556)
      if _f.out ~= nil then
        _temp556 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp556 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp556, "out"))
      end

      elseif _temp556 == nil then
        _error(exception:null_error("_temp556", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp556))
      end

local _temp557
      local _t = _type(_temp555)
      if _t == "table" then
                      if _type(_temp555._less_less) == "function" or (_type(_temp555._less_less) == "table" and _rawget(_temp555._less_less, "__call_thing")) then
        _temp557 = _temp555:_less_less(_temp556)
      elseif _temp555._less_less ~= nil then
        _temp557 = _temp555._less_less

        elseif _temp555.no_undermethod ~= nil then
          _temp557 =  _temp555:no_undermethod(string:new("<<") , _temp556)
        else
          _error(exception:method_error(_temp555, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp555)
      if _n._less_less ~= nil then
        _temp557 = _n:_less_less(_temp556)
      elseif _n.no_undermethod ~= nil then
        _temp557 =  _n:no_undermethod(string:new("<<") , _temp556)
      else
        _error(exception:method_error(_temp555, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp555)
      if _f._less_less ~= nil then
        _temp557 = _f:_less_less(_temp556)
      elseif _f.no_undermethod ~= nil then
        _temp557 =  _f:no_undermethod(string:new("<<") , _temp556)
      else
        _error(exception:method_error(_temp555, "<<"))
      end

      elseif _temp555 == nil then
        _error(exception:null_error("_temp555", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp555))
      end

_dummy_ = _temp557 
end

do
local _temp558 = nil
        local _t = _type(_temp551)
        if _t == "table" then
          if _rawget(_temp551, "__call_thing") == nil then
            _temp558 = _temp551
          else
                  if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp558 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp558 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp558 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp558 =  _temp551(_self)
      end

          end
        elseif _t == "number" then
          _temp558 = _temp551
        elseif _t == "function" then
                if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp558 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp558 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp558 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp558 =  _temp551(_self)
      end

        elseif _temp551 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp559 = nil
      local _t = _type(_temp558)
      if _t == "table" then
                      if _type(_temp558.out) == "function" or (_type(_temp558.out) == "table" and _rawget(_temp558.out, "__call_thing")) then
        _temp559 = _temp558:out()
      elseif _temp558.out ~= nil then
        _temp559 = _temp558.out

        elseif _temp558.no_undermethod ~= nil then
          _temp559 =  _temp558:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp558, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp558)
      if _n.out ~= nil then
        _temp559 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp559 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp558, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp558)
      if _f.out ~= nil then
        _temp559 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp559 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp558, "out"))
      end

      elseif _temp558 == nil then
        _error(exception:null_error("_temp558", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp558))
      end

local _temp560 = nil
local _temp561 = nil
        local _t = _type(_temp553)
        if _t == "table" then
          if _rawget(_temp553, "__call_thing") == nil then
            _temp561 = _temp553
          else
                  if _temp553 == nil then
              if _type(_self._temp553) == "function" or (_type(_self._temp553) == "table" and _rawget(_self._temp553, "__call_thing")) then
        _temp561 =  _self:_temp553()
      elseif _self._temp553 ~= nil then
        _temp561 =  _self._temp553

        elseif _self.no_undermethod ~= nil then
          _temp561 =  _self:no_undermethod(string:new("_temp553"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp561 =  _temp553(_self)
      end

          end
        elseif _t == "number" then
          _temp561 = _temp553
        elseif _t == "function" then
                if _temp553 == nil then
              if _type(_self._temp553) == "function" or (_type(_self._temp553) == "table" and _rawget(_self._temp553, "__call_thing")) then
        _temp561 =  _self:_temp553()
      elseif _self._temp553 ~= nil then
        _temp561 =  _self._temp553

        elseif _self.no_undermethod ~= nil then
          _temp561 =  _self:no_undermethod(string:new("_temp553"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp561 =  _temp553(_self)
      end

        elseif _temp553 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp561)
      if _t == "table" then
                      if _type(_temp561.var) == "function" or (_type(_temp561.var) == "table" and _rawget(_temp561.var, "__call_thing")) then
        _temp561 = _temp561:var()
      elseif _temp561.var ~= nil then
        _temp561 = _temp561.var

        elseif _temp561.no_undermethod ~= nil then
          _temp561 =  _temp561:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp561, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp561)
      if _n.var ~= nil then
        _temp561 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp561 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp561, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp561)
      if _f.var ~= nil then
        _temp561 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp561 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp561, "var"))
      end

      elseif _temp561 == nil then
        _error(exception:null_error("_temp561", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp561))
      end


local _temp562 = nil
        local _t = _type(_temp550)
        if _t == "table" then
          if _rawget(_temp550, "__call_thing") == nil then
            _temp562 = _temp550
          else
                  if _temp550 == nil then
              if _type(_self._temp550) == "function" or (_type(_self._temp550) == "table" and _rawget(_self._temp550, "__call_thing")) then
        _temp562 =  _self:_temp550()
      elseif _self._temp550 ~= nil then
        _temp562 =  _self._temp550

        elseif _self.no_undermethod ~= nil then
          _temp562 =  _self:no_undermethod(string:new("_temp550"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp562 =  _temp550(_self)
      end

          end
        elseif _t == "number" then
          _temp562 = _temp550
        elseif _t == "function" then
                if _temp550 == nil then
              if _type(_self._temp550) == "function" or (_type(_self._temp550) == "table" and _rawget(_self._temp550, "__call_thing")) then
        _temp562 =  _self:_temp550()
      elseif _self._temp550 ~= nil then
        _temp562 =  _self._temp550

        elseif _self.no_undermethod ~= nil then
          _temp562 =  _self:no_undermethod(string:new("_temp550"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp562 =  _temp550(_self)
      end

        elseif _temp550 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp562)
      if _t == "table" then
                      if _type(_temp562.method) == "function" or (_type(_temp562.method) == "table" and _rawget(_temp562.method, "__call_thing")) then
        _temp562 = _temp562:method()
      elseif _temp562.method ~= nil then
        _temp562 = _temp562.method

        elseif _temp562.no_undermethod ~= nil then
          _temp562 =  _temp562:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp562, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp562)
      if _n.method ~= nil then
        _temp562 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp562 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp562, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp562)
      if _f.method ~= nil then
        _temp562 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp562 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp562, "method"))
      end

      elseif _temp562 == nil then
        _error(exception:null_error("_temp562", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp562))
      end


local _temp563 = nil
        local _t = _type(_temp551)
        if _t == "table" then
          if _rawget(_temp551, "__call_thing") == nil then
            _temp563 = _temp551
          else
                  if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp563 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp563 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp563 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp563 =  _temp551(_self)
      end

          end
        elseif _t == "number" then
          _temp563 = _temp551
        elseif _t == "function" then
                if _temp551 == nil then
              if _type(_self._temp551) == "function" or (_type(_self._temp551) == "table" and _rawget(_self._temp551, "__call_thing")) then
        _temp563 =  _self:_temp551()
      elseif _self._temp551 ~= nil then
        _temp563 =  _self._temp551

        elseif _self.no_undermethod ~= nil then
          _temp563 =  _self:no_undermethod(string:new("_temp551"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp563 =  _temp551(_self)
      end

        elseif _temp551 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp563)
      if _t == "table" then
                      if _type(_temp563.var) == "function" or (_type(_temp563.var) == "table" and _rawget(_temp563.var, "__call_thing")) then
        _temp563 = _temp563:var()
      elseif _temp563.var ~= nil then
        _temp563 = _temp563.var

        elseif _temp563.no_undermethod ~= nil then
          _temp563 =  _temp563:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp563, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp563)
      if _n.var ~= nil then
        _temp563 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp563 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp563, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp563)
      if _f.var ~= nil then
        _temp563 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp563 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp563, "var"))
      end

      elseif _temp563 == nil then
        _error(exception:null_error("_temp563", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp563))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp560 =  get_undermethod(_self, _temp561,_temp562,_temp563)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp560 =  _self:get_undermethod(_temp561,_temp562,_temp563)
      elseif _self.get_undermethod ~= nil then
        _temp560 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp560 =  _self:no_undermethod(string:new("get_method") , _temp561,_temp562,_temp563)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp560 =  no_undermethod(_self, string:new("get_method") , _temp561,_temp562,_temp563)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp563
      local _t = _type(_temp559)
      if _t == "table" then
                      if _type(_temp559._less_less) == "function" or (_type(_temp559._less_less) == "table" and _rawget(_temp559._less_less, "__call_thing")) then
        _temp563 = _temp559:_less_less(_temp560)
      elseif _temp559._less_less ~= nil then
        _temp563 = _temp559._less_less

        elseif _temp559.no_undermethod ~= nil then
          _temp563 =  _temp559:no_undermethod(string:new("<<") , _temp560)
        else
          _error(exception:method_error(_temp559, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp559)
      if _n._less_less ~= nil then
        _temp563 = _n:_less_less(_temp560)
      elseif _n.no_undermethod ~= nil then
        _temp563 =  _n:no_undermethod(string:new("<<") , _temp560)
      else
        _error(exception:method_error(_temp559, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp559)
      if _f._less_less ~= nil then
        _temp563 = _f:_less_less(_temp560)
      elseif _f.no_undermethod ~= nil then
        _temp563 =  _f:no_undermethod(string:new("<<") , _temp560)
      else
        _error(exception:method_error(_temp559, "<<"))
      end

      elseif _temp559 == nil then
        _error(exception:null_error("_temp559", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp559))
      end

_dummy_ = _temp563 
end

    if _type(_temp551) == "function" or (_type(_temp551) == "table" and _rawget(_temp551, "__call_thing")) then
      return  _temp551(_self)

    elseif _temp551 then
      return  _temp551
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp548)
      if _t == "table" then
                      if _type(_temp548.walk) == "function" or (_type(_temp548.walk) == "table" and _rawget(_temp548.walk, "__call_thing")) then
        _dummy_ = _temp548:walk(_temp4,_temp564)
      elseif _temp548.walk ~= nil then
        _dummy_ = _temp548.walk

        elseif _temp548.no_undermethod ~= nil then
          _dummy_ =  _temp548:no_undermethod(string:new("walk") , _temp4,_temp564)
        else
          _error(exception:method_error(_temp548, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp548)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp564)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp564)
      else
        _error(exception:method_error(_temp548, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp548)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp564)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp564)
      else
        _error(exception:method_error(_temp548, "walk"))
      end

      elseif _temp548 == nil then
        _error(exception:null_error("_temp548", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp548))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp564 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp564 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp564 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp564 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp564 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp564 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp564 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp564 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp564 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp574 = function (_self, _temp566,_temp565)
        if _temp566 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp565 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp565 =  null(_self)

    elseif null then
      _temp565 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp565 =  _self:null()
      elseif _self.null ~= nil then
        _temp565 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp565 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp565 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp567
        local _t = _type(_temp566)
        if _t == "table" then
          if _rawget(_temp566, "__call_thing") == nil then
            _temp567 = _temp566
          else
                  if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp567 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp567 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp567 =  _temp566(_self)
      end

          end
        elseif _t == "number" then
          _temp567 = _temp566
        elseif _t == "function" then
                if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp567 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp567 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp567 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp567 =  _temp566(_self)
      end

        elseif _temp566 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp567)
      if _t == "table" then
                      if _type(_temp567.body) == "function" or (_type(_temp567.body) == "table" and _rawget(_temp567.body, "__call_thing")) then
        _temp567 = _temp567:body()
      elseif _temp567.body ~= nil then
        _temp567 = _temp567.body

        elseif _temp567.no_undermethod ~= nil then
          _temp567 =  _temp567:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp567)
      if _n.body ~= nil then
        _temp567 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp567)
      if _f.body ~= nil then
        _temp567 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp567 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp567))
      end

local _temp568 = regex:new("[\\\\]")

local _temp569 = string:new("\\\\")

      local _t = _type(_temp567)
      if _t == "table" then
                      if _type(_temp567.sub) == "function" or (_type(_temp567.sub) == "table" and _rawget(_temp567.sub, "__call_thing")) then
        _temp567 = _temp567:sub(_temp568,_temp569)
      elseif _temp567.sub ~= nil then
        _temp567 = _temp567.sub

        elseif _temp567.no_undermethod ~= nil then
          _temp567 =  _temp567:no_undermethod(string:new("sub") , _temp568,_temp569)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp567)
      if _n.sub ~= nil then
        _temp567 = _n:sub(_temp568,_temp569)
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("sub") , _temp568,_temp569)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp567)
      if _f.sub ~= nil then
        _temp567 = _f:sub(_temp568,_temp569)
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("sub") , _temp568,_temp569)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp567 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp567))
      end

local _temp569 = regex:new("\"")

_temp568 = string:new("\\\"")

      local _t = _type(_temp567)
      if _t == "table" then
                      if _type(_temp567.sub) == "function" or (_type(_temp567.sub) == "table" and _rawget(_temp567.sub, "__call_thing")) then
        _temp567 = _temp567:sub(_temp569,_temp568)
      elseif _temp567.sub ~= nil then
        _temp567 = _temp567.sub

        elseif _temp567.no_undermethod ~= nil then
          _temp567 =  _temp567:no_undermethod(string:new("sub") , _temp569,_temp568)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp567)
      if _n.sub ~= nil then
        _temp567 = _n:sub(_temp569,_temp568)
      elseif _n.no_undermethod ~= nil then
        _temp567 =  _n:no_undermethod(string:new("sub") , _temp569,_temp568)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp567)
      if _f.sub ~= nil then
        _temp567 = _f:sub(_temp569,_temp568)
      elseif _f.no_undermethod ~= nil then
        _temp567 =  _f:no_undermethod(string:new("sub") , _temp569,_temp568)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp567 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp567))
      end


local _temp570
        local _t = _type(_temp566)
        if _t == "table" then
          if _rawget(_temp566, "__call_thing") == nil then
            _temp570 = _temp566
          else
                  if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp570 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp570 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp570 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp570 =  _temp566(_self)
      end

          end
        elseif _t == "number" then
          _temp570 = _temp566
        elseif _t == "function" then
                if _temp566 == nil then
              if _type(_self._temp566) == "function" or (_type(_self._temp566) == "table" and _rawget(_self._temp566, "__call_thing")) then
        _temp570 =  _self:_temp566()
      elseif _self._temp566 ~= nil then
        _temp570 =  _self._temp566

        elseif _self.no_undermethod ~= nil then
          _temp570 =  _self:no_undermethod(string:new("_temp566"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp570 =  _temp566(_self)
      end

        elseif _temp566 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.opts) == "function" or (_type(_temp570.opts) == "table" and _rawget(_temp570.opts, "__call_thing")) then
        _temp570 = _temp570:opts()
      elseif _temp570.opts ~= nil then
        _temp570 = _temp570.opts

        elseif _temp570.no_undermethod ~= nil then
          _temp570 =  _temp570:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.opts ~= nil then
        _temp570 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp570 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.opts ~= nil then
        _temp570 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp570 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end

      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.dice) == "function" or (_type(_temp570.dice) == "table" and _rawget(_temp570.dice, "__call_thing")) then
        _temp570 = _temp570:dice()
      elseif _temp570.dice ~= nil then
        _temp570 = _temp570.dice

        elseif _temp570.no_undermethod ~= nil then
          _temp570 =  _temp570:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.dice ~= nil then
        _temp570 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp570 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.dice ~= nil then
        _temp570 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp570 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end

      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.unique) == "function" or (_type(_temp570.unique) == "table" and _rawget(_temp570.unique, "__call_thing")) then
        _temp570 = _temp570:unique()
      elseif _temp570.unique ~= nil then
        _temp570 = _temp570.unique

        elseif _temp570.no_undermethod ~= nil then
          _temp570 =  _temp570:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.unique ~= nil then
        _temp570 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp570 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.unique ~= nil then
        _temp570 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp570 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end

      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.join) == "function" or (_type(_temp570.join) == "table" and _rawget(_temp570.join, "__call_thing")) then
        _temp570 = _temp570:join()
      elseif _temp570.join ~= nil then
        _temp570 = _temp570.join

        elseif _temp570.no_undermethod ~= nil then
          _temp570 =  _temp570:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.join ~= nil then
        _temp570 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp570 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.join ~= nil then
        _temp570 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp570 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end

local _temp568 = regex:new("m")

_temp569 = string:new("s")

      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.sub) == "function" or (_type(_temp570.sub) == "table" and _rawget(_temp570.sub, "__call_thing")) then
        _temp570 = _temp570:sub(_temp568,_temp569)
      elseif _temp570.sub ~= nil then
        _temp570 = _temp570.sub

        elseif _temp570.no_undermethod ~= nil then
          _temp570 =  _temp570:no_undermethod(string:new("sub") , _temp568,_temp569)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.sub ~= nil then
        _temp570 = _n:sub(_temp568,_temp569)
      elseif _n.no_undermethod ~= nil then
        _temp570 =  _n:no_undermethod(string:new("sub") , _temp568,_temp569)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.sub ~= nil then
        _temp570 = _f:sub(_temp568,_temp569)
      elseif _f.no_undermethod ~= nil then
        _temp570 =  _f:no_undermethod(string:new("sub") , _temp568,_temp569)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end


    if _type(_temp565) == "function" or (_type(_temp565) == "table" and _rawget(_temp565, "__call_thing")) then
      _temp569 =  _temp565(_self)

    elseif _temp565 then
      _temp569 =  _temp565
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp569 =  _self:var()
      elseif _self.var ~= nil then
        _temp569 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp569 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp569 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp571 = nil
    if _type(_temp567) == "function" or (_type(_temp567) == "table" and _rawget(_temp567, "__call_thing")) then
      _temp571 =  _temp567(_self)

    elseif _temp567 then
      _temp571 =  _temp567
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp571 =  _self:body()
      elseif _self.body ~= nil then
        _temp571 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp571 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp571 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp572 = nil
    if _type(_temp570) == "function" or (_type(_temp570) == "table" and _rawget(_temp570, "__call_thing")) then
      _temp572 =  _temp570(_self)

    elseif _temp570 then
      _temp572 =  _temp570
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp572 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp572 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp572 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp572 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp568 = string:new("regex:new(\"" .. _tostring(_temp571) .. "\", \"" .. _tostring(_temp572) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp569,_temp568)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp569,_temp568)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp569,_temp568)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp569,_temp568)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp564)
      if _t == "table" then
                      if _type(_temp564.walk) == "function" or (_type(_temp564.walk) == "table" and _rawget(_temp564.walk, "__call_thing")) then
        _dummy_ = _temp564:walk(_temp4,_temp574)
      elseif _temp564.walk ~= nil then
        _dummy_ = _temp564.walk

        elseif _temp564.no_undermethod ~= nil then
          _dummy_ =  _temp564:no_undermethod(string:new("walk") , _temp4,_temp574)
        else
          _error(exception:method_error(_temp564, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp564)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp574)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp574)
      else
        _error(exception:method_error(_temp564, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp564)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp574)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp574)
      else
        _error(exception:method_error(_temp564, "walk"))
      end

      elseif _temp564 == nil then
        _error(exception:null_error("_temp564", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp564))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp574 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp574 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp574 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp574 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp574 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp574 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp574 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp574 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp574 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp574 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp578 = function (_self, _temp576,_temp575)
        if _temp576 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp575 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp575 =  null(_self)

    elseif null then
      _temp575 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp575 =  _self:null()
      elseif _self.null ~= nil then
        _temp575 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp575 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp575 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp577
local _temp578 = nil
    if _type(_temp575) == "function" or (_type(_temp575) == "table" and _rawget(_temp575, "__call_thing")) then
      _temp578 =  _temp575(_self)

    elseif _temp575 then
      _temp578 =  _temp575
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp578 =  _self:var()
      elseif _self.var ~= nil then
        _temp578 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp578 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp578 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp577 =  set_underresult(_self, _temp578)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp577 =  _self:set_underresult(_temp578)
      elseif _self.set_underresult ~= nil then
        _temp577 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp577 =  _self:no_undermethod(string:new("set_result") , _temp578)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp577 =  no_undermethod(_self, string:new("set_result") , _temp578)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp579
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp579 =  _self:my()
      elseif _self.my ~= nil then
        _temp579 =  _self.my

        elseif my ~= nil then
          _temp579 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp579)
      if _t == "table" then
                      if _type(_temp579.env) == "function" or (_type(_temp579.env) == "table" and _rawget(_temp579.env, "__call_thing")) then
        _temp579 = _temp579:env()
      elseif _temp579.env ~= nil then
        _temp579 = _temp579.env

        elseif _temp579.no_undermethod ~= nil then
          _temp579 =  _temp579:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp579)
      if _n.env ~= nil then
        _temp579 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp579 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp579)
      if _f.env ~= nil then
        _temp579 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp579 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp579 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp579))
      end

      local _t = _type(_temp579)
      if _t == "table" then
                      if _type(_temp579.next_undertemp) == "function" or (_type(_temp579.next_undertemp) == "table" and _rawget(_temp579.next_undertemp, "__call_thing")) then
        _temp579 = _temp579:next_undertemp()
      elseif _temp579.next_undertemp ~= nil then
        _temp579 = _temp579.next_undertemp

        elseif _temp579.no_undermethod ~= nil then
          _temp579 =  _temp579:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp579)
      if _n.next_undertemp ~= nil then
        _temp579 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp579 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp579)
      if _f.next_undertemp ~= nil then
        _temp579 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp579 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp579 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp579))
      end


do
local _temp580 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp580 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp580 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp580 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp580 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp580 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp580 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp580 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp580 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp580 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp580 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp581 = nil
      local _t = _type(_temp580)
      if _t == "table" then
                      if _type(_temp580.out) == "function" or (_type(_temp580.out) == "table" and _rawget(_temp580.out, "__call_thing")) then
        _temp581 = _temp580:out()
      elseif _temp580.out ~= nil then
        _temp581 = _temp580.out

        elseif _temp580.no_undermethod ~= nil then
          _temp581 =  _temp580:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp580, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp580)
      if _n.out ~= nil then
        _temp581 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp581 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp580, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp580)
      if _f.out ~= nil then
        _temp581 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp581 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp580, "out"))
      end

      elseif _temp580 == nil then
        _error(exception:null_error("_temp580", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp580))
      end

local _temp582 = nil
do
local _temp583 = nil
    if _type(_temp579) == "function" or (_type(_temp579) == "table" and _rawget(_temp579, "__call_thing")) then
      _temp583 =  _temp579(_self)

    elseif _temp579 then
      _temp583 =  _temp579
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp583 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp583 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp583 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp583 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp582 = string:new("\ndo\nlocal " .. _tostring(_temp583) .. " = {}\n")
end
local _temp584
      local _t = _type(_temp581)
      if _t == "table" then
                      if _type(_temp581._less_less) == "function" or (_type(_temp581._less_less) == "table" and _rawget(_temp581._less_less, "__call_thing")) then
        _temp584 = _temp581:_less_less(_temp582)
      elseif _temp581._less_less ~= nil then
        _temp584 = _temp581._less_less

        elseif _temp581.no_undermethod ~= nil then
          _temp584 =  _temp581:no_undermethod(string:new("<<") , _temp582)
        else
          _error(exception:method_error(_temp581, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp581)
      if _n._less_less ~= nil then
        _temp584 = _n:_less_less(_temp582)
      elseif _n.no_undermethod ~= nil then
        _temp584 =  _n:no_undermethod(string:new("<<") , _temp582)
      else
        _error(exception:method_error(_temp581, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp581)
      if _f._less_less ~= nil then
        _temp584 = _f:_less_less(_temp582)
      elseif _f.no_undermethod ~= nil then
        _temp584 =  _f:no_undermethod(string:new("<<") , _temp582)
      else
        _error(exception:method_error(_temp581, "<<"))
      end

      elseif _temp581 == nil then
        _error(exception:null_error("_temp581", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp581))
      end

_dummy_ = _temp584 
end

local _temp585
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp585 =  my(_self)

    elseif my then
      _temp585 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp585 =  _self:my()
      elseif _self.my ~= nil then
        _temp585 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp585 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp585 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp576)
        if _t == "table" then
          if _rawget(_temp576, "__call_thing") == nil then
            _temp578 = _temp576
          else
                  if _temp576 == nil then
              if _type(_self._temp576) == "function" or (_type(_self._temp576) == "table" and _rawget(_self._temp576, "__call_thing")) then
        _temp578 =  _self:_temp576()
      elseif _self._temp576 ~= nil then
        _temp578 =  _self._temp576

        elseif _self.no_undermethod ~= nil then
          _temp578 =  _self:no_undermethod(string:new("_temp576"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp578 =  _temp576(_self)
      end

          end
        elseif _t == "number" then
          _temp578 = _temp576
        elseif _t == "function" then
                if _temp576 == nil then
              if _type(_self._temp576) == "function" or (_type(_self._temp576) == "table" and _rawget(_self._temp576, "__call_thing")) then
        _temp578 =  _self:_temp576()
      elseif _self._temp576 ~= nil then
        _temp578 =  _self._temp576

        elseif _self.no_undermethod ~= nil then
          _temp578 =  _self:no_undermethod(string:new("_temp576"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp578 =  _temp576(_self)
      end

        elseif _temp576 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp578)
      if _t == "table" then
                      if _type(_temp578.nodes) == "function" or (_type(_temp578.nodes) == "table" and _rawget(_temp578.nodes, "__call_thing")) then
        _temp578 = _temp578:nodes()
      elseif _temp578.nodes ~= nil then
        _temp578 = _temp578.nodes

        elseif _temp578.no_undermethod ~= nil then
          _temp578 =  _temp578:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp578, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp578)
      if _n.nodes ~= nil then
        _temp578 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp578 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp578, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp578)
      if _f.nodes ~= nil then
        _temp578 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp578 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp578, "nodes"))
      end

      elseif _temp578 == nil then
        _error(exception:null_error("_temp578", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp578))
      end


local _temp628 = function (_self, _temp586, _temp587)
        if _temp586 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp587 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp588 
do
local _temp589 = nil
        local _t = _type(_temp586)
        if _t == "table" then
          if _rawget(_temp586, "__call_thing") == nil then
            _temp589 = _temp586
          else
                  if _temp586 == nil then
              if _type(_self._temp586) == "function" or (_type(_self._temp586) == "table" and _rawget(_self._temp586, "__call_thing")) then
        _temp589 =  _self:_temp586()
      elseif _self._temp586 ~= nil then
        _temp589 =  _self._temp586

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp586"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp589 =  _temp586(_self)
      end

          end
        elseif _t == "number" then
          _temp589 = _temp586
        elseif _t == "function" then
                if _temp586 == nil then
              if _type(_self._temp586) == "function" or (_type(_self._temp586) == "table" and _rawget(_self._temp586, "__call_thing")) then
        _temp589 =  _self:_temp586()
      elseif _self._temp586 ~= nil then
        _temp589 =  _self._temp586

        elseif _self.no_undermethod ~= nil then
          _temp589 =  _self:no_undermethod(string:new("_temp586"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp589 =  _temp586(_self)
      end

        elseif _temp586 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp590 = nil
      local _t = _type(_temp589)
      if _t == "table" then
                      if _type(_temp589.name) == "function" or (_type(_temp589.name) == "table" and _rawget(_temp589.name, "__call_thing")) then
        _temp590 = _temp589:name()
      elseif _temp589.name ~= nil then
        _temp590 = _temp589.name

        elseif _temp589.no_undermethod ~= nil then
          _temp590 =  _temp589:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp589, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp589)
      if _n.name ~= nil then
        _temp590 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp590 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp589, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp589)
      if _f.name ~= nil then
        _temp590 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp590 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp589, "name"))
      end

      elseif _temp589 == nil then
        _error(exception:null_error("_temp589", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp589))
      end

local _temp591 = string:new("string")
local _temp592
      local _t = _type(_temp590)
      if _t == "table" then
                      if _type(_temp590._equal_equal) == "function" or (_type(_temp590._equal_equal) == "table" and _rawget(_temp590._equal_equal, "__call_thing")) then
        _temp592 = _temp590:_equal_equal(_temp591)
      elseif _temp590._equal_equal ~= nil then
        _temp592 = _temp590._equal_equal

        elseif _temp590.no_undermethod ~= nil then
          _temp592 =  _temp590:no_undermethod(string:new("==") , _temp591)
        else
          _error(exception:method_error(_temp590, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp591) == 'number' then
              if _temp590 == _temp591 then
        _temp592 = object.__true
      else
        _temp592 = object.__false
      end

      else
              local _n = number:new(_temp590)
      if _n._equal_equal ~= nil then
        _temp592 = _n:_equal_equal(_temp591)
      elseif _n.no_undermethod ~= nil then
        _temp592 =  _n:no_undermethod(string:new("==") , _temp591)
      else
        _error(exception:method_error(_temp590, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp590)
      if _f._equal_equal ~= nil then
        _temp592 = _f:_equal_equal(_temp591)
      elseif _f.no_undermethod ~= nil then
        _temp592 =  _f:no_undermethod(string:new("==") , _temp591)
      else
        _error(exception:method_error(_temp590, "=="))
      end

      elseif _temp590 == nil then
        _error(exception:null_error("_temp590", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp590))
      end

_temp588 = _temp592 
end


local _temp605 = function (_self)

local _temp593 
do
local _temp594 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp594 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp594 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp594 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp594 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp594 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp594 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp594 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp594 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp595 = nil
      local _t = _type(_temp594)
      if _t == "table" then
                      if _type(_temp594.out) == "function" or (_type(_temp594.out) == "table" and _rawget(_temp594.out, "__call_thing")) then
        _temp595 = _temp594:out()
      elseif _temp594.out ~= nil then
        _temp595 = _temp594.out

        elseif _temp594.no_undermethod ~= nil then
          _temp595 =  _temp594:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp594, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp594)
      if _n.out ~= nil then
        _temp595 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp595 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp594, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp594)
      if _f.out ~= nil then
        _temp595 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp595 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp594, "out"))
      end

      elseif _temp594 == nil then
        _error(exception:null_error("_temp594", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp594))
      end

local _temp596 = nil
do
local _temp597 = nil
    if _type(_temp579) == "function" or (_type(_temp579) == "table" and _rawget(_temp579, "__call_thing")) then
      _temp597 =  _temp579(_self)

    elseif _temp579 then
      _temp597 =  _temp579
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp597 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp597 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp597 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp597 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp598 
do
local _temp599 = nil
    if _type(_temp587) == "function" or (_type(_temp587) == "table" and _rawget(_temp587, "__call_thing")) then
      _temp599 =  _temp587(_self)

    elseif _temp587 then
      _temp599 =  _temp587
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp599 =  _self:i()
      elseif _self.i ~= nil then
        _temp599 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp599 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp599 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp600
      local _t = _type(_temp599)
      if _t == "table" then
                      if _type(_temp599._plus) == "function" or (_type(_temp599._plus) == "table" and _rawget(_temp599._plus, "__call_thing")) then
        _temp600 = _temp599:_plus(1)
      elseif _temp599._plus ~= nil then
        _temp600 = _temp599._plus

        elseif _temp599.no_undermethod ~= nil then
          _temp600 =  _temp599:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp599, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp600 = _temp599 + 1
      else
              local _n = number:new(_temp599)
      if _n._plus ~= nil then
        _temp600 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp600 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp599, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp599)
      if _f._plus ~= nil then
        _temp600 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp600 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp599, "+"))
      end

      elseif _temp599 == nil then
        _error(exception:null_error("_temp599", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp599))
      end

_temp598 = _temp600 
end

local _temp601 = nil
        local _t = _type(_temp585)
        if _t == "table" then
          if _rawget(_temp585, "__call_thing") == nil then
            _temp601 = _temp585
          else
                  if _temp585 == nil then
              if _type(_self._temp585) == "function" or (_type(_self._temp585) == "table" and _rawget(_self._temp585, "__call_thing")) then
        _temp601 =  _self:_temp585()
      elseif _self._temp585 ~= nil then
        _temp601 =  _self._temp585

        elseif _self.no_undermethod ~= nil then
          _temp601 =  _self:no_undermethod(string:new("_temp585"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp601 =  _temp585(_self)
      end

          end
        elseif _t == "number" then
          _temp601 = _temp585
        elseif _t == "function" then
                if _temp585 == nil then
              if _type(_self._temp585) == "function" or (_type(_self._temp585) == "table" and _rawget(_self._temp585, "__call_thing")) then
        _temp601 =  _self:_temp585()
      elseif _self._temp585 ~= nil then
        _temp601 =  _self._temp585

        elseif _self.no_undermethod ~= nil then
          _temp601 =  _self:no_undermethod(string:new("_temp585"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp601 =  _temp585(_self)
      end

        elseif _temp585 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp602 = nil
        local _t = _type(_temp586)
        if _t == "table" then
          if _rawget(_temp586, "__call_thing") == nil then
            _temp602 = _temp586
          else
                  if _temp586 == nil then
              if _type(_self._temp586) == "function" or (_type(_self._temp586) == "table" and _rawget(_self._temp586, "__call_thing")) then
        _temp602 =  _self:_temp586()
      elseif _self._temp586 ~= nil then
        _temp602 =  _self._temp586

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp586"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp602 =  _temp586(_self)
      end

          end
        elseif _t == "number" then
          _temp602 = _temp586
        elseif _t == "function" then
                if _temp586 == nil then
              if _type(_self._temp586) == "function" or (_type(_self._temp586) == "table" and _rawget(_self._temp586, "__call_thing")) then
        _temp602 =  _self:_temp586()
      elseif _self._temp586 ~= nil then
        _temp602 =  _self._temp586

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp586"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp602 =  _temp586(_self)
      end

        elseif _temp586 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp602)
      if _t == "table" then
                      if _type(_temp602.value) == "function" or (_type(_temp602.value) == "table" and _rawget(_temp602.value, "__call_thing")) then
        _temp602 = _temp602:value()
      elseif _temp602.value ~= nil then
        _temp602 = _temp602.value

        elseif _temp602.no_undermethod ~= nil then
          _temp602 =  _temp602:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp602, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp602)
      if _n.value ~= nil then
        _temp602 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp602 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp602, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp602)
      if _f.value ~= nil then
        _temp602 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp602 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp602, "value"))
      end

      elseif _temp602 == nil then
        _error(exception:null_error("_temp602", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp602))
      end


      local _t = _type(_temp601)
      if _t == "table" then
                      if _type(_temp601.escape_understring) == "function" or (_type(_temp601.escape_understring) == "table" and _rawget(_temp601.escape_understring, "__call_thing")) then
        _temp601 = _temp601:escape_understring(_temp602)
      elseif _temp601.escape_understring ~= nil then
        _temp601 = _temp601.escape_understring

        elseif _temp601.no_undermethod ~= nil then
          _temp601 =  _temp601:no_undermethod(string:new("escape_string") , _temp602)
        else
          _error(exception:method_error(_temp601, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp601)
      if _n.escape_understring ~= nil then
        _temp601 = _n:escape_understring(_temp602)
      elseif _n.no_undermethod ~= nil then
        _temp601 =  _n:no_undermethod(string:new("escape_string") , _temp602)
      else
        _error(exception:method_error(_temp601, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp601)
      if _f.escape_understring ~= nil then
        _temp601 = _f:escape_understring(_temp602)
      elseif _f.no_undermethod ~= nil then
        _temp601 =  _f:no_undermethod(string:new("escape_string") , _temp602)
      else
        _error(exception:method_error(_temp601, "escape_string"))
      end

      elseif _temp601 == nil then
        _error(exception:null_error("_temp601", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp601))
      end


_temp596 = string:new("" .. _tostring(_temp597) .. "[" .. _tostring(_temp598) .. "] = \"" .. _tostring(_temp601) .. "\"\n")
end
local _temp603
      local _t = _type(_temp595)
      if _t == "table" then
                      if _type(_temp595._less_less) == "function" or (_type(_temp595._less_less) == "table" and _rawget(_temp595._less_less, "__call_thing")) then
        _temp603 = _temp595:_less_less(_temp596)
      elseif _temp595._less_less ~= nil then
        _temp603 = _temp595._less_less

        elseif _temp595.no_undermethod ~= nil then
          _temp603 =  _temp595:no_undermethod(string:new("<<") , _temp596)
        else
          _error(exception:method_error(_temp595, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp595)
      if _n._less_less ~= nil then
        _temp603 = _n:_less_less(_temp596)
      elseif _n.no_undermethod ~= nil then
        _temp603 =  _n:no_undermethod(string:new("<<") , _temp596)
      else
        _error(exception:method_error(_temp595, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp595)
      if _f._less_less ~= nil then
        _temp603 = _f:_less_less(_temp596)
      elseif _f.no_undermethod ~= nil then
        _temp603 =  _f:no_undermethod(string:new("<<") , _temp596)
      else
        _error(exception:method_error(_temp595, "<<"))
      end

      elseif _temp595 == nil then
        _error(exception:null_error("_temp595", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp595))
      end

_temp593 = _temp603 
end

return _temp593
end


local _temp626 = function (_self)

local _temp606
        local _t = _type(_temp585)
        if _t == "table" then
          if _rawget(_temp585, "__call_thing") == nil then
            _temp606 = _temp585
          else
                  if _temp585 == nil then
              if _type(_self._temp585) == "function" or (_type(_self._temp585) == "table" and _rawget(_self._temp585, "__call_thing")) then
        _temp606 =  _self:_temp585()
      elseif _self._temp585 ~= nil then
        _temp606 =  _self._temp585

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp585"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp606 =  _temp585(_self)
      end

          end
        elseif _t == "number" then
          _temp606 = _temp585
        elseif _t == "function" then
                if _temp585 == nil then
              if _type(_self._temp585) == "function" or (_type(_self._temp585) == "table" and _rawget(_self._temp585, "__call_thing")) then
        _temp606 =  _self:_temp585()
      elseif _self._temp585 ~= nil then
        _temp606 =  _self._temp585

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp585"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp606 =  _temp585(_self)
      end

        elseif _temp585 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp607 = nil
    if _type(_temp586) == "function" or (_type(_temp586) == "table" and _rawget(_temp586, "__call_thing")) then
      _temp607 =  _temp586(_self)

    elseif _temp586 then
      _temp607 =  _temp586
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp607 =  _self:n()
      elseif _self.n ~= nil then
        _temp607 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp607 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp607 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp608 = nil
do
local _temp609 = nil
    if _type(_temp579) == "function" or (_type(_temp579) == "table" and _rawget(_temp579, "__call_thing")) then
      _temp609 =  _temp579(_self)

    elseif _temp579 then
      _temp609 =  _temp579
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp609 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp609 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp609 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp609 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp610 
do
local _temp611 = nil
    if _type(_temp587) == "function" or (_type(_temp587) == "table" and _rawget(_temp587, "__call_thing")) then
      _temp611 =  _temp587(_self)

    elseif _temp587 then
      _temp611 =  _temp587
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp611 =  _self:i()
      elseif _self.i ~= nil then
        _temp611 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp611 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp611 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp612
      local _t = _type(_temp611)
      if _t == "table" then
                      if _type(_temp611._plus) == "function" or (_type(_temp611._plus) == "table" and _rawget(_temp611._plus, "__call_thing")) then
        _temp612 = _temp611:_plus(1)
      elseif _temp611._plus ~= nil then
        _temp612 = _temp611._plus

        elseif _temp611.no_undermethod ~= nil then
          _temp612 =  _temp611:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp611, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp612 = _temp611 + 1
      else
              local _n = number:new(_temp611)
      if _n._plus ~= nil then
        _temp612 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp612 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp611, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp611)
      if _f._plus ~= nil then
        _temp612 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp612 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp611, "+"))
      end

      elseif _temp611 == nil then
        _error(exception:null_error("_temp611", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp611))
      end

_temp610 = _temp612 
end

_temp608 = string:new("" .. _tostring(_temp609) .. "[" .. _tostring(_temp610) .. "]")
end

      local _t = _type(_temp606)
      if _t == "table" then
                      if _type(_temp606.process) == "function" or (_type(_temp606.process) == "table" and _rawget(_temp606.process, "__call_thing")) then
        _temp606 = _temp606:process(_temp607,_temp608)
      elseif _temp606.process ~= nil then
        _temp606 = _temp606.process

        elseif _temp606.no_undermethod ~= nil then
          _temp606 =  _temp606:no_undermethod(string:new("process") , _temp607,_temp608)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp606)
      if _n.process ~= nil then
        _temp606 = _n:process(_temp607,_temp608)
      elseif _n.no_undermethod ~= nil then
        _temp606 =  _n:no_undermethod(string:new("process") , _temp607,_temp608)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp606)
      if _f.process ~= nil then
        _temp606 = _f:process(_temp607,_temp608)
      elseif _f.no_undermethod ~= nil then
        _temp606 =  _f:no_undermethod(string:new("process") , _temp607,_temp608)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp606 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp606))
      end


do
local _temp613 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp613 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp613 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp613 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp613 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp613 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp613 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp613 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp613 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp614 = nil
      local _t = _type(_temp613)
      if _t == "table" then
                      if _type(_temp613.out) == "function" or (_type(_temp613.out) == "table" and _rawget(_temp613.out, "__call_thing")) then
        _temp614 = _temp613:out()
      elseif _temp613.out ~= nil then
        _temp614 = _temp613.out

        elseif _temp613.no_undermethod ~= nil then
          _temp614 =  _temp613:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp613, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp613)
      if _n.out ~= nil then
        _temp614 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp614 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp613, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp613)
      if _f.out ~= nil then
        _temp614 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp614 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp613, "out"))
      end

      elseif _temp613 == nil then
        _error(exception:null_error("_temp613", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp613))
      end

local _temp615 = nil
        local _t = _type(_temp606)
        if _t == "table" then
          if _rawget(_temp606, "__call_thing") == nil then
            _temp615 = _temp606
          else
                  if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp615 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp615 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp615 =  _temp606(_self)
      end

          end
        elseif _t == "number" then
          _temp615 = _temp606
        elseif _t == "function" then
                if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp615 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp615 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp615 =  _temp606(_self)
      end

        elseif _temp606 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp615)
      if _t == "table" then
                      if _type(_temp615.out) == "function" or (_type(_temp615.out) == "table" and _rawget(_temp615.out, "__call_thing")) then
        _temp615 = _temp615:out()
      elseif _temp615.out ~= nil then
        _temp615 = _temp615.out

        elseif _temp615.no_undermethod ~= nil then
          _temp615 =  _temp615:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp615, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp615)
      if _n.out ~= nil then
        _temp615 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp615 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp615, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp615)
      if _f.out ~= nil then
        _temp615 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp615 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp615, "out"))
      end

      elseif _temp615 == nil then
        _error(exception:null_error("_temp615", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp615))
      end

local _temp616
      local _t = _type(_temp614)
      if _t == "table" then
                      if _type(_temp614._less_less) == "function" or (_type(_temp614._less_less) == "table" and _rawget(_temp614._less_less, "__call_thing")) then
        _temp616 = _temp614:_less_less(_temp615)
      elseif _temp614._less_less ~= nil then
        _temp616 = _temp614._less_less

        elseif _temp614.no_undermethod ~= nil then
          _temp616 =  _temp614:no_undermethod(string:new("<<") , _temp615)
        else
          _error(exception:method_error(_temp614, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp614)
      if _n._less_less ~= nil then
        _temp616 = _n:_less_less(_temp615)
      elseif _n.no_undermethod ~= nil then
        _temp616 =  _n:no_undermethod(string:new("<<") , _temp615)
      else
        _error(exception:method_error(_temp614, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp614)
      if _f._less_less ~= nil then
        _temp616 = _f:_less_less(_temp615)
      elseif _f.no_undermethod ~= nil then
        _temp616 =  _f:no_undermethod(string:new("<<") , _temp615)
      else
        _error(exception:method_error(_temp614, "<<"))
      end

      elseif _temp614 == nil then
        _error(exception:null_error("_temp614", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp614))
      end

_dummy_ = _temp616 
end

local _temp608 
do
local _temp617 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp617 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp617 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp617 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp617 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp617 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp617 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp617 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp617 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp618 = nil
      local _t = _type(_temp617)
      if _t == "table" then
                      if _type(_temp617.out) == "function" or (_type(_temp617.out) == "table" and _rawget(_temp617.out, "__call_thing")) then
        _temp618 = _temp617:out()
      elseif _temp617.out ~= nil then
        _temp618 = _temp617.out

        elseif _temp617.no_undermethod ~= nil then
          _temp618 =  _temp617:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp617, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp617)
      if _n.out ~= nil then
        _temp618 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp618 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp617)
      if _f.out ~= nil then
        _temp618 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp618 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _temp617 == nil then
        _error(exception:null_error("_temp617", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp617))
      end

local _temp619 = nil
do
local _temp620 = nil
    if _type(_temp579) == "function" or (_type(_temp579) == "table" and _rawget(_temp579, "__call_thing")) then
      _temp620 =  _temp579(_self)

    elseif _temp579 then
      _temp620 =  _temp579
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp620 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp620 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp620 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp620 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp621 
do
local _temp622 = nil
    if _type(_temp587) == "function" or (_type(_temp587) == "table" and _rawget(_temp587, "__call_thing")) then
      _temp622 =  _temp587(_self)

    elseif _temp587 then
      _temp622 =  _temp587
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp622 =  _self:i()
      elseif _self.i ~= nil then
        _temp622 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp622 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp622 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp623
      local _t = _type(_temp622)
      if _t == "table" then
                      if _type(_temp622._plus) == "function" or (_type(_temp622._plus) == "table" and _rawget(_temp622._plus, "__call_thing")) then
        _temp623 = _temp622:_plus(1)
      elseif _temp622._plus ~= nil then
        _temp623 = _temp622._plus

        elseif _temp622.no_undermethod ~= nil then
          _temp623 =  _temp622:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp622, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp623 = _temp622 + 1
      else
              local _n = number:new(_temp622)
      if _n._plus ~= nil then
        _temp623 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp623 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp622, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp622)
      if _f._plus ~= nil then
        _temp623 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp623 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp622, "+"))
      end

      elseif _temp622 == nil then
        _error(exception:null_error("_temp622", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp622))
      end

_temp621 = _temp623 
end

local _temp624 = nil
        local _t = _type(_temp606)
        if _t == "table" then
          if _rawget(_temp606, "__call_thing") == nil then
            _temp624 = _temp606
          else
                  if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp624 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp624 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp624 =  _temp606(_self)
      end

          end
        elseif _t == "number" then
          _temp624 = _temp606
        elseif _t == "function" then
                if _temp606 == nil then
              if _type(_self._temp606) == "function" or (_type(_self._temp606) == "table" and _rawget(_self._temp606, "__call_thing")) then
        _temp624 =  _self:_temp606()
      elseif _self._temp606 ~= nil then
        _temp624 =  _self._temp606

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp606"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp624 =  _temp606(_self)
      end

        elseif _temp606 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp624)
      if _t == "table" then
                      if _type(_temp624.var) == "function" or (_type(_temp624.var) == "table" and _rawget(_temp624.var, "__call_thing")) then
        _temp624 = _temp624:var()
      elseif _temp624.var ~= nil then
        _temp624 = _temp624.var

        elseif _temp624.no_undermethod ~= nil then
          _temp624 =  _temp624:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp624, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp624)
      if _n.var ~= nil then
        _temp624 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp624 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp624, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp624)
      if _f.var ~= nil then
        _temp624 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp624 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp624, "var"))
      end

      elseif _temp624 == nil then
        _error(exception:null_error("_temp624", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp624))
      end


_temp619 = string:new("" .. _tostring(_temp620) .. "[" .. _tostring(_temp621) .. "] = _tostring(" .. _tostring(_temp624) .. ")\n")
end
local _temp625
      local _t = _type(_temp618)
      if _t == "table" then
                      if _type(_temp618._less_less) == "function" or (_type(_temp618._less_less) == "table" and _rawget(_temp618._less_less, "__call_thing")) then
        _temp625 = _temp618:_less_less(_temp619)
      elseif _temp618._less_less ~= nil then
        _temp625 = _temp618._less_less

        elseif _temp618.no_undermethod ~= nil then
          _temp625 =  _temp618:no_undermethod(string:new("<<") , _temp619)
        else
          _error(exception:method_error(_temp618, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp618)
      if _n._less_less ~= nil then
        _temp625 = _n:_less_less(_temp619)
      elseif _n.no_undermethod ~= nil then
        _temp625 =  _n:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp618, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp618)
      if _f._less_less ~= nil then
        _temp625 = _f:_less_less(_temp619)
      elseif _f.no_undermethod ~= nil then
        _temp625 =  _f:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp618, "<<"))
      end

      elseif _temp618 == nil then
        _error(exception:null_error("_temp618", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp618))
      end

_temp608 = _temp625 
end

return _temp608
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp588,_temp605,_temp626)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp588,_temp605,_temp626)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp588,_temp605,_temp626)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp588,_temp605,_temp626)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp578)
      if _t == "table" then
                      if _type(_temp578.each_underwith_underindex) == "function" or (_type(_temp578.each_underwith_underindex) == "table" and _rawget(_temp578.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp578:each_underwith_underindex(_temp628)
      elseif _temp578.each_underwith_underindex ~= nil then
        _dummy_ = _temp578.each_underwith_underindex

        elseif _temp578.no_undermethod ~= nil then
          _dummy_ =  _temp578:no_undermethod(string:new("each_with_index") , _temp628)
        else
          _error(exception:method_error(_temp578, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp578)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp628)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp628)
      else
        _error(exception:method_error(_temp578, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp578)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp628)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp628)
      else
        _error(exception:method_error(_temp578, "each_with_index"))
      end

      elseif _temp578 == nil then
        _error(exception:null_error("_temp578", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp578))
      end

do
local _temp629 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp629 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp629 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp629 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp629 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp629 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp629 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp629 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp629 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp629 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp630 = nil
      local _t = _type(_temp629)
      if _t == "table" then
                      if _type(_temp629.out) == "function" or (_type(_temp629.out) == "table" and _rawget(_temp629.out, "__call_thing")) then
        _temp630 = _temp629:out()
      elseif _temp629.out ~= nil then
        _temp630 = _temp629.out

        elseif _temp629.no_undermethod ~= nil then
          _temp630 =  _temp629:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp629, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp629)
      if _n.out ~= nil then
        _temp630 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp630 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp629, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp629)
      if _f.out ~= nil then
        _temp630 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp630 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp629, "out"))
      end

      elseif _temp629 == nil then
        _error(exception:null_error("_temp629", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp629))
      end

local _temp631 = nil
do
local _temp632 = nil
        local _t = _type(_temp577)
        if _t == "table" then
          if _rawget(_temp577, "__call_thing") == nil then
            _temp632 = _temp577
          else
                  if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp632 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp632 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp632 =  _temp577(_self)
      end

          end
        elseif _t == "number" then
          _temp632 = _temp577
        elseif _t == "function" then
                if _temp577 == nil then
              if _type(_self._temp577) == "function" or (_type(_self._temp577) == "table" and _rawget(_self._temp577, "__call_thing")) then
        _temp632 =  _self:_temp577()
      elseif _self._temp577 ~= nil then
        _temp632 =  _self._temp577

        elseif _self.no_undermethod ~= nil then
          _temp632 =  _self:no_undermethod(string:new("_temp577"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp632 =  _temp577(_self)
      end

        elseif _temp577 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp632)
      if _t == "table" then
                      if _type(_temp632.var) == "function" or (_type(_temp632.var) == "table" and _rawget(_temp632.var, "__call_thing")) then
        _temp632 = _temp632:var()
      elseif _temp632.var ~= nil then
        _temp632 = _temp632.var

        elseif _temp632.no_undermethod ~= nil then
          _temp632 =  _temp632:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp632, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp632)
      if _n.var ~= nil then
        _temp632 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp632 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp632, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp632)
      if _f.var ~= nil then
        _temp632 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp632 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp632, "var"))
      end

      elseif _temp632 == nil then
        _error(exception:null_error("_temp632", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp632))
      end


local _temp633 = nil
    if _type(_temp579) == "function" or (_type(_temp579) == "table" and _rawget(_temp579, "__call_thing")) then
      _temp633 =  _temp579(_self)

    elseif _temp579 then
      _temp633 =  _temp579
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp633 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp633 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp633 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp633 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp631 = string:new("" .. _tostring(_temp632) .. " = string:new(_table.concat(" .. _tostring(_temp633) .. "))\nend\n")
end
local _temp634
      local _t = _type(_temp630)
      if _t == "table" then
                      if _type(_temp630._less_less) == "function" or (_type(_temp630._less_less) == "table" and _rawget(_temp630._less_less, "__call_thing")) then
        _temp634 = _temp630:_less_less(_temp631)
      elseif _temp630._less_less ~= nil then
        _temp634 = _temp630._less_less

        elseif _temp630.no_undermethod ~= nil then
          _temp634 =  _temp630:no_undermethod(string:new("<<") , _temp631)
        else
          _error(exception:method_error(_temp630, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp630)
      if _n._less_less ~= nil then
        _temp634 = _n:_less_less(_temp631)
      elseif _n.no_undermethod ~= nil then
        _temp634 =  _n:no_undermethod(string:new("<<") , _temp631)
      else
        _error(exception:method_error(_temp630, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp630)
      if _f._less_less ~= nil then
        _temp634 = _f:_less_less(_temp631)
      elseif _f.no_undermethod ~= nil then
        _temp634 =  _f:no_undermethod(string:new("<<") , _temp631)
      else
        _error(exception:method_error(_temp630, "<<"))
      end

      elseif _temp630 == nil then
        _error(exception:null_error("_temp630", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp630))
      end

_dummy_ = _temp634 
end

    if _type(_temp577) == "function" or (_type(_temp577) == "table" and _rawget(_temp577, "__call_thing")) then
      return  _temp577(_self)

    elseif _temp577 then
      return  _temp577
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp574)
      if _t == "table" then
                      if _type(_temp574.walk) == "function" or (_type(_temp574.walk) == "table" and _rawget(_temp574.walk, "__call_thing")) then
        _dummy_ = _temp574:walk(_temp4,_temp578)
      elseif _temp574.walk ~= nil then
        _dummy_ = _temp574.walk

        elseif _temp574.no_undermethod ~= nil then
          _dummy_ =  _temp574:no_undermethod(string:new("walk") , _temp4,_temp578)
        else
          _error(exception:method_error(_temp574, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp574)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp578)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp578)
      else
        _error(exception:method_error(_temp574, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp574)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp578)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp578)
      else
        _error(exception:method_error(_temp574, "walk"))
      end

      elseif _temp574 == nil then
        _error(exception:null_error("_temp574", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp574))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp578 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp578 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp578 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp578 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp578 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp578 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp578 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp578 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp578 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp578 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp646 = function (_self, _temp636,_temp635)
        if _temp636 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp635 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp635 =  null(_self)

    elseif null then
      _temp635 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp635 =  _self:null()
      elseif _self.null ~= nil then
        _temp635 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp635 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp635 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp637
local _temp638 = nil
    if _type(_temp635) == "function" or (_type(_temp635) == "table" and _rawget(_temp635, "__call_thing")) then
      _temp638 =  _temp635(_self)

    elseif _temp635 then
      _temp638 =  _temp635
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp638 =  _self:var()
      elseif _self.var ~= nil then
        _temp638 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp638 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp638 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp637 =  set_underresult(_self, _temp638)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp637 =  _self:set_underresult(_temp638)
      elseif _self.set_underresult ~= nil then
        _temp637 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp637 =  _self:no_undermethod(string:new("set_result") , _temp638)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp637 =  no_undermethod(_self, string:new("set_result") , _temp638)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp639
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp639 =  my(_self)

    elseif my then
      _temp639 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp639 =  _self:my()
      elseif _self.my ~= nil then
        _temp639 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp639 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp639 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp640
        local _t = _type(_temp636)
        if _t == "table" then
          if _rawget(_temp636, "__call_thing") == nil then
            _temp640 = _temp636
          else
                  if _temp636 == nil then
              if _type(_self._temp636) == "function" or (_type(_self._temp636) == "table" and _rawget(_self._temp636, "__call_thing")) then
        _temp640 =  _self:_temp636()
      elseif _self._temp636 ~= nil then
        _temp640 =  _self._temp636

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp636"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp640 =  _temp636(_self)
      end

          end
        elseif _t == "number" then
          _temp640 = _temp636
        elseif _t == "function" then
                if _temp636 == nil then
              if _type(_self._temp636) == "function" or (_type(_self._temp636) == "table" and _rawget(_self._temp636, "__call_thing")) then
        _temp640 =  _self:_temp636()
      elseif _self._temp636 ~= nil then
        _temp640 =  _self._temp636

        elseif _self.no_undermethod ~= nil then
          _temp640 =  _self:no_undermethod(string:new("_temp636"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp640 =  _temp636(_self)
      end

        elseif _temp636 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp640)
      if _t == "table" then
                      if _type(_temp640.nodes) == "function" or (_type(_temp640.nodes) == "table" and _rawget(_temp640.nodes, "__call_thing")) then
        _temp640 = _temp640:nodes()
      elseif _temp640.nodes ~= nil then
        _temp640 = _temp640.nodes

        elseif _temp640.no_undermethod ~= nil then
          _temp640 =  _temp640:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp640)
      if _n.nodes ~= nil then
        _temp640 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp640 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp640)
      if _f.nodes ~= nil then
        _temp640 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp640 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp640 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp640))
      end


local _temp646 = function (_self, _temp641)
        if _temp641 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp642 = nil
        local _t = _type(_temp639)
        if _t == "table" then
          if _rawget(_temp639, "__call_thing") == nil then
            _temp642 = _temp639
          else
                  if _temp639 == nil then
              if _type(_self._temp639) == "function" or (_type(_self._temp639) == "table" and _rawget(_self._temp639, "__call_thing")) then
        _temp642 =  _self:_temp639()
      elseif _self._temp639 ~= nil then
        _temp642 =  _self._temp639

        elseif _self.no_undermethod ~= nil then
          _temp642 =  _self:no_undermethod(string:new("_temp639"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp642 =  _temp639(_self)
      end

          end
        elseif _t == "number" then
          _temp642 = _temp639
        elseif _t == "function" then
                if _temp639 == nil then
              if _type(_self._temp639) == "function" or (_type(_self._temp639) == "table" and _rawget(_self._temp639, "__call_thing")) then
        _temp642 =  _self:_temp639()
      elseif _self._temp639 ~= nil then
        _temp642 =  _self._temp639

        elseif _self.no_undermethod ~= nil then
          _temp642 =  _self:no_undermethod(string:new("_temp639"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp642 =  _temp639(_self)
      end

        elseif _temp639 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp643 = nil
    if _type(_temp641) == "function" or (_type(_temp641) == "table" and _rawget(_temp641, "__call_thing")) then
      _temp643 =  _temp641(_self)

    elseif _temp641 then
      _temp643 =  _temp641
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp643 =  _self:n()
      elseif _self.n ~= nil then
        _temp643 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp643 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp643 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp644 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp644 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp644 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp644 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp644 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp644 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp644 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp644 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp644 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp644 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp644 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp644)
      if _t == "table" then
                      if _type(_temp644.var) == "function" or (_type(_temp644.var) == "table" and _rawget(_temp644.var, "__call_thing")) then
        _temp644 = _temp644:var()
      elseif _temp644.var ~= nil then
        _temp644 = _temp644.var

        elseif _temp644.no_undermethod ~= nil then
          _temp644 =  _temp644:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp644, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp644)
      if _n.var ~= nil then
        _temp644 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp644 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp644, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp644)
      if _f.var ~= nil then
        _temp644 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp644 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp644, "var"))
      end

      elseif _temp644 == nil then
        _error(exception:null_error("_temp644", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp644))
      end


      local _t = _type(_temp642)
      if _t == "table" then
                      if _type(_temp642.process) == "function" or (_type(_temp642.process) == "table" and _rawget(_temp642.process, "__call_thing")) then
        return _temp642:process(_temp643,_temp644)
      elseif _temp642.process ~= nil then
        return _temp642.process

        elseif _temp642.no_undermethod ~= nil then
          return  _temp642:no_undermethod(string:new("process") , _temp643,_temp644)
        else
          _error(exception:method_error(_temp642, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp642)
      if _n.process ~= nil then
        return _n:process(_temp643,_temp644)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp643,_temp644)
      else
        _error(exception:method_error(_temp642, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp642)
      if _f.process ~= nil then
        return _f:process(_temp643,_temp644)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp643,_temp644)
      else
        _error(exception:method_error(_temp642, "process"))
      end

      elseif _temp642 == nil then
        _error(exception:null_error("_temp642", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp642))
      end

end

      local _t = _type(_temp640)
      if _t == "table" then
                      if _type(_temp640.map) == "function" or (_type(_temp640.map) == "table" and _rawget(_temp640.map, "__call_thing")) then
        _temp640 = _temp640:map(_temp646)
      elseif _temp640.map ~= nil then
        _temp640 = _temp640.map

        elseif _temp640.no_undermethod ~= nil then
          _temp640 =  _temp640:no_undermethod(string:new("map") , _temp646)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp640)
      if _n.map ~= nil then
        _temp640 = _n:map(_temp646)
      elseif _n.no_undermethod ~= nil then
        _temp640 =  _n:no_undermethod(string:new("map") , _temp646)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp640)
      if _f.map ~= nil then
        _temp640 = _f:map(_temp646)
      elseif _f.no_undermethod ~= nil then
        _temp640 =  _f:no_undermethod(string:new("map") , _temp646)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp640 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp640))
      end


do
local _temp647 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp647 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp647 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp647 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp647 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp647 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp647 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp647 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp647 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp648 = nil
      local _t = _type(_temp647)
      if _t == "table" then
                      if _type(_temp647.out) == "function" or (_type(_temp647.out) == "table" and _rawget(_temp647.out, "__call_thing")) then
        _temp648 = _temp647:out()
      elseif _temp647.out ~= nil then
        _temp648 = _temp647.out

        elseif _temp647.no_undermethod ~= nil then
          _temp648 =  _temp647:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp647, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp647)
      if _n.out ~= nil then
        _temp648 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp648 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp647)
      if _f.out ~= nil then
        _temp648 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp648 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp647, "out"))
      end

      elseif _temp647 == nil then
        _error(exception:null_error("_temp647", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp647))
      end

local _temp649 = nil
        local _t = _type(_temp640)
        if _t == "table" then
          if _rawget(_temp640, "__call_thing") == nil then
            _temp649 = _temp640
          else
                  if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp649 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp649 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp649 =  _temp640(_self)
      end

          end
        elseif _t == "number" then
          _temp649 = _temp640
        elseif _t == "function" then
                if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp649 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp649 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp649 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp649 =  _temp640(_self)
      end

        elseif _temp640 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp650 = string:new("out")

      local _t = _type(_temp649)
      if _t == "table" then
                      if _type(_temp649.map) == "function" or (_type(_temp649.map) == "table" and _rawget(_temp649.map, "__call_thing")) then
        _temp649 = _temp649:map(_temp650)
      elseif _temp649.map ~= nil then
        _temp649 = _temp649.map

        elseif _temp649.no_undermethod ~= nil then
          _temp649 =  _temp649:no_undermethod(string:new("map") , _temp650)
        else
          _error(exception:method_error(_temp649, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp649)
      if _n.map ~= nil then
        _temp649 = _n:map(_temp650)
      elseif _n.no_undermethod ~= nil then
        _temp649 =  _n:no_undermethod(string:new("map") , _temp650)
      else
        _error(exception:method_error(_temp649, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp649)
      if _f.map ~= nil then
        _temp649 = _f:map(_temp650)
      elseif _f.no_undermethod ~= nil then
        _temp649 =  _f:no_undermethod(string:new("map") , _temp650)
      else
        _error(exception:method_error(_temp649, "map"))
      end

      elseif _temp649 == nil then
        _error(exception:null_error("_temp649", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp649))
      end

_temp650 = string:new("\n")

      local _t = _type(_temp649)
      if _t == "table" then
                      if _type(_temp649.join) == "function" or (_type(_temp649.join) == "table" and _rawget(_temp649.join, "__call_thing")) then
        _temp649 = _temp649:join(_temp650)
      elseif _temp649.join ~= nil then
        _temp649 = _temp649.join

        elseif _temp649.no_undermethod ~= nil then
          _temp649 =  _temp649:no_undermethod(string:new("join") , _temp650)
        else
          _error(exception:method_error(_temp649, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp649)
      if _n.join ~= nil then
        _temp649 = _n:join(_temp650)
      elseif _n.no_undermethod ~= nil then
        _temp649 =  _n:no_undermethod(string:new("join") , _temp650)
      else
        _error(exception:method_error(_temp649, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp649)
      if _f.join ~= nil then
        _temp649 = _f:join(_temp650)
      elseif _f.no_undermethod ~= nil then
        _temp649 =  _f:no_undermethod(string:new("join") , _temp650)
      else
        _error(exception:method_error(_temp649, "join"))
      end

      elseif _temp649 == nil then
        _error(exception:null_error("_temp649", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp649))
      end

local _temp650
      local _t = _type(_temp648)
      if _t == "table" then
                      if _type(_temp648._less_less) == "function" or (_type(_temp648._less_less) == "table" and _rawget(_temp648._less_less, "__call_thing")) then
        _temp650 = _temp648:_less_less(_temp649)
      elseif _temp648._less_less ~= nil then
        _temp650 = _temp648._less_less

        elseif _temp648.no_undermethod ~= nil then
          _temp650 =  _temp648:no_undermethod(string:new("<<") , _temp649)
        else
          _error(exception:method_error(_temp648, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp648)
      if _n._less_less ~= nil then
        _temp650 = _n:_less_less(_temp649)
      elseif _n.no_undermethod ~= nil then
        _temp650 =  _n:no_undermethod(string:new("<<") , _temp649)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp648)
      if _f._less_less ~= nil then
        _temp650 = _f:_less_less(_temp649)
      elseif _f.no_undermethod ~= nil then
        _temp650 =  _f:no_undermethod(string:new("<<") , _temp649)
      else
        _error(exception:method_error(_temp648, "<<"))
      end

      elseif _temp648 == nil then
        _error(exception:null_error("_temp648", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp648))
      end

_dummy_ = _temp650 
end

local _temp646 
do
local _temp651 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp651 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp651 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp651 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp651 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp651 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp651 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp651 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp651 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp651 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp652 = nil
      local _t = _type(_temp651)
      if _t == "table" then
                      if _type(_temp651.var) == "function" or (_type(_temp651.var) == "table" and _rawget(_temp651.var, "__call_thing")) then
        _temp652 = _temp651:var()
      elseif _temp651.var ~= nil then
        _temp652 = _temp651.var

        elseif _temp651.no_undermethod ~= nil then
          _temp652 =  _temp651:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp651, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp651)
      if _n.var ~= nil then
        _temp652 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp652 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp651, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp651)
      if _f.var ~= nil then
        _temp652 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp652 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp651, "var"))
      end

      elseif _temp651 == nil then
        _error(exception:null_error("_temp651", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp651))
      end

local _temp653 = nil
        local _t = _type(_temp640)
        if _t == "table" then
          if _rawget(_temp640, "__call_thing") == nil then
            _temp653 = _temp640
          else
                  if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp653 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp653 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp653 =  _temp640(_self)
      end

          end
        elseif _t == "number" then
          _temp653 = _temp640
        elseif _t == "function" then
                if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp653 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp653 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp653 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp653 =  _temp640(_self)
      end

        elseif _temp640 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp653)
      if _t == "table" then
                      if _type(_temp653.last) == "function" or (_type(_temp653.last) == "table" and _rawget(_temp653.last, "__call_thing")) then
        _temp653 = _temp653:last()
      elseif _temp653.last ~= nil then
        _temp653 = _temp653.last

        elseif _temp653.no_undermethod ~= nil then
          _temp653 =  _temp653:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp653, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp653)
      if _n.last ~= nil then
        _temp653 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp653 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp653, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp653)
      if _f.last ~= nil then
        _temp653 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp653 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp653, "last"))
      end

      elseif _temp653 == nil then
        _error(exception:null_error("_temp653", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp653))
      end

      local _t = _type(_temp653)
      if _t == "table" then
                      if _type(_temp653.var) == "function" or (_type(_temp653.var) == "table" and _rawget(_temp653.var, "__call_thing")) then
        _temp653 = _temp653:var()
      elseif _temp653.var ~= nil then
        _temp653 = _temp653.var

        elseif _temp653.no_undermethod ~= nil then
          _temp653 =  _temp653:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp653, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp653)
      if _n.var ~= nil then
        _temp653 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp653 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp653, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp653)
      if _f.var ~= nil then
        _temp653 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp653 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp653, "var"))
      end

      elseif _temp653 == nil then
        _error(exception:null_error("_temp653", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp653))
      end

local _temp654
      local _t = _type(_temp652)
      if _t == "table" then
                      if _type(_temp652._bang_equal) == "function" or (_type(_temp652._bang_equal) == "table" and _rawget(_temp652._bang_equal, "__call_thing")) then
        _temp654 = _temp652:_bang_equal(_temp653)
      elseif _temp652._bang_equal ~= nil then
        _temp654 = _temp652._bang_equal

        elseif _temp652.no_undermethod ~= nil then
          _temp654 =  _temp652:no_undermethod(string:new("!=") , _temp653)
        else
          _error(exception:method_error(_temp652, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp652)
      if _n._bang_equal ~= nil then
        _temp654 = _n:_bang_equal(_temp653)
      elseif _n.no_undermethod ~= nil then
        _temp654 =  _n:no_undermethod(string:new("!=") , _temp653)
      else
        _error(exception:method_error(_temp652, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp652)
      if _f._bang_equal ~= nil then
        _temp654 = _f:_bang_equal(_temp653)
      elseif _f.no_undermethod ~= nil then
        _temp654 =  _f:no_undermethod(string:new("!=") , _temp653)
      else
        _error(exception:method_error(_temp652, "!="))
      end

      elseif _temp652 == nil then
        _error(exception:null_error("_temp652", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp652))
      end

_temp646 = _temp654 
end


local _temp663 = function (_self)

local _temp655 
do
local _temp656 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp656 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp656 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp656 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp656 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp656 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp656 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp656 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp656 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp656 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp656 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp657 = nil
      local _t = _type(_temp656)
      if _t == "table" then
                      if _type(_temp656.out) == "function" or (_type(_temp656.out) == "table" and _rawget(_temp656.out, "__call_thing")) then
        _temp657 = _temp656:out()
      elseif _temp656.out ~= nil then
        _temp657 = _temp656.out

        elseif _temp656.no_undermethod ~= nil then
          _temp657 =  _temp656:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp656, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp656)
      if _n.out ~= nil then
        _temp657 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp657 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp656, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp656)
      if _f.out ~= nil then
        _temp657 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp657 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp656, "out"))
      end

      elseif _temp656 == nil then
        _error(exception:null_error("_temp656", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp656))
      end

local _temp658 = nil
do
local _temp659 = nil
        local _t = _type(_temp637)
        if _t == "table" then
          if _rawget(_temp637, "__call_thing") == nil then
            _temp659 = _temp637
          else
                  if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp659 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp659 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp659 =  _temp637(_self)
      end

          end
        elseif _t == "number" then
          _temp659 = _temp637
        elseif _t == "function" then
                if _temp637 == nil then
              if _type(_self._temp637) == "function" or (_type(_self._temp637) == "table" and _rawget(_self._temp637, "__call_thing")) then
        _temp659 =  _self:_temp637()
      elseif _self._temp637 ~= nil then
        _temp659 =  _self._temp637

        elseif _self.no_undermethod ~= nil then
          _temp659 =  _self:no_undermethod(string:new("_temp637"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp659 =  _temp637(_self)
      end

        elseif _temp637 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp659)
      if _t == "table" then
                      if _type(_temp659.var) == "function" or (_type(_temp659.var) == "table" and _rawget(_temp659.var, "__call_thing")) then
        _temp659 = _temp659:var()
      elseif _temp659.var ~= nil then
        _temp659 = _temp659.var

        elseif _temp659.no_undermethod ~= nil then
          _temp659 =  _temp659:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp659, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp659)
      if _n.var ~= nil then
        _temp659 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp659 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp659, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp659)
      if _f.var ~= nil then
        _temp659 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp659 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp659, "var"))
      end

      elseif _temp659 == nil then
        _error(exception:null_error("_temp659", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp659))
      end


local _temp660 = nil
        local _t = _type(_temp640)
        if _t == "table" then
          if _rawget(_temp640, "__call_thing") == nil then
            _temp660 = _temp640
          else
                  if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp660 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp660 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp660 =  _temp640(_self)
      end

          end
        elseif _t == "number" then
          _temp660 = _temp640
        elseif _t == "function" then
                if _temp640 == nil then
              if _type(_self._temp640) == "function" or (_type(_self._temp640) == "table" and _rawget(_self._temp640, "__call_thing")) then
        _temp660 =  _self:_temp640()
      elseif _self._temp640 ~= nil then
        _temp660 =  _self._temp640

        elseif _self.no_undermethod ~= nil then
          _temp660 =  _self:no_undermethod(string:new("_temp640"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp660 =  _temp640(_self)
      end

        elseif _temp640 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp660)
      if _t == "table" then
                      if _type(_temp660.last) == "function" or (_type(_temp660.last) == "table" and _rawget(_temp660.last, "__call_thing")) then
        _temp660 = _temp660:last()
      elseif _temp660.last ~= nil then
        _temp660 = _temp660.last

        elseif _temp660.no_undermethod ~= nil then
          _temp660 =  _temp660:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp660, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp660)
      if _n.last ~= nil then
        _temp660 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp660, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp660)
      if _f.last ~= nil then
        _temp660 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp660, "last"))
      end

      elseif _temp660 == nil then
        _error(exception:null_error("_temp660", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp660))
      end

      local _t = _type(_temp660)
      if _t == "table" then
                      if _type(_temp660.var) == "function" or (_type(_temp660.var) == "table" and _rawget(_temp660.var, "__call_thing")) then
        _temp660 = _temp660:var()
      elseif _temp660.var ~= nil then
        _temp660 = _temp660.var

        elseif _temp660.no_undermethod ~= nil then
          _temp660 =  _temp660:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp660, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp660)
      if _n.var ~= nil then
        _temp660 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp660 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp660, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp660)
      if _f.var ~= nil then
        _temp660 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp660 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp660, "var"))
      end

      elseif _temp660 == nil then
        _error(exception:null_error("_temp660", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp660))
      end


_temp658 = string:new("\n" .. _tostring(_temp659) .. " = " .. _tostring(_temp660) .. "\n")
end
local _temp661
      local _t = _type(_temp657)
      if _t == "table" then
                      if _type(_temp657._less_less) == "function" or (_type(_temp657._less_less) == "table" and _rawget(_temp657._less_less, "__call_thing")) then
        _temp661 = _temp657:_less_less(_temp658)
      elseif _temp657._less_less ~= nil then
        _temp661 = _temp657._less_less

        elseif _temp657.no_undermethod ~= nil then
          _temp661 =  _temp657:no_undermethod(string:new("<<") , _temp658)
        else
          _error(exception:method_error(_temp657, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp657)
      if _n._less_less ~= nil then
        _temp661 = _n:_less_less(_temp658)
      elseif _n.no_undermethod ~= nil then
        _temp661 =  _n:no_undermethod(string:new("<<") , _temp658)
      else
        _error(exception:method_error(_temp657, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp657)
      if _f._less_less ~= nil then
        _temp661 = _f:_less_less(_temp658)
      elseif _f.no_undermethod ~= nil then
        _temp661 =  _f:no_undermethod(string:new("<<") , _temp658)
      else
        _error(exception:method_error(_temp657, "<<"))
      end

      elseif _temp657 == nil then
        _error(exception:null_error("_temp657", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp657))
      end

_temp655 = _temp661 
end

return _temp655
end

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp646,_temp663)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp646,_temp663)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp646,_temp663)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp646,_temp663)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp637) == "function" or (_type(_temp637) == "table" and _rawget(_temp637, "__call_thing")) then
      return  _temp637(_self)

    elseif _temp637 then
      return  _temp637
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp578)
      if _t == "table" then
                      if _type(_temp578.walk) == "function" or (_type(_temp578.walk) == "table" and _rawget(_temp578.walk, "__call_thing")) then
        _dummy_ = _temp578:walk(_temp4,_temp646)
      elseif _temp578.walk ~= nil then
        _dummy_ = _temp578.walk

        elseif _temp578.no_undermethod ~= nil then
          _dummy_ =  _temp578:no_undermethod(string:new("walk") , _temp4,_temp646)
        else
          _error(exception:method_error(_temp578, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp578)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp646)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp646)
      else
        _error(exception:method_error(_temp578, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp578)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp646)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp646)
      else
        _error(exception:method_error(_temp578, "walk"))
      end

      elseif _temp578 == nil then
        _error(exception:null_error("_temp578", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp578))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp646 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp646 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp646 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp646 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp646 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp646 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp646 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp646 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp646 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp646 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp669 = function (_self, _temp665,_temp664)
        if _temp665 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp664 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp664 =  null(_self)

    elseif null then
      _temp664 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp664 =  _self:null()
      elseif _self.null ~= nil then
        _temp664 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp664 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp664 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp666
local _temp667 = nil
    if _type(_temp665) == "function" or (_type(_temp665) == "table" and _rawget(_temp665, "__call_thing")) then
      _temp667 =  _temp665(_self)

    elseif _temp665 then
      _temp667 =  _temp665
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp667 =  _self:node()
      elseif _self.node ~= nil then
        _temp667 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp667 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp667 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp666 =  reorder_underops(_self, _temp667)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp666 =  _self:reorder_underops(_temp667)
      elseif _self.reorder_underops ~= nil then
        _temp666 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp666 =  _self:no_undermethod(string:new("reorder_ops") , _temp667)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp666 =  no_undermethod(_self, string:new("reorder_ops") , _temp667)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp666) == "function" or (_type(_temp666) == "table" and _rawget(_temp666, "__call_thing")) then
      _temp667 =  _temp666(_self)

    elseif _temp666 then
      _temp667 =  _temp666
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp667 =  _self:res()
      elseif _self.res ~= nil then
        _temp667 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp667 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp667 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp667)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp667)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp667)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp667)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp646)
      if _t == "table" then
                      if _type(_temp646.walk) == "function" or (_type(_temp646.walk) == "table" and _rawget(_temp646.walk, "__call_thing")) then
        _dummy_ = _temp646:walk(_temp4,_temp669)
      elseif _temp646.walk ~= nil then
        _dummy_ = _temp646.walk

        elseif _temp646.no_undermethod ~= nil then
          _dummy_ =  _temp646:no_undermethod(string:new("walk") , _temp4,_temp669)
        else
          _error(exception:method_error(_temp646, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp646)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp669)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp669)
      else
        _error(exception:method_error(_temp646, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp646)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp669)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp669)
      else
        _error(exception:method_error(_temp646, "walk"))
      end

      elseif _temp646 == nil then
        _error(exception:null_error("_temp646", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp646))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp669 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp669 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp669 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp669 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp669 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp669 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp669 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp669 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp669 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp669 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp681 = function (_self, _temp671,_temp670)
        if _temp671 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp670 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp670 =  null(_self)

    elseif null then
      _temp670 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp670 =  _self:null()
      elseif _self.null ~= nil then
        _temp670 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp670 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp670 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp672
local _temp673 = nil
    if _type(_temp670) == "function" or (_type(_temp670) == "table" and _rawget(_temp670, "__call_thing")) then
      _temp673 =  _temp670(_self)

    elseif _temp670 then
      _temp673 =  _temp670
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp673 =  _self:var()
      elseif _self.var ~= nil then
        _temp673 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp673 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp673 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp672 =  set_underresult(_self, _temp673)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp672 =  _self:set_underresult(_temp673)
      elseif _self.set_underresult ~= nil then
        _temp672 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp672 =  _self:no_undermethod(string:new("set_result") , _temp673)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp672 =  no_undermethod(_self, string:new("set_result") , _temp673)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp674 = nil
        local _t = _type(_temp672)
        if _t == "table" then
          if _rawget(_temp672, "__call_thing") == nil then
            _temp674 = _temp672
          else
                  if _temp672 == nil then
              if _type(_self._temp672) == "function" or (_type(_self._temp672) == "table" and _rawget(_self._temp672, "__call_thing")) then
        _temp674 =  _self:_temp672()
      elseif _self._temp672 ~= nil then
        _temp674 =  _self._temp672

        elseif _self.no_undermethod ~= nil then
          _temp674 =  _self:no_undermethod(string:new("_temp672"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp674 =  _temp672(_self)
      end

          end
        elseif _t == "number" then
          _temp674 = _temp672
        elseif _t == "function" then
                if _temp672 == nil then
              if _type(_self._temp672) == "function" or (_type(_self._temp672) == "table" and _rawget(_self._temp672, "__call_thing")) then
        _temp674 =  _self:_temp672()
      elseif _self._temp672 ~= nil then
        _temp674 =  _self._temp672

        elseif _self.no_undermethod ~= nil then
          _temp674 =  _self:no_undermethod(string:new("_temp672"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp674 =  _temp672(_self)
      end

        elseif _temp672 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp675 = nil
      local _t = _type(_temp674)
      if _t == "table" then
                      if _type(_temp674.out) == "function" or (_type(_temp674.out) == "table" and _rawget(_temp674.out, "__call_thing")) then
        _temp675 = _temp674:out()
      elseif _temp674.out ~= nil then
        _temp675 = _temp674.out

        elseif _temp674.no_undermethod ~= nil then
          _temp675 =  _temp674:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp674, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp674)
      if _n.out ~= nil then
        _temp675 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp675 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp674, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp674)
      if _f.out ~= nil then
        _temp675 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp675 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp674, "out"))
      end

      elseif _temp674 == nil then
        _error(exception:null_error("_temp674", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp674))
      end

local _temp676 = nil
local _temp677 = nil
        local _t = _type(_temp671)
        if _t == "table" then
          if _rawget(_temp671, "__call_thing") == nil then
            _temp677 = _temp671
          else
                  if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp677 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp677 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp677 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp677 =  _temp671(_self)
      end

          end
        elseif _t == "number" then
          _temp677 = _temp671
        elseif _t == "function" then
                if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp677 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp677 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp677 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp677 =  _temp671(_self)
      end

        elseif _temp671 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp677)
      if _t == "table" then
                      if _type(_temp677.lhs) == "function" or (_type(_temp677.lhs) == "table" and _rawget(_temp677.lhs, "__call_thing")) then
        _temp677 = _temp677:lhs()
      elseif _temp677.lhs ~= nil then
        _temp677 = _temp677.lhs

        elseif _temp677.no_undermethod ~= nil then
          _temp677 =  _temp677:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp677, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp677)
      if _n.lhs ~= nil then
        _temp677 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp677 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp677, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp677)
      if _f.lhs ~= nil then
        _temp677 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp677 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp677, "lhs"))
      end

      elseif _temp677 == nil then
        _error(exception:null_error("_temp677", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp677))
      end

      local _t = _type(_temp677)
      if _t == "table" then
                      if _type(_temp677.value) == "function" or (_type(_temp677.value) == "table" and _rawget(_temp677.value, "__call_thing")) then
        _temp677 = _temp677:value()
      elseif _temp677.value ~= nil then
        _temp677 = _temp677.value

        elseif _temp677.no_undermethod ~= nil then
          _temp677 =  _temp677:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp677, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp677)
      if _n.value ~= nil then
        _temp677 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp677 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp677, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp677)
      if _f.value ~= nil then
        _temp677 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp677 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp677, "value"))
      end

      elseif _temp677 == nil then
        _error(exception:null_error("_temp677", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp677))
      end


local _temp678 = nil
        local _t = _type(_temp671)
        if _t == "table" then
          if _rawget(_temp671, "__call_thing") == nil then
            _temp678 = _temp671
          else
                  if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp678 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp678 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp678 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp678 =  _temp671(_self)
      end

          end
        elseif _t == "number" then
          _temp678 = _temp671
        elseif _t == "function" then
                if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp678 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp678 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp678 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp678 =  _temp671(_self)
      end

        elseif _temp671 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp678)
      if _t == "table" then
                      if _type(_temp678.op) == "function" or (_type(_temp678.op) == "table" and _rawget(_temp678.op, "__call_thing")) then
        _temp678 = _temp678:op()
      elseif _temp678.op ~= nil then
        _temp678 = _temp678.op

        elseif _temp678.no_undermethod ~= nil then
          _temp678 =  _temp678:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp678, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp678)
      if _n.op ~= nil then
        _temp678 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp678 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp678, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp678)
      if _f.op ~= nil then
        _temp678 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp678 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp678, "op"))
      end

      elseif _temp678 == nil then
        _error(exception:null_error("_temp678", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp678))
      end


local _temp679 = nil
        local _t = _type(_temp671)
        if _t == "table" then
          if _rawget(_temp671, "__call_thing") == nil then
            _temp679 = _temp671
          else
                  if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp679 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp679 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp679 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp679 =  _temp671(_self)
      end

          end
        elseif _t == "number" then
          _temp679 = _temp671
        elseif _t == "function" then
                if _temp671 == nil then
              if _type(_self._temp671) == "function" or (_type(_self._temp671) == "table" and _rawget(_self._temp671, "__call_thing")) then
        _temp679 =  _self:_temp671()
      elseif _self._temp671 ~= nil then
        _temp679 =  _self._temp671

        elseif _self.no_undermethod ~= nil then
          _temp679 =  _self:no_undermethod(string:new("_temp671"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp679 =  _temp671(_self)
      end

        elseif _temp671 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp679)
      if _t == "table" then
                      if _type(_temp679.rhs) == "function" or (_type(_temp679.rhs) == "table" and _rawget(_temp679.rhs, "__call_thing")) then
        _temp679 = _temp679:rhs()
      elseif _temp679.rhs ~= nil then
        _temp679 = _temp679.rhs

        elseif _temp679.no_undermethod ~= nil then
          _temp679 =  _temp679:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp679, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp679)
      if _n.rhs ~= nil then
        _temp679 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp679 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp679, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp679)
      if _f.rhs ~= nil then
        _temp679 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp679 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp679, "rhs"))
      end

      elseif _temp679 == nil then
        _error(exception:null_error("_temp679", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp679))
      end

      local _t = _type(_temp679)
      if _t == "table" then
                      if _type(_temp679.value) == "function" or (_type(_temp679.value) == "table" and _rawget(_temp679.value, "__call_thing")) then
        _temp679 = _temp679:value()
      elseif _temp679.value ~= nil then
        _temp679 = _temp679.value

        elseif _temp679.no_undermethod ~= nil then
          _temp679 =  _temp679:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp679, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp679)
      if _n.value ~= nil then
        _temp679 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp679 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp679, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp679)
      if _f.value ~= nil then
        _temp679 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp679 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp679, "value"))
      end

      elseif _temp679 == nil then
        _error(exception:null_error("_temp679", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp679))
      end


local _temp680 = nil
        local _t = _type(_temp672)
        if _t == "table" then
          if _rawget(_temp672, "__call_thing") == nil then
            _temp680 = _temp672
          else
                  if _temp672 == nil then
              if _type(_self._temp672) == "function" or (_type(_self._temp672) == "table" and _rawget(_self._temp672, "__call_thing")) then
        _temp680 =  _self:_temp672()
      elseif _self._temp672 ~= nil then
        _temp680 =  _self._temp672

        elseif _self.no_undermethod ~= nil then
          _temp680 =  _self:no_undermethod(string:new("_temp672"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp680 =  _temp672(_self)
      end

          end
        elseif _t == "number" then
          _temp680 = _temp672
        elseif _t == "function" then
                if _temp672 == nil then
              if _type(_self._temp672) == "function" or (_type(_self._temp672) == "table" and _rawget(_self._temp672, "__call_thing")) then
        _temp680 =  _self:_temp672()
      elseif _self._temp672 ~= nil then
        _temp680 =  _self._temp672

        elseif _self.no_undermethod ~= nil then
          _temp680 =  _self:no_undermethod(string:new("_temp672"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp680 =  _temp672(_self)
      end

        elseif _temp672 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp680)
      if _t == "table" then
                      if _type(_temp680.var) == "function" or (_type(_temp680.var) == "table" and _rawget(_temp680.var, "__call_thing")) then
        _temp680 = _temp680:var()
      elseif _temp680.var ~= nil then
        _temp680 = _temp680.var

        elseif _temp680.no_undermethod ~= nil then
          _temp680 =  _temp680:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp680, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp680)
      if _n.var ~= nil then
        _temp680 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp680 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp680, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp680)
      if _f.var ~= nil then
        _temp680 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp680 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp680, "var"))
      end

      elseif _temp680 == nil then
        _error(exception:null_error("_temp680", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp680))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp676 =  invoke_undernumbers(_self, _temp677,_temp678,_temp679,_temp680)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp676 =  _self:invoke_undernumbers(_temp677,_temp678,_temp679,_temp680)
      elseif _self.invoke_undernumbers ~= nil then
        _temp676 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp676 =  _self:no_undermethod(string:new("invoke_numbers") , _temp677,_temp678,_temp679,_temp680)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp676 =  no_undermethod(_self, string:new("invoke_numbers") , _temp677,_temp678,_temp679,_temp680)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp680
      local _t = _type(_temp675)
      if _t == "table" then
                      if _type(_temp675._less_less) == "function" or (_type(_temp675._less_less) == "table" and _rawget(_temp675._less_less, "__call_thing")) then
        _temp680 = _temp675:_less_less(_temp676)
      elseif _temp675._less_less ~= nil then
        _temp680 = _temp675._less_less

        elseif _temp675.no_undermethod ~= nil then
          _temp680 =  _temp675:no_undermethod(string:new("<<") , _temp676)
        else
          _error(exception:method_error(_temp675, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp675)
      if _n._less_less ~= nil then
        _temp680 = _n:_less_less(_temp676)
      elseif _n.no_undermethod ~= nil then
        _temp680 =  _n:no_undermethod(string:new("<<") , _temp676)
      else
        _error(exception:method_error(_temp675, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp675)
      if _f._less_less ~= nil then
        _temp680 = _f:_less_less(_temp676)
      elseif _f.no_undermethod ~= nil then
        _temp680 =  _f:no_undermethod(string:new("<<") , _temp676)
      else
        _error(exception:method_error(_temp675, "<<"))
      end

      elseif _temp675 == nil then
        _error(exception:null_error("_temp675", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp675))
      end

_dummy_ = _temp680 
end

    if _type(_temp672) == "function" or (_type(_temp672) == "table" and _rawget(_temp672, "__call_thing")) then
      return  _temp672(_self)

    elseif _temp672 then
      return  _temp672
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp669)
      if _t == "table" then
                      if _type(_temp669.walk) == "function" or (_type(_temp669.walk) == "table" and _rawget(_temp669.walk, "__call_thing")) then
        _dummy_ = _temp669:walk(_temp4,_temp681)
      elseif _temp669.walk ~= nil then
        _dummy_ = _temp669.walk

        elseif _temp669.no_undermethod ~= nil then
          _dummy_ =  _temp669:no_undermethod(string:new("walk") , _temp4,_temp681)
        else
          _error(exception:method_error(_temp669, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp669)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp681)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp681)
      else
        _error(exception:method_error(_temp669, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp669)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp681)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp681)
      else
        _error(exception:method_error(_temp669, "walk"))
      end

      elseif _temp669 == nil then
        _error(exception:null_error("_temp669", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp669))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp681 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp681 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp681 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp681 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp681 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp681 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp681 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp681 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp681 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp681 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp700 = function (_self, _temp683,_temp682)
        if _temp683 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp682 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp682 =  null(_self)

    elseif null then
      _temp682 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp682 =  _self:null()
      elseif _self.null ~= nil then
        _temp682 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp682 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp682 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp684
local _temp685 = nil
    if _type(_temp682) == "function" or (_type(_temp682) == "table" and _rawget(_temp682, "__call_thing")) then
      _temp685 =  _temp682(_self)

    elseif _temp682 then
      _temp685 =  _temp682
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp685 =  _self:var()
      elseif _self.var ~= nil then
        _temp685 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp685 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp685 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp684 =  set_underresult(_self, _temp685)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp684 =  _self:set_underresult(_temp685)
      elseif _self.set_underresult ~= nil then
        _temp684 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp684 =  _self:no_undermethod(string:new("set_result") , _temp685)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp684 =  no_undermethod(_self, string:new("set_result") , _temp685)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp686
        local _t = _type(_temp683)
        if _t == "table" then
          if _rawget(_temp683, "__call_thing") == nil then
            _temp685 = _temp683
          else
                  if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp685 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp685 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp685 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp685 =  _temp683(_self)
      end

          end
        elseif _t == "number" then
          _temp685 = _temp683
        elseif _t == "function" then
                if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp685 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp685 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp685 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp685 =  _temp683(_self)
      end

        elseif _temp683 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp685)
      if _t == "table" then
                      if _type(_temp685.rhs) == "function" or (_type(_temp685.rhs) == "table" and _rawget(_temp685.rhs, "__call_thing")) then
        _temp685 = _temp685:rhs()
      elseif _temp685.rhs ~= nil then
        _temp685 = _temp685.rhs

        elseif _temp685.no_undermethod ~= nil then
          _temp685 =  _temp685:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp685, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp685)
      if _n.rhs ~= nil then
        _temp685 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp685 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp685, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp685)
      if _f.rhs ~= nil then
        _temp685 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp685 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp685, "rhs"))
      end

      elseif _temp685 == nil then
        _error(exception:null_error("_temp685", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp685))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp686 =  process(_self, _temp685)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp686 =  _self:process(_temp685)
      elseif _self.process ~= nil then
        _temp686 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp686 =  _self:no_undermethod(string:new("process") , _temp685)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp686 =  no_undermethod(_self, string:new("process") , _temp685)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp687 = nil
        local _t = _type(_temp684)
        if _t == "table" then
          if _rawget(_temp684, "__call_thing") == nil then
            _temp687 = _temp684
          else
                  if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp687 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp687 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp687 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp687 =  _temp684(_self)
      end

          end
        elseif _t == "number" then
          _temp687 = _temp684
        elseif _t == "function" then
                if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp687 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp687 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp687 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp687 =  _temp684(_self)
      end

        elseif _temp684 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp688 = nil
      local _t = _type(_temp687)
      if _t == "table" then
                      if _type(_temp687.out) == "function" or (_type(_temp687.out) == "table" and _rawget(_temp687.out, "__call_thing")) then
        _temp688 = _temp687:out()
      elseif _temp687.out ~= nil then
        _temp688 = _temp687.out

        elseif _temp687.no_undermethod ~= nil then
          _temp688 =  _temp687:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp687, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp687)
      if _n.out ~= nil then
        _temp688 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp688 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp687, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp687)
      if _f.out ~= nil then
        _temp688 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp688 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp687, "out"))
      end

      elseif _temp687 == nil then
        _error(exception:null_error("_temp687", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp687))
      end

local _temp689 = nil
        local _t = _type(_temp686)
        if _t == "table" then
          if _rawget(_temp686, "__call_thing") == nil then
            _temp689 = _temp686
          else
                  if _temp686 == nil then
              if _type(_self._temp686) == "function" or (_type(_self._temp686) == "table" and _rawget(_self._temp686, "__call_thing")) then
        _temp689 =  _self:_temp686()
      elseif _self._temp686 ~= nil then
        _temp689 =  _self._temp686

        elseif _self.no_undermethod ~= nil then
          _temp689 =  _self:no_undermethod(string:new("_temp686"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp689 =  _temp686(_self)
      end

          end
        elseif _t == "number" then
          _temp689 = _temp686
        elseif _t == "function" then
                if _temp686 == nil then
              if _type(_self._temp686) == "function" or (_type(_self._temp686) == "table" and _rawget(_self._temp686, "__call_thing")) then
        _temp689 =  _self:_temp686()
      elseif _self._temp686 ~= nil then
        _temp689 =  _self._temp686

        elseif _self.no_undermethod ~= nil then
          _temp689 =  _self:no_undermethod(string:new("_temp686"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp689 =  _temp686(_self)
      end

        elseif _temp686 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp690 = nil
      local _t = _type(_temp689)
      if _t == "table" then
                      if _type(_temp689.out) == "function" or (_type(_temp689.out) == "table" and _rawget(_temp689.out, "__call_thing")) then
        _temp690 = _temp689:out()
      elseif _temp689.out ~= nil then
        _temp690 = _temp689.out

        elseif _temp689.no_undermethod ~= nil then
          _temp690 =  _temp689:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp689, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp689)
      if _n.out ~= nil then
        _temp690 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp690 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp689, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp689)
      if _f.out ~= nil then
        _temp690 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp690 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp689, "out"))
      end

      elseif _temp689 == nil then
        _error(exception:null_error("_temp689", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp689))
      end

local _temp691 = string:new("\n")
local _temp692
      local _t = _type(_temp688)
      if _t == "table" then
                      if _type(_temp688._less_less) == "function" or (_type(_temp688._less_less) == "table" and _rawget(_temp688._less_less, "__call_thing")) then
        _temp692 = _temp688:_less_less(_temp690)
      elseif _temp688._less_less ~= nil then
        _temp692 = _temp688._less_less

        elseif _temp688.no_undermethod ~= nil then
          _temp692 =  _temp688:no_undermethod(string:new("<<") , _temp690)
        else
          _error(exception:method_error(_temp688, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp688)
      if _n._less_less ~= nil then
        _temp692 = _n:_less_less(_temp690)
      elseif _n.no_undermethod ~= nil then
        _temp692 =  _n:no_undermethod(string:new("<<") , _temp690)
      else
        _error(exception:method_error(_temp688, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp688)
      if _f._less_less ~= nil then
        _temp692 = _f:_less_less(_temp690)
      elseif _f.no_undermethod ~= nil then
        _temp692 =  _f:no_undermethod(string:new("<<") , _temp690)
      else
        _error(exception:method_error(_temp688, "<<"))
      end

      elseif _temp688 == nil then
        _error(exception:null_error("_temp688", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp688))
      end

local _temp690
      local _t = _type(_temp692)
      if _t == "table" then
                      if _type(_temp692._less_less) == "function" or (_type(_temp692._less_less) == "table" and _rawget(_temp692._less_less, "__call_thing")) then
        _temp690 = _temp692:_less_less(_temp691)
      elseif _temp692._less_less ~= nil then
        _temp690 = _temp692._less_less

        elseif _temp692.no_undermethod ~= nil then
          _temp690 =  _temp692:no_undermethod(string:new("<<") , _temp691)
        else
          _error(exception:method_error(_temp692, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp692)
      if _n._less_less ~= nil then
        _temp690 = _n:_less_less(_temp691)
      elseif _n.no_undermethod ~= nil then
        _temp690 =  _n:no_undermethod(string:new("<<") , _temp691)
      else
        _error(exception:method_error(_temp692, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp692)
      if _f._less_less ~= nil then
        _temp690 = _f:_less_less(_temp691)
      elseif _f.no_undermethod ~= nil then
        _temp690 =  _f:no_undermethod(string:new("<<") , _temp691)
      else
        _error(exception:method_error(_temp692, "<<"))
      end

      elseif _temp692 == nil then
        _error(exception:null_error("_temp692", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp692))
      end

_dummy_ = _temp690 
end

do
local _temp693 = nil
        local _t = _type(_temp684)
        if _t == "table" then
          if _rawget(_temp684, "__call_thing") == nil then
            _temp693 = _temp684
          else
                  if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp693 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp693 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp693 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp693 =  _temp684(_self)
      end

          end
        elseif _t == "number" then
          _temp693 = _temp684
        elseif _t == "function" then
                if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp693 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp693 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp693 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp693 =  _temp684(_self)
      end

        elseif _temp684 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp694 = nil
      local _t = _type(_temp693)
      if _t == "table" then
                      if _type(_temp693.out) == "function" or (_type(_temp693.out) == "table" and _rawget(_temp693.out, "__call_thing")) then
        _temp694 = _temp693:out()
      elseif _temp693.out ~= nil then
        _temp694 = _temp693.out

        elseif _temp693.no_undermethod ~= nil then
          _temp694 =  _temp693:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp693, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp693)
      if _n.out ~= nil then
        _temp694 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp694 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp693, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp693)
      if _f.out ~= nil then
        _temp694 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp694 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp693, "out"))
      end

      elseif _temp693 == nil then
        _error(exception:null_error("_temp693", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp693))
      end

local _temp695 = nil
local _temp696 = nil
        local _t = _type(_temp683)
        if _t == "table" then
          if _rawget(_temp683, "__call_thing") == nil then
            _temp696 = _temp683
          else
                  if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp696 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp696 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp696 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp696 =  _temp683(_self)
      end

          end
        elseif _t == "number" then
          _temp696 = _temp683
        elseif _t == "function" then
                if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp696 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp696 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp696 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp696 =  _temp683(_self)
      end

        elseif _temp683 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp696)
      if _t == "table" then
                      if _type(_temp696.lhs) == "function" or (_type(_temp696.lhs) == "table" and _rawget(_temp696.lhs, "__call_thing")) then
        _temp696 = _temp696:lhs()
      elseif _temp696.lhs ~= nil then
        _temp696 = _temp696.lhs

        elseif _temp696.no_undermethod ~= nil then
          _temp696 =  _temp696:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp696, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp696)
      if _n.lhs ~= nil then
        _temp696 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp696 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp696, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp696)
      if _f.lhs ~= nil then
        _temp696 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp696 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp696, "lhs"))
      end

      elseif _temp696 == nil then
        _error(exception:null_error("_temp696", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp696))
      end

      local _t = _type(_temp696)
      if _t == "table" then
                      if _type(_temp696.value) == "function" or (_type(_temp696.value) == "table" and _rawget(_temp696.value, "__call_thing")) then
        _temp696 = _temp696:value()
      elseif _temp696.value ~= nil then
        _temp696 = _temp696.value

        elseif _temp696.no_undermethod ~= nil then
          _temp696 =  _temp696:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp696, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp696)
      if _n.value ~= nil then
        _temp696 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp696 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp696, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp696)
      if _f.value ~= nil then
        _temp696 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp696 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp696, "value"))
      end

      elseif _temp696 == nil then
        _error(exception:null_error("_temp696", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp696))
      end


local _temp697 = nil
        local _t = _type(_temp683)
        if _t == "table" then
          if _rawget(_temp683, "__call_thing") == nil then
            _temp697 = _temp683
          else
                  if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp697 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp697 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp697 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp697 =  _temp683(_self)
      end

          end
        elseif _t == "number" then
          _temp697 = _temp683
        elseif _t == "function" then
                if _temp683 == nil then
              if _type(_self._temp683) == "function" or (_type(_self._temp683) == "table" and _rawget(_self._temp683, "__call_thing")) then
        _temp697 =  _self:_temp683()
      elseif _self._temp683 ~= nil then
        _temp697 =  _self._temp683

        elseif _self.no_undermethod ~= nil then
          _temp697 =  _self:no_undermethod(string:new("_temp683"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp697 =  _temp683(_self)
      end

        elseif _temp683 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp697)
      if _t == "table" then
                      if _type(_temp697.op) == "function" or (_type(_temp697.op) == "table" and _rawget(_temp697.op, "__call_thing")) then
        _temp697 = _temp697:op()
      elseif _temp697.op ~= nil then
        _temp697 = _temp697.op

        elseif _temp697.no_undermethod ~= nil then
          _temp697 =  _temp697:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp697, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp697)
      if _n.op ~= nil then
        _temp697 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp697 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp697, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp697)
      if _f.op ~= nil then
        _temp697 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp697 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp697, "op"))
      end

      elseif _temp697 == nil then
        _error(exception:null_error("_temp697", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp697))
      end


local _temp698 = nil
        local _t = _type(_temp686)
        if _t == "table" then
          if _rawget(_temp686, "__call_thing") == nil then
            _temp698 = _temp686
          else
                  if _temp686 == nil then
              if _type(_self._temp686) == "function" or (_type(_self._temp686) == "table" and _rawget(_self._temp686, "__call_thing")) then
        _temp698 =  _self:_temp686()
      elseif _self._temp686 ~= nil then
        _temp698 =  _self._temp686

        elseif _self.no_undermethod ~= nil then
          _temp698 =  _self:no_undermethod(string:new("_temp686"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp698 =  _temp686(_self)
      end

          end
        elseif _t == "number" then
          _temp698 = _temp686
        elseif _t == "function" then
                if _temp686 == nil then
              if _type(_self._temp686) == "function" or (_type(_self._temp686) == "table" and _rawget(_self._temp686, "__call_thing")) then
        _temp698 =  _self:_temp686()
      elseif _self._temp686 ~= nil then
        _temp698 =  _self._temp686

        elseif _self.no_undermethod ~= nil then
          _temp698 =  _self:no_undermethod(string:new("_temp686"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp698 =  _temp686(_self)
      end

        elseif _temp686 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp698)
      if _t == "table" then
                      if _type(_temp698.var) == "function" or (_type(_temp698.var) == "table" and _rawget(_temp698.var, "__call_thing")) then
        _temp698 = _temp698:var()
      elseif _temp698.var ~= nil then
        _temp698 = _temp698.var

        elseif _temp698.no_undermethod ~= nil then
          _temp698 =  _temp698:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp698, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp698)
      if _n.var ~= nil then
        _temp698 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp698 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp698, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp698)
      if _f.var ~= nil then
        _temp698 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp698 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp698, "var"))
      end

      elseif _temp698 == nil then
        _error(exception:null_error("_temp698", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp698))
      end


local _temp699 = nil
        local _t = _type(_temp684)
        if _t == "table" then
          if _rawget(_temp684, "__call_thing") == nil then
            _temp699 = _temp684
          else
                  if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp699 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp699 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp699 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp699 =  _temp684(_self)
      end

          end
        elseif _t == "number" then
          _temp699 = _temp684
        elseif _t == "function" then
                if _temp684 == nil then
              if _type(_self._temp684) == "function" or (_type(_self._temp684) == "table" and _rawget(_self._temp684, "__call_thing")) then
        _temp699 =  _self:_temp684()
      elseif _self._temp684 ~= nil then
        _temp699 =  _self._temp684

        elseif _self.no_undermethod ~= nil then
          _temp699 =  _self:no_undermethod(string:new("_temp684"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp699 =  _temp684(_self)
      end

        elseif _temp684 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp699)
      if _t == "table" then
                      if _type(_temp699.var) == "function" or (_type(_temp699.var) == "table" and _rawget(_temp699.var, "__call_thing")) then
        _temp699 = _temp699:var()
      elseif _temp699.var ~= nil then
        _temp699 = _temp699.var

        elseif _temp699.no_undermethod ~= nil then
          _temp699 =  _temp699:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp699, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp699)
      if _n.var ~= nil then
        _temp699 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp699 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp699, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp699)
      if _f.var ~= nil then
        _temp699 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp699 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp699, "var"))
      end

      elseif _temp699 == nil then
        _error(exception:null_error("_temp699", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp699))
      end


    if _type(invoke_undernumber_underlhs) == "function" or (_type(invoke_undernumber_underlhs) == "table" and _rawget(invoke_undernumber_underlhs, "__call_thing")) then
      _temp695 =  invoke_undernumber_underlhs(_self, _temp696,_temp697,_temp698,_temp699)

    elseif invoke_undernumber_underlhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_lhs (" .. object.__type(invoke_undernumber_underlhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underlhs) == "function" or (_type(_self.invoke_undernumber_underlhs) == "table" and _rawget(_self.invoke_undernumber_underlhs, "__call_thing")) then
        _temp695 =  _self:invoke_undernumber_underlhs(_temp696,_temp697,_temp698,_temp699)
      elseif _self.invoke_undernumber_underlhs ~= nil then
        _temp695 =  _self.invoke_undernumber_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp695 =  _self:no_undermethod(string:new("invoke_number_lhs") , _temp696,_temp697,_temp698,_temp699)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp695 =  no_undermethod(_self, string:new("invoke_number_lhs") , _temp696,_temp697,_temp698,_temp699)
      else
        _error(exception:name_error("invoke_number_lhs"))
      end
    end
local _temp699
      local _t = _type(_temp694)
      if _t == "table" then
                      if _type(_temp694._less_less) == "function" or (_type(_temp694._less_less) == "table" and _rawget(_temp694._less_less, "__call_thing")) then
        _temp699 = _temp694:_less_less(_temp695)
      elseif _temp694._less_less ~= nil then
        _temp699 = _temp694._less_less

        elseif _temp694.no_undermethod ~= nil then
          _temp699 =  _temp694:no_undermethod(string:new("<<") , _temp695)
        else
          _error(exception:method_error(_temp694, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp694)
      if _n._less_less ~= nil then
        _temp699 = _n:_less_less(_temp695)
      elseif _n.no_undermethod ~= nil then
        _temp699 =  _n:no_undermethod(string:new("<<") , _temp695)
      else
        _error(exception:method_error(_temp694, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp694)
      if _f._less_less ~= nil then
        _temp699 = _f:_less_less(_temp695)
      elseif _f.no_undermethod ~= nil then
        _temp699 =  _f:no_undermethod(string:new("<<") , _temp695)
      else
        _error(exception:method_error(_temp694, "<<"))
      end

      elseif _temp694 == nil then
        _error(exception:null_error("_temp694", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp694))
      end

_dummy_ = _temp699 
end

    if _type(_temp684) == "function" or (_type(_temp684) == "table" and _rawget(_temp684, "__call_thing")) then
      return  _temp684(_self)

    elseif _temp684 then
      return  _temp684
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp681)
      if _t == "table" then
                      if _type(_temp681.walk) == "function" or (_type(_temp681.walk) == "table" and _rawget(_temp681.walk, "__call_thing")) then
        _dummy_ = _temp681:walk(_temp4,_temp700)
      elseif _temp681.walk ~= nil then
        _dummy_ = _temp681.walk

        elseif _temp681.no_undermethod ~= nil then
          _dummy_ =  _temp681:no_undermethod(string:new("walk") , _temp4,_temp700)
        else
          _error(exception:method_error(_temp681, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp681)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp700)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp700)
      else
        _error(exception:method_error(_temp681, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp681)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp700)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp700)
      else
        _error(exception:method_error(_temp681, "walk"))
      end

      elseif _temp681 == nil then
        _error(exception:null_error("_temp681", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp681))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp700 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp700 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp700 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp700 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp700 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp700 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp700 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp700 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp700 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp700 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number_rhs")

local _temp719 = function (_self, _temp702,_temp701)
        if _temp702 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp701 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp701 =  null(_self)

    elseif null then
      _temp701 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp701 =  _self:null()
      elseif _self.null ~= nil then
        _temp701 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp701 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp701 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp703
local _temp704 = nil
    if _type(_temp701) == "function" or (_type(_temp701) == "table" and _rawget(_temp701, "__call_thing")) then
      _temp704 =  _temp701(_self)

    elseif _temp701 then
      _temp704 =  _temp701
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp704 =  _self:var()
      elseif _self.var ~= nil then
        _temp704 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp704 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp704 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp703 =  set_underresult(_self, _temp704)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp703 =  _self:set_underresult(_temp704)
      elseif _self.set_underresult ~= nil then
        _temp703 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp703 =  _self:no_undermethod(string:new("set_result") , _temp704)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp703 =  no_undermethod(_self, string:new("set_result") , _temp704)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp705
        local _t = _type(_temp702)
        if _t == "table" then
          if _rawget(_temp702, "__call_thing") == nil then
            _temp704 = _temp702
          else
                  if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp704 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp704 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp704 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp704 =  _temp702(_self)
      end

          end
        elseif _t == "number" then
          _temp704 = _temp702
        elseif _t == "function" then
                if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp704 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp704 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp704 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp704 =  _temp702(_self)
      end

        elseif _temp702 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp704)
      if _t == "table" then
                      if _type(_temp704.lhs) == "function" or (_type(_temp704.lhs) == "table" and _rawget(_temp704.lhs, "__call_thing")) then
        _temp704 = _temp704:lhs()
      elseif _temp704.lhs ~= nil then
        _temp704 = _temp704.lhs

        elseif _temp704.no_undermethod ~= nil then
          _temp704 =  _temp704:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp704, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp704)
      if _n.lhs ~= nil then
        _temp704 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp704 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp704, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp704)
      if _f.lhs ~= nil then
        _temp704 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp704 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp704, "lhs"))
      end

      elseif _temp704 == nil then
        _error(exception:null_error("_temp704", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp704))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp705 =  process(_self, _temp704)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp705 =  _self:process(_temp704)
      elseif _self.process ~= nil then
        _temp705 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp705 =  _self:no_undermethod(string:new("process") , _temp704)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp705 =  no_undermethod(_self, string:new("process") , _temp704)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp706 = nil
        local _t = _type(_temp703)
        if _t == "table" then
          if _rawget(_temp703, "__call_thing") == nil then
            _temp706 = _temp703
          else
                  if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp706 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp706 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp706 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp706 =  _temp703(_self)
      end

          end
        elseif _t == "number" then
          _temp706 = _temp703
        elseif _t == "function" then
                if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp706 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp706 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp706 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp706 =  _temp703(_self)
      end

        elseif _temp703 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp707 = nil
      local _t = _type(_temp706)
      if _t == "table" then
                      if _type(_temp706.out) == "function" or (_type(_temp706.out) == "table" and _rawget(_temp706.out, "__call_thing")) then
        _temp707 = _temp706:out()
      elseif _temp706.out ~= nil then
        _temp707 = _temp706.out

        elseif _temp706.no_undermethod ~= nil then
          _temp707 =  _temp706:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp706, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp706)
      if _n.out ~= nil then
        _temp707 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp707 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp706, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp706)
      if _f.out ~= nil then
        _temp707 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp707 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp706, "out"))
      end

      elseif _temp706 == nil then
        _error(exception:null_error("_temp706", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp706))
      end

local _temp708 = nil
        local _t = _type(_temp705)
        if _t == "table" then
          if _rawget(_temp705, "__call_thing") == nil then
            _temp708 = _temp705
          else
                  if _temp705 == nil then
              if _type(_self._temp705) == "function" or (_type(_self._temp705) == "table" and _rawget(_self._temp705, "__call_thing")) then
        _temp708 =  _self:_temp705()
      elseif _self._temp705 ~= nil then
        _temp708 =  _self._temp705

        elseif _self.no_undermethod ~= nil then
          _temp708 =  _self:no_undermethod(string:new("_temp705"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp708 =  _temp705(_self)
      end

          end
        elseif _t == "number" then
          _temp708 = _temp705
        elseif _t == "function" then
                if _temp705 == nil then
              if _type(_self._temp705) == "function" or (_type(_self._temp705) == "table" and _rawget(_self._temp705, "__call_thing")) then
        _temp708 =  _self:_temp705()
      elseif _self._temp705 ~= nil then
        _temp708 =  _self._temp705

        elseif _self.no_undermethod ~= nil then
          _temp708 =  _self:no_undermethod(string:new("_temp705"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp708 =  _temp705(_self)
      end

        elseif _temp705 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp709 = nil
      local _t = _type(_temp708)
      if _t == "table" then
                      if _type(_temp708.out) == "function" or (_type(_temp708.out) == "table" and _rawget(_temp708.out, "__call_thing")) then
        _temp709 = _temp708:out()
      elseif _temp708.out ~= nil then
        _temp709 = _temp708.out

        elseif _temp708.no_undermethod ~= nil then
          _temp709 =  _temp708:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp708, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp708)
      if _n.out ~= nil then
        _temp709 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp709 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp708, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp708)
      if _f.out ~= nil then
        _temp709 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp709 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp708, "out"))
      end

      elseif _temp708 == nil then
        _error(exception:null_error("_temp708", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp708))
      end

local _temp710 = string:new("\n")
local _temp711
      local _t = _type(_temp707)
      if _t == "table" then
                      if _type(_temp707._less_less) == "function" or (_type(_temp707._less_less) == "table" and _rawget(_temp707._less_less, "__call_thing")) then
        _temp711 = _temp707:_less_less(_temp709)
      elseif _temp707._less_less ~= nil then
        _temp711 = _temp707._less_less

        elseif _temp707.no_undermethod ~= nil then
          _temp711 =  _temp707:no_undermethod(string:new("<<") , _temp709)
        else
          _error(exception:method_error(_temp707, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp707)
      if _n._less_less ~= nil then
        _temp711 = _n:_less_less(_temp709)
      elseif _n.no_undermethod ~= nil then
        _temp711 =  _n:no_undermethod(string:new("<<") , _temp709)
      else
        _error(exception:method_error(_temp707, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp707)
      if _f._less_less ~= nil then
        _temp711 = _f:_less_less(_temp709)
      elseif _f.no_undermethod ~= nil then
        _temp711 =  _f:no_undermethod(string:new("<<") , _temp709)
      else
        _error(exception:method_error(_temp707, "<<"))
      end

      elseif _temp707 == nil then
        _error(exception:null_error("_temp707", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp707))
      end

local _temp709
      local _t = _type(_temp711)
      if _t == "table" then
                      if _type(_temp711._less_less) == "function" or (_type(_temp711._less_less) == "table" and _rawget(_temp711._less_less, "__call_thing")) then
        _temp709 = _temp711:_less_less(_temp710)
      elseif _temp711._less_less ~= nil then
        _temp709 = _temp711._less_less

        elseif _temp711.no_undermethod ~= nil then
          _temp709 =  _temp711:no_undermethod(string:new("<<") , _temp710)
        else
          _error(exception:method_error(_temp711, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp711)
      if _n._less_less ~= nil then
        _temp709 = _n:_less_less(_temp710)
      elseif _n.no_undermethod ~= nil then
        _temp709 =  _n:no_undermethod(string:new("<<") , _temp710)
      else
        _error(exception:method_error(_temp711, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp711)
      if _f._less_less ~= nil then
        _temp709 = _f:_less_less(_temp710)
      elseif _f.no_undermethod ~= nil then
        _temp709 =  _f:no_undermethod(string:new("<<") , _temp710)
      else
        _error(exception:method_error(_temp711, "<<"))
      end

      elseif _temp711 == nil then
        _error(exception:null_error("_temp711", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp711))
      end

_dummy_ = _temp709 
end

do
local _temp712 = nil
        local _t = _type(_temp703)
        if _t == "table" then
          if _rawget(_temp703, "__call_thing") == nil then
            _temp712 = _temp703
          else
                  if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp712 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp712 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp712 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp712 =  _temp703(_self)
      end

          end
        elseif _t == "number" then
          _temp712 = _temp703
        elseif _t == "function" then
                if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp712 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp712 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp712 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp712 =  _temp703(_self)
      end

        elseif _temp703 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp713 = nil
      local _t = _type(_temp712)
      if _t == "table" then
                      if _type(_temp712.out) == "function" or (_type(_temp712.out) == "table" and _rawget(_temp712.out, "__call_thing")) then
        _temp713 = _temp712:out()
      elseif _temp712.out ~= nil then
        _temp713 = _temp712.out

        elseif _temp712.no_undermethod ~= nil then
          _temp713 =  _temp712:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp712, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp712)
      if _n.out ~= nil then
        _temp713 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp713 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp712, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp712)
      if _f.out ~= nil then
        _temp713 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp713 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp712, "out"))
      end

      elseif _temp712 == nil then
        _error(exception:null_error("_temp712", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp712))
      end

local _temp714 = nil
local _temp715 = nil
        local _t = _type(_temp705)
        if _t == "table" then
          if _rawget(_temp705, "__call_thing") == nil then
            _temp715 = _temp705
          else
                  if _temp705 == nil then
              if _type(_self._temp705) == "function" or (_type(_self._temp705) == "table" and _rawget(_self._temp705, "__call_thing")) then
        _temp715 =  _self:_temp705()
      elseif _self._temp705 ~= nil then
        _temp715 =  _self._temp705

        elseif _self.no_undermethod ~= nil then
          _temp715 =  _self:no_undermethod(string:new("_temp705"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp715 =  _temp705(_self)
      end

          end
        elseif _t == "number" then
          _temp715 = _temp705
        elseif _t == "function" then
                if _temp705 == nil then
              if _type(_self._temp705) == "function" or (_type(_self._temp705) == "table" and _rawget(_self._temp705, "__call_thing")) then
        _temp715 =  _self:_temp705()
      elseif _self._temp705 ~= nil then
        _temp715 =  _self._temp705

        elseif _self.no_undermethod ~= nil then
          _temp715 =  _self:no_undermethod(string:new("_temp705"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp715 =  _temp705(_self)
      end

        elseif _temp705 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp715)
      if _t == "table" then
                      if _type(_temp715.var) == "function" or (_type(_temp715.var) == "table" and _rawget(_temp715.var, "__call_thing")) then
        _temp715 = _temp715:var()
      elseif _temp715.var ~= nil then
        _temp715 = _temp715.var

        elseif _temp715.no_undermethod ~= nil then
          _temp715 =  _temp715:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp715, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp715)
      if _n.var ~= nil then
        _temp715 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp715 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp715, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp715)
      if _f.var ~= nil then
        _temp715 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp715 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp715, "var"))
      end

      elseif _temp715 == nil then
        _error(exception:null_error("_temp715", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp715))
      end


local _temp716 = nil
        local _t = _type(_temp702)
        if _t == "table" then
          if _rawget(_temp702, "__call_thing") == nil then
            _temp716 = _temp702
          else
                  if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp716 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp716 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp716 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp716 =  _temp702(_self)
      end

          end
        elseif _t == "number" then
          _temp716 = _temp702
        elseif _t == "function" then
                if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp716 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp716 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp716 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp716 =  _temp702(_self)
      end

        elseif _temp702 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp716)
      if _t == "table" then
                      if _type(_temp716.op) == "function" or (_type(_temp716.op) == "table" and _rawget(_temp716.op, "__call_thing")) then
        _temp716 = _temp716:op()
      elseif _temp716.op ~= nil then
        _temp716 = _temp716.op

        elseif _temp716.no_undermethod ~= nil then
          _temp716 =  _temp716:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp716, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp716)
      if _n.op ~= nil then
        _temp716 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp716 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp716, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp716)
      if _f.op ~= nil then
        _temp716 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp716 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp716, "op"))
      end

      elseif _temp716 == nil then
        _error(exception:null_error("_temp716", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp716))
      end


local _temp717 = nil
        local _t = _type(_temp702)
        if _t == "table" then
          if _rawget(_temp702, "__call_thing") == nil then
            _temp717 = _temp702
          else
                  if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp717 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp717 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp717 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp717 =  _temp702(_self)
      end

          end
        elseif _t == "number" then
          _temp717 = _temp702
        elseif _t == "function" then
                if _temp702 == nil then
              if _type(_self._temp702) == "function" or (_type(_self._temp702) == "table" and _rawget(_self._temp702, "__call_thing")) then
        _temp717 =  _self:_temp702()
      elseif _self._temp702 ~= nil then
        _temp717 =  _self._temp702

        elseif _self.no_undermethod ~= nil then
          _temp717 =  _self:no_undermethod(string:new("_temp702"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp717 =  _temp702(_self)
      end

        elseif _temp702 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp717)
      if _t == "table" then
                      if _type(_temp717.rhs) == "function" or (_type(_temp717.rhs) == "table" and _rawget(_temp717.rhs, "__call_thing")) then
        _temp717 = _temp717:rhs()
      elseif _temp717.rhs ~= nil then
        _temp717 = _temp717.rhs

        elseif _temp717.no_undermethod ~= nil then
          _temp717 =  _temp717:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp717, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp717)
      if _n.rhs ~= nil then
        _temp717 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp717 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp717, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp717)
      if _f.rhs ~= nil then
        _temp717 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp717 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp717, "rhs"))
      end

      elseif _temp717 == nil then
        _error(exception:null_error("_temp717", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp717))
      end

      local _t = _type(_temp717)
      if _t == "table" then
                      if _type(_temp717.value) == "function" or (_type(_temp717.value) == "table" and _rawget(_temp717.value, "__call_thing")) then
        _temp717 = _temp717:value()
      elseif _temp717.value ~= nil then
        _temp717 = _temp717.value

        elseif _temp717.no_undermethod ~= nil then
          _temp717 =  _temp717:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp717, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp717)
      if _n.value ~= nil then
        _temp717 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp717 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp717, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp717)
      if _f.value ~= nil then
        _temp717 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp717 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp717, "value"))
      end

      elseif _temp717 == nil then
        _error(exception:null_error("_temp717", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp717))
      end


local _temp718 = nil
        local _t = _type(_temp703)
        if _t == "table" then
          if _rawget(_temp703, "__call_thing") == nil then
            _temp718 = _temp703
          else
                  if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp718 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp718 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp718 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp718 =  _temp703(_self)
      end

          end
        elseif _t == "number" then
          _temp718 = _temp703
        elseif _t == "function" then
                if _temp703 == nil then
              if _type(_self._temp703) == "function" or (_type(_self._temp703) == "table" and _rawget(_self._temp703, "__call_thing")) then
        _temp718 =  _self:_temp703()
      elseif _self._temp703 ~= nil then
        _temp718 =  _self._temp703

        elseif _self.no_undermethod ~= nil then
          _temp718 =  _self:no_undermethod(string:new("_temp703"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp718 =  _temp703(_self)
      end

        elseif _temp703 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp718)
      if _t == "table" then
                      if _type(_temp718.var) == "function" or (_type(_temp718.var) == "table" and _rawget(_temp718.var, "__call_thing")) then
        _temp718 = _temp718:var()
      elseif _temp718.var ~= nil then
        _temp718 = _temp718.var

        elseif _temp718.no_undermethod ~= nil then
          _temp718 =  _temp718:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp718, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp718)
      if _n.var ~= nil then
        _temp718 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp718 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp718, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp718)
      if _f.var ~= nil then
        _temp718 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp718 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp718, "var"))
      end

      elseif _temp718 == nil then
        _error(exception:null_error("_temp718", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp718))
      end


    if _type(invoke_undernumber_underrhs) == "function" or (_type(invoke_undernumber_underrhs) == "table" and _rawget(invoke_undernumber_underrhs, "__call_thing")) then
      _temp714 =  invoke_undernumber_underrhs(_self, _temp715,_temp716,_temp717,_temp718)

    elseif invoke_undernumber_underrhs then
      _error(exception:new("Tried to invoke non-method: invoke_number_rhs (" .. object.__type(invoke_undernumber_underrhs) .. ")"))
    else
            if _type(_self.invoke_undernumber_underrhs) == "function" or (_type(_self.invoke_undernumber_underrhs) == "table" and _rawget(_self.invoke_undernumber_underrhs, "__call_thing")) then
        _temp714 =  _self:invoke_undernumber_underrhs(_temp715,_temp716,_temp717,_temp718)
      elseif _self.invoke_undernumber_underrhs ~= nil then
        _temp714 =  _self.invoke_undernumber_underrhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp714 =  _self:no_undermethod(string:new("invoke_number_rhs") , _temp715,_temp716,_temp717,_temp718)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp714 =  no_undermethod(_self, string:new("invoke_number_rhs") , _temp715,_temp716,_temp717,_temp718)
      else
        _error(exception:name_error("invoke_number_rhs"))
      end
    end
local _temp718
      local _t = _type(_temp713)
      if _t == "table" then
                      if _type(_temp713._less_less) == "function" or (_type(_temp713._less_less) == "table" and _rawget(_temp713._less_less, "__call_thing")) then
        _temp718 = _temp713:_less_less(_temp714)
      elseif _temp713._less_less ~= nil then
        _temp718 = _temp713._less_less

        elseif _temp713.no_undermethod ~= nil then
          _temp718 =  _temp713:no_undermethod(string:new("<<") , _temp714)
        else
          _error(exception:method_error(_temp713, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp713)
      if _n._less_less ~= nil then
        _temp718 = _n:_less_less(_temp714)
      elseif _n.no_undermethod ~= nil then
        _temp718 =  _n:no_undermethod(string:new("<<") , _temp714)
      else
        _error(exception:method_error(_temp713, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp713)
      if _f._less_less ~= nil then
        _temp718 = _f:_less_less(_temp714)
      elseif _f.no_undermethod ~= nil then
        _temp718 =  _f:no_undermethod(string:new("<<") , _temp714)
      else
        _error(exception:method_error(_temp713, "<<"))
      end

      elseif _temp713 == nil then
        _error(exception:null_error("_temp713", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp713))
      end

_dummy_ = _temp718 
end

    if _type(_temp703) == "function" or (_type(_temp703) == "table" and _rawget(_temp703, "__call_thing")) then
      return  _temp703(_self)

    elseif _temp703 then
      return  _temp703
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp700)
      if _t == "table" then
                      if _type(_temp700.walk) == "function" or (_type(_temp700.walk) == "table" and _rawget(_temp700.walk, "__call_thing")) then
        _dummy_ = _temp700:walk(_temp4,_temp719)
      elseif _temp700.walk ~= nil then
        _dummy_ = _temp700.walk

        elseif _temp700.no_undermethod ~= nil then
          _dummy_ =  _temp700:no_undermethod(string:new("walk") , _temp4,_temp719)
        else
          _error(exception:method_error(_temp700, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp700)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp719)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp719)
      else
        _error(exception:method_error(_temp700, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp700)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp719)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp719)
      else
        _error(exception:method_error(_temp700, "walk"))
      end

      elseif _temp700 == nil then
        _error(exception:null_error("_temp700", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp700))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp719 =  _temp5(_self)

    elseif _temp5 then
      _temp719 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp719 =  _self:c()
      elseif _self.c ~= nil then
        _temp719 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp719 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp719 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp719,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp719,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp719,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp719,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
