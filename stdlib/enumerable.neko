var @brat = $loader.loadmodule("internal", $loader);

enumerable = @brat.base_object.new();

enumerable.any@question = function(block) {
	if(this.@length == 0)
		return @brat.base_object.@@false;
	
	flag = @brat.base_object.@@false;

	var f = function(item) {
		if(flag == @brat.base_object.@@false && block(item) == @brat.base_object.@@true)
			flag = @brat.base_object.@@true;
			
	}

	this.each(f);

	flag;
}

enumerable.all@question = function(block) {
	if(this.@length == 0)
		return @brat.base_object.@@false;

	flag = @brat.base_object.@@true;

	var f = function(item) {
		if(flag == @brat.base_object.@@true && block(item) == @brat.base_object.@@false)
			flag = @brat.base_object.@@false;
			
	}

	this.each(f);

	flag;
}

enumerable.find = function(block) {
	if(this.@length == 0)
		return @brat.base_object.@@null;
	
	flag = @brat.base_object.@@null;

	var f = function(item) {
		if(flag == @brat.base_object.@@null && block(item) == @brat.base_object.@@true)
			flag = item;
			
	}

	this.each(f);

	flag;
}

enumerable.select = function(block) {
	if(this.@length == 0)
		return @brat.base_array.new();
	
	var new_ary = @brat.base_array.new();
	var f = function(item) {
		if(block(item) == @brat.base_object.@@true)
			new_ary.@less@less(item);
			
	}

	this.each(f);

	new_ary;
}

enumerable.to@underarray = function() {
	if(this.@length == 0)
		return @brat.base_array.new();
	
	var new_ary = @brat.base_array.new();
	var f = function(item) {
		new_ary.@less@less(item);
	}

	this.each(f);

	new_ary;
}

$exports.enumerable = enumerable;
