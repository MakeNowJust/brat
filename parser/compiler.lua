              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
local _temp19 = function (_arg_table, _self, _temp16)
local _temp5 = _arg_table["_temp5"]
        if _temp16 == nil then
          _error(exception:argument_error("my.results", 1, 0))

end
local _temp17 = nil
        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp17 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp17 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp17 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp17 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp17 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp17 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp17 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp17 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp17 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp17 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
local _temp18 = nil
    if _type(_temp16) == "function" or (_type(_temp16) == "table" and _rawget(_temp16, "__call_thing")) then
      _temp18 =  _temp16(_self)

    elseif _temp16 then
      _temp18 =  _temp16
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp18 =  _self:n()
      elseif _self.n ~= nil then
        _temp18 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp18 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp18 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

      local _t = _type(_temp17)
      if _t == "table" then
                      if _type(_temp17.process) == "function" or (_type(_temp17.process) == "table" and _rawget(_temp17.process, "__call_thing")) then
        return _temp17:process(_temp18)
      elseif _temp17.process ~= nil then
        return _temp17.process

        elseif _temp17.no_undermethod ~= nil then
          return  _temp17:no_undermethod(string:new("process") , _temp18)
        else
          _error(exception:method_error(_temp17, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp17)
      if _n.process ~= nil then
        return _n:process(_temp18)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp18)
      else
        _error(exception:method_error(_temp17, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp17)
      if _f.process ~= nil then
        return _f:process(_temp18)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp18)
      else
        _error(exception:method_error(_temp17, "process"))
      end

      elseif _temp17 == nil then
        _error(exception:null_error("_temp17", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp17))
      end

end

local _temp40 = function (_arg_table, _self)
local _temp27 = _arg_table["_temp27"]
local _temp29 = _arg_table["_temp29"]

local _temp36 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp36 =  _temp27(_self)

    elseif _temp27 then
      _temp36 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp36 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp36 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp36 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp36 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp37 = nil
do
local _temp38 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp38 =  _temp27(_self)

    elseif _temp27 then
      _temp38 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp38 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp38 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp38 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp38 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp39 = nil
        local _t = _type(_temp29)
        if _t == "table" then
          if _rawget(_temp29, "__call_thing") == nil then
            _temp39 = _temp29
          else
                  if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp39 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp39 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp39 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp39 =  _temp29(_self)
      end

          end
        elseif _t == "number" then
          _temp39 = _temp29
        elseif _t == "function" then
                if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp39 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp39 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp39 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp39 =  _temp29(_self)
      end

        elseif _temp29 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp39)
      if _t == "table" then
                      if _type(_temp39.out) == "function" or (_type(_temp39.out) == "table" and _rawget(_temp39.out, "__call_thing")) then
        _temp39 = _temp39:out()
      elseif _temp39.out ~= nil then
        _temp39 = _temp39.out

        elseif _temp39.no_undermethod ~= nil then
          _temp39 =  _temp39:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp39, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp39)
      if _n.out ~= nil then
        _temp39 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp39 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp39, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp39)
      if _f.out ~= nil then
        _temp39 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp39 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp39, "out"))
      end

      elseif _temp39 == nil then
        _error(exception:null_error("_temp39", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp39))
      end


_temp37 = string:new("local " .. _tostring(_temp38) .. "\n" .. _tostring(_temp39) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp36,_temp37)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp36,_temp37)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp36,_temp37)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp36,_temp37)
      else
        _error(exception:name_error("r"))
      end
    end

end

local _temp47 = function (_arg_table, _self)
local _temp27 = _arg_table["_temp27"]
local _temp29 = _arg_table["_temp29"]

local _temp42 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp42 =  _temp27(_self)

    elseif _temp27 then
      _temp42 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp42 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp42 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp42 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp42 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp43 = nil
do
local _temp44 = nil
        local _t = _type(_temp29)
        if _t == "table" then
          if _rawget(_temp29, "__call_thing") == nil then
            _temp44 = _temp29
          else
                  if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp44 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp44 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp44 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp44 =  _temp29(_self)
      end

          end
        elseif _t == "number" then
          _temp44 = _temp29
        elseif _t == "function" then
                if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp44 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp44 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp44 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp44 =  _temp29(_self)
      end

        elseif _temp29 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp44)
      if _t == "table" then
                      if _type(_temp44.out) == "function" or (_type(_temp44.out) == "table" and _rawget(_temp44.out, "__call_thing")) then
        _temp44 = _temp44:out()
      elseif _temp44.out ~= nil then
        _temp44 = _temp44.out

        elseif _temp44.no_undermethod ~= nil then
          _temp44 =  _temp44:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp44, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp44)
      if _n.out ~= nil then
        _temp44 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp44 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp44, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp44)
      if _f.out ~= nil then
        _temp44 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp44 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp44, "out"))
      end

      elseif _temp44 == nil then
        _error(exception:null_error("_temp44", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp44))
      end


local _temp45 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp45 =  _temp27(_self)

    elseif _temp27 then
      _temp45 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp45 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp45 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp45 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp45 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp46 = nil
        local _t = _type(_temp29)
        if _t == "table" then
          if _rawget(_temp29, "__call_thing") == nil then
            _temp46 = _temp29
          else
                  if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp46 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp46 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp46 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp46 =  _temp29(_self)
      end

          end
        elseif _t == "number" then
          _temp46 = _temp29
        elseif _t == "function" then
                if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp46 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp46 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp46 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp46 =  _temp29(_self)
      end

        elseif _temp29 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp46)
      if _t == "table" then
                      if _type(_temp46.var) == "function" or (_type(_temp46.var) == "table" and _rawget(_temp46.var, "__call_thing")) then
        _temp46 = _temp46:var()
      elseif _temp46.var ~= nil then
        _temp46 = _temp46.var

        elseif _temp46.no_undermethod ~= nil then
          _temp46 =  _temp46:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp46, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp46)
      if _n.var ~= nil then
        _temp46 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp46 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp46, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp46)
      if _f.var ~= nil then
        _temp46 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp46 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp46, "var"))
      end

      elseif _temp46 == nil then
        _error(exception:null_error("_temp46", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp46))
      end


_temp43 = string:new("" .. _tostring(_temp44) .. "\nlocal " .. _tostring(_temp45) .. " = " .. _tostring(_temp46) .. "")
end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp42,_temp43)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp42,_temp43)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp42,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp42,_temp43)
      else
        _error(exception:name_error("r"))
      end
    end

end

local _temp161 = function (_arg_table, _self, _temp158, _temp159)
local _temp157 = _arg_table["_temp157"]
local _temp152 = _arg_table["_temp152"]
local _temp153 = _arg_table["_temp153"]
local _temp151 = _arg_table["_temp151"]
        if _temp158 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp159 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp160
        local _t = _type(_temp157)
        if _t == "table" then
          if _rawget(_temp157, "__call_thing") == nil then
            _temp160 = _temp157
          else
                  if _temp157 == nil then
              if _type(_self._temp157) == "function" or (_type(_self._temp157) == "table" and _rawget(_self._temp157, "__call_thing")) then
        _temp160 =  _self:_temp157()
      elseif _self._temp157 ~= nil then
        _temp160 =  _self._temp157

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp157"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp160 =  _temp157(_self)
      end

          end
        elseif _t == "number" then
          _temp160 = _temp157
        elseif _t == "function" then
                if _temp157 == nil then
              if _type(_self._temp157) == "function" or (_type(_self._temp157) == "table" and _rawget(_self._temp157, "__call_thing")) then
        _temp160 =  _self:_temp157()
      elseif _self._temp157 ~= nil then
        _temp160 =  _self._temp157

        elseif _self.no_undermethod ~= nil then
          _temp160 =  _self:no_undermethod(string:new("_temp157"))
        else
          _error(exception:null_error("comp", "invoke method"))
        end
      else 
        _temp160 =  _temp157(_self)
      end

        elseif _temp157 == nil then
          _error(exception:null_error("comp", "cannot call method on it"))
        else
          _error(exception:method_error("self", "comp"))
        end
local _temp161 = nil
    if _type(_temp158) == "function" or (_type(_temp158) == "table" and _rawget(_temp158, "__call_thing")) then
      _temp161 =  _temp158(_self)

    elseif _temp158 then
      _temp161 =  _temp158
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp161 =  _self:n()
      elseif _self.n ~= nil then
        _temp161 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp161 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp161 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp162 = nil
    if _type(_temp152) == "function" or (_type(_temp152) == "table" and _rawget(_temp152, "__call_thing")) then
      _temp162 =  _temp152(_self)

    elseif _temp152 then
      _temp162 =  _temp152
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp162 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp162 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp162 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp162 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

      local _t = _type(_temp160)
      if _t == "table" then
                      if _type(_temp160.process) == "function" or (_type(_temp160.process) == "table" and _rawget(_temp160.process, "__call_thing")) then
        _temp160 = _temp160:process(_temp161,_temp162)
      elseif _temp160.process ~= nil then
        _temp160 = _temp160.process

        elseif _temp160.no_undermethod ~= nil then
          _temp160 =  _temp160:no_undermethod(string:new("process") , _temp161,_temp162)
        else
          _error(exception:method_error("elem", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp160)
      if _n.process ~= nil then
        _temp160 = _n:process(_temp161,_temp162)
      elseif _n.no_undermethod ~= nil then
        _temp160 =  _n:no_undermethod(string:new("process") , _temp161,_temp162)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp160)
      if _f.process ~= nil then
        _temp160 = _f:process(_temp161,_temp162)
      elseif _f.no_undermethod ~= nil then
        _temp160 =  _f:no_undermethod(string:new("process") , _temp161,_temp162)
      else
        _error(exception:method_error("elem", "process"))
      end

      elseif _temp160 == nil then
        _error(exception:null_error("elem", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp160))
      end


local _temp162 
do
local _temp163 = nil
_temp163 =  _temp153

local _temp164 = nil
        local _t = _type(_temp160)
        if _t == "table" then
          if _rawget(_temp160, "__call_thing") == nil then
            _temp164 = _temp160
          else
                  if _temp160 == nil then
              if _type(_self._temp160) == "function" or (_type(_self._temp160) == "table" and _rawget(_self._temp160, "__call_thing")) then
        _temp164 =  _self:_temp160()
      elseif _self._temp160 ~= nil then
        _temp164 =  _self._temp160

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp160"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp164 =  _temp160(_self)
      end

          end
        elseif _t == "number" then
          _temp164 = _temp160
        elseif _t == "function" then
                if _temp160 == nil then
              if _type(_self._temp160) == "function" or (_type(_self._temp160) == "table" and _rawget(_self._temp160, "__call_thing")) then
        _temp164 =  _self:_temp160()
      elseif _self._temp160 ~= nil then
        _temp164 =  _self._temp160

        elseif _self.no_undermethod ~= nil then
          _temp164 =  _self:no_undermethod(string:new("_temp160"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp164 =  _temp160(_self)
      end

        elseif _temp160 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end

local _temp165 = nil
      local _t = _type(_temp164)
      if _t == "table" then
                      if _type(_temp164.out) == "function" or (_type(_temp164.out) == "table" and _rawget(_temp164.out, "__call_thing")) then
        _temp165 = _temp164:out()
      elseif _temp164.out ~= nil then
        _temp165 = _temp164.out

        elseif _temp164.no_undermethod ~= nil then
          _temp165 =  _temp164:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp164, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp164)
      if _n.out ~= nil then
        _temp165 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp164, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp164)
      if _f.out ~= nil then
        _temp165 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp164, "out"))
      end

      elseif _temp164 == nil then
        _error(exception:null_error("_temp164", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp164))
      end

local _temp166 = string:new("\n")

local _temp167 = nil
do
local _temp168 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp168 =  _temp151(_self)

    elseif _temp151 then
      _temp168 =  _temp151
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp168 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp168 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp168 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp168 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp169 
do
local _temp170 = nil
    if _type(_temp159) == "function" or (_type(_temp159) == "table" and _rawget(_temp159, "__call_thing")) then
      _temp170 =  _temp159(_self)

    elseif _temp159 then
      _temp170 =  _temp159
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp170 =  _self:i()
      elseif _self.i ~= nil then
        _temp170 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp170 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp170 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp171
      local _t = _type(_temp170)
      if _t == "table" then
                      if _type(_temp170._plus) == "function" or (_type(_temp170._plus) == "table" and _rawget(_temp170._plus, "__call_thing")) then
        _temp171 = _temp170:_plus(1)
      elseif _temp170._plus ~= nil then
        _temp171 = _temp170._plus

        elseif _temp170.no_undermethod ~= nil then
          _temp171 =  _temp170:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp170, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp171 = _temp170 + 1
      else
              local _n = number:new(_temp170)
      if _n._plus ~= nil then
        _temp171 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp171 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp170, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp170)
      if _f._plus ~= nil then
        _temp171 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp171 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp170, "+"))
      end

      elseif _temp170 == nil then
        _error(exception:null_error("_temp170", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp170))
      end

_temp169 = _temp171 
end

local _temp172 = nil
        local _t = _type(_temp160)
        if _t == "table" then
          if _rawget(_temp160, "__call_thing") == nil then
            _temp172 = _temp160
          else
                  if _temp160 == nil then
              if _type(_self._temp160) == "function" or (_type(_self._temp160) == "table" and _rawget(_self._temp160, "__call_thing")) then
        _temp172 =  _self:_temp160()
      elseif _self._temp160 ~= nil then
        _temp172 =  _self._temp160

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp160"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp172 =  _temp160(_self)
      end

          end
        elseif _t == "number" then
          _temp172 = _temp160
        elseif _t == "function" then
                if _temp160 == nil then
              if _type(_self._temp160) == "function" or (_type(_self._temp160) == "table" and _rawget(_self._temp160, "__call_thing")) then
        _temp172 =  _self:_temp160()
      elseif _self._temp160 ~= nil then
        _temp172 =  _self._temp160

        elseif _self.no_undermethod ~= nil then
          _temp172 =  _self:no_undermethod(string:new("_temp160"))
        else
          _error(exception:null_error("elem", "invoke method"))
        end
      else 
        _temp172 =  _temp160(_self)
      end

        elseif _temp160 == nil then
          _error(exception:null_error("elem", "cannot call method on it"))
        else
          _error(exception:method_error("self", "elem"))
        end
      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.var) == "function" or (_type(_temp172.var) == "table" and _rawget(_temp172.var, "__call_thing")) then
        _temp172 = _temp172:var()
      elseif _temp172.var ~= nil then
        _temp172 = _temp172.var

        elseif _temp172.no_undermethod ~= nil then
          _temp172 =  _temp172:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp172, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.var ~= nil then
        _temp172 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp172 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp172, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.var ~= nil then
        _temp172 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp172 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp172, "var"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end


_temp167 = string:new("" .. _tostring(_temp168) .. "[" .. _tostring(_temp169) .. "] = " .. _tostring(_temp172) .. "\n")
end
local _temp173
              if _type(_temp163._less_less) == "function" or (_type(_temp163._less_less) == "table" and _rawget(_temp163._less_less, "__call_thing")) then
        _temp173 = _temp163:_less_less(_temp165)
      elseif _temp163._less_less ~= nil then
        _temp173 = _temp163._less_less

        elseif _temp163.no_undermethod ~= nil then
          _temp173 =  _temp163:no_undermethod(string:new("<<") , _temp165)
        else
          _error(exception:method_error(_temp163, "<<"))
        end

local _temp165
      local _t = _type(_temp173)
      if _t == "table" then
                      if _type(_temp173._less_less) == "function" or (_type(_temp173._less_less) == "table" and _rawget(_temp173._less_less, "__call_thing")) then
        _temp165 = _temp173:_less_less(_temp166)
      elseif _temp173._less_less ~= nil then
        _temp165 = _temp173._less_less

        elseif _temp173.no_undermethod ~= nil then
          _temp165 =  _temp173:no_undermethod(string:new("<<") , _temp166)
        else
          _error(exception:method_error(_temp173, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp173)
      if _n._less_less ~= nil then
        _temp165 = _n:_less_less(_temp166)
      elseif _n.no_undermethod ~= nil then
        _temp165 =  _n:no_undermethod(string:new("<<") , _temp166)
      else
        _error(exception:method_error(_temp173, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp173)
      if _f._less_less ~= nil then
        _temp165 = _f:_less_less(_temp166)
      elseif _f.no_undermethod ~= nil then
        _temp165 =  _f:no_undermethod(string:new("<<") , _temp166)
      else
        _error(exception:method_error(_temp173, "<<"))
      end

      elseif _temp173 == nil then
        _error(exception:null_error("_temp173", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp173))
      end

local _temp166
      local _t = _type(_temp165)
      if _t == "table" then
                      if _type(_temp165._less_less) == "function" or (_type(_temp165._less_less) == "table" and _rawget(_temp165._less_less, "__call_thing")) then
        _temp166 = _temp165:_less_less(_temp167)
      elseif _temp165._less_less ~= nil then
        _temp166 = _temp165._less_less

        elseif _temp165.no_undermethod ~= nil then
          _temp166 =  _temp165:no_undermethod(string:new("<<") , _temp167)
        else
          _error(exception:method_error(_temp165, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp165)
      if _n._less_less ~= nil then
        _temp166 = _n:_less_less(_temp167)
      elseif _n.no_undermethod ~= nil then
        _temp166 =  _n:no_undermethod(string:new("<<") , _temp167)
      else
        _error(exception:method_error(_temp165, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp165)
      if _f._less_less ~= nil then
        _temp166 = _f:_less_less(_temp167)
      elseif _f.no_undermethod ~= nil then
        _temp166 =  _f:no_undermethod(string:new("<<") , _temp167)
      else
        _error(exception:method_error(_temp165, "<<"))
      end

      elseif _temp165 == nil then
        _error(exception:null_error("_temp165", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp165))
      end

_temp162 = _temp166 
end

return _temp162
end

local _temp146 = function (_arg_table, _self)
local _temp141 = _arg_table["_temp141"]

local _temp144 = nil
    if _type(_temp141) == "function" or (_type(_temp141) == "table" and _rawget(_temp141, "__call_thing")) then
      _temp144 =  _temp141(_self)

    elseif _temp141 then
      _temp144 =  _temp141
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp144 =  _self:var()
      elseif _self.var ~= nil then
        _temp144 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp144 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp144 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp145 = string:new("array:new()")

local _temp146 = string:new("array")

local _temp147 = {}
_temp147[string:new("type")] = _temp146
_temp147 = hash:new(_temp147)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp144,_temp145,_temp147)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp144,_temp145,_temp147)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp144,_temp145,_temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp144,_temp145,_temp147)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

local _temp180 = function (_arg_table, _self)
local _temp141 = _arg_table["_temp141"]
local _temp142 = _arg_table["_temp142"]

local _temp149
local _temp150 = nil
    if _type(_temp141) == "function" or (_type(_temp141) == "table" and _rawget(_temp141, "__call_thing")) then
      _temp150 =  _temp141(_self)

    elseif _temp141 then
      _temp150 =  _temp141
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp150 =  _self:var()
      elseif _self.var ~= nil then
        _temp150 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp150 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp150 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp149 =  set_underresult(_self, _temp150)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp149 =  _self:set_underresult(_temp150)
      elseif _self.set_underresult ~= nil then
        _temp149 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp149 =  _self:no_undermethod(string:new("set_result") , _temp150)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp149 =  no_undermethod(_self, string:new("set_result") , _temp150)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp151
        local _t = _type(_temp149)
        if _t == "table" then
          if _rawget(_temp149, "__call_thing") == nil then
            _temp151 = _temp149
          else
                  if _temp149 == nil then
              if _type(_self._temp149) == "function" or (_type(_self._temp149) == "table" and _rawget(_self._temp149, "__call_thing")) then
        _temp151 =  _self:_temp149()
      elseif _self._temp149 ~= nil then
        _temp151 =  _self._temp149

        elseif _self.no_undermethod ~= nil then
          _temp151 =  _self:no_undermethod(string:new("_temp149"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp151 =  _temp149(_self)
      end

          end
        elseif _t == "number" then
          _temp151 = _temp149
        elseif _t == "function" then
                if _temp149 == nil then
              if _type(_self._temp149) == "function" or (_type(_self._temp149) == "table" and _rawget(_self._temp149, "__call_thing")) then
        _temp151 =  _self:_temp149()
      elseif _self._temp149 ~= nil then
        _temp151 =  _self._temp149

        elseif _self.no_undermethod ~= nil then
          _temp151 =  _self:no_undermethod(string:new("_temp149"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp151 =  _temp149(_self)
      end

        elseif _temp149 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp151)
      if _t == "table" then
                      if _type(_temp151.var) == "function" or (_type(_temp151.var) == "table" and _rawget(_temp151.var, "__call_thing")) then
        _temp151 = _temp151:var()
      elseif _temp151.var ~= nil then
        _temp151 = _temp151.var

        elseif _temp151.no_undermethod ~= nil then
          _temp151 =  _temp151:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("ares_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp151)
      if _n.var ~= nil then
        _temp151 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp151 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp151)
      if _f.var ~= nil then
        _temp151 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp151 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("ares_var", "var"))
      end

      elseif _temp151 == nil then
        _error(exception:null_error("ares_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp151))
      end


local _temp152
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp152 =  _self:my()
      elseif _self.my ~= nil then
        _temp152 =  _self.my

        elseif my ~= nil then
          _temp152 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp152)
      if _t == "table" then
                      if _type(_temp152.env) == "function" or (_type(_temp152.env) == "table" and _rawget(_temp152.env, "__call_thing")) then
        _temp152 = _temp152:env()
      elseif _temp152.env ~= nil then
        _temp152 = _temp152.env

        elseif _temp152.no_undermethod ~= nil then
          _temp152 =  _temp152:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp_var", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp152)
      if _n.env ~= nil then
        _temp152 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp152 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp152)
      if _f.env ~= nil then
        _temp152 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp152 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp_var", "env"))
      end

      elseif _temp152 == nil then
        _error(exception:null_error("temp_var", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp152))
      end

      local _t = _type(_temp152)
      if _t == "table" then
                      if _type(_temp152.next_undertemp) == "function" or (_type(_temp152.next_undertemp) == "table" and _rawget(_temp152.next_undertemp, "__call_thing")) then
        _temp152 = _temp152:next_undertemp()
      elseif _temp152.next_undertemp ~= nil then
        _temp152 = _temp152.next_undertemp

        elseif _temp152.no_undermethod ~= nil then
          _temp152 =  _temp152:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp_var", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp152)
      if _n.next_undertemp ~= nil then
        _temp152 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp152 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp152)
      if _f.next_undertemp ~= nil then
        _temp152 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp152 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp_var", "next_temp"))
      end

      elseif _temp152 == nil then
        _error(exception:null_error("temp_var", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp152))
      end


local _temp153
do
local _temp154 = nil
        local _t = _type(_temp149)
        if _t == "table" then
          if _rawget(_temp149, "__call_thing") == nil then
            _temp154 = _temp149
          else
                  if _temp149 == nil then
              if _type(_self._temp149) == "function" or (_type(_self._temp149) == "table" and _rawget(_self._temp149, "__call_thing")) then
        _temp154 =  _self:_temp149()
      elseif _self._temp149 ~= nil then
        _temp154 =  _self._temp149

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp149"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp154 =  _temp149(_self)
      end

          end
        elseif _t == "number" then
          _temp154 = _temp149
        elseif _t == "function" then
                if _temp149 == nil then
              if _type(_self._temp149) == "function" or (_type(_self._temp149) == "table" and _rawget(_self._temp149, "__call_thing")) then
        _temp154 =  _self:_temp149()
      elseif _self._temp149 ~= nil then
        _temp154 =  _self._temp149

        elseif _self.no_undermethod ~= nil then
          _temp154 =  _self:no_undermethod(string:new("_temp149"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp154 =  _temp149(_self)
      end

        elseif _temp149 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp154)
      if _t == "table" then
                      if _type(_temp154.out) == "function" or (_type(_temp154.out) == "table" and _rawget(_temp154.out, "__call_thing")) then
        _temp154 = _temp154:out()
      elseif _temp154.out ~= nil then
        _temp154 = _temp154.out

        elseif _temp154.no_undermethod ~= nil then
          _temp154 =  _temp154:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp154, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp154)
      if _n.out ~= nil then
        _temp154 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp154 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp154, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp154)
      if _f.out ~= nil then
        _temp154 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp154 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp154, "out"))
      end

      elseif _temp154 == nil then
        _error(exception:null_error("_temp154", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp154))
      end


local _temp155 = nil
    if _type(_temp152) == "function" or (_type(_temp152) == "table" and _rawget(_temp152, "__call_thing")) then
      _temp155 =  _temp152(_self)

    elseif _temp152 then
      _temp155 =  _temp152
    else
            if _type(_self.temp_undervar) == "function" or (_type(_self.temp_undervar) == "table" and _rawget(_self.temp_undervar, "__call_thing")) then
        _temp155 =  _self:temp_undervar()
      elseif _self.temp_undervar ~= nil then
        _temp155 =  _self.temp_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("temp_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("temp_var"))
      else
        _error(exception:name_error("temp_var"))
      end
    end

local _temp156 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp156 =  _temp151(_self)

    elseif _temp151 then
      _temp156 =  _temp151
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp156 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp156 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp156 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp156 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp153 = string:new("" .. _tostring(_temp154) .. "\ndo\nlocal " .. _tostring(_temp155) .. "\n" .. _tostring(_temp156) .. " = {}\n")
end

local _temp157
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp157 =  my(_self)

    elseif my then
      _temp157 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp157 =  _self:my()
      elseif _self.my ~= nil then
        _temp157 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp157 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp157 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp142)
        if _t == "table" then
          if _rawget(_temp142, "__call_thing") == nil then
            _temp150 = _temp142
          else
                  if _temp142 == nil then
              if _type(_self._temp142) == "function" or (_type(_self._temp142) == "table" and _rawget(_self._temp142, "__call_thing")) then
        _temp150 =  _self:_temp142()
      elseif _self._temp142 ~= nil then
        _temp150 =  _self._temp142

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp142"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp142(_self)
      end

          end
        elseif _t == "number" then
          _temp150 = _temp142
        elseif _t == "function" then
                if _temp142 == nil then
              if _type(_self._temp142) == "function" or (_type(_self._temp142) == "table" and _rawget(_self._temp142, "__call_thing")) then
        _temp150 =  _self:_temp142()
      elseif _self._temp142 ~= nil then
        _temp150 =  _self._temp142

        elseif _self.no_undermethod ~= nil then
          _temp150 =  _self:no_undermethod(string:new("_temp142"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp150 =  _temp142(_self)
      end

        elseif _temp142 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp150)
      if _t == "table" then
                      if _type(_temp150.nodes) == "function" or (_type(_temp150.nodes) == "table" and _rawget(_temp150.nodes, "__call_thing")) then
        _temp150 = _temp150:nodes()
      elseif _temp150.nodes ~= nil then
        _temp150 = _temp150.nodes

        elseif _temp150.no_undermethod ~= nil then
          _temp150 =  _temp150:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp150, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp150)
      if _n.nodes ~= nil then
        _temp150 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp150 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp150, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp150)
      if _f.nodes ~= nil then
        _temp150 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp150 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp150, "nodes"))
      end

      elseif _temp150 == nil then
        _error(exception:null_error("_temp150", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp150))
      end


local _temp174 = _lifted_call(_temp161, {})
_temp174.arg_table["_temp157"] = _temp157
_temp174.arg_table["_temp152"] = _temp152
_temp174.arg_table["_temp153"] = _temp153
_temp174.arg_table["_temp151"] = _temp151

      local _t = _type(_temp150)
      if _t == "table" then
                      if _type(_temp150.each_underwith_underindex) == "function" or (_type(_temp150.each_underwith_underindex) == "table" and _rawget(_temp150.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp150:each_underwith_underindex(_temp174)
      elseif _temp150.each_underwith_underindex ~= nil then
        _dummy_ = _temp150.each_underwith_underindex

        elseif _temp150.no_undermethod ~= nil then
          _dummy_ =  _temp150:no_undermethod(string:new("each_with_index") , _temp174)
        else
          _error(exception:method_error(_temp150, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp150)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp174)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp174)
      else
        _error(exception:method_error(_temp150, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp150)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp174)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp174)
      else
        _error(exception:method_error(_temp150, "each_with_index"))
      end

      elseif _temp150 == nil then
        _error(exception:null_error("_temp150", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp150))
      end

do
local _temp175 = nil
_temp175 =  _temp153

local _temp176 = nil
do
local _temp177 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp177 =  _temp151(_self)

    elseif _temp151 then
      _temp177 =  _temp151
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp177 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp177 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp177 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp177 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

local _temp178 = nil
    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp178 =  _temp151(_self)

    elseif _temp151 then
      _temp178 =  _temp151
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp178 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp178 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp178 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp178 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp176 = string:new("" .. _tostring(_temp177) .. " = array:new(" .. _tostring(_temp178) .. ")\nend\n")
end
local _temp179
              if _type(_temp175._less_less) == "function" or (_type(_temp175._less_less) == "table" and _rawget(_temp175._less_less, "__call_thing")) then
        _temp179 = _temp175:_less_less(_temp176)
      elseif _temp175._less_less ~= nil then
        _temp179 = _temp175._less_less

        elseif _temp175.no_undermethod ~= nil then
          _temp179 =  _temp175:no_undermethod(string:new("<<") , _temp176)
        else
          _error(exception:method_error(_temp175, "<<"))
        end

_dummy_ = _temp179 
end

    if _type(_temp151) == "function" or (_type(_temp151) == "table" and _rawget(_temp151, "__call_thing")) then
      _temp174 =  _temp151(_self)

    elseif _temp151 then
      _temp174 =  _temp151
    else
            if _type(_self.ares_undervar) == "function" or (_type(_self.ares_undervar) == "table" and _rawget(_self.ares_undervar, "__call_thing")) then
        _temp174 =  _self:ares_undervar()
      elseif _self.ares_undervar ~= nil then
        _temp174 =  _self.ares_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp174 =  _self:no_undermethod(string:new("ares_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp174 =  no_undermethod(_self, string:new("ares_var"))
      else
        _error(exception:name_error("ares_var"))
      end
    end

_temp150 =  _temp153

local _temp180 = string:new("array")

local _temp181 = {}
_temp181[string:new("type")] = _temp180
_temp181 = hash:new(_temp181)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp174,_temp150,_temp181)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp174,_temp150,_temp181)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp174,_temp150,_temp181)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp174,_temp150,_temp181)
      else
        _error(exception:name_error("r"))
      end
    end

end

local _temp207 = function (_arg_table, _self, _temp204)
local _temp203 = _arg_table["_temp203"]
local _temp197 = _arg_table["_temp197"]
local _temp198 = _arg_table["_temp198"]
local _temp199 = _arg_table["_temp199"]
local _temp196 = _arg_table["_temp196"]
        if _temp204 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp205
        local _t = _type(_temp203)
        if _t == "table" then
          if _rawget(_temp203, "__call_thing") == nil then
            _temp205 = _temp203
          else
                  if _temp203 == nil then
              if _type(_self._temp203) == "function" or (_type(_self._temp203) == "table" and _rawget(_self._temp203, "__call_thing")) then
        _temp205 =  _self:_temp203()
      elseif _self._temp203 ~= nil then
        _temp205 =  _self._temp203

        elseif _self.no_undermethod ~= nil then
          _temp205 =  _self:no_undermethod(string:new("_temp203"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp205 =  _temp203(_self)
      end

          end
        elseif _t == "number" then
          _temp205 = _temp203
        elseif _t == "function" then
                if _temp203 == nil then
              if _type(_self._temp203) == "function" or (_type(_self._temp203) == "table" and _rawget(_self._temp203, "__call_thing")) then
        _temp205 =  _self:_temp203()
      elseif _self._temp203 ~= nil then
        _temp205 =  _self._temp203

        elseif _self.no_undermethod ~= nil then
          _temp205 =  _self:no_undermethod(string:new("_temp203"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp205 =  _temp203(_self)
      end

        elseif _temp203 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp206 = nil
        local _t = _type(_temp204)
        if _t == "table" then
          if _rawget(_temp204, "__call_thing") == nil then
            _temp206 = _temp204
          else
                  if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp206 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp206 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp206 =  _temp204(_self)
      end

          end
        elseif _t == "number" then
          _temp206 = _temp204
        elseif _t == "function" then
                if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp206 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp206 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp206 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp206 =  _temp204(_self)
      end

        elseif _temp204 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp206)
      if _t == "table" then
                      if _type(_temp206.first) == "function" or (_type(_temp206.first) == "table" and _rawget(_temp206.first, "__call_thing")) then
        _temp206 = _temp206:first()
      elseif _temp206.first ~= nil then
        _temp206 = _temp206.first

        elseif _temp206.no_undermethod ~= nil then
          _temp206 =  _temp206:no_undermethod(string:new("first"))
        else
          _error(exception:method_error(_temp206, "first"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp206)
      if _n.first ~= nil then
        _temp206 = _n:first()
      elseif _n.no_undermethod ~= nil then
        _temp206 =  _n:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp206, "first"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp206)
      if _f.first ~= nil then
        _temp206 = _f:first()
      elseif _f.no_undermethod ~= nil then
        _temp206 =  _f:no_undermethod(string:new("first"))
      else
        _error(exception:method_error(_temp206, "first"))
      end

      elseif _temp206 == nil then
        _error(exception:null_error("_temp206", "invoke first on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp206))
      end


local _temp207 = nil
    if _type(_temp197) == "function" or (_type(_temp197) == "table" and _rawget(_temp197, "__call_thing")) then
      _temp207 =  _temp197(_self)

    elseif _temp197 then
      _temp207 =  _temp197
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp207 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp207 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp205)
      if _t == "table" then
                      if _type(_temp205.process) == "function" or (_type(_temp205.process) == "table" and _rawget(_temp205.process, "__call_thing")) then
        _temp205 = _temp205:process(_temp206,_temp207)
      elseif _temp205.process ~= nil then
        _temp205 = _temp205.process

        elseif _temp205.no_undermethod ~= nil then
          _temp205 =  _temp205:no_undermethod(string:new("process") , _temp206,_temp207)
        else
          _error(exception:method_error("key", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp205)
      if _n.process ~= nil then
        _temp205 = _n:process(_temp206,_temp207)
      elseif _n.no_undermethod ~= nil then
        _temp205 =  _n:no_undermethod(string:new("process") , _temp206,_temp207)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp205)
      if _f.process ~= nil then
        _temp205 = _f:process(_temp206,_temp207)
      elseif _f.no_undermethod ~= nil then
        _temp205 =  _f:no_undermethod(string:new("process") , _temp206,_temp207)
      else
        _error(exception:method_error("key", "process"))
      end

      elseif _temp205 == nil then
        _error(exception:null_error("key", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp205))
      end


local _temp208
        local _t = _type(_temp203)
        if _t == "table" then
          if _rawget(_temp203, "__call_thing") == nil then
            _temp208 = _temp203
          else
                  if _temp203 == nil then
              if _type(_self._temp203) == "function" or (_type(_self._temp203) == "table" and _rawget(_self._temp203, "__call_thing")) then
        _temp208 =  _self:_temp203()
      elseif _self._temp203 ~= nil then
        _temp208 =  _self._temp203

        elseif _self.no_undermethod ~= nil then
          _temp208 =  _self:no_undermethod(string:new("_temp203"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp208 =  _temp203(_self)
      end

          end
        elseif _t == "number" then
          _temp208 = _temp203
        elseif _t == "function" then
                if _temp203 == nil then
              if _type(_self._temp203) == "function" or (_type(_self._temp203) == "table" and _rawget(_self._temp203, "__call_thing")) then
        _temp208 =  _self:_temp203()
      elseif _self._temp203 ~= nil then
        _temp208 =  _self._temp203

        elseif _self.no_undermethod ~= nil then
          _temp208 =  _self:no_undermethod(string:new("_temp203"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp208 =  _temp203(_self)
      end

        elseif _temp203 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
        local _t = _type(_temp204)
        if _t == "table" then
          if _rawget(_temp204, "__call_thing") == nil then
            _temp207 = _temp204
          else
                  if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp207 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp207 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp207 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp207 =  _temp204(_self)
      end

          end
        elseif _t == "number" then
          _temp207 = _temp204
        elseif _t == "function" then
                if _temp204 == nil then
              if _type(_self._temp204) == "function" or (_type(_self._temp204) == "table" and _rawget(_self._temp204, "__call_thing")) then
        _temp207 =  _self:_temp204()
      elseif _self._temp204 ~= nil then
        _temp207 =  _self._temp204

        elseif _self.no_undermethod ~= nil then
          _temp207 =  _self:no_undermethod(string:new("_temp204"))
        else
          _error(exception:null_error("pair", "invoke method"))
        end
      else 
        _temp207 =  _temp204(_self)
      end

        elseif _temp204 == nil then
          _error(exception:null_error("pair", "cannot call method on it"))
        else
          _error(exception:method_error("self", "pair"))
        end
      local _t = _type(_temp207)
      if _t == "table" then
                      if _type(_temp207.last) == "function" or (_type(_temp207.last) == "table" and _rawget(_temp207.last, "__call_thing")) then
        _temp207 = _temp207:last()
      elseif _temp207.last ~= nil then
        _temp207 = _temp207.last

        elseif _temp207.no_undermethod ~= nil then
          _temp207 =  _temp207:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp207, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp207)
      if _n.last ~= nil then
        _temp207 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp207 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp207, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp207)
      if _f.last ~= nil then
        _temp207 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp207 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp207, "last"))
      end

      elseif _temp207 == nil then
        _error(exception:null_error("_temp207", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp207))
      end


    if _type(_temp198) == "function" or (_type(_temp198) == "table" and _rawget(_temp198, "__call_thing")) then
      _temp206 =  _temp198(_self)

    elseif _temp198 then
      _temp206 =  _temp198
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp206 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp206 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp206 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp206 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp208)
      if _t == "table" then
                      if _type(_temp208.process) == "function" or (_type(_temp208.process) == "table" and _rawget(_temp208.process, "__call_thing")) then
        _temp208 = _temp208:process(_temp207,_temp206)
      elseif _temp208.process ~= nil then
        _temp208 = _temp208.process

        elseif _temp208.no_undermethod ~= nil then
          _temp208 =  _temp208:no_undermethod(string:new("process") , _temp207,_temp206)
        else
          _error(exception:method_error("val", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp208)
      if _n.process ~= nil then
        _temp208 = _n:process(_temp207,_temp206)
      elseif _n.no_undermethod ~= nil then
        _temp208 =  _n:no_undermethod(string:new("process") , _temp207,_temp206)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp208)
      if _f.process ~= nil then
        _temp208 = _f:process(_temp207,_temp206)
      elseif _f.no_undermethod ~= nil then
        _temp208 =  _f:no_undermethod(string:new("process") , _temp207,_temp206)
      else
        _error(exception:method_error("val", "process"))
      end

      elseif _temp208 == nil then
        _error(exception:null_error("val", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp208))
      end


local _temp206 
do
local _temp209 = nil
_temp209 =  _temp199

local _temp210 = nil
do
local _temp211 = nil
        local _t = _type(_temp205)
        if _t == "table" then
          if _rawget(_temp205, "__call_thing") == nil then
            _temp211 = _temp205
          else
                  if _temp205 == nil then
              if _type(_self._temp205) == "function" or (_type(_self._temp205) == "table" and _rawget(_self._temp205, "__call_thing")) then
        _temp211 =  _self:_temp205()
      elseif _self._temp205 ~= nil then
        _temp211 =  _self._temp205

        elseif _self.no_undermethod ~= nil then
          _temp211 =  _self:no_undermethod(string:new("_temp205"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp211 =  _temp205(_self)
      end

          end
        elseif _t == "number" then
          _temp211 = _temp205
        elseif _t == "function" then
                if _temp205 == nil then
              if _type(_self._temp205) == "function" or (_type(_self._temp205) == "table" and _rawget(_self._temp205, "__call_thing")) then
        _temp211 =  _self:_temp205()
      elseif _self._temp205 ~= nil then
        _temp211 =  _self._temp205

        elseif _self.no_undermethod ~= nil then
          _temp211 =  _self:no_undermethod(string:new("_temp205"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp211 =  _temp205(_self)
      end

        elseif _temp205 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp211)
      if _t == "table" then
                      if _type(_temp211.out) == "function" or (_type(_temp211.out) == "table" and _rawget(_temp211.out, "__call_thing")) then
        _temp211 = _temp211:out()
      elseif _temp211.out ~= nil then
        _temp211 = _temp211.out

        elseif _temp211.no_undermethod ~= nil then
          _temp211 =  _temp211:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp211, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp211)
      if _n.out ~= nil then
        _temp211 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp211 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp211, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp211)
      if _f.out ~= nil then
        _temp211 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp211 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp211, "out"))
      end

      elseif _temp211 == nil then
        _error(exception:null_error("_temp211", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp211))
      end


local _temp212 = nil
        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp212 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp212 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp212 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp212 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp212 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp212 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp212 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp212 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp212 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.out) == "function" or (_type(_temp212.out) == "table" and _rawget(_temp212.out, "__call_thing")) then
        _temp212 = _temp212:out()
      elseif _temp212.out ~= nil then
        _temp212 = _temp212.out

        elseif _temp212.no_undermethod ~= nil then
          _temp212 =  _temp212:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp212, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.out ~= nil then
        _temp212 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp212 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp212, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.out ~= nil then
        _temp212 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp212 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp212, "out"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("_temp212", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end


local _temp213 = nil
    if _type(_temp196) == "function" or (_type(_temp196) == "table" and _rawget(_temp196, "__call_thing")) then
      _temp213 =  _temp196(_self)

    elseif _temp196 then
      _temp213 =  _temp196
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp213 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp213 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp213 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp213 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp214 = nil
        local _t = _type(_temp205)
        if _t == "table" then
          if _rawget(_temp205, "__call_thing") == nil then
            _temp214 = _temp205
          else
                  if _temp205 == nil then
              if _type(_self._temp205) == "function" or (_type(_self._temp205) == "table" and _rawget(_self._temp205, "__call_thing")) then
        _temp214 =  _self:_temp205()
      elseif _self._temp205 ~= nil then
        _temp214 =  _self._temp205

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp205"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp214 =  _temp205(_self)
      end

          end
        elseif _t == "number" then
          _temp214 = _temp205
        elseif _t == "function" then
                if _temp205 == nil then
              if _type(_self._temp205) == "function" or (_type(_self._temp205) == "table" and _rawget(_self._temp205, "__call_thing")) then
        _temp214 =  _self:_temp205()
      elseif _self._temp205 ~= nil then
        _temp214 =  _self._temp205

        elseif _self.no_undermethod ~= nil then
          _temp214 =  _self:no_undermethod(string:new("_temp205"))
        else
          _error(exception:null_error("key", "invoke method"))
        end
      else 
        _temp214 =  _temp205(_self)
      end

        elseif _temp205 == nil then
          _error(exception:null_error("key", "cannot call method on it"))
        else
          _error(exception:method_error("self", "key"))
        end
      local _t = _type(_temp214)
      if _t == "table" then
                      if _type(_temp214.var) == "function" or (_type(_temp214.var) == "table" and _rawget(_temp214.var, "__call_thing")) then
        _temp214 = _temp214:var()
      elseif _temp214.var ~= nil then
        _temp214 = _temp214.var

        elseif _temp214.no_undermethod ~= nil then
          _temp214 =  _temp214:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp214, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp214)
      if _n.var ~= nil then
        _temp214 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp214 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp214, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp214)
      if _f.var ~= nil then
        _temp214 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp214 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp214, "var"))
      end

      elseif _temp214 == nil then
        _error(exception:null_error("_temp214", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp214))
      end


local _temp215 = nil
        local _t = _type(_temp208)
        if _t == "table" then
          if _rawget(_temp208, "__call_thing") == nil then
            _temp215 = _temp208
          else
                  if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp215 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp215 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp215 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp215 =  _temp208(_self)
      end

          end
        elseif _t == "number" then
          _temp215 = _temp208
        elseif _t == "function" then
                if _temp208 == nil then
              if _type(_self._temp208) == "function" or (_type(_self._temp208) == "table" and _rawget(_self._temp208, "__call_thing")) then
        _temp215 =  _self:_temp208()
      elseif _self._temp208 ~= nil then
        _temp215 =  _self._temp208

        elseif _self.no_undermethod ~= nil then
          _temp215 =  _self:no_undermethod(string:new("_temp208"))
        else
          _error(exception:null_error("val", "invoke method"))
        end
      else 
        _temp215 =  _temp208(_self)
      end

        elseif _temp208 == nil then
          _error(exception:null_error("val", "cannot call method on it"))
        else
          _error(exception:method_error("self", "val"))
        end
      local _t = _type(_temp215)
      if _t == "table" then
                      if _type(_temp215.var) == "function" or (_type(_temp215.var) == "table" and _rawget(_temp215.var, "__call_thing")) then
        _temp215 = _temp215:var()
      elseif _temp215.var ~= nil then
        _temp215 = _temp215.var

        elseif _temp215.no_undermethod ~= nil then
          _temp215 =  _temp215:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp215, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp215)
      if _n.var ~= nil then
        _temp215 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp215 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp215, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp215)
      if _f.var ~= nil then
        _temp215 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp215 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp215, "var"))
      end

      elseif _temp215 == nil then
        _error(exception:null_error("_temp215", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp215))
      end


_temp210 = string:new("" .. _tostring(_temp211) .. "\n" .. _tostring(_temp212) .. "\n" .. _tostring(_temp213) .. "[" .. _tostring(_temp214) .. "] = " .. _tostring(_temp215) .. "\n")
end
local _temp216
              if _type(_temp209._less_less) == "function" or (_type(_temp209._less_less) == "table" and _rawget(_temp209._less_less, "__call_thing")) then
        _temp216 = _temp209:_less_less(_temp210)
      elseif _temp209._less_less ~= nil then
        _temp216 = _temp209._less_less

        elseif _temp209.no_undermethod ~= nil then
          _temp216 =  _temp209:no_undermethod(string:new("<<") , _temp210)
        else
          _error(exception:method_error(_temp209, "<<"))
        end

_temp206 = _temp216 
end

return _temp206
end

local _temp190 = function (_arg_table, _self)
local _temp185 = _arg_table["_temp185"]

local _temp188 = nil
    if _type(_temp185) == "function" or (_type(_temp185) == "table" and _rawget(_temp185, "__call_thing")) then
      _temp188 =  _temp185(_self)

    elseif _temp185 then
      _temp188 =  _temp185
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp188 =  _self:var()
      elseif _self.var ~= nil then
        _temp188 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp188 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp188 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp189 = string:new("hash:new()")

local _temp190 = string:new("hash")

local _temp191 = {}
_temp191[string:new("type")] = _temp190
_temp191 = hash:new(_temp191)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp188,_temp189,_temp191)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp188,_temp189,_temp191)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp188,_temp189,_temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp188,_temp189,_temp191)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

local _temp194 = function (_arg_table, _self)
local _temp185 = _arg_table["_temp185"]
local _temp186 = _arg_table["_temp186"]

local _temp193
local _temp194 = nil
    if _type(_temp185) == "function" or (_type(_temp185) == "table" and _rawget(_temp185, "__call_thing")) then
      _temp194 =  _temp185(_self)

    elseif _temp185 then
      _temp194 =  _temp185
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp194 =  _self:var()
      elseif _self.var ~= nil then
        _temp194 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp194 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp194 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp195 = string:new("{}")

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp193 =  set_underresult(_self, _temp194,_temp195)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp193 =  _self:set_underresult(_temp194,_temp195)
      elseif _self.set_underresult ~= nil then
        _temp193 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp193 =  _self:no_undermethod(string:new("set_result") , _temp194,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp193 =  no_undermethod(_self, string:new("set_result") , _temp194,_temp195)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp196
        local _t = _type(_temp193)
        if _t == "table" then
          if _rawget(_temp193, "__call_thing") == nil then
            _temp196 = _temp193
          else
                  if _temp193 == nil then
              if _type(_self._temp193) == "function" or (_type(_self._temp193) == "table" and _rawget(_self._temp193, "__call_thing")) then
        _temp196 =  _self:_temp193()
      elseif _self._temp193 ~= nil then
        _temp196 =  _self._temp193

        elseif _self.no_undermethod ~= nil then
          _temp196 =  _self:no_undermethod(string:new("_temp193"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp196 =  _temp193(_self)
      end

          end
        elseif _t == "number" then
          _temp196 = _temp193
        elseif _t == "function" then
                if _temp193 == nil then
              if _type(_self._temp193) == "function" or (_type(_self._temp193) == "table" and _rawget(_self._temp193, "__call_thing")) then
        _temp196 =  _self:_temp193()
      elseif _self._temp193 ~= nil then
        _temp196 =  _self._temp193

        elseif _self.no_undermethod ~= nil then
          _temp196 =  _self:no_undermethod(string:new("_temp193"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp196 =  _temp193(_self)
      end

        elseif _temp193 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp196)
      if _t == "table" then
                      if _type(_temp196.var) == "function" or (_type(_temp196.var) == "table" and _rawget(_temp196.var, "__call_thing")) then
        _temp196 = _temp196:var()
      elseif _temp196.var ~= nil then
        _temp196 = _temp196.var

        elseif _temp196.no_undermethod ~= nil then
          _temp196 =  _temp196:no_undermethod(string:new("var"))
        else
          _error(exception:method_error("hres_var", "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp196)
      if _n.var ~= nil then
        _temp196 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp196 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp196)
      if _f.var ~= nil then
        _temp196 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp196 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error("hres_var", "var"))
      end

      elseif _temp196 == nil then
        _error(exception:null_error("hres_var", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp196))
      end


local _temp197
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp197 =  _self:my()
      elseif _self.my ~= nil then
        _temp197 =  _self.my

        elseif my ~= nil then
          _temp197 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp197)
      if _t == "table" then
                      if _type(_temp197.env) == "function" or (_type(_temp197.env) == "table" and _rawget(_temp197.env, "__call_thing")) then
        _temp197 = _temp197:env()
      elseif _temp197.env ~= nil then
        _temp197 = _temp197.env

        elseif _temp197.no_undermethod ~= nil then
          _temp197 =  _temp197:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("key_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp197)
      if _n.env ~= nil then
        _temp197 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp197 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp197)
      if _f.env ~= nil then
        _temp197 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp197 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("key_temp", "env"))
      end

      elseif _temp197 == nil then
        _error(exception:null_error("key_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp197))
      end

      local _t = _type(_temp197)
      if _t == "table" then
                      if _type(_temp197.next_undertemp) == "function" or (_type(_temp197.next_undertemp) == "table" and _rawget(_temp197.next_undertemp, "__call_thing")) then
        _temp197 = _temp197:next_undertemp()
      elseif _temp197.next_undertemp ~= nil then
        _temp197 = _temp197.next_undertemp

        elseif _temp197.no_undermethod ~= nil then
          _temp197 =  _temp197:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("key_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp197)
      if _n.next_undertemp ~= nil then
        _temp197 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp197 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp197)
      if _f.next_undertemp ~= nil then
        _temp197 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp197 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("key_temp", "next_temp"))
      end

      elseif _temp197 == nil then
        _error(exception:null_error("key_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp197))
      end


local _temp198
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp198 =  _self:my()
      elseif _self.my ~= nil then
        _temp198 =  _self.my

        elseif my ~= nil then
          _temp198 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp198)
      if _t == "table" then
                      if _type(_temp198.env) == "function" or (_type(_temp198.env) == "table" and _rawget(_temp198.env, "__call_thing")) then
        _temp198 = _temp198:env()
      elseif _temp198.env ~= nil then
        _temp198 = _temp198.env

        elseif _temp198.no_undermethod ~= nil then
          _temp198 =  _temp198:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("val_temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp198)
      if _n.env ~= nil then
        _temp198 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp198 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp198)
      if _f.env ~= nil then
        _temp198 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp198 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("val_temp", "env"))
      end

      elseif _temp198 == nil then
        _error(exception:null_error("val_temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp198))
      end

      local _t = _type(_temp198)
      if _t == "table" then
                      if _type(_temp198.next_undertemp) == "function" or (_type(_temp198.next_undertemp) == "table" and _rawget(_temp198.next_undertemp, "__call_thing")) then
        _temp198 = _temp198:next_undertemp()
      elseif _temp198.next_undertemp ~= nil then
        _temp198 = _temp198.next_undertemp

        elseif _temp198.no_undermethod ~= nil then
          _temp198 =  _temp198:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("val_temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp198)
      if _n.next_undertemp ~= nil then
        _temp198 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp198 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp198)
      if _f.next_undertemp ~= nil then
        _temp198 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp198 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("val_temp", "next_temp"))
      end

      elseif _temp198 == nil then
        _error(exception:null_error("val_temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp198))
      end


local _temp199
do
local _temp200 = nil
        local _t = _type(_temp193)
        if _t == "table" then
          if _rawget(_temp193, "__call_thing") == nil then
            _temp200 = _temp193
          else
                  if _temp193 == nil then
              if _type(_self._temp193) == "function" or (_type(_self._temp193) == "table" and _rawget(_self._temp193, "__call_thing")) then
        _temp200 =  _self:_temp193()
      elseif _self._temp193 ~= nil then
        _temp200 =  _self._temp193

        elseif _self.no_undermethod ~= nil then
          _temp200 =  _self:no_undermethod(string:new("_temp193"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp200 =  _temp193(_self)
      end

          end
        elseif _t == "number" then
          _temp200 = _temp193
        elseif _t == "function" then
                if _temp193 == nil then
              if _type(_self._temp193) == "function" or (_type(_self._temp193) == "table" and _rawget(_self._temp193, "__call_thing")) then
        _temp200 =  _self:_temp193()
      elseif _self._temp193 ~= nil then
        _temp200 =  _self._temp193

        elseif _self.no_undermethod ~= nil then
          _temp200 =  _self:no_undermethod(string:new("_temp193"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp200 =  _temp193(_self)
      end

        elseif _temp193 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp200)
      if _t == "table" then
                      if _type(_temp200.out) == "function" or (_type(_temp200.out) == "table" and _rawget(_temp200.out, "__call_thing")) then
        _temp200 = _temp200:out()
      elseif _temp200.out ~= nil then
        _temp200 = _temp200.out

        elseif _temp200.no_undermethod ~= nil then
          _temp200 =  _temp200:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp200, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp200)
      if _n.out ~= nil then
        _temp200 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp200 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp200, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp200)
      if _f.out ~= nil then
        _temp200 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp200 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp200, "out"))
      end

      elseif _temp200 == nil then
        _error(exception:null_error("_temp200", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp200))
      end


local _temp201 = nil
    if _type(_temp197) == "function" or (_type(_temp197) == "table" and _rawget(_temp197, "__call_thing")) then
      _temp201 =  _temp197(_self)

    elseif _temp197 then
      _temp201 =  _temp197
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp201 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp201 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp201 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp201 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

local _temp202 = nil
    if _type(_temp198) == "function" or (_type(_temp198) == "table" and _rawget(_temp198, "__call_thing")) then
      _temp202 =  _temp198(_self)

    elseif _temp198 then
      _temp202 =  _temp198
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp202 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp202 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp202 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp202 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

_temp199 = string:new("" .. _tostring(_temp200) .. "\ndo\nlocal " .. _tostring(_temp201) .. ";local " .. _tostring(_temp202) .. "\n")
end

local _temp203
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp203 =  my(_self)

    elseif my then
      _temp203 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp203 =  _self:my()
      elseif _self.my ~= nil then
        _temp203 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp186)
        if _t == "table" then
          if _rawget(_temp186, "__call_thing") == nil then
            _temp195 = _temp186
          else
                  if _temp186 == nil then
              if _type(_self._temp186) == "function" or (_type(_self._temp186) == "table" and _rawget(_self._temp186, "__call_thing")) then
        _temp195 =  _self:_temp186()
      elseif _self._temp186 ~= nil then
        _temp195 =  _self._temp186

        elseif _self.no_undermethod ~= nil then
          _temp195 =  _self:no_undermethod(string:new("_temp186"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp195 =  _temp186(_self)
      end

          end
        elseif _t == "number" then
          _temp195 = _temp186
        elseif _t == "function" then
                if _temp186 == nil then
              if _type(_self._temp186) == "function" or (_type(_self._temp186) == "table" and _rawget(_self._temp186, "__call_thing")) then
        _temp195 =  _self:_temp186()
      elseif _self._temp186 ~= nil then
        _temp195 =  _self._temp186

        elseif _self.no_undermethod ~= nil then
          _temp195 =  _self:no_undermethod(string:new("_temp186"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp195 =  _temp186(_self)
      end

        elseif _temp186 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195.nodes) == "function" or (_type(_temp195.nodes) == "table" and _rawget(_temp195.nodes, "__call_thing")) then
        _temp195 = _temp195:nodes()
      elseif _temp195.nodes ~= nil then
        _temp195 = _temp195.nodes

        elseif _temp195.no_undermethod ~= nil then
          _temp195 =  _temp195:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp195, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n.nodes ~= nil then
        _temp195 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp195 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp195, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f.nodes ~= nil then
        _temp195 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp195 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp195, "nodes"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end


local _temp217 = _lifted_call(_temp207, {})
_temp217.arg_table["_temp203"] = _temp203
_temp217.arg_table["_temp197"] = _temp197
_temp217.arg_table["_temp198"] = _temp198
_temp217.arg_table["_temp199"] = _temp199
_temp217.arg_table["_temp196"] = _temp196

      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195.each) == "function" or (_type(_temp195.each) == "table" and _rawget(_temp195.each, "__call_thing")) then
        _dummy_ = _temp195:each(_temp217)
      elseif _temp195.each ~= nil then
        _dummy_ = _temp195.each

        elseif _temp195.no_undermethod ~= nil then
          _dummy_ =  _temp195:no_undermethod(string:new("each") , _temp217)
        else
          _error(exception:method_error(_temp195, "each"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n.each ~= nil then
        _dummy_ = _n:each(_temp217)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each") , _temp217)
      else
        _error(exception:method_error(_temp195, "each"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f.each ~= nil then
        _dummy_ = _f:each(_temp217)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each") , _temp217)
      else
        _error(exception:method_error(_temp195, "each"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke each on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp217 =  _self:my()
      elseif _self.my ~= nil then
        _temp217 =  _self.my

        elseif my ~= nil then
          _temp217 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.env) == "function" or (_type(_temp217.env) == "table" and _rawget(_temp217.env, "__call_thing")) then
        _temp217 = _temp217:env()
      elseif _temp217.env ~= nil then
        _temp217 = _temp217.env

        elseif _temp217.no_undermethod ~= nil then
          _temp217 =  _temp217:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp217, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.env ~= nil then
        _temp217 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp217 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.env ~= nil then
        _temp217 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp217 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp217, "env"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

    if _type(_temp197) == "function" or (_type(_temp197) == "table" and _rawget(_temp197, "__call_thing")) then
      _temp195 =  _temp197(_self)

    elseif _temp197 then
      _temp195 =  _temp197
    else
            if _type(_self.key_undertemp) == "function" or (_type(_self.key_undertemp) == "table" and _rawget(_self.key_undertemp, "__call_thing")) then
        _temp195 =  _self:key_undertemp()
      elseif _self.key_undertemp ~= nil then
        _temp195 =  _self.key_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("key_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("key_temp"))
      else
        _error(exception:name_error("key_temp"))
      end
    end

      local _t = _type(_temp217)
      if _t == "table" then
                      if _type(_temp217.unset) == "function" or (_type(_temp217.unset) == "table" and _rawget(_temp217.unset, "__call_thing")) then
        _dummy_ = _temp217:unset(_temp195)
      elseif _temp217.unset ~= nil then
        _dummy_ = _temp217.unset

        elseif _temp217.no_undermethod ~= nil then
          _dummy_ =  _temp217:no_undermethod(string:new("unset") , _temp195)
        else
          _error(exception:method_error(_temp217, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp217)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp195)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp195)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp217)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp195)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp195)
      else
        _error(exception:method_error(_temp217, "unset"))
      end

      elseif _temp217 == nil then
        _error(exception:null_error("_temp217", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp217))
      end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp195 =  _self:my()
      elseif _self.my ~= nil then
        _temp195 =  _self.my

        elseif my ~= nil then
          _temp195 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195.env) == "function" or (_type(_temp195.env) == "table" and _rawget(_temp195.env, "__call_thing")) then
        _temp195 = _temp195:env()
      elseif _temp195.env ~= nil then
        _temp195 = _temp195.env

        elseif _temp195.no_undermethod ~= nil then
          _temp195 =  _temp195:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp195, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n.env ~= nil then
        _temp195 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp195 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp195, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f.env ~= nil then
        _temp195 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp195 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp195, "env"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

    if _type(_temp198) == "function" or (_type(_temp198) == "table" and _rawget(_temp198, "__call_thing")) then
      _temp217 =  _temp198(_self)

    elseif _temp198 then
      _temp217 =  _temp198
    else
            if _type(_self.val_undertemp) == "function" or (_type(_self.val_undertemp) == "table" and _rawget(_self.val_undertemp, "__call_thing")) then
        _temp217 =  _self:val_undertemp()
      elseif _self.val_undertemp ~= nil then
        _temp217 =  _self.val_undertemp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("val_temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("val_temp"))
      else
        _error(exception:name_error("val_temp"))
      end
    end

      local _t = _type(_temp195)
      if _t == "table" then
                      if _type(_temp195.unset) == "function" or (_type(_temp195.unset) == "table" and _rawget(_temp195.unset, "__call_thing")) then
        _dummy_ = _temp195:unset(_temp217)
      elseif _temp195.unset ~= nil then
        _dummy_ = _temp195.unset

        elseif _temp195.no_undermethod ~= nil then
          _dummy_ =  _temp195:no_undermethod(string:new("unset") , _temp217)
        else
          _error(exception:method_error(_temp195, "unset"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp195)
      if _n.unset ~= nil then
        _dummy_ = _n:unset(_temp217)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp195, "unset"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp195)
      if _f.unset ~= nil then
        _dummy_ = _f:unset(_temp217)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("unset") , _temp217)
      else
        _error(exception:method_error(_temp195, "unset"))
      end

      elseif _temp195 == nil then
        _error(exception:null_error("_temp195", "invoke unset on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp195))
      end

do
local _temp218 = nil
_temp218 =  _temp199

local _temp219 = nil
do
local _temp220 = nil
    if _type(_temp196) == "function" or (_type(_temp196) == "table" and _rawget(_temp196, "__call_thing")) then
      _temp220 =  _temp196(_self)

    elseif _temp196 then
      _temp220 =  _temp196
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp220 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp220 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp220 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp220 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

local _temp221 = nil
    if _type(_temp196) == "function" or (_type(_temp196) == "table" and _rawget(_temp196, "__call_thing")) then
      _temp221 =  _temp196(_self)

    elseif _temp196 then
      _temp221 =  _temp196
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp221 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp221 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp221 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp221 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp219 = string:new("\n" .. _tostring(_temp220) .. " = hash:new(" .. _tostring(_temp221) .. ")\nend\n")
end
local _temp222
              if _type(_temp218._less_less) == "function" or (_type(_temp218._less_less) == "table" and _rawget(_temp218._less_less, "__call_thing")) then
        _temp222 = _temp218:_less_less(_temp219)
      elseif _temp218._less_less ~= nil then
        _temp222 = _temp218._less_less

        elseif _temp218.no_undermethod ~= nil then
          _temp222 =  _temp218:no_undermethod(string:new("<<") , _temp219)
        else
          _error(exception:method_error(_temp218, "<<"))
        end

_dummy_ = _temp222 
end

    if _type(_temp196) == "function" or (_type(_temp196) == "table" and _rawget(_temp196, "__call_thing")) then
      _temp217 =  _temp196(_self)

    elseif _temp196 then
      _temp217 =  _temp196
    else
            if _type(_self.hres_undervar) == "function" or (_type(_self.hres_undervar) == "table" and _rawget(_self.hres_undervar, "__call_thing")) then
        _temp217 =  _self:hres_undervar()
      elseif _self.hres_undervar ~= nil then
        _temp217 =  _self.hres_undervar

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("hres_var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("hres_var"))
      else
        _error(exception:name_error("hres_var"))
      end
    end

_temp195 =  _temp199

_temp194 = string:new("hash")

local _temp223 = {}
_temp223[string:new("type")] = _temp194
_temp223 = hash:new(_temp223)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp217,_temp195,_temp223)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp217,_temp195,_temp223)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp217,_temp195,_temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp217,_temp195,_temp223)
      else
        _error(exception:name_error("r"))
      end
    end

end

local _temp232 = function (_arg_table, _self)
local _temp227 = _arg_table["_temp227"]

local _temp230 = nil
    if _type(_temp227) == "function" or (_type(_temp227) == "table" and _rawget(_temp227, "__call_thing")) then
      _temp230 =  _temp227(_self)

    elseif _temp227 then
      _temp230 =  _temp227
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp230 =  _self:var()
      elseif _self.var ~= nil then
        _temp230 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp230 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp230 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp231 = string:new("string:new(\"\")")

local _temp232 = string:new("string")

local _temp233 = {}
_temp233[string:new("type")] = _temp232
_temp233 = hash:new(_temp233)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp230,_temp231,_temp233)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp230,_temp231,_temp233)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp230,_temp231,_temp233)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp230,_temp231,_temp233)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

local _temp239 = function (_arg_table, _self)
local _temp227 = _arg_table["_temp227"]
local _temp228 = _arg_table["_temp228"]

local _temp235 = nil
    if _type(_temp227) == "function" or (_type(_temp227) == "table" and _rawget(_temp227, "__call_thing")) then
      _temp235 =  _temp227(_self)

    elseif _temp227 then
      _temp235 =  _temp227
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp235 =  _self:var()
      elseif _self.var ~= nil then
        _temp235 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp235 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp235 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp236 = nil
do
local _temp237 = nil
local _temp238 = nil
        local _t = _type(_temp228)
        if _t == "table" then
          if _rawget(_temp228, "__call_thing") == nil then
            _temp238 = _temp228
          else
                  if _temp228 == nil then
              if _type(_self._temp228) == "function" or (_type(_self._temp228) == "table" and _rawget(_self._temp228, "__call_thing")) then
        _temp238 =  _self:_temp228()
      elseif _self._temp228 ~= nil then
        _temp238 =  _self._temp228

        elseif _self.no_undermethod ~= nil then
          _temp238 =  _self:no_undermethod(string:new("_temp228"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp238 =  _temp228(_self)
      end

          end
        elseif _t == "number" then
          _temp238 = _temp228
        elseif _t == "function" then
                if _temp228 == nil then
              if _type(_self._temp228) == "function" or (_type(_self._temp228) == "table" and _rawget(_self._temp228, "__call_thing")) then
        _temp238 =  _self:_temp228()
      elseif _self._temp228 ~= nil then
        _temp238 =  _self._temp228

        elseif _self.no_undermethod ~= nil then
          _temp238 =  _self:no_undermethod(string:new("_temp228"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp238 =  _temp228(_self)
      end

        elseif _temp228 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp238)
      if _t == "table" then
                      if _type(_temp238.value) == "function" or (_type(_temp238.value) == "table" and _rawget(_temp238.value, "__call_thing")) then
        _temp238 = _temp238:value()
      elseif _temp238.value ~= nil then
        _temp238 = _temp238.value

        elseif _temp238.no_undermethod ~= nil then
          _temp238 =  _temp238:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp238, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp238)
      if _n.value ~= nil then
        _temp238 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp238 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp238, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp238)
      if _f.value ~= nil then
        _temp238 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp238 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp238, "value"))
      end

      elseif _temp238 == nil then
        _error(exception:null_error("_temp238", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp238))
      end


    if _type(escape_understring) == "function" or (_type(escape_understring) == "table" and _rawget(escape_understring, "__call_thing")) then
      _temp237 =  escape_understring(_self, _temp238)

    elseif escape_understring then
      _error(exception:new("Tried to invoke non-method: escape_string (" .. object.__type(escape_understring) .. ")"))
    else
            if _type(_self.escape_understring) == "function" or (_type(_self.escape_understring) == "table" and _rawget(_self.escape_understring, "__call_thing")) then
        _temp237 =  _self:escape_understring(_temp238)
      elseif _self.escape_understring ~= nil then
        _temp237 =  _self.escape_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp237 =  _self:no_undermethod(string:new("escape_string") , _temp238)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp237 =  no_undermethod(_self, string:new("escape_string") , _temp238)
      else
        _error(exception:name_error("escape_string"))
      end
    end

_temp236 = string:new("string:new(\"" .. _tostring(_temp237) .. "\")")
end

local _temp239 = string:new("string")

local _temp240 = {}
_temp240[string:new("type")] = _temp239
_temp240 = hash:new(_temp240)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp235,_temp236,_temp240)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp235,_temp236,_temp240)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp235,_temp236,_temp240)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp235,_temp236,_temp240)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

local _temp297 = function (_arg_table, _self)
local _temp259 = _arg_table["_temp259"]

local _temp292 
do
local _temp293 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp293 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp293 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp293 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp293 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp293 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp293 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp293 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp293 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp293 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp293 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp294 = nil
      local _t = _type(_temp293)
      if _t == "table" then
                      if _type(_temp293.out) == "function" or (_type(_temp293.out) == "table" and _rawget(_temp293.out, "__call_thing")) then
        _temp294 = _temp293:out()
      elseif _temp293.out ~= nil then
        _temp294 = _temp293.out

        elseif _temp293.no_undermethod ~= nil then
          _temp294 =  _temp293:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp293, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp293)
      if _n.out ~= nil then
        _temp294 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp294 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp293, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp293)
      if _f.out ~= nil then
        _temp294 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp294 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp293, "out"))
      end

      elseif _temp293 == nil then
        _error(exception:null_error("_temp293", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp293))
      end

local _temp295 = string:new("return object:null()")
local _temp296
      local _t = _type(_temp294)
      if _t == "table" then
                      if _type(_temp294._less_less) == "function" or (_type(_temp294._less_less) == "table" and _rawget(_temp294._less_less, "__call_thing")) then
        _temp296 = _temp294:_less_less(_temp295)
      elseif _temp294._less_less ~= nil then
        _temp296 = _temp294._less_less

        elseif _temp294.no_undermethod ~= nil then
          _temp296 =  _temp294:no_undermethod(string:new("<<") , _temp295)
        else
          _error(exception:method_error(_temp294, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp294)
      if _n._less_less ~= nil then
        _temp296 = _n:_less_less(_temp295)
      elseif _n.no_undermethod ~= nil then
        _temp296 =  _n:no_undermethod(string:new("<<") , _temp295)
      else
        _error(exception:method_error(_temp294, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp294)
      if _f._less_less ~= nil then
        _temp296 = _f:_less_less(_temp295)
      elseif _f.no_undermethod ~= nil then
        _temp296 =  _f:no_undermethod(string:new("<<") , _temp295)
      else
        _error(exception:method_error(_temp294, "<<"))
      end

      elseif _temp294 == nil then
        _error(exception:null_error("_temp294", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp294))
      end

_temp292 = _temp296 
end

return _temp292
end

local _temp274 = function (_arg_table, _self, _temp271)
local _temp256 = _arg_table["_temp256"]
        if _temp271 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp272 = nil
        local _t = _type(_temp256)
        if _t == "table" then
          if _rawget(_temp256, "__call_thing") == nil then
            _temp272 = _temp256
          else
                  if _temp256 == nil then
              if _type(_self._temp256) == "function" or (_type(_self._temp256) == "table" and _rawget(_self._temp256, "__call_thing")) then
        _temp272 =  _self:_temp256()
      elseif _self._temp256 ~= nil then
        _temp272 =  _self._temp256

        elseif _self.no_undermethod ~= nil then
          _temp272 =  _self:no_undermethod(string:new("_temp256"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp272 =  _temp256(_self)
      end

          end
        elseif _t == "number" then
          _temp272 = _temp256
        elseif _t == "function" then
                if _temp256 == nil then
              if _type(_self._temp256) == "function" or (_type(_self._temp256) == "table" and _rawget(_self._temp256, "__call_thing")) then
        _temp272 =  _self:_temp256()
      elseif _self._temp256 ~= nil then
        _temp272 =  _self._temp256

        elseif _self.no_undermethod ~= nil then
          _temp272 =  _self:no_undermethod(string:new("_temp256"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp272 =  _temp256(_self)
      end

        elseif _temp256 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp273 = nil
    if _type(_temp271) == "function" or (_type(_temp271) == "table" and _rawget(_temp271, "__call_thing")) then
      _temp273 =  _temp271(_self)

    elseif _temp271 then
      _temp273 =  _temp271
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp273 =  _self:n()
      elseif _self.n ~= nil then
        _temp273 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp273 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp273 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp274 = string:new("_dummy")

      local _t = _type(_temp272)
      if _t == "table" then
                      if _type(_temp272.process) == "function" or (_type(_temp272.process) == "table" and _rawget(_temp272.process, "__call_thing")) then
        _temp272 = _temp272:process(_temp273,_temp274)
      elseif _temp272.process ~= nil then
        _temp272 = _temp272.process

        elseif _temp272.no_undermethod ~= nil then
          _temp272 =  _temp272:no_undermethod(string:new("process") , _temp273,_temp274)
        else
          _error(exception:method_error(_temp272, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp272)
      if _n.process ~= nil then
        _temp272 = _n:process(_temp273,_temp274)
      elseif _n.no_undermethod ~= nil then
        _temp272 =  _n:no_undermethod(string:new("process") , _temp273,_temp274)
      else
        _error(exception:method_error(_temp272, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp272)
      if _f.process ~= nil then
        _temp272 = _f:process(_temp273,_temp274)
      elseif _f.no_undermethod ~= nil then
        _temp272 =  _f:no_undermethod(string:new("process") , _temp273,_temp274)
      else
        _error(exception:method_error(_temp272, "process"))
      end

      elseif _temp272 == nil then
        _error(exception:null_error("_temp272", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp272))
      end

      local _t = _type(_temp272)
      if _t == "table" then
                      if _type(_temp272.out) == "function" or (_type(_temp272.out) == "table" and _rawget(_temp272.out, "__call_thing")) then
        return _temp272:out()
      elseif _temp272.out ~= nil then
        return _temp272.out

        elseif _temp272.no_undermethod ~= nil then
          return  _temp272:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp272, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp272)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp272, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp272)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp272, "out"))
      end

      elseif _temp272 == nil then
        _error(exception:null_error("_temp272", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp272))
      end

end

local _temp289 = function (_arg_table, _self)
local _temp269 = _arg_table["_temp269"]
local _temp259 = _arg_table["_temp259"]

local _temp279
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp279 =  _self:my()
      elseif _self.my ~= nil then
        _temp279 =  _self.my

        elseif my ~= nil then
          _temp279 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp280 = nil
    if _type(_temp269) == "function" or (_type(_temp269) == "table" and _rawget(_temp269, "__call_thing")) then
      _temp280 =  _temp269(_self)

    elseif _temp269 then
      _temp280 =  _temp269
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp280 =  _self:last()
      elseif _self.last ~= nil then
        _temp280 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp280 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp280 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp279)
      if _t == "table" then
                      if _type(_temp279.process) == "function" or (_type(_temp279.process) == "table" and _rawget(_temp279.process, "__call_thing")) then
        _temp279 = _temp279:process(_temp280)
      elseif _temp279.process ~= nil then
        _temp279 = _temp279.process

        elseif _temp279.no_undermethod ~= nil then
          _temp279 =  _temp279:no_undermethod(string:new("process") , _temp280)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp279)
      if _n.process ~= nil then
        _temp279 = _n:process(_temp280)
      elseif _n.no_undermethod ~= nil then
        _temp279 =  _n:no_undermethod(string:new("process") , _temp280)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp279)
      if _f.process ~= nil then
        _temp279 = _f:process(_temp280)
      elseif _f.no_undermethod ~= nil then
        _temp279 =  _f:no_undermethod(string:new("process") , _temp280)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp279 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp279))
      end


local _temp280 
do
local _temp281 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp281 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp281 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp281 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp281 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp281 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp281 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp281 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp281 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp281 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp281 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp282 = nil
      local _t = _type(_temp281)
      if _t == "table" then
                      if _type(_temp281.out) == "function" or (_type(_temp281.out) == "table" and _rawget(_temp281.out, "__call_thing")) then
        _temp282 = _temp281:out()
      elseif _temp281.out ~= nil then
        _temp282 = _temp281.out

        elseif _temp281.no_undermethod ~= nil then
          _temp282 =  _temp281:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp281, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp281)
      if _n.out ~= nil then
        _temp282 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp282 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp281, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp281)
      if _f.out ~= nil then
        _temp282 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp282 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp281, "out"))
      end

      elseif _temp281 == nil then
        _error(exception:null_error("_temp281", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp281))
      end

local _temp283 = nil
        local _t = _type(_temp279)
        if _t == "table" then
          if _rawget(_temp279, "__call_thing") == nil then
            _temp283 = _temp279
          else
                  if _temp279 == nil then
              if _type(_self._temp279) == "function" or (_type(_self._temp279) == "table" and _rawget(_self._temp279, "__call_thing")) then
        _temp283 =  _self:_temp279()
      elseif _self._temp279 ~= nil then
        _temp283 =  _self._temp279

        elseif _self.no_undermethod ~= nil then
          _temp283 =  _self:no_undermethod(string:new("_temp279"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp283 =  _temp279(_self)
      end

          end
        elseif _t == "number" then
          _temp283 = _temp279
        elseif _t == "function" then
                if _temp279 == nil then
              if _type(_self._temp279) == "function" or (_type(_self._temp279) == "table" and _rawget(_self._temp279, "__call_thing")) then
        _temp283 =  _self:_temp279()
      elseif _self._temp279 ~= nil then
        _temp283 =  _self._temp279

        elseif _self.no_undermethod ~= nil then
          _temp283 =  _self:no_undermethod(string:new("_temp279"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp283 =  _temp279(_self)
      end

        elseif _temp279 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp284 = nil
      local _t = _type(_temp283)
      if _t == "table" then
                      if _type(_temp283.out) == "function" or (_type(_temp283.out) == "table" and _rawget(_temp283.out, "__call_thing")) then
        _temp284 = _temp283:out()
      elseif _temp283.out ~= nil then
        _temp284 = _temp283.out

        elseif _temp283.no_undermethod ~= nil then
          _temp284 =  _temp283:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp283, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp283)
      if _n.out ~= nil then
        _temp284 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp284 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp283, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp283)
      if _f.out ~= nil then
        _temp284 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp284 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp283, "out"))
      end

      elseif _temp283 == nil then
        _error(exception:null_error("_temp283", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp283))
      end

local _temp285 = string:new("\n")

local _temp286 = nil
do
local _temp287 = nil
        local _t = _type(_temp279)
        if _t == "table" then
          if _rawget(_temp279, "__call_thing") == nil then
            _temp287 = _temp279
          else
                  if _temp279 == nil then
              if _type(_self._temp279) == "function" or (_type(_self._temp279) == "table" and _rawget(_self._temp279, "__call_thing")) then
        _temp287 =  _self:_temp279()
      elseif _self._temp279 ~= nil then
        _temp287 =  _self._temp279

        elseif _self.no_undermethod ~= nil then
          _temp287 =  _self:no_undermethod(string:new("_temp279"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp287 =  _temp279(_self)
      end

          end
        elseif _t == "number" then
          _temp287 = _temp279
        elseif _t == "function" then
                if _temp279 == nil then
              if _type(_self._temp279) == "function" or (_type(_self._temp279) == "table" and _rawget(_self._temp279, "__call_thing")) then
        _temp287 =  _self:_temp279()
      elseif _self._temp279 ~= nil then
        _temp287 =  _self._temp279

        elseif _self.no_undermethod ~= nil then
          _temp287 =  _self:no_undermethod(string:new("_temp279"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp287 =  _temp279(_self)
      end

        elseif _temp279 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp287)
      if _t == "table" then
                      if _type(_temp287.var) == "function" or (_type(_temp287.var) == "table" and _rawget(_temp287.var, "__call_thing")) then
        _temp287 = _temp287:var()
      elseif _temp287.var ~= nil then
        _temp287 = _temp287.var

        elseif _temp287.no_undermethod ~= nil then
          _temp287 =  _temp287:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp287, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp287)
      if _n.var ~= nil then
        _temp287 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp287 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp287, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp287)
      if _f.var ~= nil then
        _temp287 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp287 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp287, "var"))
      end

      elseif _temp287 == nil then
        _error(exception:null_error("_temp287", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp287))
      end


_temp286 = string:new("return " .. _tostring(_temp287) .. "\n")
end
local _temp288
      local _t = _type(_temp282)
      if _t == "table" then
                      if _type(_temp282._less_less) == "function" or (_type(_temp282._less_less) == "table" and _rawget(_temp282._less_less, "__call_thing")) then
        _temp288 = _temp282:_less_less(_temp284)
      elseif _temp282._less_less ~= nil then
        _temp288 = _temp282._less_less

        elseif _temp282.no_undermethod ~= nil then
          _temp288 =  _temp282:no_undermethod(string:new("<<") , _temp284)
        else
          _error(exception:method_error(_temp282, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp282)
      if _n._less_less ~= nil then
        _temp288 = _n:_less_less(_temp284)
      elseif _n.no_undermethod ~= nil then
        _temp288 =  _n:no_undermethod(string:new("<<") , _temp284)
      else
        _error(exception:method_error(_temp282, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp282)
      if _f._less_less ~= nil then
        _temp288 = _f:_less_less(_temp284)
      elseif _f.no_undermethod ~= nil then
        _temp288 =  _f:no_undermethod(string:new("<<") , _temp284)
      else
        _error(exception:method_error(_temp282, "<<"))
      end

      elseif _temp282 == nil then
        _error(exception:null_error("_temp282", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp282))
      end

local _temp284
      local _t = _type(_temp288)
      if _t == "table" then
                      if _type(_temp288._less_less) == "function" or (_type(_temp288._less_less) == "table" and _rawget(_temp288._less_less, "__call_thing")) then
        _temp284 = _temp288:_less_less(_temp285)
      elseif _temp288._less_less ~= nil then
        _temp284 = _temp288._less_less

        elseif _temp288.no_undermethod ~= nil then
          _temp284 =  _temp288:no_undermethod(string:new("<<") , _temp285)
        else
          _error(exception:method_error(_temp288, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp288)
      if _n._less_less ~= nil then
        _temp284 = _n:_less_less(_temp285)
      elseif _n.no_undermethod ~= nil then
        _temp284 =  _n:no_undermethod(string:new("<<") , _temp285)
      else
        _error(exception:method_error(_temp288, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp288)
      if _f._less_less ~= nil then
        _temp284 = _f:_less_less(_temp285)
      elseif _f.no_undermethod ~= nil then
        _temp284 =  _f:no_undermethod(string:new("<<") , _temp285)
      else
        _error(exception:method_error(_temp288, "<<"))
      end

      elseif _temp288 == nil then
        _error(exception:null_error("_temp288", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp288))
      end

local _temp285
      local _t = _type(_temp284)
      if _t == "table" then
                      if _type(_temp284._less_less) == "function" or (_type(_temp284._less_less) == "table" and _rawget(_temp284._less_less, "__call_thing")) then
        _temp285 = _temp284:_less_less(_temp286)
      elseif _temp284._less_less ~= nil then
        _temp285 = _temp284._less_less

        elseif _temp284.no_undermethod ~= nil then
          _temp285 =  _temp284:no_undermethod(string:new("<<") , _temp286)
        else
          _error(exception:method_error(_temp284, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp284)
      if _n._less_less ~= nil then
        _temp285 = _n:_less_less(_temp286)
      elseif _n.no_undermethod ~= nil then
        _temp285 =  _n:no_undermethod(string:new("<<") , _temp286)
      else
        _error(exception:method_error(_temp284, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp284)
      if _f._less_less ~= nil then
        _temp285 = _f:_less_less(_temp286)
      elseif _f.no_undermethod ~= nil then
        _temp285 =  _f:no_undermethod(string:new("<<") , _temp286)
      else
        _error(exception:method_error(_temp284, "<<"))
      end

      elseif _temp284 == nil then
        _error(exception:null_error("_temp284", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp284))
      end

_temp280 = _temp285 
end

return _temp280
end

local _temp299 = function (_arg_table, _self)
local _temp268 = _arg_table["_temp268"]
local _temp259 = _arg_table["_temp259"]

local _temp291 = nil
        local _t = _type(_temp268)
        if _t == "table" then
          if _rawget(_temp268, "__call_thing") == nil then
            _temp291 = _temp268
          else
                  if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp291 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp291 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp268(_self)
      end

          end
        elseif _t == "number" then
          _temp291 = _temp268
        elseif _t == "function" then
                if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp291 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp291 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp291 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp291 =  _temp268(_self)
      end

        elseif _temp268 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp291)
      if _t == "table" then
                      if _type(_temp291.empty_question) == "function" or (_type(_temp291.empty_question) == "table" and _rawget(_temp291.empty_question, "__call_thing")) then
        _temp291 = _temp291:empty_question()
      elseif _temp291.empty_question ~= nil then
        _temp291 = _temp291.empty_question

        elseif _temp291.no_undermethod ~= nil then
          _temp291 =  _temp291:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp291, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp291)
      if _n.empty_question ~= nil then
        _temp291 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp291 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp291, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp291)
      if _f.empty_question ~= nil then
        _temp291 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp291 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp291, "empty?"))
      end

      elseif _temp291 == nil then
        _error(exception:null_error("_temp291", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp291))
      end



local _temp298 = _lifted_call(_temp297, {})
_temp298.arg_table["_temp259"] = _temp259

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp291,_temp298)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp291,_temp298)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp291,_temp298)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp291,_temp298)
      else
        _error(exception:name_error("true?"))
      end
    end

end

local _temp376 = function (_arg_table, _self)
local _temp326 = _arg_table["_temp326"]

local _temp371 
do
local _temp372 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp372 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp372 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp372 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp372 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp372 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp372 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp372 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp372 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp372 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp373 = nil
      local _t = _type(_temp372)
      if _t == "table" then
                      if _type(_temp372.out) == "function" or (_type(_temp372.out) == "table" and _rawget(_temp372.out, "__call_thing")) then
        _temp373 = _temp372:out()
      elseif _temp372.out ~= nil then
        _temp373 = _temp372.out

        elseif _temp372.no_undermethod ~= nil then
          _temp373 =  _temp372:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp372, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp372)
      if _n.out ~= nil then
        _temp373 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp373 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp372, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp372)
      if _f.out ~= nil then
        _temp373 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp373 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp372, "out"))
      end

      elseif _temp372 == nil then
        _error(exception:null_error("_temp372", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp372))
      end

local _temp374 = string:new("return object:null()")
local _temp375
      local _t = _type(_temp373)
      if _t == "table" then
                      if _type(_temp373._less_less) == "function" or (_type(_temp373._less_less) == "table" and _rawget(_temp373._less_less, "__call_thing")) then
        _temp375 = _temp373:_less_less(_temp374)
      elseif _temp373._less_less ~= nil then
        _temp375 = _temp373._less_less

        elseif _temp373.no_undermethod ~= nil then
          _temp375 =  _temp373:no_undermethod(string:new("<<") , _temp374)
        else
          _error(exception:method_error(_temp373, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp373)
      if _n._less_less ~= nil then
        _temp375 = _n:_less_less(_temp374)
      elseif _n.no_undermethod ~= nil then
        _temp375 =  _n:no_undermethod(string:new("<<") , _temp374)
      else
        _error(exception:method_error(_temp373, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp373)
      if _f._less_less ~= nil then
        _temp375 = _f:_less_less(_temp374)
      elseif _f.no_undermethod ~= nil then
        _temp375 =  _f:no_undermethod(string:new("<<") , _temp374)
      else
        _error(exception:method_error(_temp373, "<<"))
      end

      elseif _temp373 == nil then
        _error(exception:null_error("_temp373", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp373))
      end

_temp371 = _temp375 
end

return _temp371
end

local _temp340 = function (_arg_table, _self, _temp334)
local _temp323 = _arg_table["_temp323"]
        if _temp334 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp335 = nil
do
local _temp336
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp336 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp336 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp336 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp336 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp336 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp336 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp336 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp336 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp336 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp336 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp336)
      if _t == "table" then
                      if _type(_temp336.env) == "function" or (_type(_temp336.env) == "table" and _rawget(_temp336.env, "__call_thing")) then
        _temp336 = _temp336:env()
      elseif _temp336.env ~= nil then
        _temp336 = _temp336.env

        elseif _temp336.no_undermethod ~= nil then
          _temp336 =  _temp336:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp336, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp336)
      if _n.env ~= nil then
        _temp336 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp336 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp336, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp336)
      if _f.env ~= nil then
        _temp336 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp336 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp336, "env"))
      end

      elseif _temp336 == nil then
        _error(exception:null_error("_temp336", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp336))
      end

local _temp337 = nil
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp337 =  _temp334(_self)

    elseif _temp334 then
      _temp337 =  _temp334
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp337 =  _self:u()
      elseif _self.u ~= nil then
        _temp337 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp337 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp337 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp336 = _temp336:get(_temp337)
end

local _temp338
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp338 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp338 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp338 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp338 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp338 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp338 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp338 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp338 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp338 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp338 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp338)
      if _t == "table" then
                      if _type(_temp338.env) == "function" or (_type(_temp338.env) == "table" and _rawget(_temp338.env, "__call_thing")) then
        _temp338 = _temp338:env()
      elseif _temp338.env ~= nil then
        _temp338 = _temp338.env

        elseif _temp338.no_undermethod ~= nil then
          _temp338 =  _temp338:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp338, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp338)
      if _n.env ~= nil then
        _temp338 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp338 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp338, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp338)
      if _f.env ~= nil then
        _temp338 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp338 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp338, "env"))
      end

      elseif _temp338 == nil then
        _error(exception:null_error("_temp338", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp338))
      end

local _temp339 = nil
    if _type(_temp334) == "function" or (_type(_temp334) == "table" and _rawget(_temp334, "__call_thing")) then
      _temp339 =  _temp334(_self)

    elseif _temp334 then
      _temp339 =  _temp334
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp339 =  _self:u()
      elseif _self.u ~= nil then
        _temp339 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp339 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp339 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp338 = _temp338:get(_temp339)
end

_temp335 = string:new("local " .. _tostring(_temp336) .. " = _argtable['" .. _tostring(_temp338) .. "']")
end

return _temp335
end

local _temp353 = function (_arg_table, _self, _temp350)
local _temp323 = _arg_table["_temp323"]
        if _temp350 == nil then
          _error(exception:argument_error("body_res", 1, 0))

end
local _temp351 = nil
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp351 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp351 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp351 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp351 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp351 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp351 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp351 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp351 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp351 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp351 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp352 = nil
    if _type(_temp350) == "function" or (_type(_temp350) == "table" and _rawget(_temp350, "__call_thing")) then
      _temp352 =  _temp350(_self)

    elseif _temp350 then
      _temp352 =  _temp350
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp352 =  _self:n()
      elseif _self.n ~= nil then
        _temp352 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp352 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp352 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp353 = string:new("_dummy")

      local _t = _type(_temp351)
      if _t == "table" then
                      if _type(_temp351.process) == "function" or (_type(_temp351.process) == "table" and _rawget(_temp351.process, "__call_thing")) then
        _temp351 = _temp351:process(_temp352,_temp353)
      elseif _temp351.process ~= nil then
        _temp351 = _temp351.process

        elseif _temp351.no_undermethod ~= nil then
          _temp351 =  _temp351:no_undermethod(string:new("process") , _temp352,_temp353)
        else
          _error(exception:method_error(_temp351, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp351)
      if _n.process ~= nil then
        _temp351 = _n:process(_temp352,_temp353)
      elseif _n.no_undermethod ~= nil then
        _temp351 =  _n:no_undermethod(string:new("process") , _temp352,_temp353)
      else
        _error(exception:method_error(_temp351, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp351)
      if _f.process ~= nil then
        _temp351 = _f:process(_temp352,_temp353)
      elseif _f.no_undermethod ~= nil then
        _temp351 =  _f:no_undermethod(string:new("process") , _temp352,_temp353)
      else
        _error(exception:method_error(_temp351, "process"))
      end

      elseif _temp351 == nil then
        _error(exception:null_error("_temp351", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp351))
      end

      local _t = _type(_temp351)
      if _t == "table" then
                      if _type(_temp351.out) == "function" or (_type(_temp351.out) == "table" and _rawget(_temp351.out, "__call_thing")) then
        return _temp351:out()
      elseif _temp351.out ~= nil then
        return _temp351.out

        elseif _temp351.no_undermethod ~= nil then
          return  _temp351:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp351, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp351)
      if _n.out ~= nil then
        return _n:out()
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp351, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp351)
      if _f.out ~= nil then
        return _f:out()
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp351, "out"))
      end

      elseif _temp351 == nil then
        _error(exception:null_error("_temp351", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp351))
      end

end

local _temp368 = function (_arg_table, _self)
local _temp348 = _arg_table["_temp348"]
local _temp326 = _arg_table["_temp326"]

local _temp358
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp358 =  _self:my()
      elseif _self.my ~= nil then
        _temp358 =  _self.my

        elseif my ~= nil then
          _temp358 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp359 = nil
    if _type(_temp348) == "function" or (_type(_temp348) == "table" and _rawget(_temp348, "__call_thing")) then
      _temp359 =  _temp348(_self)

    elseif _temp348 then
      _temp359 =  _temp348
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp359 =  _self:last()
      elseif _self.last ~= nil then
        _temp359 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp359 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp359 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end

      local _t = _type(_temp358)
      if _t == "table" then
                      if _type(_temp358.process) == "function" or (_type(_temp358.process) == "table" and _rawget(_temp358.process, "__call_thing")) then
        _temp358 = _temp358:process(_temp359)
      elseif _temp358.process ~= nil then
        _temp358 = _temp358.process

        elseif _temp358.no_undermethod ~= nil then
          _temp358 =  _temp358:no_undermethod(string:new("process") , _temp359)
        else
          _error(exception:method_error("last_res", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp358)
      if _n.process ~= nil then
        _temp358 = _n:process(_temp359)
      elseif _n.no_undermethod ~= nil then
        _temp358 =  _n:no_undermethod(string:new("process") , _temp359)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp358)
      if _f.process ~= nil then
        _temp358 = _f:process(_temp359)
      elseif _f.no_undermethod ~= nil then
        _temp358 =  _f:no_undermethod(string:new("process") , _temp359)
      else
        _error(exception:method_error("last_res", "process"))
      end

      elseif _temp358 == nil then
        _error(exception:null_error("last_res", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp358))
      end


local _temp359 
do
local _temp360 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp360 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp360 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp360 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp360 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp360 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp360 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp360 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp360 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp360 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp360 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp361 = nil
      local _t = _type(_temp360)
      if _t == "table" then
                      if _type(_temp360.out) == "function" or (_type(_temp360.out) == "table" and _rawget(_temp360.out, "__call_thing")) then
        _temp361 = _temp360:out()
      elseif _temp360.out ~= nil then
        _temp361 = _temp360.out

        elseif _temp360.no_undermethod ~= nil then
          _temp361 =  _temp360:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp360, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp360)
      if _n.out ~= nil then
        _temp361 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp361 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp360, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp360)
      if _f.out ~= nil then
        _temp361 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp361 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp360, "out"))
      end

      elseif _temp360 == nil then
        _error(exception:null_error("_temp360", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp360))
      end

local _temp362 = nil
        local _t = _type(_temp358)
        if _t == "table" then
          if _rawget(_temp358, "__call_thing") == nil then
            _temp362 = _temp358
          else
                  if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp362 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp362 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp362 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp362 =  _temp358(_self)
      end

          end
        elseif _t == "number" then
          _temp362 = _temp358
        elseif _t == "function" then
                if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp362 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp362 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp362 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp362 =  _temp358(_self)
      end

        elseif _temp358 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end

local _temp363 = nil
      local _t = _type(_temp362)
      if _t == "table" then
                      if _type(_temp362.out) == "function" or (_type(_temp362.out) == "table" and _rawget(_temp362.out, "__call_thing")) then
        _temp363 = _temp362:out()
      elseif _temp362.out ~= nil then
        _temp363 = _temp362.out

        elseif _temp362.no_undermethod ~= nil then
          _temp363 =  _temp362:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp362, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp362)
      if _n.out ~= nil then
        _temp363 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp363 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp362, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp362)
      if _f.out ~= nil then
        _temp363 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp363 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp362, "out"))
      end

      elseif _temp362 == nil then
        _error(exception:null_error("_temp362", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp362))
      end

local _temp364 = string:new("\n")

local _temp365 = nil
do
local _temp366 = nil
        local _t = _type(_temp358)
        if _t == "table" then
          if _rawget(_temp358, "__call_thing") == nil then
            _temp366 = _temp358
          else
                  if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp366 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp366 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp366 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp366 =  _temp358(_self)
      end

          end
        elseif _t == "number" then
          _temp366 = _temp358
        elseif _t == "function" then
                if _temp358 == nil then
              if _type(_self._temp358) == "function" or (_type(_self._temp358) == "table" and _rawget(_self._temp358, "__call_thing")) then
        _temp366 =  _self:_temp358()
      elseif _self._temp358 ~= nil then
        _temp366 =  _self._temp358

        elseif _self.no_undermethod ~= nil then
          _temp366 =  _self:no_undermethod(string:new("_temp358"))
        else
          _error(exception:null_error("last_res", "invoke method"))
        end
      else 
        _temp366 =  _temp358(_self)
      end

        elseif _temp358 == nil then
          _error(exception:null_error("last_res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "last_res"))
        end
      local _t = _type(_temp366)
      if _t == "table" then
                      if _type(_temp366.var) == "function" or (_type(_temp366.var) == "table" and _rawget(_temp366.var, "__call_thing")) then
        _temp366 = _temp366:var()
      elseif _temp366.var ~= nil then
        _temp366 = _temp366.var

        elseif _temp366.no_undermethod ~= nil then
          _temp366 =  _temp366:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp366, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp366)
      if _n.var ~= nil then
        _temp366 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp366 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp366, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp366)
      if _f.var ~= nil then
        _temp366 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp366 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp366, "var"))
      end

      elseif _temp366 == nil then
        _error(exception:null_error("_temp366", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp366))
      end


_temp365 = string:new("return " .. _tostring(_temp366) .. "\n")
end
local _temp367
      local _t = _type(_temp361)
      if _t == "table" then
                      if _type(_temp361._less_less) == "function" or (_type(_temp361._less_less) == "table" and _rawget(_temp361._less_less, "__call_thing")) then
        _temp367 = _temp361:_less_less(_temp363)
      elseif _temp361._less_less ~= nil then
        _temp367 = _temp361._less_less

        elseif _temp361.no_undermethod ~= nil then
          _temp367 =  _temp361:no_undermethod(string:new("<<") , _temp363)
        else
          _error(exception:method_error(_temp361, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp361)
      if _n._less_less ~= nil then
        _temp367 = _n:_less_less(_temp363)
      elseif _n.no_undermethod ~= nil then
        _temp367 =  _n:no_undermethod(string:new("<<") , _temp363)
      else
        _error(exception:method_error(_temp361, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp361)
      if _f._less_less ~= nil then
        _temp367 = _f:_less_less(_temp363)
      elseif _f.no_undermethod ~= nil then
        _temp367 =  _f:no_undermethod(string:new("<<") , _temp363)
      else
        _error(exception:method_error(_temp361, "<<"))
      end

      elseif _temp361 == nil then
        _error(exception:null_error("_temp361", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp361))
      end

local _temp363
      local _t = _type(_temp367)
      if _t == "table" then
                      if _type(_temp367._less_less) == "function" or (_type(_temp367._less_less) == "table" and _rawget(_temp367._less_less, "__call_thing")) then
        _temp363 = _temp367:_less_less(_temp364)
      elseif _temp367._less_less ~= nil then
        _temp363 = _temp367._less_less

        elseif _temp367.no_undermethod ~= nil then
          _temp363 =  _temp367:no_undermethod(string:new("<<") , _temp364)
        else
          _error(exception:method_error(_temp367, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp367)
      if _n._less_less ~= nil then
        _temp363 = _n:_less_less(_temp364)
      elseif _n.no_undermethod ~= nil then
        _temp363 =  _n:no_undermethod(string:new("<<") , _temp364)
      else
        _error(exception:method_error(_temp367, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp367)
      if _f._less_less ~= nil then
        _temp363 = _f:_less_less(_temp364)
      elseif _f.no_undermethod ~= nil then
        _temp363 =  _f:no_undermethod(string:new("<<") , _temp364)
      else
        _error(exception:method_error(_temp367, "<<"))
      end

      elseif _temp367 == nil then
        _error(exception:null_error("_temp367", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp367))
      end

local _temp364
      local _t = _type(_temp363)
      if _t == "table" then
                      if _type(_temp363._less_less) == "function" or (_type(_temp363._less_less) == "table" and _rawget(_temp363._less_less, "__call_thing")) then
        _temp364 = _temp363:_less_less(_temp365)
      elseif _temp363._less_less ~= nil then
        _temp364 = _temp363._less_less

        elseif _temp363.no_undermethod ~= nil then
          _temp364 =  _temp363:no_undermethod(string:new("<<") , _temp365)
        else
          _error(exception:method_error(_temp363, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp363)
      if _n._less_less ~= nil then
        _temp364 = _n:_less_less(_temp365)
      elseif _n.no_undermethod ~= nil then
        _temp364 =  _n:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp363, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp363)
      if _f._less_less ~= nil then
        _temp364 = _f:_less_less(_temp365)
      elseif _f.no_undermethod ~= nil then
        _temp364 =  _f:no_undermethod(string:new("<<") , _temp365)
      else
        _error(exception:method_error(_temp363, "<<"))
      end

      elseif _temp363 == nil then
        _error(exception:null_error("_temp363", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp363))
      end

_temp359 = _temp364 
end

return _temp359
end

local _temp378 = function (_arg_table, _self)
local _temp347 = _arg_table["_temp347"]
local _temp326 = _arg_table["_temp326"]

local _temp370 = nil
        local _t = _type(_temp347)
        if _t == "table" then
          if _rawget(_temp347, "__call_thing") == nil then
            _temp370 = _temp347
          else
                  if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp370 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp370 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp370 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp370 =  _temp347(_self)
      end

          end
        elseif _t == "number" then
          _temp370 = _temp347
        elseif _t == "function" then
                if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp370 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp370 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp370 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp370 =  _temp347(_self)
      end

        elseif _temp347 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp370)
      if _t == "table" then
                      if _type(_temp370.empty_question) == "function" or (_type(_temp370.empty_question) == "table" and _rawget(_temp370.empty_question, "__call_thing")) then
        _temp370 = _temp370:empty_question()
      elseif _temp370.empty_question ~= nil then
        _temp370 = _temp370.empty_question

        elseif _temp370.no_undermethod ~= nil then
          _temp370 =  _temp370:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp370, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp370)
      if _n.empty_question ~= nil then
        _temp370 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp370 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp370, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp370)
      if _f.empty_question ~= nil then
        _temp370 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp370 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp370, "empty?"))
      end

      elseif _temp370 == nil then
        _error(exception:null_error("_temp370", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp370))
      end



local _temp377 = _lifted_call(_temp376, {})
_temp377.arg_table["_temp326"] = _temp326

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp370,_temp377)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp370,_temp377)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp370,_temp377)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp370,_temp377)
      else
        _error(exception:name_error("true?"))
      end
    end

end

local _temp402 = function (_arg_table, _self, _temp395)
local _temp390 = _arg_table["_temp390"]
local _temp323 = _arg_table["_temp323"]
        if _temp395 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp396 = nil
do
local _temp397 = nil
        local _t = _type(_temp390)
        if _t == "table" then
          if _rawget(_temp390, "__call_thing") == nil then
            _temp397 = _temp390
          else
                  if _temp390 == nil then
              if _type(_self._temp390) == "function" or (_type(_self._temp390) == "table" and _rawget(_self._temp390, "__call_thing")) then
        _temp397 =  _self:_temp390()
      elseif _self._temp390 ~= nil then
        _temp397 =  _self._temp390

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp390"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp397 =  _temp390(_self)
      end

          end
        elseif _t == "number" then
          _temp397 = _temp390
        elseif _t == "function" then
                if _temp390 == nil then
              if _type(_self._temp390) == "function" or (_type(_self._temp390) == "table" and _rawget(_self._temp390, "__call_thing")) then
        _temp397 =  _self:_temp390()
      elseif _self._temp390 ~= nil then
        _temp397 =  _self._temp390

        elseif _self.no_undermethod ~= nil then
          _temp397 =  _self:no_undermethod(string:new("_temp390"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp397 =  _temp390(_self)
      end

        elseif _temp390 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end
      local _t = _type(_temp397)
      if _t == "table" then
                      if _type(_temp397.var) == "function" or (_type(_temp397.var) == "table" and _rawget(_temp397.var, "__call_thing")) then
        _temp397 = _temp397:var()
      elseif _temp397.var ~= nil then
        _temp397 = _temp397.var

        elseif _temp397.no_undermethod ~= nil then
          _temp397 =  _temp397:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp397, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp397)
      if _n.var ~= nil then
        _temp397 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp397 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp397, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp397)
      if _f.var ~= nil then
        _temp397 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp397 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp397, "var"))
      end

      elseif _temp397 == nil then
        _error(exception:null_error("_temp397", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp397))
      end


local _temp398
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp398 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp398 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp398 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp398 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp398 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp398 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp398 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp398 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp398 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp398 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp398)
      if _t == "table" then
                      if _type(_temp398.env) == "function" or (_type(_temp398.env) == "table" and _rawget(_temp398.env, "__call_thing")) then
        _temp398 = _temp398:env()
      elseif _temp398.env ~= nil then
        _temp398 = _temp398.env

        elseif _temp398.no_undermethod ~= nil then
          _temp398 =  _temp398:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp398, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp398)
      if _n.env ~= nil then
        _temp398 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp398 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp398, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp398)
      if _f.env ~= nil then
        _temp398 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp398 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp398, "env"))
      end

      elseif _temp398 == nil then
        _error(exception:null_error("_temp398", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp398))
      end

local _temp399 = nil
    if _type(_temp395) == "function" or (_type(_temp395) == "table" and _rawget(_temp395, "__call_thing")) then
      _temp399 =  _temp395(_self)

    elseif _temp395 then
      _temp399 =  _temp395
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp399 =  _self:u()
      elseif _self.u ~= nil then
        _temp399 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp399 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp399 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp398 = _temp398:get(_temp399)
end

local _temp400
do
        local _t = _type(_temp323)
        if _t == "table" then
          if _rawget(_temp323, "__call_thing") == nil then
            _temp400 = _temp323
          else
                  if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp400 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp400 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp400 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp400 =  _temp323(_self)
      end

          end
        elseif _t == "number" then
          _temp400 = _temp323
        elseif _t == "function" then
                if _temp323 == nil then
              if _type(_self._temp323) == "function" or (_type(_self._temp323) == "table" and _rawget(_self._temp323, "__call_thing")) then
        _temp400 =  _self:_temp323()
      elseif _self._temp323 ~= nil then
        _temp400 =  _self._temp323

        elseif _self.no_undermethod ~= nil then
          _temp400 =  _self:no_undermethod(string:new("_temp323"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp400 =  _temp323(_self)
      end

        elseif _temp323 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
      local _t = _type(_temp400)
      if _t == "table" then
                      if _type(_temp400.env) == "function" or (_type(_temp400.env) == "table" and _rawget(_temp400.env, "__call_thing")) then
        _temp400 = _temp400:env()
      elseif _temp400.env ~= nil then
        _temp400 = _temp400.env

        elseif _temp400.no_undermethod ~= nil then
          _temp400 =  _temp400:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp400, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp400)
      if _n.env ~= nil then
        _temp400 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp400 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp400, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp400)
      if _f.env ~= nil then
        _temp400 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp400 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp400, "env"))
      end

      elseif _temp400 == nil then
        _error(exception:null_error("_temp400", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp400))
      end

local _temp401 = nil
    if _type(_temp395) == "function" or (_type(_temp395) == "table" and _rawget(_temp395, "__call_thing")) then
      _temp401 =  _temp395(_self)

    elseif _temp395 then
      _temp401 =  _temp395
    else
            if _type(_self.u) == "function" or (_type(_self.u) == "table" and _rawget(_self.u, "__call_thing")) then
        _temp401 =  _self:u()
      elseif _self.u ~= nil then
        _temp401 =  _self.u

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp401 =  _self:no_undermethod(string:new("u"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp401 =  no_undermethod(_self, string:new("u"))
      else
        _error(exception:name_error("u"))
      end
    end


_temp400 = _temp400:get(_temp401)
end

_temp396 = string:new("" .. _tostring(_temp397) .. ".arg_table['" .. _tostring(_temp398) .. "'] = " .. _tostring(_temp400) .. "")
end

return _temp396
end

local _temp440 = function (_arg_table, _self)
local _temp427 = _arg_table["_temp427"]
local _temp423 = _arg_table["_temp423"]
local _temp425 = _arg_table["_temp425"]

local _temp434 
do
local _temp435 = nil
_temp435 =  _temp427

local _temp436 = nil
do
local _temp437 = nil
    if _type(_temp423) == "function" or (_type(_temp423) == "table" and _rawget(_temp423, "__call_thing")) then
      _temp437 =  _temp423(_self)

    elseif _temp423 then
      _temp437 =  _temp423
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp437 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp437 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp437 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp437 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp438 = nil
        local _t = _type(_temp425)
        if _t == "table" then
          if _rawget(_temp425, "__call_thing") == nil then
            _temp438 = _temp425
          else
                  if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp438 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp438 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp438 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp438 =  _temp425(_self)
      end

          end
        elseif _t == "number" then
          _temp438 = _temp425
        elseif _t == "function" then
                if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp438 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp438 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp438 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp438 =  _temp425(_self)
      end

        elseif _temp425 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp438)
      if _t == "table" then
                      if _type(_temp438.var) == "function" or (_type(_temp438.var) == "table" and _rawget(_temp438.var, "__call_thing")) then
        _temp438 = _temp438:var()
      elseif _temp438.var ~= nil then
        _temp438 = _temp438.var

        elseif _temp438.no_undermethod ~= nil then
          _temp438 =  _temp438:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp438, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp438)
      if _n.var ~= nil then
        _temp438 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp438 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp438, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp438)
      if _f.var ~= nil then
        _temp438 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp438 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp438, "var"))
      end

      elseif _temp438 == nil then
        _error(exception:null_error("_temp438", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp438))
      end


_temp436 = string:new("" .. _tostring(_temp437) .. " = " .. _tostring(_temp438) .. "\n")
end
local _temp439
              if _type(_temp435._less_less) == "function" or (_type(_temp435._less_less) == "table" and _rawget(_temp435._less_less, "__call_thing")) then
        _temp439 = _temp435:_less_less(_temp436)
      elseif _temp435._less_less ~= nil then
        _temp439 = _temp435._less_less

        elseif _temp435.no_undermethod ~= nil then
          _temp439 =  _temp435:no_undermethod(string:new("<<") , _temp436)
        else
          _error(exception:method_error(_temp435, "<<"))
        end

_temp434 = _temp439 
end

return _temp434
end

local _temp532 = function (_arg_table, _self)
local _temp505 = _arg_table["_temp505"]
local _temp507 = _arg_table["_temp507"]
local _temp515 = _arg_table["_temp515"]
local _temp513 = _arg_table["_temp513"]
local _temp514 = _arg_table["_temp514"]

local _temp521 
do
local _temp522 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp522 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp522 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp522 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp522 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp522 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp522 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp522 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp522 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp522 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp522 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp523 = nil
      local _t = _type(_temp522)
      if _t == "table" then
                      if _type(_temp522.out) == "function" or (_type(_temp522.out) == "table" and _rawget(_temp522.out, "__call_thing")) then
        _temp523 = _temp522:out()
      elseif _temp522.out ~= nil then
        _temp523 = _temp522.out

        elseif _temp522.no_undermethod ~= nil then
          _temp523 =  _temp522:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp522, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp522)
      if _n.out ~= nil then
        _temp523 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp523 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp522, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp522)
      if _f.out ~= nil then
        _temp523 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp523 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp522, "out"))
      end

      elseif _temp522 == nil then
        _error(exception:null_error("_temp522", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp522))
      end

local _temp524 = nil
do
local _temp525 = nil
    if _type(_temp507) == "function" or (_type(_temp507) == "table" and _rawget(_temp507, "__call_thing")) then
      _temp525 =  _temp507(_self)

    elseif _temp507 then
      _temp525 =  _temp507
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp525 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp525 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp525 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp525 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp526 
do
local _temp527 = nil
    if _type(_temp515) == "function" or (_type(_temp515) == "table" and _rawget(_temp515, "__call_thing")) then
      _temp527 =  _temp515(_self)

    elseif _temp515 then
      _temp527 =  _temp515
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp527 =  _self:i()
      elseif _self.i ~= nil then
        _temp527 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp527 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp527 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp528
      local _t = _type(_temp527)
      if _t == "table" then
                      if _type(_temp527._plus) == "function" or (_type(_temp527._plus) == "table" and _rawget(_temp527._plus, "__call_thing")) then
        _temp528 = _temp527:_plus(1)
      elseif _temp527._plus ~= nil then
        _temp528 = _temp527._plus

        elseif _temp527.no_undermethod ~= nil then
          _temp528 =  _temp527:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp527, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp528 = _temp527 + 1
      else
              local _n = number:new(_temp527)
      if _n._plus ~= nil then
        _temp528 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp528 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp527, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp527)
      if _f._plus ~= nil then
        _temp528 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp528 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp527, "+"))
      end

      elseif _temp527 == nil then
        _error(exception:null_error("_temp527", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp527))
      end

_temp526 = _temp528 
end

local _temp529 = nil
        local _t = _type(_temp513)
        if _t == "table" then
          if _rawget(_temp513, "__call_thing") == nil then
            _temp529 = _temp513
          else
                  if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp529 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp529 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp529 =  _temp513(_self)
      end

          end
        elseif _t == "number" then
          _temp529 = _temp513
        elseif _t == "function" then
                if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp529 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp529 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp529 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp529 =  _temp513(_self)
      end

        elseif _temp513 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp530 = nil
        local _t = _type(_temp514)
        if _t == "table" then
          if _rawget(_temp514, "__call_thing") == nil then
            _temp530 = _temp514
          else
                  if _temp514 == nil then
              if _type(_self._temp514) == "function" or (_type(_self._temp514) == "table" and _rawget(_self._temp514, "__call_thing")) then
        _temp530 =  _self:_temp514()
      elseif _self._temp514 ~= nil then
        _temp530 =  _self._temp514

        elseif _self.no_undermethod ~= nil then
          _temp530 =  _self:no_undermethod(string:new("_temp514"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp530 =  _temp514(_self)
      end

          end
        elseif _t == "number" then
          _temp530 = _temp514
        elseif _t == "function" then
                if _temp514 == nil then
              if _type(_self._temp514) == "function" or (_type(_self._temp514) == "table" and _rawget(_self._temp514, "__call_thing")) then
        _temp530 =  _self:_temp514()
      elseif _self._temp514 ~= nil then
        _temp530 =  _self._temp514

        elseif _self.no_undermethod ~= nil then
          _temp530 =  _self:no_undermethod(string:new("_temp514"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp530 =  _temp514(_self)
      end

        elseif _temp514 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end
      local _t = _type(_temp530)
      if _t == "table" then
                      if _type(_temp530.value) == "function" or (_type(_temp530.value) == "table" and _rawget(_temp530.value, "__call_thing")) then
        _temp530 = _temp530:value()
      elseif _temp530.value ~= nil then
        _temp530 = _temp530.value

        elseif _temp530.no_undermethod ~= nil then
          _temp530 =  _temp530:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp530, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp530)
      if _n.value ~= nil then
        _temp530 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp530 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp530, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp530)
      if _f.value ~= nil then
        _temp530 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp530 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp530, "value"))
      end

      elseif _temp530 == nil then
        _error(exception:null_error("_temp530", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp530))
      end


      local _t = _type(_temp529)
      if _t == "table" then
                      if _type(_temp529.escape_understring) == "function" or (_type(_temp529.escape_understring) == "table" and _rawget(_temp529.escape_understring, "__call_thing")) then
        _temp529 = _temp529:escape_understring(_temp530)
      elseif _temp529.escape_understring ~= nil then
        _temp529 = _temp529.escape_understring

        elseif _temp529.no_undermethod ~= nil then
          _temp529 =  _temp529:no_undermethod(string:new("escape_string") , _temp530)
        else
          _error(exception:method_error(_temp529, "escape_string"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp529)
      if _n.escape_understring ~= nil then
        _temp529 = _n:escape_understring(_temp530)
      elseif _n.no_undermethod ~= nil then
        _temp529 =  _n:no_undermethod(string:new("escape_string") , _temp530)
      else
        _error(exception:method_error(_temp529, "escape_string"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp529)
      if _f.escape_understring ~= nil then
        _temp529 = _f:escape_understring(_temp530)
      elseif _f.no_undermethod ~= nil then
        _temp529 =  _f:no_undermethod(string:new("escape_string") , _temp530)
      else
        _error(exception:method_error(_temp529, "escape_string"))
      end

      elseif _temp529 == nil then
        _error(exception:null_error("_temp529", "invoke escape_string on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp529))
      end


_temp524 = string:new("" .. _tostring(_temp525) .. "[" .. _tostring(_temp526) .. "] = \"" .. _tostring(_temp529) .. "\"\n")
end
local _temp531
      local _t = _type(_temp523)
      if _t == "table" then
                      if _type(_temp523._less_less) == "function" or (_type(_temp523._less_less) == "table" and _rawget(_temp523._less_less, "__call_thing")) then
        _temp531 = _temp523:_less_less(_temp524)
      elseif _temp523._less_less ~= nil then
        _temp531 = _temp523._less_less

        elseif _temp523.no_undermethod ~= nil then
          _temp531 =  _temp523:no_undermethod(string:new("<<") , _temp524)
        else
          _error(exception:method_error(_temp523, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp523)
      if _n._less_less ~= nil then
        _temp531 = _n:_less_less(_temp524)
      elseif _n.no_undermethod ~= nil then
        _temp531 =  _n:no_undermethod(string:new("<<") , _temp524)
      else
        _error(exception:method_error(_temp523, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp523)
      if _f._less_less ~= nil then
        _temp531 = _f:_less_less(_temp524)
      elseif _f.no_undermethod ~= nil then
        _temp531 =  _f:no_undermethod(string:new("<<") , _temp524)
      else
        _error(exception:method_error(_temp523, "<<"))
      end

      elseif _temp523 == nil then
        _error(exception:null_error("_temp523", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp523))
      end

_temp521 = _temp531 
end

return _temp521
end

local _temp535 = function (_arg_table, _self)
local _temp513 = _arg_table["_temp513"]
local _temp514 = _arg_table["_temp514"]
local _temp507 = _arg_table["_temp507"]
local _temp515 = _arg_table["_temp515"]
local _temp505 = _arg_table["_temp505"]

local _temp534
        local _t = _type(_temp513)
        if _t == "table" then
          if _rawget(_temp513, "__call_thing") == nil then
            _temp534 = _temp513
          else
                  if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp534 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp534 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp534 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp534 =  _temp513(_self)
      end

          end
        elseif _t == "number" then
          _temp534 = _temp513
        elseif _t == "function" then
                if _temp513 == nil then
              if _type(_self._temp513) == "function" or (_type(_self._temp513) == "table" and _rawget(_self._temp513, "__call_thing")) then
        _temp534 =  _self:_temp513()
      elseif _self._temp513 ~= nil then
        _temp534 =  _self._temp513

        elseif _self.no_undermethod ~= nil then
          _temp534 =  _self:no_undermethod(string:new("_temp513"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp534 =  _temp513(_self)
      end

        elseif _temp513 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp535 = nil
    if _type(_temp514) == "function" or (_type(_temp514) == "table" and _rawget(_temp514, "__call_thing")) then
      _temp535 =  _temp514(_self)

    elseif _temp514 then
      _temp535 =  _temp514
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp535 =  _self:n()
      elseif _self.n ~= nil then
        _temp535 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp535 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp535 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp536 = nil
do
local _temp537 = nil
    if _type(_temp507) == "function" or (_type(_temp507) == "table" and _rawget(_temp507, "__call_thing")) then
      _temp537 =  _temp507(_self)

    elseif _temp507 then
      _temp537 =  _temp507
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp537 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp537 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp537 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp537 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp538 
do
local _temp539 = nil
    if _type(_temp515) == "function" or (_type(_temp515) == "table" and _rawget(_temp515, "__call_thing")) then
      _temp539 =  _temp515(_self)

    elseif _temp515 then
      _temp539 =  _temp515
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp539 =  _self:i()
      elseif _self.i ~= nil then
        _temp539 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp539 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp539 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp540
      local _t = _type(_temp539)
      if _t == "table" then
                      if _type(_temp539._plus) == "function" or (_type(_temp539._plus) == "table" and _rawget(_temp539._plus, "__call_thing")) then
        _temp540 = _temp539:_plus(1)
      elseif _temp539._plus ~= nil then
        _temp540 = _temp539._plus

        elseif _temp539.no_undermethod ~= nil then
          _temp540 =  _temp539:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp539, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp540 = _temp539 + 1
      else
              local _n = number:new(_temp539)
      if _n._plus ~= nil then
        _temp540 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp540 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp539, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp539)
      if _f._plus ~= nil then
        _temp540 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp540 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp539, "+"))
      end

      elseif _temp539 == nil then
        _error(exception:null_error("_temp539", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp539))
      end

_temp538 = _temp540 
end

_temp536 = string:new("" .. _tostring(_temp537) .. "[" .. _tostring(_temp538) .. "]")
end

      local _t = _type(_temp534)
      if _t == "table" then
                      if _type(_temp534.process) == "function" or (_type(_temp534.process) == "table" and _rawget(_temp534.process, "__call_thing")) then
        _temp534 = _temp534:process(_temp535,_temp536)
      elseif _temp534.process ~= nil then
        _temp534 = _temp534.process

        elseif _temp534.no_undermethod ~= nil then
          _temp534 =  _temp534:no_undermethod(string:new("process") , _temp535,_temp536)
        else
          _error(exception:method_error("o", "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp534)
      if _n.process ~= nil then
        _temp534 = _n:process(_temp535,_temp536)
      elseif _n.no_undermethod ~= nil then
        _temp534 =  _n:no_undermethod(string:new("process") , _temp535,_temp536)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp534)
      if _f.process ~= nil then
        _temp534 = _f:process(_temp535,_temp536)
      elseif _f.no_undermethod ~= nil then
        _temp534 =  _f:no_undermethod(string:new("process") , _temp535,_temp536)
      else
        _error(exception:method_error("o", "process"))
      end

      elseif _temp534 == nil then
        _error(exception:null_error("o", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp534))
      end


do
local _temp541 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp541 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp541 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp541 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp541 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp541 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp541 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp541 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp541 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp541 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp541 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp542 = nil
      local _t = _type(_temp541)
      if _t == "table" then
                      if _type(_temp541.out) == "function" or (_type(_temp541.out) == "table" and _rawget(_temp541.out, "__call_thing")) then
        _temp542 = _temp541:out()
      elseif _temp541.out ~= nil then
        _temp542 = _temp541.out

        elseif _temp541.no_undermethod ~= nil then
          _temp542 =  _temp541:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp541, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp541)
      if _n.out ~= nil then
        _temp542 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp542 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp541, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp541)
      if _f.out ~= nil then
        _temp542 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp542 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp541, "out"))
      end

      elseif _temp541 == nil then
        _error(exception:null_error("_temp541", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp541))
      end

local _temp543 = nil
        local _t = _type(_temp534)
        if _t == "table" then
          if _rawget(_temp534, "__call_thing") == nil then
            _temp543 = _temp534
          else
                  if _temp534 == nil then
              if _type(_self._temp534) == "function" or (_type(_self._temp534) == "table" and _rawget(_self._temp534, "__call_thing")) then
        _temp543 =  _self:_temp534()
      elseif _self._temp534 ~= nil then
        _temp543 =  _self._temp534

        elseif _self.no_undermethod ~= nil then
          _temp543 =  _self:no_undermethod(string:new("_temp534"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp543 =  _temp534(_self)
      end

          end
        elseif _t == "number" then
          _temp543 = _temp534
        elseif _t == "function" then
                if _temp534 == nil then
              if _type(_self._temp534) == "function" or (_type(_self._temp534) == "table" and _rawget(_self._temp534, "__call_thing")) then
        _temp543 =  _self:_temp534()
      elseif _self._temp534 ~= nil then
        _temp543 =  _self._temp534

        elseif _self.no_undermethod ~= nil then
          _temp543 =  _self:no_undermethod(string:new("_temp534"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp543 =  _temp534(_self)
      end

        elseif _temp534 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp543)
      if _t == "table" then
                      if _type(_temp543.out) == "function" or (_type(_temp543.out) == "table" and _rawget(_temp543.out, "__call_thing")) then
        _temp543 = _temp543:out()
      elseif _temp543.out ~= nil then
        _temp543 = _temp543.out

        elseif _temp543.no_undermethod ~= nil then
          _temp543 =  _temp543:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp543, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp543)
      if _n.out ~= nil then
        _temp543 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp543 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp543, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp543)
      if _f.out ~= nil then
        _temp543 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp543 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp543, "out"))
      end

      elseif _temp543 == nil then
        _error(exception:null_error("_temp543", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp543))
      end

local _temp544
      local _t = _type(_temp542)
      if _t == "table" then
                      if _type(_temp542._less_less) == "function" or (_type(_temp542._less_less) == "table" and _rawget(_temp542._less_less, "__call_thing")) then
        _temp544 = _temp542:_less_less(_temp543)
      elseif _temp542._less_less ~= nil then
        _temp544 = _temp542._less_less

        elseif _temp542.no_undermethod ~= nil then
          _temp544 =  _temp542:no_undermethod(string:new("<<") , _temp543)
        else
          _error(exception:method_error(_temp542, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp542)
      if _n._less_less ~= nil then
        _temp544 = _n:_less_less(_temp543)
      elseif _n.no_undermethod ~= nil then
        _temp544 =  _n:no_undermethod(string:new("<<") , _temp543)
      else
        _error(exception:method_error(_temp542, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp542)
      if _f._less_less ~= nil then
        _temp544 = _f:_less_less(_temp543)
      elseif _f.no_undermethod ~= nil then
        _temp544 =  _f:no_undermethod(string:new("<<") , _temp543)
      else
        _error(exception:method_error(_temp542, "<<"))
      end

      elseif _temp542 == nil then
        _error(exception:null_error("_temp542", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp542))
      end

_dummy_ = _temp544 
end

local _temp536 
do
local _temp545 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp545 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp545 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp545 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp545 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp545 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp545 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp545 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp545 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp545 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp546 = nil
      local _t = _type(_temp545)
      if _t == "table" then
                      if _type(_temp545.out) == "function" or (_type(_temp545.out) == "table" and _rawget(_temp545.out, "__call_thing")) then
        _temp546 = _temp545:out()
      elseif _temp545.out ~= nil then
        _temp546 = _temp545.out

        elseif _temp545.no_undermethod ~= nil then
          _temp546 =  _temp545:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp545, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp545)
      if _n.out ~= nil then
        _temp546 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp546 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp545, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp545)
      if _f.out ~= nil then
        _temp546 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp546 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp545, "out"))
      end

      elseif _temp545 == nil then
        _error(exception:null_error("_temp545", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp545))
      end

local _temp547 = nil
do
local _temp548 = nil
    if _type(_temp507) == "function" or (_type(_temp507) == "table" and _rawget(_temp507, "__call_thing")) then
      _temp548 =  _temp507(_self)

    elseif _temp507 then
      _temp548 =  _temp507
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp548 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp548 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp548 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp548 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp549 
do
local _temp550 = nil
    if _type(_temp515) == "function" or (_type(_temp515) == "table" and _rawget(_temp515, "__call_thing")) then
      _temp550 =  _temp515(_self)

    elseif _temp515 then
      _temp550 =  _temp515
    else
            if _type(_self.i) == "function" or (_type(_self.i) == "table" and _rawget(_self.i, "__call_thing")) then
        _temp550 =  _self:i()
      elseif _self.i ~= nil then
        _temp550 =  _self.i

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp550 =  _self:no_undermethod(string:new("i"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp550 =  no_undermethod(_self, string:new("i"))
      else
        _error(exception:name_error("i"))
      end
    end

local _temp551
      local _t = _type(_temp550)
      if _t == "table" then
                      if _type(_temp550._plus) == "function" or (_type(_temp550._plus) == "table" and _rawget(_temp550._plus, "__call_thing")) then
        _temp551 = _temp550:_plus(1)
      elseif _temp550._plus ~= nil then
        _temp551 = _temp550._plus

        elseif _temp550.no_undermethod ~= nil then
          _temp551 =  _temp550:no_undermethod(string:new("+") , 1)
        else
          _error(exception:method_error(_temp550, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus')  then
        _temp551 = _temp550 + 1
      else
              local _n = number:new(_temp550)
      if _n._plus ~= nil then
        _temp551 = _n:_plus(1)
      elseif _n.no_undermethod ~= nil then
        _temp551 =  _n:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp550, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp550)
      if _f._plus ~= nil then
        _temp551 = _f:_plus(1)
      elseif _f.no_undermethod ~= nil then
        _temp551 =  _f:no_undermethod(string:new("+") , 1)
      else
        _error(exception:method_error(_temp550, "+"))
      end

      elseif _temp550 == nil then
        _error(exception:null_error("_temp550", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp550))
      end

_temp549 = _temp551 
end

local _temp552 = nil
        local _t = _type(_temp534)
        if _t == "table" then
          if _rawget(_temp534, "__call_thing") == nil then
            _temp552 = _temp534
          else
                  if _temp534 == nil then
              if _type(_self._temp534) == "function" or (_type(_self._temp534) == "table" and _rawget(_self._temp534, "__call_thing")) then
        _temp552 =  _self:_temp534()
      elseif _self._temp534 ~= nil then
        _temp552 =  _self._temp534

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp534"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp552 =  _temp534(_self)
      end

          end
        elseif _t == "number" then
          _temp552 = _temp534
        elseif _t == "function" then
                if _temp534 == nil then
              if _type(_self._temp534) == "function" or (_type(_self._temp534) == "table" and _rawget(_self._temp534, "__call_thing")) then
        _temp552 =  _self:_temp534()
      elseif _self._temp534 ~= nil then
        _temp552 =  _self._temp534

        elseif _self.no_undermethod ~= nil then
          _temp552 =  _self:no_undermethod(string:new("_temp534"))
        else
          _error(exception:null_error("o", "invoke method"))
        end
      else 
        _temp552 =  _temp534(_self)
      end

        elseif _temp534 == nil then
          _error(exception:null_error("o", "cannot call method on it"))
        else
          _error(exception:method_error("self", "o"))
        end
      local _t = _type(_temp552)
      if _t == "table" then
                      if _type(_temp552.var) == "function" or (_type(_temp552.var) == "table" and _rawget(_temp552.var, "__call_thing")) then
        _temp552 = _temp552:var()
      elseif _temp552.var ~= nil then
        _temp552 = _temp552.var

        elseif _temp552.no_undermethod ~= nil then
          _temp552 =  _temp552:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp552, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp552)
      if _n.var ~= nil then
        _temp552 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp552 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp552, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp552)
      if _f.var ~= nil then
        _temp552 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp552 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp552, "var"))
      end

      elseif _temp552 == nil then
        _error(exception:null_error("_temp552", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp552))
      end


_temp547 = string:new("" .. _tostring(_temp548) .. "[" .. _tostring(_temp549) .. "] = _tostring(" .. _tostring(_temp552) .. ")\n")
end
local _temp553
      local _t = _type(_temp546)
      if _t == "table" then
                      if _type(_temp546._less_less) == "function" or (_type(_temp546._less_less) == "table" and _rawget(_temp546._less_less, "__call_thing")) then
        _temp553 = _temp546:_less_less(_temp547)
      elseif _temp546._less_less ~= nil then
        _temp553 = _temp546._less_less

        elseif _temp546.no_undermethod ~= nil then
          _temp553 =  _temp546:no_undermethod(string:new("<<") , _temp547)
        else
          _error(exception:method_error(_temp546, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp546)
      if _n._less_less ~= nil then
        _temp553 = _n:_less_less(_temp547)
      elseif _n.no_undermethod ~= nil then
        _temp553 =  _n:no_undermethod(string:new("<<") , _temp547)
      else
        _error(exception:method_error(_temp546, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp546)
      if _f._less_less ~= nil then
        _temp553 = _f:_less_less(_temp547)
      elseif _f.no_undermethod ~= nil then
        _temp553 =  _f:no_undermethod(string:new("<<") , _temp547)
      else
        _error(exception:method_error(_temp546, "<<"))
      end

      elseif _temp546 == nil then
        _error(exception:null_error("_temp546", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp546))
      end

_temp536 = _temp553 
end

return _temp536
end

local _temp555 = function (_arg_table, _self, _temp514, _temp515)
local _temp505 = _arg_table["_temp505"]
local _temp507 = _arg_table["_temp507"]
local _temp513 = _arg_table["_temp513"]
        if _temp514 == nil then
          _error(exception:argument_error("function", 2, 0))
          elseif _temp515 == nil then
            _error(exception:argument_error("function", 2, 1))

end
local _temp516 
do
local _temp517 = nil
        local _t = _type(_temp514)
        if _t == "table" then
          if _rawget(_temp514, "__call_thing") == nil then
            _temp517 = _temp514
          else
                  if _temp514 == nil then
              if _type(_self._temp514) == "function" or (_type(_self._temp514) == "table" and _rawget(_self._temp514, "__call_thing")) then
        _temp517 =  _self:_temp514()
      elseif _self._temp514 ~= nil then
        _temp517 =  _self._temp514

        elseif _self.no_undermethod ~= nil then
          _temp517 =  _self:no_undermethod(string:new("_temp514"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp517 =  _temp514(_self)
      end

          end
        elseif _t == "number" then
          _temp517 = _temp514
        elseif _t == "function" then
                if _temp514 == nil then
              if _type(_self._temp514) == "function" or (_type(_self._temp514) == "table" and _rawget(_self._temp514, "__call_thing")) then
        _temp517 =  _self:_temp514()
      elseif _self._temp514 ~= nil then
        _temp517 =  _self._temp514

        elseif _self.no_undermethod ~= nil then
          _temp517 =  _self:no_undermethod(string:new("_temp514"))
        else
          _error(exception:null_error("n", "invoke method"))
        end
      else 
        _temp517 =  _temp514(_self)
      end

        elseif _temp514 == nil then
          _error(exception:null_error("n", "cannot call method on it"))
        else
          _error(exception:method_error("self", "n"))
        end

local _temp518 = nil
      local _t = _type(_temp517)
      if _t == "table" then
                      if _type(_temp517.name) == "function" or (_type(_temp517.name) == "table" and _rawget(_temp517.name, "__call_thing")) then
        _temp518 = _temp517:name()
      elseif _temp517.name ~= nil then
        _temp518 = _temp517.name

        elseif _temp517.no_undermethod ~= nil then
          _temp518 =  _temp517:no_undermethod(string:new("name"))
        else
          _error(exception:method_error(_temp517, "name"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp517)
      if _n.name ~= nil then
        _temp518 = _n:name()
      elseif _n.no_undermethod ~= nil then
        _temp518 =  _n:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp517, "name"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp517)
      if _f.name ~= nil then
        _temp518 = _f:name()
      elseif _f.no_undermethod ~= nil then
        _temp518 =  _f:no_undermethod(string:new("name"))
      else
        _error(exception:method_error(_temp517, "name"))
      end

      elseif _temp517 == nil then
        _error(exception:null_error("_temp517", "invoke name on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp517))
      end

local _temp519 = string:new("string")
local _temp520
      local _t = _type(_temp518)
      if _t == "table" then
                      if _type(_temp518._equal_equal) == "function" or (_type(_temp518._equal_equal) == "table" and _rawget(_temp518._equal_equal, "__call_thing")) then
        _temp520 = _temp518:_equal_equal(_temp519)
      elseif _temp518._equal_equal ~= nil then
        _temp520 = _temp518._equal_equal

        elseif _temp518.no_undermethod ~= nil then
          _temp520 =  _temp518:no_undermethod(string:new("==") , _temp519)
        else
          _error(exception:method_error(_temp518, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp519) == 'number' then
              if _temp518 == _temp519 then
        _temp520 = object.__true
      else
        _temp520 = object.__false
      end

      else
              local _n = number:new(_temp518)
      if _n._equal_equal ~= nil then
        _temp520 = _n:_equal_equal(_temp519)
      elseif _n.no_undermethod ~= nil then
        _temp520 =  _n:no_undermethod(string:new("==") , _temp519)
      else
        _error(exception:method_error(_temp518, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp518)
      if _f._equal_equal ~= nil then
        _temp520 = _f:_equal_equal(_temp519)
      elseif _f.no_undermethod ~= nil then
        _temp520 =  _f:no_undermethod(string:new("==") , _temp519)
      else
        _error(exception:method_error(_temp518, "=="))
      end

      elseif _temp518 == nil then
        _error(exception:null_error("_temp518", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp518))
      end

_temp516 = _temp520 
end


local _temp533 = _lifted_call(_temp532, {})
_temp533.arg_table["_temp505"] = _temp505
_temp533.arg_table["_temp507"] = _temp507
_temp533.arg_table["_temp515"] = _temp515
_temp533.arg_table["_temp513"] = _temp513
_temp533.arg_table["_temp514"] = _temp514


local _temp554 = _lifted_call(_temp535, {})
_temp554.arg_table["_temp513"] = _temp513
_temp554.arg_table["_temp514"] = _temp514
_temp554.arg_table["_temp507"] = _temp507
_temp554.arg_table["_temp515"] = _temp515
_temp554.arg_table["_temp505"] = _temp505

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp516,_temp533,_temp554)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp516,_temp533,_temp554)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp516,_temp533,_temp554)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp516,_temp533,_temp554)
      else
        _error(exception:name_error("true?"))
      end
    end

end

local _temp573 = function (_arg_table, _self, _temp569)
local _temp567 = _arg_table["_temp567"]
local _temp565 = _arg_table["_temp565"]
        if _temp569 == nil then
          _error(exception:argument_error("values", 1, 0))

end
local _temp570 = nil
        local _t = _type(_temp567)
        if _t == "table" then
          if _rawget(_temp567, "__call_thing") == nil then
            _temp570 = _temp567
          else
                  if _temp567 == nil then
              if _type(_self._temp567) == "function" or (_type(_self._temp567) == "table" and _rawget(_self._temp567, "__call_thing")) then
        _temp570 =  _self:_temp567()
      elseif _self._temp567 ~= nil then
        _temp570 =  _self._temp567

        elseif _self.no_undermethod ~= nil then
          _temp570 =  _self:no_undermethod(string:new("_temp567"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp570 =  _temp567(_self)
      end

          end
        elseif _t == "number" then
          _temp570 = _temp567
        elseif _t == "function" then
                if _temp567 == nil then
              if _type(_self._temp567) == "function" or (_type(_self._temp567) == "table" and _rawget(_self._temp567, "__call_thing")) then
        _temp570 =  _self:_temp567()
      elseif _self._temp567 ~= nil then
        _temp570 =  _self._temp567

        elseif _self.no_undermethod ~= nil then
          _temp570 =  _self:no_undermethod(string:new("_temp567"))
        else
          _error(exception:null_error("w", "invoke method"))
        end
      else 
        _temp570 =  _temp567(_self)
      end

        elseif _temp567 == nil then
          _error(exception:null_error("w", "cannot call method on it"))
        else
          _error(exception:method_error("self", "w"))
        end
local _temp571 = nil
    if _type(_temp569) == "function" or (_type(_temp569) == "table" and _rawget(_temp569, "__call_thing")) then
      _temp571 =  _temp569(_self)

    elseif _temp569 then
      _temp571 =  _temp569
    else
            if _type(_self.n) == "function" or (_type(_self.n) == "table" and _rawget(_self.n, "__call_thing")) then
        _temp571 =  _self:n()
      elseif _self.n ~= nil then
        _temp571 =  _self.n

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp571 =  _self:no_undermethod(string:new("n"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp571 =  no_undermethod(_self, string:new("n"))
      else
        _error(exception:name_error("n"))
      end
    end

local _temp572 = nil
        local _t = _type(_temp565)
        if _t == "table" then
          if _rawget(_temp565, "__call_thing") == nil then
            _temp572 = _temp565
          else
                  if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp572 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp572 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp572 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp572 =  _temp565(_self)
      end

          end
        elseif _t == "number" then
          _temp572 = _temp565
        elseif _t == "function" then
                if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp572 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp572 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp572 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp572 =  _temp565(_self)
      end

        elseif _temp565 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp572)
      if _t == "table" then
                      if _type(_temp572.var) == "function" or (_type(_temp572.var) == "table" and _rawget(_temp572.var, "__call_thing")) then
        _temp572 = _temp572:var()
      elseif _temp572.var ~= nil then
        _temp572 = _temp572.var

        elseif _temp572.no_undermethod ~= nil then
          _temp572 =  _temp572:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp572, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp572)
      if _n.var ~= nil then
        _temp572 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp572 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp572, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp572)
      if _f.var ~= nil then
        _temp572 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp572 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp572, "var"))
      end

      elseif _temp572 == nil then
        _error(exception:null_error("_temp572", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp572))
      end


      local _t = _type(_temp570)
      if _t == "table" then
                      if _type(_temp570.process) == "function" or (_type(_temp570.process) == "table" and _rawget(_temp570.process, "__call_thing")) then
        return _temp570:process(_temp571,_temp572)
      elseif _temp570.process ~= nil then
        return _temp570.process

        elseif _temp570.no_undermethod ~= nil then
          return  _temp570:no_undermethod(string:new("process") , _temp571,_temp572)
        else
          _error(exception:method_error(_temp570, "process"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp570)
      if _n.process ~= nil then
        return _n:process(_temp571,_temp572)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("process") , _temp571,_temp572)
      else
        _error(exception:method_error(_temp570, "process"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp570)
      if _f.process ~= nil then
        return _f:process(_temp571,_temp572)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("process") , _temp571,_temp572)
      else
        _error(exception:method_error(_temp570, "process"))
      end

      elseif _temp570 == nil then
        _error(exception:null_error("_temp570", "invoke process on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp570))
      end

end

local _temp590 = function (_arg_table, _self)
local _temp565 = _arg_table["_temp565"]
local _temp568 = _arg_table["_temp568"]

local _temp583 
do
local _temp584 = nil
        local _t = _type(_temp565)
        if _t == "table" then
          if _rawget(_temp565, "__call_thing") == nil then
            _temp584 = _temp565
          else
                  if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp584 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp584 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp584 =  _temp565(_self)
      end

          end
        elseif _t == "number" then
          _temp584 = _temp565
        elseif _t == "function" then
                if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp584 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp584 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp584 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp584 =  _temp565(_self)
      end

        elseif _temp565 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp585 = nil
      local _t = _type(_temp584)
      if _t == "table" then
                      if _type(_temp584.out) == "function" or (_type(_temp584.out) == "table" and _rawget(_temp584.out, "__call_thing")) then
        _temp585 = _temp584:out()
      elseif _temp584.out ~= nil then
        _temp585 = _temp584.out

        elseif _temp584.no_undermethod ~= nil then
          _temp585 =  _temp584:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp584, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp584)
      if _n.out ~= nil then
        _temp585 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp585 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp584, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp584)
      if _f.out ~= nil then
        _temp585 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp585 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp584, "out"))
      end

      elseif _temp584 == nil then
        _error(exception:null_error("_temp584", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp584))
      end

local _temp586 = nil
do
local _temp587 = nil
        local _t = _type(_temp565)
        if _t == "table" then
          if _rawget(_temp565, "__call_thing") == nil then
            _temp587 = _temp565
          else
                  if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp587 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp587 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp587 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp587 =  _temp565(_self)
      end

          end
        elseif _t == "number" then
          _temp587 = _temp565
        elseif _t == "function" then
                if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp587 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp587 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp587 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp587 =  _temp565(_self)
      end

        elseif _temp565 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp587)
      if _t == "table" then
                      if _type(_temp587.var) == "function" or (_type(_temp587.var) == "table" and _rawget(_temp587.var, "__call_thing")) then
        _temp587 = _temp587:var()
      elseif _temp587.var ~= nil then
        _temp587 = _temp587.var

        elseif _temp587.no_undermethod ~= nil then
          _temp587 =  _temp587:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp587, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp587)
      if _n.var ~= nil then
        _temp587 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp587 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp587, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp587)
      if _f.var ~= nil then
        _temp587 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp587 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp587, "var"))
      end

      elseif _temp587 == nil then
        _error(exception:null_error("_temp587", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp587))
      end


local _temp588 = nil
        local _t = _type(_temp568)
        if _t == "table" then
          if _rawget(_temp568, "__call_thing") == nil then
            _temp588 = _temp568
          else
                  if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp588 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp588 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp588 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp588 =  _temp568(_self)
      end

          end
        elseif _t == "number" then
          _temp588 = _temp568
        elseif _t == "function" then
                if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp588 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp588 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp588 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp588 =  _temp568(_self)
      end

        elseif _temp568 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp588)
      if _t == "table" then
                      if _type(_temp588.last) == "function" or (_type(_temp588.last) == "table" and _rawget(_temp588.last, "__call_thing")) then
        _temp588 = _temp588:last()
      elseif _temp588.last ~= nil then
        _temp588 = _temp588.last

        elseif _temp588.no_undermethod ~= nil then
          _temp588 =  _temp588:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp588, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp588)
      if _n.last ~= nil then
        _temp588 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp588 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp588, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp588)
      if _f.last ~= nil then
        _temp588 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp588 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp588, "last"))
      end

      elseif _temp588 == nil then
        _error(exception:null_error("_temp588", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp588))
      end

      local _t = _type(_temp588)
      if _t == "table" then
                      if _type(_temp588.var) == "function" or (_type(_temp588.var) == "table" and _rawget(_temp588.var, "__call_thing")) then
        _temp588 = _temp588:var()
      elseif _temp588.var ~= nil then
        _temp588 = _temp588.var

        elseif _temp588.no_undermethod ~= nil then
          _temp588 =  _temp588:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp588, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp588)
      if _n.var ~= nil then
        _temp588 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp588 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp588, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp588)
      if _f.var ~= nil then
        _temp588 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp588 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp588, "var"))
      end

      elseif _temp588 == nil then
        _error(exception:null_error("_temp588", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp588))
      end


_temp586 = string:new("\n" .. _tostring(_temp587) .. " = " .. _tostring(_temp588) .. "\n")
end
local _temp589
      local _t = _type(_temp585)
      if _t == "table" then
                      if _type(_temp585._less_less) == "function" or (_type(_temp585._less_less) == "table" and _rawget(_temp585._less_less, "__call_thing")) then
        _temp589 = _temp585:_less_less(_temp586)
      elseif _temp585._less_less ~= nil then
        _temp589 = _temp585._less_less

        elseif _temp585.no_undermethod ~= nil then
          _temp589 =  _temp585:no_undermethod(string:new("<<") , _temp586)
        else
          _error(exception:method_error(_temp585, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp585)
      if _n._less_less ~= nil then
        _temp589 = _n:_less_less(_temp586)
      elseif _n.no_undermethod ~= nil then
        _temp589 =  _n:no_undermethod(string:new("<<") , _temp586)
      else
        _error(exception:method_error(_temp585, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp585)
      if _f._less_less ~= nil then
        _temp589 = _f:_less_less(_temp586)
      elseif _f.no_undermethod ~= nil then
        _temp589 =  _f:no_undermethod(string:new("<<") , _temp586)
      else
        _error(exception:method_error(_temp585, "<<"))
      end

      elseif _temp585 == nil then
        _error(exception:null_error("_temp585", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp585))
      end

_temp583 = _temp589 
end

return _temp583
end
--lifted
local _temp1 = string:new("parser/walker")

local _temp2 = string:new("parser/sexp")

local _temp3 = string:new("parser/env")

local _temp4 = string:new("parser/compiler_helper")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1,_temp2,_temp3,_temp4)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1,_temp2,_temp3,_temp4)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1,_temp2,_temp3,_temp4)
      else
        _error(exception:name_error("includes"))
      end
    end

local _temp5
              if _type(_self.walker) == "function" or (_type(_self.walker) == "table" and _rawget(_self.walker, "__call_thing")) then
        _temp5 =  _self:walker()
      elseif _self.walker ~= nil then
        _temp5 =  _self.walker

        elseif walker ~= nil then
          _temp5 = walker;
        else
          _error(exception:method_error("self", "walker"))
        end
      local _t = _type(_temp5)
      if _t == "table" then
                      if _type(_temp5.new) == "function" or (_type(_temp5.new) == "table" and _rawget(_temp5.new, "__call_thing")) then
        _temp5 = _temp5:new()
      elseif _temp5.new ~= nil then
        _temp5 = _temp5.new

        elseif _temp5.no_undermethod ~= nil then
          _temp5 =  _temp5:no_undermethod(string:new("new"))
        else
          _error(exception:method_error("c", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp5)
      if _n.new ~= nil then
        _temp5 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp5 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp5)
      if _f.new ~= nil then
        _temp5 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp5 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error("c", "new"))
      end

      elseif _temp5 == nil then
        _error(exception:null_error("c", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp5))
      end


        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp4 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp4 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp4 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp4 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp4 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp4 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
    if _type(compiler_underhelper) == "function" or (_type(compiler_underhelper) == "table" and _rawget(compiler_underhelper, "__call_thing")) then
      _temp3 =  compiler_underhelper(_self)

    elseif compiler_underhelper then
      _temp3 =  compiler_underhelper
    else
            if _type(_self.compiler_underhelper) == "function" or (_type(_self.compiler_underhelper) == "table" and _rawget(_self.compiler_underhelper, "__call_thing")) then
        _temp3 =  _self:compiler_underhelper()
      elseif _self.compiler_underhelper ~= nil then
        _temp3 =  _self.compiler_underhelper

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("compiler_helper"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("compiler_helper"))
      else
        _error(exception:name_error("compiler_helper"))
      end
    end

      local _t = _type(_temp4)
      if _t == "table" then
                      if _type(_temp4.squish) == "function" or (_type(_temp4.squish) == "table" and _rawget(_temp4.squish, "__call_thing")) then
        _dummy_ = _temp4:squish(_temp3)
      elseif _temp4.squish ~= nil then
        _dummy_ = _temp4.squish

        elseif _temp4.no_undermethod ~= nil then
          _dummy_ =  _temp4:no_undermethod(string:new("squish") , _temp3)
        else
          _error(exception:method_error(_temp4, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp4)
      if _n.squish ~= nil then
        _dummy_ = _n:squish(_temp3)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp4)
      if _f.squish ~= nil then
        _dummy_ = _f:squish(_temp3)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("squish") , _temp3)
      else
        _error(exception:method_error(_temp4, "squish"))
      end

      elseif _temp4 == nil then
        _error(exception:null_error("_temp4", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp4))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end

local _temp11 = function (_self, _temp6)
        if _temp6 == nil then
          _error(exception:argument_error("c.init", 1, 0))

end
local _temp7 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp8 = nil
    if _type(_temp6) == "function" or (_type(_temp6) == "table" and _rawget(_temp6, "__call_thing")) then
      _temp8 =  _temp6(_self)

    elseif _temp6 then
      _temp8 =  _temp6
    else
            if _type(_self.ast) == "function" or (_type(_self.ast) == "table" and _rawget(_self.ast, "__call_thing")) then
        _temp8 =  _self:ast()
      elseif _self.ast ~= nil then
        _temp8 =  _self.ast

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ast"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ast"))
      else
        _error(exception:name_error("ast"))
      end
    end

        if _type(_temp7) == "table" then
          _temp7["ast"] = _temp8
        elseif _type(_temp7) == "number" then
          number["ast"] = _temp8
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp9 = nil
              if _type(_self.env) == "function" or (_type(_self.env) == "table" and _rawget(_self.env, "__call_thing")) then
        _temp9 =  _self:env()
      elseif _self.env ~= nil then
        _temp9 =  _self.env

        elseif env ~= nil then
          _temp9 = env;
        else
          _error(exception:method_error("self", "env"))
        end
      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.new) == "function" or (_type(_temp9.new) == "table" and _rawget(_temp9.new, "__call_thing")) then
        _temp9 = _temp9:new()
      elseif _temp9.new ~= nil then
        _temp9 = _temp9.new

        elseif _temp9.no_undermethod ~= nil then
          _temp9 =  _temp9:no_undermethod(string:new("new"))
        else
          _error(exception:method_error(_temp9, "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.new ~= nil then
        _temp9 = _n:new()
      elseif _n.no_undermethod ~= nil then
        _temp9 =  _n:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.new ~= nil then
        _temp9 = _f:new()
      elseif _f.no_undermethod ~= nil then
        _temp9 =  _f:no_undermethod(string:new("new"))
      else
        _error(exception:method_error(_temp9, "new"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end


        if _type(_temp7) == "table" then
          _temp7["env"] = _temp9
        elseif _type(_temp7) == "number" then
          number["env"] = _temp9
        else
          _error("Cannot set method on " .. _temp7)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp7 =  _self:my()
      elseif _self.my ~= nil then
        _temp7 =  _self.my

        elseif my ~= nil then
          _temp7 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp10 = array:new()

        if _type(_temp7) == "table" then
          _temp7["liftable_underfunctions"] = _temp10
        elseif _type(_temp7) == "number" then
          number["liftable_underfunctions"] = _temp10
        else
          _error("Cannot set method on " .. _temp7)
        end

return _temp10
end

        if _type(_temp3) == "table" then
          _temp3["init"] = _temp11
        elseif _type(_temp3) == "number" then
          number["init"] =  _temp11
        else
          _error("Cannot set method on " .. _temp3)
        end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp3 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp3 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp3 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp3 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp3 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp3 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("program")

local _temp25 = function (_self, _temp12)
        if _temp12 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp13 = nil
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp13 =  my(_self)

    elseif my then
      _temp13 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp13 =  _self:my()
      elseif _self.my ~= nil then
        _temp13 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp13 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp13 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

_temp5 = _temp13

local _temp14 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp14 =  _self:my()
      elseif _self.my ~= nil then
        _temp14 =  _self.my

        elseif my ~= nil then
          _temp14 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp15 = nil
        local _t = _type(_temp12)
        if _t == "table" then
          if _rawget(_temp12, "__call_thing") == nil then
            _temp15 = _temp12
          else
                  if _temp12 == nil then
              if _type(_self._temp12) == "function" or (_type(_self._temp12) == "table" and _rawget(_self._temp12, "__call_thing")) then
        _temp15 =  _self:_temp12()
      elseif _self._temp12 ~= nil then
        _temp15 =  _self._temp12

        elseif _self.no_undermethod ~= nil then
          _temp15 =  _self:no_undermethod(string:new("_temp12"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp15 =  _temp12(_self)
      end

          end
        elseif _t == "number" then
          _temp15 = _temp12
        elseif _t == "function" then
                if _temp12 == nil then
              if _type(_self._temp12) == "function" or (_type(_self._temp12) == "table" and _rawget(_self._temp12, "__call_thing")) then
        _temp15 =  _self:_temp12()
      elseif _self._temp12 ~= nil then
        _temp15 =  _self._temp12

        elseif _self.no_undermethod ~= nil then
          _temp15 =  _self:no_undermethod(string:new("_temp12"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp15 =  _temp12(_self)
      end

        elseif _temp12 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp15)
      if _t == "table" then
                      if _type(_temp15.nodes) == "function" or (_type(_temp15.nodes) == "table" and _rawget(_temp15.nodes, "__call_thing")) then
        _temp15 = _temp15:nodes()
      elseif _temp15.nodes ~= nil then
        _temp15 = _temp15.nodes

        elseif _temp15.no_undermethod ~= nil then
          _temp15 =  _temp15:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp15, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp15)
      if _n.nodes ~= nil then
        _temp15 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp15 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp15, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp15)
      if _f.nodes ~= nil then
        _temp15 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp15 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp15, "nodes"))
      end

      elseif _temp15 == nil then
        _error(exception:null_error("_temp15", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp15))
      end


local _temp20 = _lifted_call(_temp19, {})
_temp20.arg_table["_temp5"] = _temp5

      local _t = _type(_temp15)
      if _t == "table" then
                      if _type(_temp15.map) == "function" or (_type(_temp15.map) == "table" and _rawget(_temp15.map, "__call_thing")) then
        _temp15 = _temp15:map(_temp20)
      elseif _temp15.map ~= nil then
        _temp15 = _temp15.map

        elseif _temp15.no_undermethod ~= nil then
          _temp15 =  _temp15:no_undermethod(string:new("map") , _temp20)
        else
          _error(exception:method_error(_temp15, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp15)
      if _n.map ~= nil then
        _temp15 = _n:map(_temp20)
      elseif _n.no_undermethod ~= nil then
        _temp15 =  _n:no_undermethod(string:new("map") , _temp20)
      else
        _error(exception:method_error(_temp15, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp15)
      if _f.map ~= nil then
        _temp15 = _f:map(_temp20)
      elseif _f.no_undermethod ~= nil then
        _temp15 =  _f:no_undermethod(string:new("map") , _temp20)
      else
        _error(exception:method_error(_temp15, "map"))
      end

      elseif _temp15 == nil then
        _error(exception:null_error("_temp15", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp15))
      end


        if _type(_temp14) == "table" then
          _temp14["results"] = _temp15
        elseif _type(_temp14) == "number" then
          number["results"] = _temp15
        else
          _error("Cannot set method on " .. _temp14)
        end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp14 =  _self:my()
      elseif _self.my ~= nil then
        _temp14 =  _self.my

        elseif my ~= nil then
          _temp14 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp20 
do
local _temp21 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp21 =  _self:my()
      elseif _self.my ~= nil then
        _temp21 =  _self.my

        elseif my ~= nil then
          _temp21 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp22 = nil
      local _t = _type(_temp21)
      if _t == "table" then
                      if _type(_temp21.liftable_underfunctions) == "function" or (_type(_temp21.liftable_underfunctions) == "table" and _rawget(_temp21.liftable_underfunctions, "__call_thing")) then
        _temp22 = _temp21:liftable_underfunctions()
      elseif _temp21.liftable_underfunctions ~= nil then
        _temp22 = _temp21.liftable_underfunctions

        elseif _temp21.no_undermethod ~= nil then
          _temp22 =  _temp21:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp21, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp21)
      if _n.liftable_underfunctions ~= nil then
        _temp22 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp22 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp21, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp21)
      if _f.liftable_underfunctions ~= nil then
        _temp22 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp22 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp21, "liftable_functions"))
      end

      elseif _temp21 == nil then
        _error(exception:null_error("_temp21", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp21))
      end

local _temp23 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp23 =  _self:my()
      elseif _self.my ~= nil then
        _temp23 =  _self.my

        elseif my ~= nil then
          _temp23 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.results) == "function" or (_type(_temp23.results) == "table" and _rawget(_temp23.results, "__call_thing")) then
        _temp23 = _temp23:results()
      elseif _temp23.results ~= nil then
        _temp23 = _temp23.results

        elseif _temp23.no_undermethod ~= nil then
          _temp23 =  _temp23:no_undermethod(string:new("results"))
        else
          _error(exception:method_error(_temp23, "results"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.results ~= nil then
        _temp23 = _n:results()
      elseif _n.no_undermethod ~= nil then
        _temp23 =  _n:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp23, "results"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.results ~= nil then
        _temp23 = _f:results()
      elseif _f.no_undermethod ~= nil then
        _temp23 =  _f:no_undermethod(string:new("results"))
      else
        _error(exception:method_error(_temp23, "results"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke results on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

local _temp24
      local _t = _type(_temp22)
      if _t == "table" then
                      if _type(_temp22._plus) == "function" or (_type(_temp22._plus) == "table" and _rawget(_temp22._plus, "__call_thing")) then
        _temp24 = _temp22:_plus(_temp23)
      elseif _temp22._plus ~= nil then
        _temp24 = _temp22._plus

        elseif _temp22.no_undermethod ~= nil then
          _temp24 =  _temp22:no_undermethod(string:new("+") , _temp23)
        else
          _error(exception:method_error(_temp22, "+"))
        end

      elseif _t == "number" then
              if number._unchanged('_plus') and _type(_temp23) == 'number' then
        _temp24 = _temp22 + _temp23
      else
              local _n = number:new(_temp22)
      if _n._plus ~= nil then
        _temp24 = _n:_plus(_temp23)
      elseif _n.no_undermethod ~= nil then
        _temp24 =  _n:no_undermethod(string:new("+") , _temp23)
      else
        _error(exception:method_error(_temp22, "+"))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp22)
      if _f._plus ~= nil then
        _temp24 = _f:_plus(_temp23)
      elseif _f.no_undermethod ~= nil then
        _temp24 =  _f:no_undermethod(string:new("+") , _temp23)
      else
        _error(exception:method_error(_temp22, "+"))
      end

      elseif _temp22 == nil then
        _error(exception:null_error("_temp22", "invoke + on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp22))
      end

_temp20 = _temp24 
end

        if _type(_temp14) == "table" then
          _temp14["results"] = _temp20
        elseif _type(_temp14) == "number" then
          number["results"] = _temp20
        else
          _error("Cannot set method on " .. _temp14)
        end

return _temp20
end

      local _t = _type(_temp3)
      if _t == "table" then
                      if _type(_temp3.walk) == "function" or (_type(_temp3.walk) == "table" and _rawget(_temp3.walk, "__call_thing")) then
        _dummy_ = _temp3:walk(_temp4,_temp25)
      elseif _temp3.walk ~= nil then
        _dummy_ = _temp3.walk

        elseif _temp3.no_undermethod ~= nil then
          _dummy_ =  _temp3:no_undermethod(string:new("walk") , _temp4,_temp25)
        else
          _error(exception:method_error(_temp3, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp3)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp25)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp25)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp3)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp25)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp25)
      else
        _error(exception:method_error(_temp3, "walk"))
      end

      elseif _temp3 == nil then
        _error(exception:null_error("_temp3", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp3))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp25 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp25 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp25 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp25 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp25 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp25 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp25 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp25 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp25 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp25 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_assign")

_temp30 = function (_self, _temp26)
        if _temp26 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp27
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.env) == "function" or (_type(_temp27.env) == "table" and _rawget(_temp27.env, "__call_thing")) then
        _temp27 = _temp27:env()
      elseif _temp27.env ~= nil then
        _temp27 = _temp27.env

        elseif _temp27.no_undermethod ~= nil then
          _temp27 =  _temp27:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.env ~= nil then
        _temp27 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp27 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.env ~= nil then
        _temp27 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp27 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

local _temp28 = nil
        local _t = _type(_temp26)
        if _t == "table" then
          if _rawget(_temp26, "__call_thing") == nil then
            _temp28 = _temp26
          else
                  if _temp26 == nil then
              if _type(_self._temp26) == "function" or (_type(_self._temp26) == "table" and _rawget(_self._temp26, "__call_thing")) then
        _temp28 =  _self:_temp26()
      elseif _self._temp26 ~= nil then
        _temp28 =  _self._temp26

        elseif _self.no_undermethod ~= nil then
          _temp28 =  _self:no_undermethod(string:new("_temp26"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp28 =  _temp26(_self)
      end

          end
        elseif _t == "number" then
          _temp28 = _temp26
        elseif _t == "function" then
                if _temp26 == nil then
              if _type(_self._temp26) == "function" or (_type(_self._temp26) == "table" and _rawget(_self._temp26, "__call_thing")) then
        _temp28 =  _self:_temp26()
      elseif _self._temp26 ~= nil then
        _temp28 =  _self._temp26

        elseif _self.no_undermethod ~= nil then
          _temp28 =  _self:no_undermethod(string:new("_temp26"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp28 =  _temp26(_self)
      end

        elseif _temp26 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28.lhs) == "function" or (_type(_temp28.lhs) == "table" and _rawget(_temp28.lhs, "__call_thing")) then
        _temp28 = _temp28:lhs()
      elseif _temp28.lhs ~= nil then
        _temp28 = _temp28.lhs

        elseif _temp28.no_undermethod ~= nil then
          _temp28 =  _temp28:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp28, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp28)
      if _n.lhs ~= nil then
        _temp28 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp28, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f.lhs ~= nil then
        _temp28 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp28, "lhs"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end


      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.new_undervar) == "function" or (_type(_temp27.new_undervar) == "table" and _rawget(_temp27.new_undervar, "__call_thing")) then
        _temp27 = _temp27:new_undervar(_temp28)
      elseif _temp27.new_undervar ~= nil then
        _temp27 = _temp27.new_undervar

        elseif _temp27.no_undermethod ~= nil then
          _temp27 =  _temp27:no_undermethod(string:new("new_var") , _temp28)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.new_undervar ~= nil then
        _temp27 = _n:new_undervar(_temp28)
      elseif _n.no_undermethod ~= nil then
        _temp27 =  _n:no_undermethod(string:new("new_var") , _temp28)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.new_undervar ~= nil then
        _temp27 = _f:new_undervar(_temp28)
      elseif _f.no_undermethod ~= nil then
        _temp27 =  _f:no_undermethod(string:new("new_var") , _temp28)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end


local _temp29
        local _t = _type(_temp26)
        if _t == "table" then
          if _rawget(_temp26, "__call_thing") == nil then
            _temp28 = _temp26
          else
                  if _temp26 == nil then
              if _type(_self._temp26) == "function" or (_type(_self._temp26) == "table" and _rawget(_self._temp26, "__call_thing")) then
        _temp28 =  _self:_temp26()
      elseif _self._temp26 ~= nil then
        _temp28 =  _self._temp26

        elseif _self.no_undermethod ~= nil then
          _temp28 =  _self:no_undermethod(string:new("_temp26"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp28 =  _temp26(_self)
      end

          end
        elseif _t == "number" then
          _temp28 = _temp26
        elseif _t == "function" then
                if _temp26 == nil then
              if _type(_self._temp26) == "function" or (_type(_self._temp26) == "table" and _rawget(_self._temp26, "__call_thing")) then
        _temp28 =  _self:_temp26()
      elseif _self._temp26 ~= nil then
        _temp28 =  _self._temp26

        elseif _self.no_undermethod ~= nil then
          _temp28 =  _self:no_undermethod(string:new("_temp26"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp28 =  _temp26(_self)
      end

        elseif _temp26 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp28)
      if _t == "table" then
                      if _type(_temp28.rhs) == "function" or (_type(_temp28.rhs) == "table" and _rawget(_temp28.rhs, "__call_thing")) then
        _temp28 = _temp28:rhs()
      elseif _temp28.rhs ~= nil then
        _temp28 = _temp28.rhs

        elseif _temp28.no_undermethod ~= nil then
          _temp28 =  _temp28:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp28, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp28)
      if _n.rhs ~= nil then
        _temp28 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp28 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp28, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp28)
      if _f.rhs ~= nil then
        _temp28 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp28 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp28, "rhs"))
      end

      elseif _temp28 == nil then
        _error(exception:null_error("_temp28", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp28))
      end


local _temp30 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp30 =  _temp27(_self)

    elseif _temp27 then
      _temp30 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp30 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp30 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp30 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp30 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp29 =  process(_self, _temp28,_temp30)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp29 =  _self:process(_temp28,_temp30)
      elseif _self.process ~= nil then
        _temp29 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp29 =  _self:no_undermethod(string:new("process") , _temp28,_temp30)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp29 =  no_undermethod(_self, string:new("process") , _temp28,_temp30)
      else
        _error(exception:name_error("process"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp30 =  _self:my()
      elseif _self.my ~= nil then
        _temp30 =  _self.my

        elseif my ~= nil then
          _temp30 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp30)
      if _t == "table" then
                      if _type(_temp30.env) == "function" or (_type(_temp30.env) == "table" and _rawget(_temp30.env, "__call_thing")) then
        _temp30 = _temp30:env()
      elseif _temp30.env ~= nil then
        _temp30 = _temp30.env

        elseif _temp30.no_undermethod ~= nil then
          _temp30 =  _temp30:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp30, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp30)
      if _n.env ~= nil then
        _temp30 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp30 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp30, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp30)
      if _f.env ~= nil then
        _temp30 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp30 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp30, "env"))
      end

      elseif _temp30 == nil then
        _error(exception:null_error("_temp30", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp30))
      end

    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp28 =  _temp27(_self)

    elseif _temp27 then
      _temp28 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp28 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp28 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp28 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp28 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp31
do
    if _type(_temp29) == "function" or (_type(_temp29) == "table" and _rawget(_temp29, "__call_thing")) then
      _temp31 =  _temp29(_self)

    elseif _temp29 then
      _temp31 =  _temp29
    else
            if _type(_self.rhs) == "function" or (_type(_self.rhs) == "table" and _rawget(_self.rhs, "__call_thing")) then
        _temp31 =  _self:rhs()
      elseif _self.rhs ~= nil then
        _temp31 =  _self.rhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp31 =  _self:no_undermethod(string:new("rhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp31 =  no_undermethod(_self, string:new("rhs"))
      else
        _error(exception:name_error("rhs"))
      end
    end
local _temp32 = string:new("type")


_temp31 = _temp31:get(_temp32)
end

      local _t = _type(_temp30)
      if _t == "table" then
                      if _type(_temp30.set_undertype) == "function" or (_type(_temp30.set_undertype) == "table" and _rawget(_temp30.set_undertype, "__call_thing")) then
        _dummy_ = _temp30:set_undertype(_temp28,_temp31)
      elseif _temp30.set_undertype ~= nil then
        _dummy_ = _temp30.set_undertype

        elseif _temp30.no_undermethod ~= nil then
          _dummy_ =  _temp30:no_undermethod(string:new("set_type") , _temp28,_temp31)
        else
          _error(exception:method_error(_temp30, "set_type"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp30)
      if _n.set_undertype ~= nil then
        _dummy_ = _n:set_undertype(_temp28,_temp31)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("set_type") , _temp28,_temp31)
      else
        _error(exception:method_error(_temp30, "set_type"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp30)
      if _f.set_undertype ~= nil then
        _dummy_ = _f:set_undertype(_temp28,_temp31)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("set_type") , _temp28,_temp31)
      else
        _error(exception:method_error(_temp30, "set_type"))
      end

      elseif _temp30 == nil then
        _error(exception:null_error("_temp30", "invoke set_type on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp30))
      end

local _temp31 
do
local _temp33 = nil
    if _type(_temp27) == "function" or (_type(_temp27) == "table" and _rawget(_temp27, "__call_thing")) then
      _temp33 =  _temp27(_self)

    elseif _temp27 then
      _temp33 =  _temp27
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp33 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp33 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp33 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp33 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp34 = nil
        local _t = _type(_temp29)
        if _t == "table" then
          if _rawget(_temp29, "__call_thing") == nil then
            _temp34 = _temp29
          else
                  if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp34 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp34 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp34 =  _temp29(_self)
      end

          end
        elseif _t == "number" then
          _temp34 = _temp29
        elseif _t == "function" then
                if _temp29 == nil then
              if _type(_self._temp29) == "function" or (_type(_self._temp29) == "table" and _rawget(_self._temp29, "__call_thing")) then
        _temp34 =  _self:_temp29()
      elseif _self._temp29 ~= nil then
        _temp34 =  _self._temp29

        elseif _self.no_undermethod ~= nil then
          _temp34 =  _self:no_undermethod(string:new("_temp29"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp34 =  _temp29(_self)
      end

        elseif _temp29 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp34)
      if _t == "table" then
                      if _type(_temp34.var) == "function" or (_type(_temp34.var) == "table" and _rawget(_temp34.var, "__call_thing")) then
        _temp34 = _temp34:var()
      elseif _temp34.var ~= nil then
        _temp34 = _temp34.var

        elseif _temp34.no_undermethod ~= nil then
          _temp34 =  _temp34:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp34, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp34)
      if _n.var ~= nil then
        _temp34 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp34 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp34, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp34)
      if _f.var ~= nil then
        _temp34 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp34 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp34, "var"))
      end

      elseif _temp34 == nil then
        _error(exception:null_error("_temp34", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp34))
      end

local _temp35
      local _t = _type(_temp33)
      if _t == "table" then
                      if _type(_temp33._equal_equal) == "function" or (_type(_temp33._equal_equal) == "table" and _rawget(_temp33._equal_equal, "__call_thing")) then
        _temp35 = _temp33:_equal_equal(_temp34)
      elseif _temp33._equal_equal ~= nil then
        _temp35 = _temp33._equal_equal

        elseif _temp33.no_undermethod ~= nil then
          _temp35 =  _temp33:no_undermethod(string:new("==") , _temp34)
        else
          _error(exception:method_error(_temp33, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp34) == 'number' then
              if _temp33 == _temp34 then
        _temp35 = object.__true
      else
        _temp35 = object.__false
      end

      else
              local _n = number:new(_temp33)
      if _n._equal_equal ~= nil then
        _temp35 = _n:_equal_equal(_temp34)
      elseif _n.no_undermethod ~= nil then
        _temp35 =  _n:no_undermethod(string:new("==") , _temp34)
      else
        _error(exception:method_error(_temp33, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp33)
      if _f._equal_equal ~= nil then
        _temp35 = _f:_equal_equal(_temp34)
      elseif _f.no_undermethod ~= nil then
        _temp35 =  _f:no_undermethod(string:new("==") , _temp34)
      else
        _error(exception:method_error(_temp33, "=="))
      end

      elseif _temp33 == nil then
        _error(exception:null_error("_temp33", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp33))
      end

_temp31 = _temp35 
end


local _temp41 = _lifted_call(_temp40, {})
_temp41.arg_table["_temp27"] = _temp27
_temp41.arg_table["_temp29"] = _temp29


local _temp48 = _lifted_call(_temp47, {})
_temp48.arg_table["_temp27"] = _temp27
_temp48.arg_table["_temp29"] = _temp29

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp31,_temp41,_temp48)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp31,_temp41,_temp48)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp31,_temp41,_temp48)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp31,_temp41,_temp48)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp25)
      if _t == "table" then
                      if _type(_temp25.walk) == "function" or (_type(_temp25.walk) == "table" and _rawget(_temp25.walk, "__call_thing")) then
        _dummy_ = _temp25:walk(_temp4,_temp30)
      elseif _temp25.walk ~= nil then
        _dummy_ = _temp25.walk

        elseif _temp25.no_undermethod ~= nil then
          _dummy_ =  _temp25:no_undermethod(string:new("walk") , _temp4,_temp30)
        else
          _error(exception:method_error(_temp25, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp25)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp30)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp25, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp25)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp30)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp25, "walk"))
      end

      elseif _temp25 == nil then
        _error(exception:null_error("_temp25", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp25))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp30 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp30 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("local_var_reassign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp25 =  _temp5(_self)

    elseif _temp5 then
      _temp25 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp25 =  _self:c()
      elseif _self.c ~= nil then
        _temp25 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp25 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp25 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp25 = _temp25["var_underreassign"]
        if _temp25 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp30)
      if _t == "table" then
                      if _type(_temp30.walk) == "function" or (_type(_temp30.walk) == "table" and _rawget(_temp30.walk, "__call_thing")) then
        _dummy_ = _temp30:walk(_temp4,_temp25)
      elseif _temp30.walk ~= nil then
        _dummy_ = _temp30.walk

        elseif _temp30.no_undermethod ~= nil then
          _dummy_ =  _temp30:no_undermethod(string:new("walk") , _temp4,_temp25)
        else
          _error(exception:method_error(_temp30, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp30)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp25)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp25)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp30)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp25)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp25)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _temp30 == nil then
        _error(exception:null_error("_temp30", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp30))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp25 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp25 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp25 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp25 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp25 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp25 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp25 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp25 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp25 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp25 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("upvar_assign")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp30 =  _temp5(_self)

    elseif _temp5 then
      _temp30 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp30 =  _self:c()
      elseif _self.c ~= nil then
        _temp30 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp30 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp30 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp30 = _temp30["var_underreassign"]
        if _temp30 == nil then
          _error(exception:method_error("c", "var_reassign"))
        end

      local _t = _type(_temp25)
      if _t == "table" then
                      if _type(_temp25.walk) == "function" or (_type(_temp25.walk) == "table" and _rawget(_temp25.walk, "__call_thing")) then
        _dummy_ = _temp25:walk(_temp4,_temp30)
      elseif _temp25.walk ~= nil then
        _dummy_ = _temp25.walk

        elseif _temp25.no_undermethod ~= nil then
          _dummy_ =  _temp25:no_undermethod(string:new("walk") , _temp4,_temp30)
        else
          _error(exception:method_error(_temp25, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp25)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp30)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp25, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp25)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp30)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp25, "walk"))
      end

      elseif _temp25 == nil then
        _error(exception:null_error("_temp25", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp25))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp30 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp30 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("field_assign")

local _temp70 = function (_self, _temp50,_temp49)
        if _temp50 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp49 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp49 =  null(_self)

    elseif null then
      _temp49 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp49 =  _self:null()
      elseif _self.null ~= nil then
        _temp49 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp49 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp49 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp51
local _temp52 = nil
        local _t = _type(_temp50)
        if _t == "table" then
          if _rawget(_temp50, "__call_thing") == nil then
            _temp52 = _temp50
          else
                  if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp52 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp52 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp52 =  _temp50(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp50
        elseif _t == "function" then
                if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp52 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp52 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp52 =  _temp50(_self)
      end

        elseif _temp50 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.lhs) == "function" or (_type(_temp52.lhs) == "table" and _rawget(_temp52.lhs, "__call_thing")) then
        _temp52 = _temp52:lhs()
      elseif _temp52.lhs ~= nil then
        _temp52 = _temp52.lhs

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp52, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.lhs ~= nil then
        _temp52 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp52, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.lhs ~= nil then
        _temp52 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp52, "lhs"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end

      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.target) == "function" or (_type(_temp52.target) == "table" and _rawget(_temp52.target, "__call_thing")) then
        _temp52 = _temp52:target()
      elseif _temp52.target ~= nil then
        _temp52 = _temp52.target

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp52, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.target ~= nil then
        _temp52 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp52, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.target ~= nil then
        _temp52 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp52, "target"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp51 =  process(_self, _temp52)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp51 =  _self:process(_temp52)
      elseif _self.process ~= nil then
        _temp51 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("process") , _temp52)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("process") , _temp52)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp50)
        if _t == "table" then
          if _rawget(_temp50, "__call_thing") == nil then
            _temp52 = _temp50
          else
                  if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp52 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp52 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp52 =  _temp50(_self)
      end

          end
        elseif _t == "number" then
          _temp52 = _temp50
        elseif _t == "function" then
                if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp52 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp52 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp52 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp52 =  _temp50(_self)
      end

        elseif _temp50 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.lhs) == "function" or (_type(_temp52.lhs) == "table" and _rawget(_temp52.lhs, "__call_thing")) then
        _temp52 = _temp52:lhs()
      elseif _temp52.lhs ~= nil then
        _temp52 = _temp52.lhs

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp52, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.lhs ~= nil then
        _temp52 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp52, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.lhs ~= nil then
        _temp52 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp52, "lhs"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end

      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.field) == "function" or (_type(_temp52.field) == "table" and _rawget(_temp52.field, "__call_thing")) then
        _temp52 = _temp52:field()
      elseif _temp52.field ~= nil then
        _temp52 = _temp52.field

        elseif _temp52.no_undermethod ~= nil then
          _temp52 =  _temp52:no_undermethod(string:new("field"))
        else
          _error(exception:method_error(_temp52, "field"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.field ~= nil then
        _temp52 = _n:field()
      elseif _n.no_undermethod ~= nil then
        _temp52 =  _n:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp52, "field"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.field ~= nil then
        _temp52 = _f:field()
      elseif _f.no_undermethod ~= nil then
        _temp52 =  _f:no_undermethod(string:new("field"))
      else
        _error(exception:method_error(_temp52, "field"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke field on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end


_temp49 = _temp52

local _temp53
local _temp54 = nil
        local _t = _type(_temp50)
        if _t == "table" then
          if _rawget(_temp50, "__call_thing") == nil then
            _temp54 = _temp50
          else
                  if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp54 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp54 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp54 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp54 =  _temp50(_self)
      end

          end
        elseif _t == "number" then
          _temp54 = _temp50
        elseif _t == "function" then
                if _temp50 == nil then
              if _type(_self._temp50) == "function" or (_type(_self._temp50) == "table" and _rawget(_self._temp50, "__call_thing")) then
        _temp54 =  _self:_temp50()
      elseif _self._temp50 ~= nil then
        _temp54 =  _self._temp50

        elseif _self.no_undermethod ~= nil then
          _temp54 =  _self:no_undermethod(string:new("_temp50"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp54 =  _temp50(_self)
      end

        elseif _temp50 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp54)
      if _t == "table" then
                      if _type(_temp54.rhs) == "function" or (_type(_temp54.rhs) == "table" and _rawget(_temp54.rhs, "__call_thing")) then
        _temp54 = _temp54:rhs()
      elseif _temp54.rhs ~= nil then
        _temp54 = _temp54.rhs

        elseif _temp54.no_undermethod ~= nil then
          _temp54 =  _temp54:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp54, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp54)
      if _n.rhs ~= nil then
        _temp54 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp54 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp54, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp54)
      if _f.rhs ~= nil then
        _temp54 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp54 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp54, "rhs"))
      end

      elseif _temp54 == nil then
        _error(exception:null_error("_temp54", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp54))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp53 =  process(_self, _temp54)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp53 =  _self:process(_temp54)
      elseif _self.process ~= nil then
        _temp53 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp53 =  _self:no_undermethod(string:new("process") , _temp54)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp53 =  no_undermethod(_self, string:new("process") , _temp54)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp55
do
local _temp56 = nil
        local _t = _type(_temp51)
        if _t == "table" then
          if _rawget(_temp51, "__call_thing") == nil then
            _temp56 = _temp51
          else
                  if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp56 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp56 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp56 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp56 =  _temp51(_self)
      end

          end
        elseif _t == "number" then
          _temp56 = _temp51
        elseif _t == "function" then
                if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp56 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp56 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp56 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp56 =  _temp51(_self)
      end

        elseif _temp51 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end

local _temp57 = nil
      local _t = _type(_temp56)
      if _t == "table" then
                      if _type(_temp56.out) == "function" or (_type(_temp56.out) == "table" and _rawget(_temp56.out, "__call_thing")) then
        _temp57 = _temp56:out()
      elseif _temp56.out ~= nil then
        _temp57 = _temp56.out

        elseif _temp56.no_undermethod ~= nil then
          _temp57 =  _temp56:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp56, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp56)
      if _n.out ~= nil then
        _temp57 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp57 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp56, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp56)
      if _f.out ~= nil then
        _temp57 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp57 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp56, "out"))
      end

      elseif _temp56 == nil then
        _error(exception:null_error("_temp56", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp56))
      end

local _temp58 = string:new("\n")

local _temp59 = nil
        local _t = _type(_temp53)
        if _t == "table" then
          if _rawget(_temp53, "__call_thing") == nil then
            _temp59 = _temp53
          else
                  if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp59 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp59 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp59 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp59 =  _temp53(_self)
      end

          end
        elseif _t == "number" then
          _temp59 = _temp53
        elseif _t == "function" then
                if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp59 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp59 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp59 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp59 =  _temp53(_self)
      end

        elseif _temp53 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp60 = nil
      local _t = _type(_temp59)
      if _t == "table" then
                      if _type(_temp59.out) == "function" or (_type(_temp59.out) == "table" and _rawget(_temp59.out, "__call_thing")) then
        _temp60 = _temp59:out()
      elseif _temp59.out ~= nil then
        _temp60 = _temp59.out

        elseif _temp59.no_undermethod ~= nil then
          _temp60 =  _temp59:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp59, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp59)
      if _n.out ~= nil then
        _temp60 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp59, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp59)
      if _f.out ~= nil then
        _temp60 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp59, "out"))
      end

      elseif _temp59 == nil then
        _error(exception:null_error("_temp59", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp59))
      end

local _temp61 = nil
do
local _temp62 = nil
        local _t = _type(_temp51)
        if _t == "table" then
          if _rawget(_temp51, "__call_thing") == nil then
            _temp62 = _temp51
          else
                  if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp62 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp62 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp51(_self)
      end

          end
        elseif _t == "number" then
          _temp62 = _temp51
        elseif _t == "function" then
                if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp62 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp62 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp62 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp62 =  _temp51(_self)
      end

        elseif _temp51 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp62)
      if _t == "table" then
                      if _type(_temp62.var) == "function" or (_type(_temp62.var) == "table" and _rawget(_temp62.var, "__call_thing")) then
        _temp62 = _temp62:var()
      elseif _temp62.var ~= nil then
        _temp62 = _temp62.var

        elseif _temp62.no_undermethod ~= nil then
          _temp62 =  _temp62:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp62, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp62)
      if _n.var ~= nil then
        _temp62 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp62 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp62, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp62)
      if _f.var ~= nil then
        _temp62 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp62 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp62, "var"))
      end

      elseif _temp62 == nil then
        _error(exception:null_error("_temp62", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp62))
      end


local _temp63 = nil
        local _t = _type(_temp51)
        if _t == "table" then
          if _rawget(_temp51, "__call_thing") == nil then
            _temp63 = _temp51
          else
                  if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp63 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp63 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp63 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp63 =  _temp51(_self)
      end

          end
        elseif _t == "number" then
          _temp63 = _temp51
        elseif _t == "function" then
                if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp63 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp63 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp63 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp63 =  _temp51(_self)
      end

        elseif _temp51 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp63)
      if _t == "table" then
                      if _type(_temp63.var) == "function" or (_type(_temp63.var) == "table" and _rawget(_temp63.var, "__call_thing")) then
        _temp63 = _temp63:var()
      elseif _temp63.var ~= nil then
        _temp63 = _temp63.var

        elseif _temp63.no_undermethod ~= nil then
          _temp63 =  _temp63:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp63, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp63)
      if _n.var ~= nil then
        _temp63 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp63 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp63, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp63)
      if _f.var ~= nil then
        _temp63 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp63 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp63, "var"))
      end

      elseif _temp63 == nil then
        _error(exception:null_error("_temp63", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp63))
      end


local _temp64 = nil
    if _type(_temp49) == "function" or (_type(_temp49) == "table" and _rawget(_temp49, "__call_thing")) then
      _temp64 =  _temp49(_self)

    elseif _temp49 then
      _temp64 =  _temp49
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp64 =  _self:var()
      elseif _self.var ~= nil then
        _temp64 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp64 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp64 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp65 = nil
        local _t = _type(_temp53)
        if _t == "table" then
          if _rawget(_temp53, "__call_thing") == nil then
            _temp65 = _temp53
          else
                  if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp65 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp65 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp53(_self)
      end

          end
        elseif _t == "number" then
          _temp65 = _temp53
        elseif _t == "function" then
                if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp65 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp65 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp65 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp65 =  _temp53(_self)
      end

        elseif _temp53 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp65)
      if _t == "table" then
                      if _type(_temp65.var) == "function" or (_type(_temp65.var) == "table" and _rawget(_temp65.var, "__call_thing")) then
        _temp65 = _temp65:var()
      elseif _temp65.var ~= nil then
        _temp65 = _temp65.var

        elseif _temp65.no_undermethod ~= nil then
          _temp65 =  _temp65:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp65, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp65)
      if _n.var ~= nil then
        _temp65 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp65 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp65, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp65)
      if _f.var ~= nil then
        _temp65 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp65 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp65, "var"))
      end

      elseif _temp65 == nil then
        _error(exception:null_error("_temp65", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp65))
      end


local _temp66 = nil
        local _t = _type(_temp51)
        if _t == "table" then
          if _rawget(_temp51, "__call_thing") == nil then
            _temp66 = _temp51
          else
                  if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp66 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp66 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp66 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp66 =  _temp51(_self)
      end

          end
        elseif _t == "number" then
          _temp66 = _temp51
        elseif _t == "function" then
                if _temp51 == nil then
              if _type(_self._temp51) == "function" or (_type(_self._temp51) == "table" and _rawget(_self._temp51, "__call_thing")) then
        _temp66 =  _self:_temp51()
      elseif _self._temp51 ~= nil then
        _temp66 =  _self._temp51

        elseif _self.no_undermethod ~= nil then
          _temp66 =  _self:no_undermethod(string:new("_temp51"))
        else
          _error(exception:null_error("lhs", "invoke method"))
        end
      else 
        _temp66 =  _temp51(_self)
      end

        elseif _temp51 == nil then
          _error(exception:null_error("lhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lhs"))
        end
      local _t = _type(_temp66)
      if _t == "table" then
                      if _type(_temp66.var) == "function" or (_type(_temp66.var) == "table" and _rawget(_temp66.var, "__call_thing")) then
        _temp66 = _temp66:var()
      elseif _temp66.var ~= nil then
        _temp66 = _temp66.var

        elseif _temp66.no_undermethod ~= nil then
          _temp66 =  _temp66:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp66, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp66)
      if _n.var ~= nil then
        _temp66 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp66 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp66, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp66)
      if _f.var ~= nil then
        _temp66 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp66 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp66, "var"))
      end

      elseif _temp66 == nil then
        _error(exception:null_error("_temp66", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp66))
      end


_temp61 = string:new("\n    if _type(" .. _tostring(_temp62) .. ") == 'table' then\n      " .. _tostring(_temp63) .. "['" .. _tostring(_temp64) .. "'] = " .. _tostring(_temp65) .. "\n    else\n      _error('Cannot set method on ' .. " .. _tostring(_temp66) .. ")\n    end\n    ")
end
local _temp67
      local _t = _type(_temp57)
      if _t == "table" then
                      if _type(_temp57._less_less) == "function" or (_type(_temp57._less_less) == "table" and _rawget(_temp57._less_less, "__call_thing")) then
        _temp67 = _temp57:_less_less(_temp58)
      elseif _temp57._less_less ~= nil then
        _temp67 = _temp57._less_less

        elseif _temp57.no_undermethod ~= nil then
          _temp67 =  _temp57:no_undermethod(string:new("<<") , _temp58)
        else
          _error(exception:method_error(_temp57, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp57)
      if _n._less_less ~= nil then
        _temp67 = _n:_less_less(_temp58)
      elseif _n.no_undermethod ~= nil then
        _temp67 =  _n:no_undermethod(string:new("<<") , _temp58)
      else
        _error(exception:method_error(_temp57, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp57)
      if _f._less_less ~= nil then
        _temp67 = _f:_less_less(_temp58)
      elseif _f.no_undermethod ~= nil then
        _temp67 =  _f:no_undermethod(string:new("<<") , _temp58)
      else
        _error(exception:method_error(_temp57, "<<"))
      end

      elseif _temp57 == nil then
        _error(exception:null_error("_temp57", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp57))
      end

local _temp58
      local _t = _type(_temp67)
      if _t == "table" then
                      if _type(_temp67._less_less) == "function" or (_type(_temp67._less_less) == "table" and _rawget(_temp67._less_less, "__call_thing")) then
        _temp58 = _temp67:_less_less(_temp60)
      elseif _temp67._less_less ~= nil then
        _temp58 = _temp67._less_less

        elseif _temp67.no_undermethod ~= nil then
          _temp58 =  _temp67:no_undermethod(string:new("<<") , _temp60)
        else
          _error(exception:method_error(_temp67, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp67)
      if _n._less_less ~= nil then
        _temp58 = _n:_less_less(_temp60)
      elseif _n.no_undermethod ~= nil then
        _temp58 =  _n:no_undermethod(string:new("<<") , _temp60)
      else
        _error(exception:method_error(_temp67, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp67)
      if _f._less_less ~= nil then
        _temp58 = _f:_less_less(_temp60)
      elseif _f.no_undermethod ~= nil then
        _temp58 =  _f:no_undermethod(string:new("<<") , _temp60)
      else
        _error(exception:method_error(_temp67, "<<"))
      end

      elseif _temp67 == nil then
        _error(exception:null_error("_temp67", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp67))
      end

local _temp60
      local _t = _type(_temp58)
      if _t == "table" then
                      if _type(_temp58._less_less) == "function" or (_type(_temp58._less_less) == "table" and _rawget(_temp58._less_less, "__call_thing")) then
        _temp60 = _temp58:_less_less(_temp61)
      elseif _temp58._less_less ~= nil then
        _temp60 = _temp58._less_less

        elseif _temp58.no_undermethod ~= nil then
          _temp60 =  _temp58:no_undermethod(string:new("<<") , _temp61)
        else
          _error(exception:method_error(_temp58, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp58)
      if _n._less_less ~= nil then
        _temp60 = _n:_less_less(_temp61)
      elseif _n.no_undermethod ~= nil then
        _temp60 =  _n:no_undermethod(string:new("<<") , _temp61)
      else
        _error(exception:method_error(_temp58, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp58)
      if _f._less_less ~= nil then
        _temp60 = _f:_less_less(_temp61)
      elseif _f.no_undermethod ~= nil then
        _temp60 =  _f:no_undermethod(string:new("<<") , _temp61)
      else
        _error(exception:method_error(_temp58, "<<"))
      end

      elseif _temp58 == nil then
        _error(exception:null_error("_temp58", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp58))
      end

_temp55 = _temp60 
end

        local _t = _type(_temp53)
        if _t == "table" then
          if _rawget(_temp53, "__call_thing") == nil then
            _temp54 = _temp53
          else
                  if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp54 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp54 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp54 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp54 =  _temp53(_self)
      end

          end
        elseif _t == "number" then
          _temp54 = _temp53
        elseif _t == "function" then
                if _temp53 == nil then
              if _type(_self._temp53) == "function" or (_type(_self._temp53) == "table" and _rawget(_self._temp53, "__call_thing")) then
        _temp54 =  _self:_temp53()
      elseif _self._temp53 ~= nil then
        _temp54 =  _self._temp53

        elseif _self.no_undermethod ~= nil then
          _temp54 =  _self:no_undermethod(string:new("_temp53"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp54 =  _temp53(_self)
      end

        elseif _temp53 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp54)
      if _t == "table" then
                      if _type(_temp54.var) == "function" or (_type(_temp54.var) == "table" and _rawget(_temp54.var, "__call_thing")) then
        _temp54 = _temp54:var()
      elseif _temp54.var ~= nil then
        _temp54 = _temp54.var

        elseif _temp54.no_undermethod ~= nil then
          _temp54 =  _temp54:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp54, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp54)
      if _n.var ~= nil then
        _temp54 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp54 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp54, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp54)
      if _f.var ~= nil then
        _temp54 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp54 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp54, "var"))
      end

      elseif _temp54 == nil then
        _error(exception:null_error("_temp54", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp54))
      end


local _temp68 = nil
    if _type(_temp55) == "function" or (_type(_temp55) == "table" and _rawget(_temp55, "__call_thing")) then
      _temp68 =  _temp55(_self)

    elseif _temp55 then
      _temp68 =  _temp55
    else
            if _type(_self.out) == "function" or (_type(_self.out) == "table" and _rawget(_self.out, "__call_thing")) then
        _temp68 =  _self:out()
      elseif _self.out ~= nil then
        _temp68 =  _self.out

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp68 =  _self:no_undermethod(string:new("out"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp68 =  no_undermethod(_self, string:new("out"))
      else
        _error(exception:name_error("out"))
      end
    end

    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp54,_temp68)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp54,_temp68)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp54,_temp68)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp54,_temp68)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp30)
      if _t == "table" then
                      if _type(_temp30.walk) == "function" or (_type(_temp30.walk) == "table" and _rawget(_temp30.walk, "__call_thing")) then
        _dummy_ = _temp30:walk(_temp4,_temp70)
      elseif _temp30.walk ~= nil then
        _dummy_ = _temp30.walk

        elseif _temp30.no_undermethod ~= nil then
          _dummy_ =  _temp30:no_undermethod(string:new("walk") , _temp4,_temp70)
        else
          _error(exception:method_error(_temp30, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp30)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp70)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp70)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp30)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp70)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp70)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _temp30 == nil then
        _error(exception:null_error("_temp30", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp30))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp70 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp70 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp70 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp70 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp70 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp70 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp70 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp70 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp70 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp70 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_local_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp30 =  _temp5(_self)

    elseif _temp5 then
      _temp30 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp30 =  _self:c()
      elseif _self.c ~= nil then
        _temp30 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp30 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp30 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp30 = _temp30["get_undera_undervalue"]
        if _temp30 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp70)
      if _t == "table" then
                      if _type(_temp70.walk) == "function" or (_type(_temp70.walk) == "table" and _rawget(_temp70.walk, "__call_thing")) then
        _dummy_ = _temp70:walk(_temp4,_temp30)
      elseif _temp70.walk ~= nil then
        _dummy_ = _temp70.walk

        elseif _temp70.no_undermethod ~= nil then
          _dummy_ =  _temp70:no_undermethod(string:new("walk") , _temp4,_temp30)
        else
          _error(exception:method_error(_temp70, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp70)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp30)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp70, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp70)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp30)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp30)
      else
        _error(exception:method_error(_temp70, "walk"))
      end

      elseif _temp70 == nil then
        _error(exception:null_error("_temp70", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp70))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp30 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp30 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp30 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp30 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp30 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp30 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_up_value")

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp70 =  _temp5(_self)

    elseif _temp5 then
      _temp70 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp70 =  _self:c()
      elseif _self.c ~= nil then
        _temp70 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp70 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp70 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end
        _temp70 = _temp70["get_undera_undervalue"]
        if _temp70 == nil then
          _error(exception:method_error("c", "get_a_value"))
        end

      local _t = _type(_temp30)
      if _t == "table" then
                      if _type(_temp30.walk) == "function" or (_type(_temp30.walk) == "table" and _rawget(_temp30.walk, "__call_thing")) then
        _dummy_ = _temp30:walk(_temp4,_temp70)
      elseif _temp30.walk ~= nil then
        _dummy_ = _temp30.walk

        elseif _temp30.no_undermethod ~= nil then
          _dummy_ =  _temp30:no_undermethod(string:new("walk") , _temp4,_temp70)
        else
          _error(exception:method_error(_temp30, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp30)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp70)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp70)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp30)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp70)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp70)
      else
        _error(exception:method_error(_temp30, "walk"))
      end

      elseif _temp30 == nil then
        _error(exception:null_error("_temp30", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp30))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp70 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp70 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp70 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp70 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp70 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp70 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp70 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp70 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp70 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp70 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("get_value")

local _temp80 = function (_self, _temp72,_temp71)
        if _temp72 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp71 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp71 =  null(_self)

    elseif null then
      _temp71 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp71 =  _self:null()
      elseif _self.null ~= nil then
        _temp71 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp73
local _temp74 = nil
    if _type(_temp71) == "function" or (_type(_temp71) == "table" and _rawget(_temp71, "__call_thing")) then
      _temp74 =  _temp71(_self)

    elseif _temp71 then
      _temp74 =  _temp71
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp74 =  _self:var()
      elseif _self.var ~= nil then
        _temp74 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp74 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp74 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp73 =  set_underresult(_self, _temp74)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp73 =  _self:set_underresult(_temp74)
      elseif _self.set_underresult ~= nil then
        _temp73 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp73 =  _self:no_undermethod(string:new("set_result") , _temp74)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp73 =  no_undermethod(_self, string:new("set_result") , _temp74)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp75 = nil
        local _t = _type(_temp73)
        if _t == "table" then
          if _rawget(_temp73, "__call_thing") == nil then
            _temp75 = _temp73
          else
                  if _temp73 == nil then
              if _type(_self._temp73) == "function" or (_type(_self._temp73) == "table" and _rawget(_self._temp73, "__call_thing")) then
        _temp75 =  _self:_temp73()
      elseif _self._temp73 ~= nil then
        _temp75 =  _self._temp73

        elseif _self.no_undermethod ~= nil then
          _temp75 =  _self:no_undermethod(string:new("_temp73"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp75 =  _temp73(_self)
      end

          end
        elseif _t == "number" then
          _temp75 = _temp73
        elseif _t == "function" then
                if _temp73 == nil then
              if _type(_self._temp73) == "function" or (_type(_self._temp73) == "table" and _rawget(_self._temp73, "__call_thing")) then
        _temp75 =  _self:_temp73()
      elseif _self._temp73 ~= nil then
        _temp75 =  _self._temp73

        elseif _self.no_undermethod ~= nil then
          _temp75 =  _self:no_undermethod(string:new("_temp73"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp75 =  _temp73(_self)
      end

        elseif _temp73 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp76 = nil
      local _t = _type(_temp75)
      if _t == "table" then
                      if _type(_temp75.out) == "function" or (_type(_temp75.out) == "table" and _rawget(_temp75.out, "__call_thing")) then
        _temp76 = _temp75:out()
      elseif _temp75.out ~= nil then
        _temp76 = _temp75.out

        elseif _temp75.no_undermethod ~= nil then
          _temp76 =  _temp75:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp75, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp75)
      if _n.out ~= nil then
        _temp76 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp76 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp75, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp75)
      if _f.out ~= nil then
        _temp76 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp76 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp75, "out"))
      end

      elseif _temp75 == nil then
        _error(exception:null_error("_temp75", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp75))
      end

local _temp77 = nil
local _temp78 = nil
        local _t = _type(_temp72)
        if _t == "table" then
          if _rawget(_temp72, "__call_thing") == nil then
            _temp78 = _temp72
          else
                  if _temp72 == nil then
              if _type(_self._temp72) == "function" or (_type(_self._temp72) == "table" and _rawget(_self._temp72, "__call_thing")) then
        _temp78 =  _self:_temp72()
      elseif _self._temp72 ~= nil then
        _temp78 =  _self._temp72

        elseif _self.no_undermethod ~= nil then
          _temp78 =  _self:no_undermethod(string:new("_temp72"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp78 =  _temp72(_self)
      end

          end
        elseif _t == "number" then
          _temp78 = _temp72
        elseif _t == "function" then
                if _temp72 == nil then
              if _type(_self._temp72) == "function" or (_type(_self._temp72) == "table" and _rawget(_self._temp72, "__call_thing")) then
        _temp78 =  _self:_temp72()
      elseif _self._temp72 ~= nil then
        _temp78 =  _self._temp72

        elseif _self.no_undermethod ~= nil then
          _temp78 =  _self:no_undermethod(string:new("_temp72"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp78 =  _temp72(_self)
      end

        elseif _temp72 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp78)
      if _t == "table" then
                      if _type(_temp78.value) == "function" or (_type(_temp78.value) == "table" and _rawget(_temp78.value, "__call_thing")) then
        _temp78 = _temp78:value()
      elseif _temp78.value ~= nil then
        _temp78 = _temp78.value

        elseif _temp78.no_undermethod ~= nil then
          _temp78 =  _temp78:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp78, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp78)
      if _n.value ~= nil then
        _temp78 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp78 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp78, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp78)
      if _f.value ~= nil then
        _temp78 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp78 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp78, "value"))
      end

      elseif _temp78 == nil then
        _error(exception:null_error("_temp78", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp78))
      end


local _temp79 = nil
        local _t = _type(_temp73)
        if _t == "table" then
          if _rawget(_temp73, "__call_thing") == nil then
            _temp79 = _temp73
          else
                  if _temp73 == nil then
              if _type(_self._temp73) == "function" or (_type(_self._temp73) == "table" and _rawget(_self._temp73, "__call_thing")) then
        _temp79 =  _self:_temp73()
      elseif _self._temp73 ~= nil then
        _temp79 =  _self._temp73

        elseif _self.no_undermethod ~= nil then
          _temp79 =  _self:no_undermethod(string:new("_temp73"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp79 =  _temp73(_self)
      end

          end
        elseif _t == "number" then
          _temp79 = _temp73
        elseif _t == "function" then
                if _temp73 == nil then
              if _type(_self._temp73) == "function" or (_type(_self._temp73) == "table" and _rawget(_self._temp73, "__call_thing")) then
        _temp79 =  _self:_temp73()
      elseif _self._temp73 ~= nil then
        _temp79 =  _self._temp73

        elseif _self.no_undermethod ~= nil then
          _temp79 =  _self:no_undermethod(string:new("_temp73"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp79 =  _temp73(_self)
      end

        elseif _temp73 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp79)
      if _t == "table" then
                      if _type(_temp79.var) == "function" or (_type(_temp79.var) == "table" and _rawget(_temp79.var, "__call_thing")) then
        _temp79 = _temp79:var()
      elseif _temp79.var ~= nil then
        _temp79 = _temp79.var

        elseif _temp79.no_undermethod ~= nil then
          _temp79 =  _temp79:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp79, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp79)
      if _n.var ~= nil then
        _temp79 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp79 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp79, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp79)
      if _f.var ~= nil then
        _temp79 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp79 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp79, "var"))
      end

      elseif _temp79 == nil then
        _error(exception:null_error("_temp79", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp79))
      end


    if _type(get_undervalue) == "function" or (_type(get_undervalue) == "table" and _rawget(get_undervalue, "__call_thing")) then
      _temp77 =  get_undervalue(_self, _temp78,_temp79)

    elseif get_undervalue then
      _error(exception:new("Tried to invoke non-method: get_value (" .. object.__type(get_undervalue) .. ")"))
    else
            if _type(_self.get_undervalue) == "function" or (_type(_self.get_undervalue) == "table" and _rawget(_self.get_undervalue, "__call_thing")) then
        _temp77 =  _self:get_undervalue(_temp78,_temp79)
      elseif _self.get_undervalue ~= nil then
        _temp77 =  _self.get_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("get_value") , _temp78,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("get_value") , _temp78,_temp79)
      else
        _error(exception:name_error("get_value"))
      end
    end
local _temp79
      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76._less_less) == "function" or (_type(_temp76._less_less) == "table" and _rawget(_temp76._less_less, "__call_thing")) then
        _temp79 = _temp76:_less_less(_temp77)
      elseif _temp76._less_less ~= nil then
        _temp79 = _temp76._less_less

        elseif _temp76.no_undermethod ~= nil then
          _temp79 =  _temp76:no_undermethod(string:new("<<") , _temp77)
        else
          _error(exception:method_error(_temp76, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n._less_less ~= nil then
        _temp79 = _n:_less_less(_temp77)
      elseif _n.no_undermethod ~= nil then
        _temp79 =  _n:no_undermethod(string:new("<<") , _temp77)
      else
        _error(exception:method_error(_temp76, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f._less_less ~= nil then
        _temp79 = _f:_less_less(_temp77)
      elseif _f.no_undermethod ~= nil then
        _temp79 =  _f:no_undermethod(string:new("<<") , _temp77)
      else
        _error(exception:method_error(_temp76, "<<"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

_dummy_ = _temp79 
end

    if _type(_temp73) == "function" or (_type(_temp73) == "table" and _rawget(_temp73, "__call_thing")) then
      return  _temp73(_self)

    elseif _temp73 then
      return  _temp73
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp70)
      if _t == "table" then
                      if _type(_temp70.walk) == "function" or (_type(_temp70.walk) == "table" and _rawget(_temp70.walk, "__call_thing")) then
        _dummy_ = _temp70:walk(_temp4,_temp80)
      elseif _temp70.walk ~= nil then
        _dummy_ = _temp70.walk

        elseif _temp70.no_undermethod ~= nil then
          _dummy_ =  _temp70:no_undermethod(string:new("walk") , _temp4,_temp80)
        else
          _error(exception:method_error(_temp70, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp70)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp80)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp80)
      else
        _error(exception:method_error(_temp70, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp70)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp80)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp80)
      else
        _error(exception:method_error(_temp70, "walk"))
      end

      elseif _temp70 == nil then
        _error(exception:null_error("_temp70", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp70))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp80 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp80 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp80 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp80 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp80 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp80 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp80 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp80 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp80 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp80 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_local")

local _temp88 = function (_self, _temp82,_temp81)
        if _temp82 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp81 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp81 =  null(_self)

    elseif null then
      _temp81 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp81 =  _self:null()
      elseif _self.null ~= nil then
        _temp81 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp81 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp81 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp83 = nil
    if _type(_temp82) == "function" or (_type(_temp82) == "table" and _rawget(_temp82, "__call_thing")) then
      _temp83 =  _temp82(_self)

    elseif _temp82 then
      _temp83 =  _temp82
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp83 =  _self:node()
      elseif _self.node ~= nil then
        _temp83 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp84 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp84 =  null(_self)

    elseif null then
      _temp84 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp84 =  _self:null()
      elseif _self.null ~= nil then
        _temp84 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp84 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp84 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp85 = nil

        if invoke_underlocal == nil then
          _temp85 = _self["invoke_underlocal"]
          if _temp85 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp85 = invoke_underlocal
        end

local _temp86 = nil
    if _type(_temp81) == "function" or (_type(_temp81) == "table" and _rawget(_temp81, "__call_thing")) then
      _temp86 =  _temp81(_self)

    elseif _temp81 then
      _temp86 =  _temp81
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp86 =  _self:var()
      elseif _self.var ~= nil then
        _temp86 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp86 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp86 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp83,_temp84,_temp85,_temp86)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp83,_temp84,_temp85,_temp86)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp83,_temp84,_temp85,_temp86)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp83,_temp84,_temp85,_temp86)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp80)
      if _t == "table" then
                      if _type(_temp80.walk) == "function" or (_type(_temp80.walk) == "table" and _rawget(_temp80.walk, "__call_thing")) then
        _dummy_ = _temp80:walk(_temp4,_temp88)
      elseif _temp80.walk ~= nil then
        _dummy_ = _temp80.walk

        elseif _temp80.no_undermethod ~= nil then
          _dummy_ =  _temp80:no_undermethod(string:new("walk") , _temp4,_temp88)
        else
          _error(exception:method_error(_temp80, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp80)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp88)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp88)
      else
        _error(exception:method_error(_temp80, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp80)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp88)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp88)
      else
        _error(exception:method_error(_temp80, "walk"))
      end

      elseif _temp80 == nil then
        _error(exception:null_error("_temp80", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp80))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp88 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp88 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp88 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp88 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp88 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp88 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp88 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp88 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp88 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp88 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_up")

local _temp96 = function (_self, _temp90,_temp89)
        if _temp90 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp89 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp89 =  null(_self)

    elseif null then
      _temp89 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp89 =  _self:null()
      elseif _self.null ~= nil then
        _temp89 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp91 = nil
    if _type(_temp90) == "function" or (_type(_temp90) == "table" and _rawget(_temp90, "__call_thing")) then
      _temp91 =  _temp90(_self)

    elseif _temp90 then
      _temp91 =  _temp90
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp91 =  _self:node()
      elseif _self.node ~= nil then
        _temp91 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp92 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp92 =  null(_self)

    elseif null then
      _temp92 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp92 =  _self:null()
      elseif _self.null ~= nil then
        _temp92 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp92 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp92 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp93 = nil

        if invoke_underlocal == nil then
          _temp93 = _self["invoke_underlocal"]
          if _temp93 == nil then
            _error(exception:null_error("invoke_local", "access it"))
          end
        else
          _temp93 = invoke_underlocal
        end

local _temp94 = nil
    if _type(_temp89) == "function" or (_type(_temp89) == "table" and _rawget(_temp89, "__call_thing")) then
      _temp94 =  _temp89(_self)

    elseif _temp89 then
      _temp94 =  _temp89
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp94 =  _self:var()
      elseif _self.var ~= nil then
        _temp94 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp94 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp94 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp91,_temp92,_temp93,_temp94)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp91,_temp92,_temp93,_temp94)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp91,_temp92,_temp93,_temp94)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp91,_temp92,_temp93,_temp94)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp88)
      if _t == "table" then
                      if _type(_temp88.walk) == "function" or (_type(_temp88.walk) == "table" and _rawget(_temp88.walk, "__call_thing")) then
        _dummy_ = _temp88:walk(_temp4,_temp96)
      elseif _temp88.walk ~= nil then
        _dummy_ = _temp88.walk

        elseif _temp88.no_undermethod ~= nil then
          _dummy_ =  _temp88:no_undermethod(string:new("walk") , _temp4,_temp96)
        else
          _error(exception:method_error(_temp88, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp88)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp96)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp96)
      else
        _error(exception:method_error(_temp88, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp88)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp96)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp96)
      else
        _error(exception:method_error(_temp88, "walk"))
      end

      elseif _temp88 == nil then
        _error(exception:null_error("_temp88", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp88))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp96 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp96 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp96 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp96 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp96 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp96 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp96 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp96 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp96 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp96 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_self")

local _temp104 = function (_self, _temp98,_temp97)
        if _temp98 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp97 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp97 =  null(_self)

    elseif null then
      _temp97 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp97 =  _self:null()
      elseif _self.null ~= nil then
        _temp97 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp99 = nil
    if _type(_temp98) == "function" or (_type(_temp98) == "table" and _rawget(_temp98, "__call_thing")) then
      _temp99 =  _temp98(_self)

    elseif _temp98 then
      _temp99 =  _temp98
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp99 =  _self:node()
      elseif _self.node ~= nil then
        _temp99 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp100 = nil
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp100 =  null(_self)

    elseif null then
      _temp100 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp100 =  _self:null()
      elseif _self.null ~= nil then
        _temp100 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp100 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp100 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        local _temp101 = nil

        if invoke_underself == nil then
          _temp101 = _self["invoke_underself"]
          if _temp101 == nil then
            _error(exception:null_error("invoke_self", "access it"))
          end
        else
          _temp101 = invoke_underself
        end

local _temp102 = nil
    if _type(_temp97) == "function" or (_type(_temp97) == "table" and _rawget(_temp97, "__call_thing")) then
      _temp102 =  _temp97(_self)

    elseif _temp97 then
      _temp102 =  _temp97
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp102 =  _self:var()
      elseif _self.var ~= nil then
        _temp102 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp102 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp102 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp99,_temp100,_temp101,_temp102)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp99,_temp100,_temp101,_temp102)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp99,_temp100,_temp101,_temp102)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp99,_temp100,_temp101,_temp102)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp96)
      if _t == "table" then
                      if _type(_temp96.walk) == "function" or (_type(_temp96.walk) == "table" and _rawget(_temp96.walk, "__call_thing")) then
        _dummy_ = _temp96:walk(_temp4,_temp104)
      elseif _temp96.walk ~= nil then
        _dummy_ = _temp96.walk

        elseif _temp96.no_undermethod ~= nil then
          _dummy_ =  _temp96:no_undermethod(string:new("walk") , _temp4,_temp104)
        else
          _error(exception:method_error(_temp96, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp96)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp104)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp104)
      else
        _error(exception:method_error(_temp96, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp96)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp104)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp104)
      else
        _error(exception:method_error(_temp96, "walk"))
      end

      elseif _temp96 == nil then
        _error(exception:null_error("_temp96", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp96))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp104 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp104 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp104 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp104 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp104 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp104 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp104 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp104 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp104 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp104 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_index_get")

local _temp114 = function (_self, _temp106,_temp105)
        if _temp106 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp105 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp105 =  null(_self)

    elseif null then
      _temp105 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp105 =  _self:null()
      elseif _self.null ~= nil then
        _temp105 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp107
local _temp108 = nil
        local _t = _type(_temp106)
        if _t == "table" then
          if _rawget(_temp106, "__call_thing") == nil then
            _temp108 = _temp106
          else
                  if _temp106 == nil then
              if _type(_self._temp106) == "function" or (_type(_self._temp106) == "table" and _rawget(_self._temp106, "__call_thing")) then
        _temp108 =  _self:_temp106()
      elseif _self._temp106 ~= nil then
        _temp108 =  _self._temp106

        elseif _self.no_undermethod ~= nil then
          _temp108 =  _self:no_undermethod(string:new("_temp106"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp108 =  _temp106(_self)
      end

          end
        elseif _t == "number" then
          _temp108 = _temp106
        elseif _t == "function" then
                if _temp106 == nil then
              if _type(_self._temp106) == "function" or (_type(_self._temp106) == "table" and _rawget(_self._temp106, "__call_thing")) then
        _temp108 =  _self:_temp106()
      elseif _self._temp106 ~= nil then
        _temp108 =  _self._temp106

        elseif _self.no_undermethod ~= nil then
          _temp108 =  _self:no_undermethod(string:new("_temp106"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp108 =  _temp106(_self)
      end

        elseif _temp106 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp108)
      if _t == "table" then
                      if _type(_temp108.target) == "function" or (_type(_temp108.target) == "table" and _rawget(_temp108.target, "__call_thing")) then
        _temp108 = _temp108:target()
      elseif _temp108.target ~= nil then
        _temp108 = _temp108.target

        elseif _temp108.no_undermethod ~= nil then
          _temp108 =  _temp108:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp108, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp108)
      if _n.target ~= nil then
        _temp108 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp108 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp108, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp108)
      if _f.target ~= nil then
        _temp108 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp108 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp108, "target"))
      end

      elseif _temp108 == nil then
        _error(exception:null_error("_temp108", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp108))
      end


local _temp109 = nil
    if _type(_temp105) == "function" or (_type(_temp105) == "table" and _rawget(_temp105, "__call_thing")) then
      _temp109 =  _temp105(_self)

    elseif _temp105 then
      _temp109 =  _temp105
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp109 =  _self:var()
      elseif _self.var ~= nil then
        _temp109 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp109 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp109 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp107 =  process(_self, _temp108,_temp109)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp107 =  _self:process(_temp108,_temp109)
      elseif _self.process ~= nil then
        _temp107 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("process") , _temp108,_temp109)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("process") , _temp108,_temp109)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp106)
        if _t == "table" then
          if _rawget(_temp106, "__call_thing") == nil then
            _temp109 = _temp106
          else
                  if _temp106 == nil then
              if _type(_self._temp106) == "function" or (_type(_self._temp106) == "table" and _rawget(_self._temp106, "__call_thing")) then
        _temp109 =  _self:_temp106()
      elseif _self._temp106 ~= nil then
        _temp109 =  _self._temp106

        elseif _self.no_undermethod ~= nil then
          _temp109 =  _self:no_undermethod(string:new("_temp106"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp109 =  _temp106(_self)
      end

          end
        elseif _t == "number" then
          _temp109 = _temp106
        elseif _t == "function" then
                if _temp106 == nil then
              if _type(_self._temp106) == "function" or (_type(_self._temp106) == "table" and _rawget(_self._temp106, "__call_thing")) then
        _temp109 =  _self:_temp106()
      elseif _self._temp106 ~= nil then
        _temp109 =  _self._temp106

        elseif _self.no_undermethod ~= nil then
          _temp109 =  _self:no_undermethod(string:new("_temp106"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp109 =  _temp106(_self)
      end

        elseif _temp106 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp108 =  null(_self)

    elseif null then
      _temp108 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp108 =  _self:null()
      elseif _self.null ~= nil then
        _temp108 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp108 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp108 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp109) == "table" then
          _temp109["method"] = _temp108
        elseif _type(_temp109) == "number" then
          number["method"] = _temp108
        else
          _error("Cannot set method on " .. _temp109)
        end

    if _type(_temp106) == "function" or (_type(_temp106) == "table" and _rawget(_temp106, "__call_thing")) then
      _temp109 =  _temp106(_self)

    elseif _temp106 then
      _temp109 =  _temp106
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp109 =  _self:node()
      elseif _self.node ~= nil then
        _temp109 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp109 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp109 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp110 = nil
    if _type(_temp107) == "function" or (_type(_temp107) == "table" and _rawget(_temp107, "__call_thing")) then
      _temp110 =  _temp107(_self)

    elseif _temp107 then
      _temp110 =  _temp107
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp110 =  _self:target()
      elseif _self.target ~= nil then
        _temp110 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp110 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp110 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp111 = nil

        if invoke_underindex_underget == nil then
          _temp111 = _self["invoke_underindex_underget"]
          if _temp111 == nil then
            _error(exception:null_error("invoke_index_get", "access it"))
          end
        else
          _temp111 = invoke_underindex_underget
        end

local _temp112 = nil
    if _type(_temp105) == "function" or (_type(_temp105) == "table" and _rawget(_temp105, "__call_thing")) then
      _temp112 =  _temp105(_self)

    elseif _temp105 then
      _temp112 =  _temp105
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp112 =  _self:var()
      elseif _self.var ~= nil then
        _temp112 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp112 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp112 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp109,_temp110,_temp111,_temp112)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp109,_temp110,_temp111,_temp112)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp109,_temp110,_temp111,_temp112)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp109,_temp110,_temp111,_temp112)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp104)
      if _t == "table" then
                      if _type(_temp104.walk) == "function" or (_type(_temp104.walk) == "table" and _rawget(_temp104.walk, "__call_thing")) then
        _dummy_ = _temp104:walk(_temp4,_temp114)
      elseif _temp104.walk ~= nil then
        _dummy_ = _temp104.walk

        elseif _temp104.no_undermethod ~= nil then
          _dummy_ =  _temp104:no_undermethod(string:new("walk") , _temp4,_temp114)
        else
          _error(exception:method_error(_temp104, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp104)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp114)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp114)
      else
        _error(exception:method_error(_temp104, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp104)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp114)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp114)
      else
        _error(exception:method_error(_temp104, "walk"))
      end

      elseif _temp104 == nil then
        _error(exception:null_error("_temp104", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp104))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp114 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp114 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp114 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp114 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp114 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp114 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp114 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp114 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp114 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_function")

local _temp124 = function (_self, _temp116,_temp115)
        if _temp116 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp115 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp115 =  null(_self)

    elseif null then
      _temp115 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp115 =  _self:null()
      elseif _self.null ~= nil then
        _temp115 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp117
local _temp118 = nil
        local _t = _type(_temp116)
        if _t == "table" then
          if _rawget(_temp116, "__call_thing") == nil then
            _temp118 = _temp116
          else
                  if _temp116 == nil then
              if _type(_self._temp116) == "function" or (_type(_self._temp116) == "table" and _rawget(_self._temp116, "__call_thing")) then
        _temp118 =  _self:_temp116()
      elseif _self._temp116 ~= nil then
        _temp118 =  _self._temp116

        elseif _self.no_undermethod ~= nil then
          _temp118 =  _self:no_undermethod(string:new("_temp116"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp118 =  _temp116(_self)
      end

          end
        elseif _t == "number" then
          _temp118 = _temp116
        elseif _t == "function" then
                if _temp116 == nil then
              if _type(_self._temp116) == "function" or (_type(_self._temp116) == "table" and _rawget(_self._temp116, "__call_thing")) then
        _temp118 =  _self:_temp116()
      elseif _self._temp116 ~= nil then
        _temp118 =  _self._temp116

        elseif _self.no_undermethod ~= nil then
          _temp118 =  _self:no_undermethod(string:new("_temp116"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp118 =  _temp116(_self)
      end

        elseif _temp116 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp118)
      if _t == "table" then
                      if _type(_temp118.target) == "function" or (_type(_temp118.target) == "table" and _rawget(_temp118.target, "__call_thing")) then
        _temp118 = _temp118:target()
      elseif _temp118.target ~= nil then
        _temp118 = _temp118.target

        elseif _temp118.no_undermethod ~= nil then
          _temp118 =  _temp118:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp118, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp118)
      if _n.target ~= nil then
        _temp118 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp118 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp118, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp118)
      if _f.target ~= nil then
        _temp118 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp118 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp118, "target"))
      end

      elseif _temp118 == nil then
        _error(exception:null_error("_temp118", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp118))
      end


local _temp119 = nil
    if _type(_temp115) == "function" or (_type(_temp115) == "table" and _rawget(_temp115, "__call_thing")) then
      _temp119 =  _temp115(_self)

    elseif _temp115 then
      _temp119 =  _temp115
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp119 =  _self:var()
      elseif _self.var ~= nil then
        _temp119 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp117 =  process(_self, _temp118,_temp119)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp117 =  _self:process(_temp118,_temp119)
      elseif _self.process ~= nil then
        _temp117 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp117 =  _self:no_undermethod(string:new("process") , _temp118,_temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp117 =  no_undermethod(_self, string:new("process") , _temp118,_temp119)
      else
        _error(exception:name_error("process"))
      end
    end

        local _t = _type(_temp116)
        if _t == "table" then
          if _rawget(_temp116, "__call_thing") == nil then
            _temp119 = _temp116
          else
                  if _temp116 == nil then
              if _type(_self._temp116) == "function" or (_type(_self._temp116) == "table" and _rawget(_self._temp116, "__call_thing")) then
        _temp119 =  _self:_temp116()
      elseif _self._temp116 ~= nil then
        _temp119 =  _self._temp116

        elseif _self.no_undermethod ~= nil then
          _temp119 =  _self:no_undermethod(string:new("_temp116"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp119 =  _temp116(_self)
      end

          end
        elseif _t == "number" then
          _temp119 = _temp116
        elseif _t == "function" then
                if _temp116 == nil then
              if _type(_self._temp116) == "function" or (_type(_self._temp116) == "table" and _rawget(_self._temp116, "__call_thing")) then
        _temp119 =  _self:_temp116()
      elseif _self._temp116 ~= nil then
        _temp119 =  _self._temp116

        elseif _self.no_undermethod ~= nil then
          _temp119 =  _self:no_undermethod(string:new("_temp116"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp119 =  _temp116(_self)
      end

        elseif _temp116 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end

    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp118 =  null(_self)

    elseif null then
      _temp118 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp118 =  _self:null()
      elseif _self.null ~= nil then
        _temp118 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp118 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp118 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

        if _type(_temp119) == "table" then
          _temp119["method"] = _temp118
        elseif _type(_temp119) == "number" then
          number["method"] = _temp118
        else
          _error("Cannot set method on " .. _temp119)
        end

    if _type(_temp116) == "function" or (_type(_temp116) == "table" and _rawget(_temp116, "__call_thing")) then
      _temp119 =  _temp116(_self)

    elseif _temp116 then
      _temp119 =  _temp116
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp119 =  _self:node()
      elseif _self.node ~= nil then
        _temp119 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp120 = nil
    if _type(_temp117) == "function" or (_type(_temp117) == "table" and _rawget(_temp117, "__call_thing")) then
      _temp120 =  _temp117(_self)

    elseif _temp117 then
      _temp120 =  _temp117
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp120 =  _self:target()
      elseif _self.target ~= nil then
        _temp120 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp120 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp120 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp121 = nil

        if invoke_underfunction == nil then
          _temp121 = _self["invoke_underfunction"]
          if _temp121 == nil then
            _error(exception:null_error("invoke_function", "access it"))
          end
        else
          _temp121 = invoke_underfunction
        end

local _temp122 = nil
    if _type(_temp115) == "function" or (_type(_temp115) == "table" and _rawget(_temp115, "__call_thing")) then
      _temp122 =  _temp115(_self)

    elseif _temp115 then
      _temp122 =  _temp115
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp122 =  _self:var()
      elseif _self.var ~= nil then
        _temp122 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp122 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp122 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp119,_temp120,_temp121,_temp122)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp119,_temp120,_temp121,_temp122)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp119,_temp120,_temp121,_temp122)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp119,_temp120,_temp121,_temp122)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp114)
      if _t == "table" then
                      if _type(_temp114.walk) == "function" or (_type(_temp114.walk) == "table" and _rawget(_temp114.walk, "__call_thing")) then
        _dummy_ = _temp114:walk(_temp4,_temp124)
      elseif _temp114.walk ~= nil then
        _dummy_ = _temp114.walk

        elseif _temp114.no_undermethod ~= nil then
          _dummy_ =  _temp114:no_undermethod(string:new("walk") , _temp4,_temp124)
        else
          _error(exception:method_error(_temp114, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp114)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp124)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp124)
      else
        _error(exception:method_error(_temp114, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp114)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp124)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp124)
      else
        _error(exception:method_error(_temp114, "walk"))
      end

      elseif _temp114 == nil then
        _error(exception:null_error("_temp114", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp114))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp124 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp124 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp124 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp124 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp124 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp124 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp124 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp124 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp124 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("call")

local _temp133 = function (_self, _temp126,_temp125)
        if _temp126 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp125 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp125 =  null(_self)

    elseif null then
      _temp125 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp125 =  _self:null()
      elseif _self.null ~= nil then
        _temp125 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp127
local _temp128 = nil
        local _t = _type(_temp126)
        if _t == "table" then
          if _rawget(_temp126, "__call_thing") == nil then
            _temp128 = _temp126
          else
                  if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp128 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp128 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp128 =  _temp126(_self)
      end

          end
        elseif _t == "number" then
          _temp128 = _temp126
        elseif _t == "function" then
                if _temp126 == nil then
              if _type(_self._temp126) == "function" or (_type(_self._temp126) == "table" and _rawget(_self._temp126, "__call_thing")) then
        _temp128 =  _self:_temp126()
      elseif _self._temp126 ~= nil then
        _temp128 =  _self._temp126

        elseif _self.no_undermethod ~= nil then
          _temp128 =  _self:no_undermethod(string:new("_temp126"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp128 =  _temp126(_self)
      end

        elseif _temp126 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.target) == "function" or (_type(_temp128.target) == "table" and _rawget(_temp128.target, "__call_thing")) then
        _temp128 = _temp128:target()
      elseif _temp128.target ~= nil then
        _temp128 = _temp128.target

        elseif _temp128.no_undermethod ~= nil then
          _temp128 =  _temp128:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp128, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.target ~= nil then
        _temp128 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp128 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp128, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.target ~= nil then
        _temp128 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp128 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp128, "target"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp127 =  process(_self, _temp128)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp127 =  _self:process(_temp128)
      elseif _self.process ~= nil then
        _temp127 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("process") , _temp128)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("process") , _temp128)
      else
        _error(exception:name_error("process"))
      end
    end

    if _type(_temp126) == "function" or (_type(_temp126) == "table" and _rawget(_temp126, "__call_thing")) then
      _temp128 =  _temp126(_self)

    elseif _temp126 then
      _temp128 =  _temp126
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp128 =  _self:node()
      elseif _self.node ~= nil then
        _temp128 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp128 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp128 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp129 = nil
    if _type(_temp127) == "function" or (_type(_temp127) == "table" and _rawget(_temp127, "__call_thing")) then
      _temp129 =  _temp127(_self)

    elseif _temp127 then
      _temp129 =  _temp127
    else
            if _type(_self.target) == "function" or (_type(_self.target) == "table" and _rawget(_self.target, "__call_thing")) then
        _temp129 =  _self:target()
      elseif _self.target ~= nil then
        _temp129 =  _self.target

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp129 =  _self:no_undermethod(string:new("target"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp129 =  no_undermethod(_self, string:new("target"))
      else
        _error(exception:name_error("target"))
      end
    end

        local _temp130 = nil

        if invoke_undermethod == nil then
          _temp130 = _self["invoke_undermethod"]
          if _temp130 == nil then
            _error(exception:null_error("invoke_method", "access it"))
          end
        else
          _temp130 = invoke_undermethod
        end

local _temp131 = nil
    if _type(_temp125) == "function" or (_type(_temp125) == "table" and _rawget(_temp125, "__call_thing")) then
      _temp131 =  _temp125(_self)

    elseif _temp125 then
      _temp131 =  _temp125
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp131 =  _self:var()
      elseif _self.var ~= nil then
        _temp131 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(invoke) == "function" or (_type(invoke) == "table" and _rawget(invoke, "__call_thing")) then
      return  invoke(_self, _temp128,_temp129,_temp130,_temp131)

    elseif invoke then
      _error(exception:new("Tried to invoke non-method: invoke (" .. object.__type(invoke) .. ")"))
    else
            if _type(_self.invoke) == "function" or (_type(_self.invoke) == "table" and _rawget(_self.invoke, "__call_thing")) then
        return  _self:invoke(_temp128,_temp129,_temp130,_temp131)
      elseif _self.invoke ~= nil then
        return  _self.invoke

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("invoke") , _temp128,_temp129,_temp130,_temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("invoke") , _temp128,_temp129,_temp130,_temp131)
      else
        _error(exception:name_error("invoke"))
      end
    end

end

      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.walk) == "function" or (_type(_temp124.walk) == "table" and _rawget(_temp124.walk, "__call_thing")) then
        _dummy_ = _temp124:walk(_temp4,_temp133)
      elseif _temp124.walk ~= nil then
        _dummy_ = _temp124.walk

        elseif _temp124.no_undermethod ~= nil then
          _dummy_ =  _temp124:no_undermethod(string:new("walk") , _temp4,_temp133)
        else
          _error(exception:method_error(_temp124, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp133)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp133)
      else
        _error(exception:method_error(_temp124, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp133)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp133)
      else
        _error(exception:method_error(_temp124, "walk"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp133 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp133 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp133 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp133 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp133 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp133 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp133 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp133 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp133 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("number")

local _temp140 = function (_self, _temp134)
        if _temp134 == nil then
          _error(exception:argument_error("function", 1, 0))

end
local _temp135
        local _t = _type(_temp134)
        if _t == "table" then
          if _rawget(_temp134, "__call_thing") == nil then
            _temp135 = _temp134
          else
                  if _temp134 == nil then
              if _type(_self._temp134) == "function" or (_type(_self._temp134) == "table" and _rawget(_self._temp134, "__call_thing")) then
        _temp135 =  _self:_temp134()
      elseif _self._temp134 ~= nil then
        _temp135 =  _self._temp134

        elseif _self.no_undermethod ~= nil then
          _temp135 =  _self:no_undermethod(string:new("_temp134"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp135 =  _temp134(_self)
      end

          end
        elseif _t == "number" then
          _temp135 = _temp134
        elseif _t == "function" then
                if _temp134 == nil then
              if _type(_self._temp134) == "function" or (_type(_self._temp134) == "table" and _rawget(_self._temp134, "__call_thing")) then
        _temp135 =  _self:_temp134()
      elseif _self._temp134 ~= nil then
        _temp135 =  _self._temp134

        elseif _self.no_undermethod ~= nil then
          _temp135 =  _self:no_undermethod(string:new("_temp134"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp135 =  _temp134(_self)
      end

        elseif _temp134 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp135)
      if _t == "table" then
                      if _type(_temp135.value) == "function" or (_type(_temp135.value) == "table" and _rawget(_temp135.value, "__call_thing")) then
        _temp135 = _temp135:value()
      elseif _temp135.value ~= nil then
        _temp135 = _temp135.value

        elseif _temp135.no_undermethod ~= nil then
          _temp135 =  _temp135:no_undermethod(string:new("value"))
        else
          _error(exception:method_error("val", "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp135)
      if _n.value ~= nil then
        _temp135 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp135 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp135)
      if _f.value ~= nil then
        _temp135 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp135 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error("val", "value"))
      end

      elseif _temp135 == nil then
        _error(exception:null_error("val", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp135))
      end

      local _t = _type(_temp135)
      if _t == "table" then
                      if _type(_temp135.to_underf) == "function" or (_type(_temp135.to_underf) == "table" and _rawget(_temp135.to_underf, "__call_thing")) then
        _temp135 = _temp135:to_underf()
      elseif _temp135.to_underf ~= nil then
        _temp135 = _temp135.to_underf

        elseif _temp135.no_undermethod ~= nil then
          _temp135 =  _temp135:no_undermethod(string:new("to_f"))
        else
          _error(exception:method_error("val", "to_f"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp135)
      if _n.to_underf ~= nil then
        _temp135 = _n:to_underf()
      elseif _n.no_undermethod ~= nil then
        _temp135 =  _n:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp135)
      if _f.to_underf ~= nil then
        _temp135 = _f:to_underf()
      elseif _f.no_undermethod ~= nil then
        _temp135 =  _f:no_undermethod(string:new("to_f"))
      else
        _error(exception:method_error("val", "to_f"))
      end

      elseif _temp135 == nil then
        _error(exception:null_error("val", "invoke to_f on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp135))
      end


local _temp136 = nil
    if _type(_temp135) == "function" or (_type(_temp135) == "table" and _rawget(_temp135, "__call_thing")) then
      _temp136 =  _temp135(_self)

    elseif _temp135 then
      _temp136 =  _temp135
    else
            if _type(_self.val) == "function" or (_type(_self.val) == "table" and _rawget(_self.val, "__call_thing")) then
        _temp136 =  _self:val()
      elseif _self.val ~= nil then
        _temp136 =  _self.val

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp136 =  _self:no_undermethod(string:new("val"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp136 =  no_undermethod(_self, string:new("val"))
      else
        _error(exception:name_error("val"))
      end
    end

local _temp137 = string:new("")

local _temp138 = string:new("number")

local _temp139 = {}
_temp139[string:new("type")] = _temp138
_temp139 = hash:new(_temp139)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp136,_temp137,_temp139)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp136,_temp137,_temp139)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp136,_temp137,_temp139)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp136,_temp137,_temp139)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp133)
      if _t == "table" then
                      if _type(_temp133.walk) == "function" or (_type(_temp133.walk) == "table" and _rawget(_temp133.walk, "__call_thing")) then
        _dummy_ = _temp133:walk(_temp4,_temp140)
      elseif _temp133.walk ~= nil then
        _dummy_ = _temp133.walk

        elseif _temp133.no_undermethod ~= nil then
          _dummy_ =  _temp133:no_undermethod(string:new("walk") , _temp4,_temp140)
        else
          _error(exception:method_error(_temp133, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp133)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp140)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp140)
      else
        _error(exception:method_error(_temp133, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp133)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp140)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp140)
      else
        _error(exception:method_error(_temp133, "walk"))
      end

      elseif _temp133 == nil then
        _error(exception:null_error("_temp133", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp133))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp140 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp140 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp140 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp140 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp140 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp140 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp140 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp140 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp140 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("array")

local _temp184 = function (_self, _temp142,_temp141)
        if _temp142 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp141 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp141 =  null(_self)

    elseif null then
      _temp141 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp141 =  _self:null()
      elseif _self.null ~= nil then
        _temp141 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp143 = nil
        local _t = _type(_temp142)
        if _t == "table" then
          if _rawget(_temp142, "__call_thing") == nil then
            _temp143 = _temp142
          else
                  if _temp142 == nil then
              if _type(_self._temp142) == "function" or (_type(_self._temp142) == "table" and _rawget(_self._temp142, "__call_thing")) then
        _temp143 =  _self:_temp142()
      elseif _self._temp142 ~= nil then
        _temp143 =  _self._temp142

        elseif _self.no_undermethod ~= nil then
          _temp143 =  _self:no_undermethod(string:new("_temp142"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp143 =  _temp142(_self)
      end

          end
        elseif _t == "number" then
          _temp143 = _temp142
        elseif _t == "function" then
                if _temp142 == nil then
              if _type(_self._temp142) == "function" or (_type(_self._temp142) == "table" and _rawget(_self._temp142, "__call_thing")) then
        _temp143 =  _self:_temp142()
      elseif _self._temp142 ~= nil then
        _temp143 =  _self._temp142

        elseif _self.no_undermethod ~= nil then
          _temp143 =  _self:no_undermethod(string:new("_temp142"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp143 =  _temp142(_self)
      end

        elseif _temp142 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp143)
      if _t == "table" then
                      if _type(_temp143.nodes) == "function" or (_type(_temp143.nodes) == "table" and _rawget(_temp143.nodes, "__call_thing")) then
        _temp143 = _temp143:nodes()
      elseif _temp143.nodes ~= nil then
        _temp143 = _temp143.nodes

        elseif _temp143.no_undermethod ~= nil then
          _temp143 =  _temp143:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp143, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp143)
      if _n.nodes ~= nil then
        _temp143 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp143 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp143, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp143)
      if _f.nodes ~= nil then
        _temp143 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp143 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp143, "nodes"))
      end

      elseif _temp143 == nil then
        _error(exception:null_error("_temp143", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp143))
      end

      local _t = _type(_temp143)
      if _t == "table" then
                      if _type(_temp143.empty_question) == "function" or (_type(_temp143.empty_question) == "table" and _rawget(_temp143.empty_question, "__call_thing")) then
        _temp143 = _temp143:empty_question()
      elseif _temp143.empty_question ~= nil then
        _temp143 = _temp143.empty_question

        elseif _temp143.no_undermethod ~= nil then
          _temp143 =  _temp143:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp143, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp143)
      if _n.empty_question ~= nil then
        _temp143 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp143 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp143, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp143)
      if _f.empty_question ~= nil then
        _temp143 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp143 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp143, "empty?"))
      end

      elseif _temp143 == nil then
        _error(exception:null_error("_temp143", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp143))
      end



local _temp148 = _lifted_call(_temp146, {})
_temp148.arg_table["_temp141"] = _temp141


local _temp182 = _lifted_call(_temp180, {})
_temp182.arg_table["_temp141"] = _temp141
_temp182.arg_table["_temp142"] = _temp142

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp143,_temp148,_temp182)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp143,_temp148,_temp182)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp143,_temp148,_temp182)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp143,_temp148,_temp182)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp140)
      if _t == "table" then
                      if _type(_temp140.walk) == "function" or (_type(_temp140.walk) == "table" and _rawget(_temp140.walk, "__call_thing")) then
        _dummy_ = _temp140:walk(_temp4,_temp184)
      elseif _temp140.walk ~= nil then
        _dummy_ = _temp140.walk

        elseif _temp140.no_undermethod ~= nil then
          _dummy_ =  _temp140:no_undermethod(string:new("walk") , _temp4,_temp184)
        else
          _error(exception:method_error(_temp140, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp140)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp184)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp184)
      else
        _error(exception:method_error(_temp140, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp140)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp184)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp184)
      else
        _error(exception:method_error(_temp140, "walk"))
      end

      elseif _temp140 == nil then
        _error(exception:null_error("_temp140", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp140))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp184 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp184 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp184 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp184 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp184 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp184 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp184 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp184 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp184 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp184 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("hash")

local _temp226 = function (_self, _temp186,_temp185)
        if _temp186 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp185 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp185 =  null(_self)

    elseif null then
      _temp185 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp185 =  _self:null()
      elseif _self.null ~= nil then
        _temp185 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp185 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp185 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp187 = nil
        local _t = _type(_temp186)
        if _t == "table" then
          if _rawget(_temp186, "__call_thing") == nil then
            _temp187 = _temp186
          else
                  if _temp186 == nil then
              if _type(_self._temp186) == "function" or (_type(_self._temp186) == "table" and _rawget(_self._temp186, "__call_thing")) then
        _temp187 =  _self:_temp186()
      elseif _self._temp186 ~= nil then
        _temp187 =  _self._temp186

        elseif _self.no_undermethod ~= nil then
          _temp187 =  _self:no_undermethod(string:new("_temp186"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp187 =  _temp186(_self)
      end

          end
        elseif _t == "number" then
          _temp187 = _temp186
        elseif _t == "function" then
                if _temp186 == nil then
              if _type(_self._temp186) == "function" or (_type(_self._temp186) == "table" and _rawget(_self._temp186, "__call_thing")) then
        _temp187 =  _self:_temp186()
      elseif _self._temp186 ~= nil then
        _temp187 =  _self._temp186

        elseif _self.no_undermethod ~= nil then
          _temp187 =  _self:no_undermethod(string:new("_temp186"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp187 =  _temp186(_self)
      end

        elseif _temp186 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp187)
      if _t == "table" then
                      if _type(_temp187.nodes) == "function" or (_type(_temp187.nodes) == "table" and _rawget(_temp187.nodes, "__call_thing")) then
        _temp187 = _temp187:nodes()
      elseif _temp187.nodes ~= nil then
        _temp187 = _temp187.nodes

        elseif _temp187.no_undermethod ~= nil then
          _temp187 =  _temp187:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp187, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp187)
      if _n.nodes ~= nil then
        _temp187 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp187, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp187)
      if _f.nodes ~= nil then
        _temp187 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp187, "nodes"))
      end

      elseif _temp187 == nil then
        _error(exception:null_error("_temp187", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp187))
      end

      local _t = _type(_temp187)
      if _t == "table" then
                      if _type(_temp187.empty_question) == "function" or (_type(_temp187.empty_question) == "table" and _rawget(_temp187.empty_question, "__call_thing")) then
        _temp187 = _temp187:empty_question()
      elseif _temp187.empty_question ~= nil then
        _temp187 = _temp187.empty_question

        elseif _temp187.no_undermethod ~= nil then
          _temp187 =  _temp187:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp187, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp187)
      if _n.empty_question ~= nil then
        _temp187 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp187 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp187, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp187)
      if _f.empty_question ~= nil then
        _temp187 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp187 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp187, "empty?"))
      end

      elseif _temp187 == nil then
        _error(exception:null_error("_temp187", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp187))
      end



local _temp192 = _lifted_call(_temp190, {})
_temp192.arg_table["_temp185"] = _temp185


local _temp224 = _lifted_call(_temp194, {})
_temp224.arg_table["_temp185"] = _temp185
_temp224.arg_table["_temp186"] = _temp186

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp187,_temp192,_temp224)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp187,_temp192,_temp224)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp187,_temp192,_temp224)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp187,_temp192,_temp224)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp184)
      if _t == "table" then
                      if _type(_temp184.walk) == "function" or (_type(_temp184.walk) == "table" and _rawget(_temp184.walk, "__call_thing")) then
        _dummy_ = _temp184:walk(_temp4,_temp226)
      elseif _temp184.walk ~= nil then
        _dummy_ = _temp184.walk

        elseif _temp184.no_undermethod ~= nil then
          _dummy_ =  _temp184:no_undermethod(string:new("walk") , _temp4,_temp226)
        else
          _error(exception:method_error(_temp184, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp184)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp226)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp226)
      else
        _error(exception:method_error(_temp184, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp184)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp226)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp226)
      else
        _error(exception:method_error(_temp184, "walk"))
      end

      elseif _temp184 == nil then
        _error(exception:null_error("_temp184", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp184))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp226 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp226 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp226 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp226 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp226 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp226 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp226 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp226 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp226 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string")

local _temp243 = function (_self, _temp228,_temp227)
        if _temp228 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp227 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp227 =  null(_self)

    elseif null then
      _temp227 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp227 =  _self:null()
      elseif _self.null ~= nil then
        _temp227 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp227 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp227 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp229 = nil
        local _t = _type(_temp228)
        if _t == "table" then
          if _rawget(_temp228, "__call_thing") == nil then
            _temp229 = _temp228
          else
                  if _temp228 == nil then
              if _type(_self._temp228) == "function" or (_type(_self._temp228) == "table" and _rawget(_self._temp228, "__call_thing")) then
        _temp229 =  _self:_temp228()
      elseif _self._temp228 ~= nil then
        _temp229 =  _self._temp228

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp228"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp229 =  _temp228(_self)
      end

          end
        elseif _t == "number" then
          _temp229 = _temp228
        elseif _t == "function" then
                if _temp228 == nil then
              if _type(_self._temp228) == "function" or (_type(_self._temp228) == "table" and _rawget(_self._temp228, "__call_thing")) then
        _temp229 =  _self:_temp228()
      elseif _self._temp228 ~= nil then
        _temp229 =  _self._temp228

        elseif _self.no_undermethod ~= nil then
          _temp229 =  _self:no_undermethod(string:new("_temp228"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp229 =  _temp228(_self)
      end

        elseif _temp228 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp229)
      if _t == "table" then
                      if _type(_temp229.nodes) == "function" or (_type(_temp229.nodes) == "table" and _rawget(_temp229.nodes, "__call_thing")) then
        _temp229 = _temp229:nodes()
      elseif _temp229.nodes ~= nil then
        _temp229 = _temp229.nodes

        elseif _temp229.no_undermethod ~= nil then
          _temp229 =  _temp229:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp229, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp229)
      if _n.nodes ~= nil then
        _temp229 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp229 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp229, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp229)
      if _f.nodes ~= nil then
        _temp229 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp229 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp229, "nodes"))
      end

      elseif _temp229 == nil then
        _error(exception:null_error("_temp229", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp229))
      end

      local _t = _type(_temp229)
      if _t == "table" then
                      if _type(_temp229.empty_question) == "function" or (_type(_temp229.empty_question) == "table" and _rawget(_temp229.empty_question, "__call_thing")) then
        _temp229 = _temp229:empty_question()
      elseif _temp229.empty_question ~= nil then
        _temp229 = _temp229.empty_question

        elseif _temp229.no_undermethod ~= nil then
          _temp229 =  _temp229:no_undermethod(string:new("empty?"))
        else
          _error(exception:method_error(_temp229, "empty?"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp229)
      if _n.empty_question ~= nil then
        _temp229 = _n:empty_question()
      elseif _n.no_undermethod ~= nil then
        _temp229 =  _n:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp229, "empty?"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp229)
      if _f.empty_question ~= nil then
        _temp229 = _f:empty_question()
      elseif _f.no_undermethod ~= nil then
        _temp229 =  _f:no_undermethod(string:new("empty?"))
      else
        _error(exception:method_error(_temp229, "empty?"))
      end

      elseif _temp229 == nil then
        _error(exception:null_error("_temp229", "invoke empty? on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp229))
      end



local _temp234 = _lifted_call(_temp232, {})
_temp234.arg_table["_temp227"] = _temp227


local _temp241 = _lifted_call(_temp239, {})
_temp241.arg_table["_temp227"] = _temp227
_temp241.arg_table["_temp228"] = _temp228

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      return  true_question(_self, _temp229,_temp234,_temp241)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        return  _self:true_question(_temp229,_temp234,_temp241)
      elseif _self.true_question ~= nil then
        return  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("true?") , _temp229,_temp234,_temp241)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("true?") , _temp229,_temp234,_temp241)
      else
        _error(exception:name_error("true?"))
      end
    end

end

      local _t = _type(_temp226)
      if _t == "table" then
                      if _type(_temp226.walk) == "function" or (_type(_temp226.walk) == "table" and _rawget(_temp226.walk, "__call_thing")) then
        _dummy_ = _temp226:walk(_temp4,_temp243)
      elseif _temp226.walk ~= nil then
        _dummy_ = _temp226.walk

        elseif _temp226.no_undermethod ~= nil then
          _dummy_ =  _temp226:no_undermethod(string:new("walk") , _temp4,_temp243)
        else
          _error(exception:method_error(_temp226, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp226)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp243)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp243)
      else
        _error(exception:method_error(_temp226, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp226)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp243)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp243)
      else
        _error(exception:method_error(_temp226, "walk"))
      end

      elseif _temp226 == nil then
        _error(exception:null_error("_temp226", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp226))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp243 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp243 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp243 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp243 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp243 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp243 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp243 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp243 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp243 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp243 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_string")

local _temp253 = function (_self, _temp245,_temp244)
        if _temp245 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp244 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp244 =  null(_self)

    elseif null then
      _temp244 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp244 =  _self:null()
      elseif _self.null ~= nil then
        _temp244 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp244 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp244 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp246 = nil
    if _type(_temp244) == "function" or (_type(_temp244) == "table" and _rawget(_temp244, "__call_thing")) then
      _temp246 =  _temp244(_self)

    elseif _temp244 then
      _temp246 =  _temp244
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp246 =  _self:var()
      elseif _self.var ~= nil then
        _temp246 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp246 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp246 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp247 = nil
do
local _temp248 = nil
        local _t = _type(_temp245)
        if _t == "table" then
          if _rawget(_temp245, "__call_thing") == nil then
            _temp248 = _temp245
          else
                  if _temp245 == nil then
              if _type(_self._temp245) == "function" or (_type(_self._temp245) == "table" and _rawget(_self._temp245, "__call_thing")) then
        _temp248 =  _self:_temp245()
      elseif _self._temp245 ~= nil then
        _temp248 =  _self._temp245

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp245"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp248 =  _temp245(_self)
      end

          end
        elseif _t == "number" then
          _temp248 = _temp245
        elseif _t == "function" then
                if _temp245 == nil then
              if _type(_self._temp245) == "function" or (_type(_self._temp245) == "table" and _rawget(_self._temp245, "__call_thing")) then
        _temp248 =  _self:_temp245()
      elseif _self._temp245 ~= nil then
        _temp248 =  _self._temp245

        elseif _self.no_undermethod ~= nil then
          _temp248 =  _self:no_undermethod(string:new("_temp245"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp248 =  _temp245(_self)
      end

        elseif _temp245 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp248)
      if _t == "table" then
                      if _type(_temp248.value) == "function" or (_type(_temp248.value) == "table" and _rawget(_temp248.value, "__call_thing")) then
        _temp248 = _temp248:value()
      elseif _temp248.value ~= nil then
        _temp248 = _temp248.value

        elseif _temp248.no_undermethod ~= nil then
          _temp248 =  _temp248:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp248, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp248)
      if _n.value ~= nil then
        _temp248 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp248 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp248, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp248)
      if _f.value ~= nil then
        _temp248 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp248 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp248, "value"))
      end

      elseif _temp248 == nil then
        _error(exception:null_error("_temp248", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp248))
      end

local _temp249 = regex:new("\\n")

local _temp250 = string:new("\\n")

      local _t = _type(_temp248)
      if _t == "table" then
                      if _type(_temp248.sub) == "function" or (_type(_temp248.sub) == "table" and _rawget(_temp248.sub, "__call_thing")) then
        _temp248 = _temp248:sub(_temp249,_temp250)
      elseif _temp248.sub ~= nil then
        _temp248 = _temp248.sub

        elseif _temp248.no_undermethod ~= nil then
          _temp248 =  _temp248:no_undermethod(string:new("sub") , _temp249,_temp250)
        else
          _error(exception:method_error(_temp248, "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp248)
      if _n.sub ~= nil then
        _temp248 = _n:sub(_temp249,_temp250)
      elseif _n.no_undermethod ~= nil then
        _temp248 =  _n:no_undermethod(string:new("sub") , _temp249,_temp250)
      else
        _error(exception:method_error(_temp248, "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp248)
      if _f.sub ~= nil then
        _temp248 = _f:sub(_temp249,_temp250)
      elseif _f.no_undermethod ~= nil then
        _temp248 =  _f:no_undermethod(string:new("sub") , _temp249,_temp250)
      else
        _error(exception:method_error(_temp248, "sub"))
      end

      elseif _temp248 == nil then
        _error(exception:null_error("_temp248", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp248))
      end


_temp247 = string:new("string:new('" .. _tostring(_temp248) .. "')")
end

local _temp251 = string:new("string")

local _temp252 = {}
_temp252[string:new("type")] = _temp251
_temp252 = hash:new(_temp252)
    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp246,_temp247,_temp252)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp246,_temp247,_temp252)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp246,_temp247,_temp252)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp246,_temp247,_temp252)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp243)
      if _t == "table" then
                      if _type(_temp243.walk) == "function" or (_type(_temp243.walk) == "table" and _rawget(_temp243.walk, "__call_thing")) then
        _dummy_ = _temp243:walk(_temp4,_temp253)
      elseif _temp243.walk ~= nil then
        _dummy_ = _temp243.walk

        elseif _temp243.no_undermethod ~= nil then
          _dummy_ =  _temp243:no_undermethod(string:new("walk") , _temp4,_temp253)
        else
          _error(exception:method_error(_temp243, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp243)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp253)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp253)
      else
        _error(exception:method_error(_temp243, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp243)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp253)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp253)
      else
        _error(exception:method_error(_temp243, "walk"))
      end

      elseif _temp243 == nil then
        _error(exception:null_error("_temp243", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp243))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp253 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp253 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp253 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp253 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp253 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp253 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp253 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp253 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp253 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp253 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("function")

_temp260 = function (_self, _temp255,_temp254)
        if _temp255 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp254 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp254 =  null(_self)

    elseif null then
      _temp254 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp254 =  _self:null()
      elseif _self.null ~= nil then
        _temp254 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp254 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp254 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp256
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp256 =  my(_self)

    elseif my then
      _temp256 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp256 =  _self:my()
      elseif _self.my ~= nil then
        _temp256 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp256 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp256 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp257 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp257 =  _self:my()
      elseif _self.my ~= nil then
        _temp257 =  _self.my

        elseif my ~= nil then
          _temp257 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.env) == "function" or (_type(_temp257.env) == "table" and _rawget(_temp257.env, "__call_thing")) then
        _temp257 = _temp257:env()
      elseif _temp257.env ~= nil then
        _temp257 = _temp257.env

        elseif _temp257.no_undermethod ~= nil then
          _temp257 =  _temp257:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp257, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.env ~= nil then
        _temp257 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp257 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp257, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.env ~= nil then
        _temp257 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp257 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp257, "env"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

      local _t = _type(_temp257)
      if _t == "table" then
                      if _type(_temp257.new_underscope) == "function" or (_type(_temp257.new_underscope) == "table" and _rawget(_temp257.new_underscope, "__call_thing")) then
        _dummy_ = _temp257:new_underscope()
      elseif _temp257.new_underscope ~= nil then
        _dummy_ = _temp257.new_underscope

        elseif _temp257.no_undermethod ~= nil then
          _dummy_ =  _temp257:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp257, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp257)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp257, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp257)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp257, "new_scope"))
      end

      elseif _temp257 == nil then
        _error(exception:null_error("_temp257", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp257))
      end

local _temp258
    if _type(_temp255) == "function" or (_type(_temp255) == "table" and _rawget(_temp255, "__call_thing")) then
      _temp257 =  _temp255(_self)

    elseif _temp255 then
      _temp257 =  _temp255
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp257 =  _self:node()
      elseif _self.node ~= nil then
        _temp257 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp257 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp257 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp258 =  do_underargs(_self, _temp257)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp258 =  _self:do_underargs(_temp257)
      elseif _self.do_underargs ~= nil then
        _temp258 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp258 =  _self:no_undermethod(string:new("do_args") , _temp257)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp258 =  no_undermethod(_self, string:new("do_args") , _temp257)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp259
    if _type(_temp254) == "function" or (_type(_temp254) == "table" and _rawget(_temp254, "__call_thing")) then
      _temp257 =  _temp254(_self)

    elseif _temp254 then
      _temp257 =  _temp254
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp257 =  _self:var()
      elseif _self.var ~= nil then
        _temp257 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp257 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp257 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

local _temp260 = nil
do
local _temp261
do
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp261 =  _temp258(_self)

    elseif _temp258 then
      _temp261 =  _temp258
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp261 =  _self:args()
      elseif _self.args ~= nil then
        _temp261 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp261 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp261 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp262 = string:new("arg_list")


_temp261 = _temp261:get(_temp262)
end

_temp260 = string:new("function(" .. _tostring(_temp261) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp259 =  set_underresult(_self, _temp257,_temp260)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp259 =  _self:set_underresult(_temp257,_temp260)
      elseif _self.set_underresult ~= nil then
        _temp259 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp259 =  _self:no_undermethod(string:new("set_result") , _temp257,_temp260)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp259 =  no_undermethod(_self, string:new("set_result") , _temp257,_temp260)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp263 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp263 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp263 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp263 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp263 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp263 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp263 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp263 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp263 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp263 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp263 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp264 = nil
      local _t = _type(_temp263)
      if _t == "table" then
                      if _type(_temp263.out) == "function" or (_type(_temp263.out) == "table" and _rawget(_temp263.out, "__call_thing")) then
        _temp264 = _temp263:out()
      elseif _temp263.out ~= nil then
        _temp264 = _temp263.out

        elseif _temp263.no_undermethod ~= nil then
          _temp264 =  _temp263:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp263, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp263)
      if _n.out ~= nil then
        _temp264 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp264 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp263, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp263)
      if _f.out ~= nil then
        _temp264 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp264 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp263, "out"))
      end

      elseif _temp263 == nil then
        _error(exception:null_error("_temp263", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp263))
      end

local _temp265
do
    if _type(_temp258) == "function" or (_type(_temp258) == "table" and _rawget(_temp258, "__call_thing")) then
      _temp265 =  _temp258(_self)

    elseif _temp258 then
      _temp265 =  _temp258
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp265 =  _self:args()
      elseif _self.args ~= nil then
        _temp265 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp265 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp265 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp266 = string:new("out")


_temp265 = _temp265:get(_temp266)
end
local _temp267
      local _t = _type(_temp264)
      if _t == "table" then
                      if _type(_temp264._less_less) == "function" or (_type(_temp264._less_less) == "table" and _rawget(_temp264._less_less, "__call_thing")) then
        _temp267 = _temp264:_less_less(_temp265)
      elseif _temp264._less_less ~= nil then
        _temp267 = _temp264._less_less

        elseif _temp264.no_undermethod ~= nil then
          _temp267 =  _temp264:no_undermethod(string:new("<<") , _temp265)
        else
          _error(exception:method_error(_temp264, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp264)
      if _n._less_less ~= nil then
        _temp267 = _n:_less_less(_temp265)
      elseif _n.no_undermethod ~= nil then
        _temp267 =  _n:no_undermethod(string:new("<<") , _temp265)
      else
        _error(exception:method_error(_temp264, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp264)
      if _f._less_less ~= nil then
        _temp267 = _f:_less_less(_temp265)
      elseif _f.no_undermethod ~= nil then
        _temp267 =  _f:no_undermethod(string:new("<<") , _temp265)
      else
        _error(exception:method_error(_temp264, "<<"))
      end

      elseif _temp264 == nil then
        _error(exception:null_error("_temp264", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp264))
      end

_dummy_ = _temp267 
end

local _temp268
        local _t = _type(_temp255)
        if _t == "table" then
          if _rawget(_temp255, "__call_thing") == nil then
            _temp268 = _temp255
          else
                  if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp268 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp268 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp268 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp268 =  _temp255(_self)
      end

          end
        elseif _t == "number" then
          _temp268 = _temp255
        elseif _t == "function" then
                if _temp255 == nil then
              if _type(_self._temp255) == "function" or (_type(_self._temp255) == "table" and _rawget(_self._temp255, "__call_thing")) then
        _temp268 =  _self:_temp255()
      elseif _self._temp255 ~= nil then
        _temp268 =  _self._temp255

        elseif _self.no_undermethod ~= nil then
          _temp268 =  _self:no_undermethod(string:new("_temp255"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp268 =  _temp255(_self)
      end

        elseif _temp255 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp268)
      if _t == "table" then
                      if _type(_temp268.body) == "function" or (_type(_temp268.body) == "table" and _rawget(_temp268.body, "__call_thing")) then
        _temp268 = _temp268:body()
      elseif _temp268.body ~= nil then
        _temp268 = _temp268.body

        elseif _temp268.no_undermethod ~= nil then
          _temp268 =  _temp268:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp268)
      if _n.body ~= nil then
        _temp268 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp268 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp268)
      if _f.body ~= nil then
        _temp268 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp268 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp268 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp268))
      end

      local _t = _type(_temp268)
      if _t == "table" then
                      if _type(_temp268.copy) == "function" or (_type(_temp268.copy) == "table" and _rawget(_temp268.copy, "__call_thing")) then
        _temp268 = _temp268:copy()
      elseif _temp268.copy ~= nil then
        _temp268 = _temp268.copy

        elseif _temp268.no_undermethod ~= nil then
          _temp268 =  _temp268:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp268)
      if _n.copy ~= nil then
        _temp268 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp268 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp268)
      if _f.copy ~= nil then
        _temp268 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp268 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp268 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp268))
      end


local _temp269
        local _t = _type(_temp268)
        if _t == "table" then
          if _rawget(_temp268, "__call_thing") == nil then
            _temp269 = _temp268
          else
                  if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp269 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp269 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp269 =  _temp268(_self)
      end

          end
        elseif _t == "number" then
          _temp269 = _temp268
        elseif _t == "function" then
                if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp269 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp269 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp269 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp269 =  _temp268(_self)
      end

        elseif _temp268 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp269)
      if _t == "table" then
                      if _type(_temp269.pop) == "function" or (_type(_temp269.pop) == "table" and _rawget(_temp269.pop, "__call_thing")) then
        _temp269 = _temp269:pop()
      elseif _temp269.pop ~= nil then
        _temp269 = _temp269.pop

        elseif _temp269.no_undermethod ~= nil then
          _temp269 =  _temp269:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp269)
      if _n.pop ~= nil then
        _temp269 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp269 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp269)
      if _f.pop ~= nil then
        _temp269 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp269 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp269 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp269))
      end


local _temp270
        local _t = _type(_temp268)
        if _t == "table" then
          if _rawget(_temp268, "__call_thing") == nil then
            _temp270 = _temp268
          else
                  if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp270 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp270 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp270 =  _temp268(_self)
      end

          end
        elseif _t == "number" then
          _temp270 = _temp268
        elseif _t == "function" then
                if _temp268 == nil then
              if _type(_self._temp268) == "function" or (_type(_self._temp268) == "table" and _rawget(_self._temp268, "__call_thing")) then
        _temp270 =  _self:_temp268()
      elseif _self._temp268 ~= nil then
        _temp270 =  _self._temp268

        elseif _self.no_undermethod ~= nil then
          _temp270 =  _self:no_undermethod(string:new("_temp268"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp270 =  _temp268(_self)
      end

        elseif _temp268 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp273 = _lifted_call(_temp274, {})
_temp273.arg_table["_temp256"] = _temp256

      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.map) == "function" or (_type(_temp270.map) == "table" and _rawget(_temp270.map, "__call_thing")) then
        _temp270 = _temp270:map(_temp273)
      elseif _temp270.map ~= nil then
        _temp270 = _temp270.map

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("map") , _temp273)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.map ~= nil then
        _temp270 = _n:map(_temp273)
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("map") , _temp273)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.map ~= nil then
        _temp270 = _f:map(_temp273)
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("map") , _temp273)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end

_temp273 = string:new("\n")

      local _t = _type(_temp270)
      if _t == "table" then
                      if _type(_temp270.join) == "function" or (_type(_temp270.join) == "table" and _rawget(_temp270.join, "__call_thing")) then
        _temp270 = _temp270:join(_temp273)
      elseif _temp270.join ~= nil then
        _temp270 = _temp270.join

        elseif _temp270.no_undermethod ~= nil then
          _temp270 =  _temp270:no_undermethod(string:new("join") , _temp273)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp270)
      if _n.join ~= nil then
        _temp270 = _n:join(_temp273)
      elseif _n.no_undermethod ~= nil then
        _temp270 =  _n:no_undermethod(string:new("join") , _temp273)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp270)
      if _f.join ~= nil then
        _temp270 = _f:join(_temp273)
      elseif _f.no_undermethod ~= nil then
        _temp270 =  _f:no_undermethod(string:new("join") , _temp273)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp270 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp270))
      end


do
local _temp275 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp275 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp275 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp275 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp275 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp275 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp275 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp275 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp275 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp275 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp276 = nil
      local _t = _type(_temp275)
      if _t == "table" then
                      if _type(_temp275.out) == "function" or (_type(_temp275.out) == "table" and _rawget(_temp275.out, "__call_thing")) then
        _temp276 = _temp275:out()
      elseif _temp275.out ~= nil then
        _temp276 = _temp275.out

        elseif _temp275.no_undermethod ~= nil then
          _temp276 =  _temp275:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp275, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp275)
      if _n.out ~= nil then
        _temp276 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp276 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp275, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp275)
      if _f.out ~= nil then
        _temp276 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp276 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp275, "out"))
      end

      elseif _temp275 == nil then
        _error(exception:null_error("_temp275", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp275))
      end

local _temp277 = nil
    if _type(_temp270) == "function" or (_type(_temp270) == "table" and _rawget(_temp270, "__call_thing")) then
      _temp277 =  _temp270(_self)

    elseif _temp270 then
      _temp277 =  _temp270
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp277 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp277 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp277 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp277 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp278
      local _t = _type(_temp276)
      if _t == "table" then
                      if _type(_temp276._less_less) == "function" or (_type(_temp276._less_less) == "table" and _rawget(_temp276._less_less, "__call_thing")) then
        _temp278 = _temp276:_less_less(_temp277)
      elseif _temp276._less_less ~= nil then
        _temp278 = _temp276._less_less

        elseif _temp276.no_undermethod ~= nil then
          _temp278 =  _temp276:no_undermethod(string:new("<<") , _temp277)
        else
          _error(exception:method_error(_temp276, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp276)
      if _n._less_less ~= nil then
        _temp278 = _n:_less_less(_temp277)
      elseif _n.no_undermethod ~= nil then
        _temp278 =  _n:no_undermethod(string:new("<<") , _temp277)
      else
        _error(exception:method_error(_temp276, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp276)
      if _f._less_less ~= nil then
        _temp278 = _f:_less_less(_temp277)
      elseif _f.no_undermethod ~= nil then
        _temp278 =  _f:no_undermethod(string:new("<<") , _temp277)
      else
        _error(exception:method_error(_temp276, "<<"))
      end

      elseif _temp276 == nil then
        _error(exception:null_error("_temp276", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp276))
      end

_dummy_ = _temp278 
end

    if _type(_temp269) == "function" or (_type(_temp269) == "table" and _rawget(_temp269, "__call_thing")) then
      _temp273 =  _temp269(_self)

    elseif _temp269 then
      _temp273 =  _temp269
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp273 =  _self:last()
      elseif _self.last ~= nil then
        _temp273 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp273 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp273 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp290 = _lifted_call(_temp289, {})
_temp290.arg_table["_temp269"] = _temp269
_temp290.arg_table["_temp259"] = _temp259


local _temp300 = _lifted_call(_temp299, {})
_temp300.arg_table["_temp268"] = _temp268
_temp300.arg_table["_temp259"] = _temp259

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp273,_temp290,_temp300)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp273,_temp290,_temp300)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp273,_temp290,_temp300)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp273,_temp290,_temp300)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp300 =  _self:my()
      elseif _self.my ~= nil then
        _temp300 =  _self.my

        elseif my ~= nil then
          _temp300 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp300)
      if _t == "table" then
                      if _type(_temp300.env) == "function" or (_type(_temp300.env) == "table" and _rawget(_temp300.env, "__call_thing")) then
        _temp300 = _temp300:env()
      elseif _temp300.env ~= nil then
        _temp300 = _temp300.env

        elseif _temp300.no_undermethod ~= nil then
          _temp300 =  _temp300:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp300, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp300)
      if _n.env ~= nil then
        _temp300 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp300 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp300, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp300)
      if _f.env ~= nil then
        _temp300 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp300 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp300, "env"))
      end

      elseif _temp300 == nil then
        _error(exception:null_error("_temp300", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp300))
      end

      local _t = _type(_temp300)
      if _t == "table" then
                      if _type(_temp300.pop_underscope) == "function" or (_type(_temp300.pop_underscope) == "table" and _rawget(_temp300.pop_underscope, "__call_thing")) then
        _dummy_ = _temp300:pop_underscope()
      elseif _temp300.pop_underscope ~= nil then
        _dummy_ = _temp300.pop_underscope

        elseif _temp300.no_undermethod ~= nil then
          _dummy_ =  _temp300:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp300, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp300)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp300, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp300)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp300, "pop_scope"))
      end

      elseif _temp300 == nil then
        _error(exception:null_error("_temp300", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp300))
      end

do
local _temp301 = nil
        local _t = _type(_temp259)
        if _t == "table" then
          if _rawget(_temp259, "__call_thing") == nil then
            _temp301 = _temp259
          else
                  if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp301 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp301 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp301 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp301 =  _temp259(_self)
      end

          end
        elseif _t == "number" then
          _temp301 = _temp259
        elseif _t == "function" then
                if _temp259 == nil then
              if _type(_self._temp259) == "function" or (_type(_self._temp259) == "table" and _rawget(_self._temp259, "__call_thing")) then
        _temp301 =  _self:_temp259()
      elseif _self._temp259 ~= nil then
        _temp301 =  _self._temp259

        elseif _self.no_undermethod ~= nil then
          _temp301 =  _self:no_undermethod(string:new("_temp259"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp301 =  _temp259(_self)
      end

        elseif _temp259 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp302 = nil
      local _t = _type(_temp301)
      if _t == "table" then
                      if _type(_temp301.out) == "function" or (_type(_temp301.out) == "table" and _rawget(_temp301.out, "__call_thing")) then
        _temp302 = _temp301:out()
      elseif _temp301.out ~= nil then
        _temp302 = _temp301.out

        elseif _temp301.no_undermethod ~= nil then
          _temp302 =  _temp301:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp301, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp301)
      if _n.out ~= nil then
        _temp302 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp302 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp301, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp301)
      if _f.out ~= nil then
        _temp302 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp302 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp301, "out"))
      end

      elseif _temp301 == nil then
        _error(exception:null_error("_temp301", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp301))
      end

local _temp303 = string:new("\nend\n")
local _temp304
      local _t = _type(_temp302)
      if _t == "table" then
                      if _type(_temp302._less_less) == "function" or (_type(_temp302._less_less) == "table" and _rawget(_temp302._less_less, "__call_thing")) then
        _temp304 = _temp302:_less_less(_temp303)
      elseif _temp302._less_less ~= nil then
        _temp304 = _temp302._less_less

        elseif _temp302.no_undermethod ~= nil then
          _temp304 =  _temp302:no_undermethod(string:new("<<") , _temp303)
        else
          _error(exception:method_error(_temp302, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp302)
      if _n._less_less ~= nil then
        _temp304 = _n:_less_less(_temp303)
      elseif _n.no_undermethod ~= nil then
        _temp304 =  _n:no_undermethod(string:new("<<") , _temp303)
      else
        _error(exception:method_error(_temp302, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp302)
      if _f._less_less ~= nil then
        _temp304 = _f:_less_less(_temp303)
      elseif _f.no_undermethod ~= nil then
        _temp304 =  _f:no_undermethod(string:new("<<") , _temp303)
      else
        _error(exception:method_error(_temp302, "<<"))
      end

      elseif _temp302 == nil then
        _error(exception:null_error("_temp302", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp302))
      end

_dummy_ = _temp304 
end

do
local _temp290
    if _type(_temp259) == "function" or (_type(_temp259) == "table" and _rawget(_temp259, "__call_thing")) then
      _temp290 =  _temp259(_self)

    elseif _temp259 then
      _temp290 =  _temp259
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp290 =  _self:res()
      elseif _self.res ~= nil then
        _temp290 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp290 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp290 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp305 = string:new("function")

local _temp306 = string:new("type")

_temp290:set(_temp306, _temp305)
end

    if _type(_temp259) == "function" or (_type(_temp259) == "table" and _rawget(_temp259, "__call_thing")) then
      return  _temp259(_self)

    elseif _temp259 then
      return  _temp259
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp253)
      if _t == "table" then
                      if _type(_temp253.walk) == "function" or (_type(_temp253.walk) == "table" and _rawget(_temp253.walk, "__call_thing")) then
        _dummy_ = _temp253:walk(_temp4,_temp260)
      elseif _temp253.walk ~= nil then
        _dummy_ = _temp253.walk

        elseif _temp253.no_undermethod ~= nil then
          _dummy_ =  _temp253:no_undermethod(string:new("walk") , _temp4,_temp260)
        else
          _error(exception:method_error(_temp253, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp253)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp260)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp260)
      else
        _error(exception:method_error(_temp253, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp253)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp260)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp260)
      else
        _error(exception:method_error(_temp253, "walk"))
      end

      elseif _temp253 == nil then
        _error(exception:null_error("_temp253", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp253))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp260 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp260 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp260 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp260 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp260 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp260 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp260 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp260 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp260 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("simple_liftable_function")

local _temp320 = function (_self, _temp308,_temp307)
        if _temp308 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp307 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp307 =  null(_self)

    elseif null then
      _temp307 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp307 =  _self:null()
      elseif _self.null ~= nil then
        _temp307 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp307 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp307 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp309
do
local _temp310 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp310 =  _self:my()
      elseif _self.my ~= nil then
        _temp310 =  _self.my

        elseif my ~= nil then
          _temp310 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310.liftable_underfunctions) == "function" or (_type(_temp310.liftable_underfunctions) == "table" and _rawget(_temp310.liftable_underfunctions, "__call_thing")) then
        _temp310 = _temp310:liftable_underfunctions()
      elseif _temp310.liftable_underfunctions ~= nil then
        _temp310 = _temp310.liftable_underfunctions

        elseif _temp310.no_undermethod ~= nil then
          _temp310 =  _temp310:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp310, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n.liftable_underfunctions ~= nil then
        _temp310 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp310, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f.liftable_underfunctions ~= nil then
        _temp310 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp310, "liftable_functions"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end

      local _t = _type(_temp310)
      if _t == "table" then
                      if _type(_temp310.length) == "function" or (_type(_temp310.length) == "table" and _rawget(_temp310.length, "__call_thing")) then
        _temp310 = _temp310:length()
      elseif _temp310.length ~= nil then
        _temp310 = _temp310.length

        elseif _temp310.no_undermethod ~= nil then
          _temp310 =  _temp310:no_undermethod(string:new("length"))
        else
          _error(exception:method_error(_temp310, "length"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp310)
      if _n.length ~= nil then
        _temp310 = _n:length()
      elseif _n.no_undermethod ~= nil then
        _temp310 =  _n:no_undermethod(string:new("length"))
      else
        _error(exception:method_error(_temp310, "length"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp310)
      if _f.length ~= nil then
        _temp310 = _f:length()
      elseif _f.no_undermethod ~= nil then
        _temp310 =  _f:no_undermethod(string:new("length"))
      else
        _error(exception:method_error(_temp310, "length"))
      end

      elseif _temp310 == nil then
        _error(exception:null_error("_temp310", "invoke length on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp310))
      end


_temp309 = string:new("_lifted" .. _tostring(_temp310) .. "")
end

local _temp311
local _temp312 = nil
    if _type(_temp308) == "function" or (_type(_temp308) == "table" and _rawget(_temp308, "__call_thing")) then
      _temp312 =  _temp308(_self)

    elseif _temp308 then
      _temp312 =  _temp308
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp312 =  _self:node()
      elseif _self.node ~= nil then
        _temp312 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp312 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp312 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

local _temp313 = nil
_temp313 =  _temp309

    if _type(proc_underfunction) == "function" or (_type(proc_underfunction) == "table" and _rawget(proc_underfunction, "__call_thing")) then
      _temp311 =  proc_underfunction(_self, _temp312,_temp313)

    elseif proc_underfunction then
      _error(exception:new("Tried to invoke non-method: proc_function (" .. object.__type(proc_underfunction) .. ")"))
    else
            if _type(_self.proc_underfunction) == "function" or (_type(_self.proc_underfunction) == "table" and _rawget(_self.proc_underfunction, "__call_thing")) then
        _temp311 =  _self:proc_underfunction(_temp312,_temp313)
      elseif _self.proc_underfunction ~= nil then
        _temp311 =  _self.proc_underfunction

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp311 =  _self:no_undermethod(string:new("proc_function") , _temp312,_temp313)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp311 =  no_undermethod(_self, string:new("proc_function") , _temp312,_temp313)
      else
        _error(exception:name_error("proc_function"))
      end
    end

do
local _temp314 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp314 =  _self:my()
      elseif _self.my ~= nil then
        _temp314 =  _self.my

        elseif my ~= nil then
          _temp314 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp315 = nil
      local _t = _type(_temp314)
      if _t == "table" then
                      if _type(_temp314.liftable_underfunctions) == "function" or (_type(_temp314.liftable_underfunctions) == "table" and _rawget(_temp314.liftable_underfunctions, "__call_thing")) then
        _temp315 = _temp314:liftable_underfunctions()
      elseif _temp314.liftable_underfunctions ~= nil then
        _temp315 = _temp314.liftable_underfunctions

        elseif _temp314.no_undermethod ~= nil then
          _temp315 =  _temp314:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp314, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp314)
      if _n.liftable_underfunctions ~= nil then
        _temp315 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp315 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp314, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp314)
      if _f.liftable_underfunctions ~= nil then
        _temp315 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp315 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp314, "liftable_functions"))
      end

      elseif _temp314 == nil then
        _error(exception:null_error("_temp314", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp314))
      end

local _temp316 = nil
    if _type(_temp311) == "function" or (_type(_temp311) == "table" and _rawget(_temp311, "__call_thing")) then
      _temp316 =  _temp311(_self)

    elseif _temp311 then
      _temp316 =  _temp311
    else
            if _type(_self.func_underres) == "function" or (_type(_self.func_underres) == "table" and _rawget(_self.func_underres, "__call_thing")) then
        _temp316 =  _self:func_underres()
      elseif _self.func_underres ~= nil then
        _temp316 =  _self.func_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp316 =  _self:no_undermethod(string:new("func_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp316 =  no_undermethod(_self, string:new("func_res"))
      else
        _error(exception:name_error("func_res"))
      end
    end
local _temp317
      local _t = _type(_temp315)
      if _t == "table" then
                      if _type(_temp315._less_less) == "function" or (_type(_temp315._less_less) == "table" and _rawget(_temp315._less_less, "__call_thing")) then
        _temp317 = _temp315:_less_less(_temp316)
      elseif _temp315._less_less ~= nil then
        _temp317 = _temp315._less_less

        elseif _temp315.no_undermethod ~= nil then
          _temp317 =  _temp315:no_undermethod(string:new("<<") , _temp316)
        else
          _error(exception:method_error(_temp315, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp315)
      if _n._less_less ~= nil then
        _temp317 = _n:_less_less(_temp316)
      elseif _n.no_undermethod ~= nil then
        _temp317 =  _n:no_undermethod(string:new("<<") , _temp316)
      else
        _error(exception:method_error(_temp315, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp315)
      if _f._less_less ~= nil then
        _temp317 = _f:_less_less(_temp316)
      elseif _f.no_undermethod ~= nil then
        _temp317 =  _f:no_undermethod(string:new("<<") , _temp316)
      else
        _error(exception:method_error(_temp315, "<<"))
      end

      elseif _temp315 == nil then
        _error(exception:null_error("_temp315", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp315))
      end

_dummy_ = _temp317 
end

_temp313 =  _temp309

_temp312 = string:new("")

local _temp318 = string:new("function")

local _temp319 = {}
_temp319[string:new("type")] = _temp318
_temp319 = hash:new(_temp319)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp313,_temp312,_temp319)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp313,_temp312,_temp319)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp313,_temp312,_temp319)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp313,_temp312,_temp319)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp260)
      if _t == "table" then
                      if _type(_temp260.walk) == "function" or (_type(_temp260.walk) == "table" and _rawget(_temp260.walk, "__call_thing")) then
        _dummy_ = _temp260:walk(_temp4,_temp320)
      elseif _temp260.walk ~= nil then
        _dummy_ = _temp260.walk

        elseif _temp260.no_undermethod ~= nil then
          _dummy_ =  _temp260:no_undermethod(string:new("walk") , _temp4,_temp320)
        else
          _error(exception:method_error(_temp260, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp260)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp320)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp320)
      else
        _error(exception:method_error(_temp260, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp260)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp320)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp320)
      else
        _error(exception:method_error(_temp260, "walk"))
      end

      elseif _temp260 == nil then
        _error(exception:null_error("_temp260", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp260))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp320 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp320 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp320 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp320 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp320 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp320 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp320 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp320 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp320 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp320 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("liftable_function")

_temp352 = function (_self, _temp322,_temp321)
        if _temp322 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp321 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp321 =  null(_self)

    elseif null then
      _temp321 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp321 =  _self:null()
      elseif _self.null ~= nil then
        _temp321 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp321 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp321 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp323
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp323 =  my(_self)

    elseif my then
      _temp323 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp323 =  _self:my()
      elseif _self.my ~= nil then
        _temp323 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp323 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp323 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp324 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp324 =  _self:my()
      elseif _self.my ~= nil then
        _temp324 =  _self.my

        elseif my ~= nil then
          _temp324 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324.env) == "function" or (_type(_temp324.env) == "table" and _rawget(_temp324.env, "__call_thing")) then
        _temp324 = _temp324:env()
      elseif _temp324.env ~= nil then
        _temp324 = _temp324.env

        elseif _temp324.no_undermethod ~= nil then
          _temp324 =  _temp324:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp324, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n.env ~= nil then
        _temp324 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp324 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp324, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f.env ~= nil then
        _temp324 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp324 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp324, "env"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

      local _t = _type(_temp324)
      if _t == "table" then
                      if _type(_temp324.new_underscope) == "function" or (_type(_temp324.new_underscope) == "table" and _rawget(_temp324.new_underscope, "__call_thing")) then
        _dummy_ = _temp324:new_underscope()
      elseif _temp324.new_underscope ~= nil then
        _dummy_ = _temp324.new_underscope

        elseif _temp324.no_undermethod ~= nil then
          _dummy_ =  _temp324:no_undermethod(string:new("new_scope"))
        else
          _error(exception:method_error(_temp324, "new_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp324)
      if _n.new_underscope ~= nil then
        _dummy_ = _n:new_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp324, "new_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp324)
      if _f.new_underscope ~= nil then
        _dummy_ = _f:new_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("new_scope"))
      else
        _error(exception:method_error(_temp324, "new_scope"))
      end

      elseif _temp324 == nil then
        _error(exception:null_error("_temp324", "invoke new_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp324))
      end

local _temp325
    if _type(_temp322) == "function" or (_type(_temp322) == "table" and _rawget(_temp322, "__call_thing")) then
      _temp324 =  _temp322(_self)

    elseif _temp322 then
      _temp324 =  _temp322
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp324 =  _self:node()
      elseif _self.node ~= nil then
        _temp324 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp324 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp324 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(do_underargs) == "function" or (_type(do_underargs) == "table" and _rawget(do_underargs, "__call_thing")) then
      _temp325 =  do_underargs(_self, _temp324)

    elseif do_underargs then
      _error(exception:new("Tried to invoke non-method: do_args (" .. object.__type(do_underargs) .. ")"))
    else
            if _type(_self.do_underargs) == "function" or (_type(_self.do_underargs) == "table" and _rawget(_self.do_underargs, "__call_thing")) then
        _temp325 =  _self:do_underargs(_temp324)
      elseif _self.do_underargs ~= nil then
        _temp325 =  _self.do_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp325 =  _self:no_undermethod(string:new("do_args") , _temp324)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp325 =  no_undermethod(_self, string:new("do_args") , _temp324)
      else
        _error(exception:name_error("do_args"))
      end
    end

local _temp326
do
local _temp327 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp327 =  _self:my()
      elseif _self.my ~= nil then
        _temp327 =  _self.my

        elseif my ~= nil then
          _temp327 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp327)
      if _t == "table" then
                      if _type(_temp327.liftable_underfunctions) == "function" or (_type(_temp327.liftable_underfunctions) == "table" and _rawget(_temp327.liftable_underfunctions, "__call_thing")) then
        _temp327 = _temp327:liftable_underfunctions()
      elseif _temp327.liftable_underfunctions ~= nil then
        _temp327 = _temp327.liftable_underfunctions

        elseif _temp327.no_undermethod ~= nil then
          _temp327 =  _temp327:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp327, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp327)
      if _n.liftable_underfunctions ~= nil then
        _temp327 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp327 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp327, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp327)
      if _f.liftable_underfunctions ~= nil then
        _temp327 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp327 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp327, "liftable_functions"))
      end

      elseif _temp327 == nil then
        _error(exception:null_error("_temp327", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp327))
      end

      local _t = _type(_temp327)
      if _t == "table" then
                      if _type(_temp327.length) == "function" or (_type(_temp327.length) == "table" and _rawget(_temp327.length, "__call_thing")) then
        _temp327 = _temp327:length()
      elseif _temp327.length ~= nil then
        _temp327 = _temp327.length

        elseif _temp327.no_undermethod ~= nil then
          _temp327 =  _temp327:no_undermethod(string:new("length"))
        else
          _error(exception:method_error(_temp327, "length"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp327)
      if _n.length ~= nil then
        _temp327 = _n:length()
      elseif _n.no_undermethod ~= nil then
        _temp327 =  _n:no_undermethod(string:new("length"))
      else
        _error(exception:method_error(_temp327, "length"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp327)
      if _f.length ~= nil then
        _temp327 = _f:length()
      elseif _f.no_undermethod ~= nil then
        _temp327 =  _f:no_undermethod(string:new("length"))
      else
        _error(exception:method_error(_temp327, "length"))
      end

      elseif _temp327 == nil then
        _error(exception:null_error("_temp327", "invoke length on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp327))
      end


_temp324 = string:new("_lifted" .. _tostring(_temp327) .. "")
end

local _temp328 = nil
do
local _temp329
do
    if _type(_temp325) == "function" or (_type(_temp325) == "table" and _rawget(_temp325, "__call_thing")) then
      _temp329 =  _temp325(_self)

    elseif _temp325 then
      _temp329 =  _temp325
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp329 =  _self:args()
      elseif _self.args ~= nil then
        _temp329 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp329 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp329 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp330 = string:new("arg_list")


_temp329 = _temp329:get(_temp330)
end

_temp328 = string:new("function(_argtable, " .. _tostring(_temp329) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp326 =  set_underresult(_self, _temp324,_temp328)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp326 =  _self:set_underresult(_temp324,_temp328)
      elseif _self.set_underresult ~= nil then
        _temp326 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp326 =  _self:no_undermethod(string:new("set_result") , _temp324,_temp328)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp326 =  no_undermethod(_self, string:new("set_result") , _temp324,_temp328)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp331 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp331 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp331 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp331 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp331 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp331 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp331 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp331 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp331 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp331 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp332 = nil
      local _t = _type(_temp331)
      if _t == "table" then
                      if _type(_temp331.out) == "function" or (_type(_temp331.out) == "table" and _rawget(_temp331.out, "__call_thing")) then
        _temp332 = _temp331:out()
      elseif _temp331.out ~= nil then
        _temp332 = _temp331.out

        elseif _temp331.no_undermethod ~= nil then
          _temp332 =  _temp331:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp331, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp331)
      if _n.out ~= nil then
        _temp332 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp332 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp331, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp331)
      if _f.out ~= nil then
        _temp332 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp332 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp331, "out"))
      end

      elseif _temp331 == nil then
        _error(exception:null_error("_temp331", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp331))
      end

local _temp333 = nil
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp333 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp333 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp333 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp333 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp333 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp333 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp333 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp333 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp333 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp333 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp333)
      if _t == "table" then
                      if _type(_temp333.upvars) == "function" or (_type(_temp333.upvars) == "table" and _rawget(_temp333.upvars, "__call_thing")) then
        _temp333 = _temp333:upvars()
      elseif _temp333.upvars ~= nil then
        _temp333 = _temp333.upvars

        elseif _temp333.no_undermethod ~= nil then
          _temp333 =  _temp333:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp333, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp333)
      if _n.upvars ~= nil then
        _temp333 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp333 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp333, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp333)
      if _f.upvars ~= nil then
        _temp333 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp333 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp333, "upvars"))
      end

      elseif _temp333 == nil then
        _error(exception:null_error("_temp333", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp333))
      end


local _temp341 = _lifted_call(_temp340, {})
_temp341.arg_table["_temp323"] = _temp323

      local _t = _type(_temp333)
      if _t == "table" then
                      if _type(_temp333.map) == "function" or (_type(_temp333.map) == "table" and _rawget(_temp333.map, "__call_thing")) then
        _temp333 = _temp333:map(_temp341)
      elseif _temp333.map ~= nil then
        _temp333 = _temp333.map

        elseif _temp333.no_undermethod ~= nil then
          _temp333 =  _temp333:no_undermethod(string:new("map") , _temp341)
        else
          _error(exception:method_error(_temp333, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp333)
      if _n.map ~= nil then
        _temp333 = _n:map(_temp341)
      elseif _n.no_undermethod ~= nil then
        _temp333 =  _n:no_undermethod(string:new("map") , _temp341)
      else
        _error(exception:method_error(_temp333, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp333)
      if _f.map ~= nil then
        _temp333 = _f:map(_temp341)
      elseif _f.no_undermethod ~= nil then
        _temp333 =  _f:no_undermethod(string:new("map") , _temp341)
      else
        _error(exception:method_error(_temp333, "map"))
      end

      elseif _temp333 == nil then
        _error(exception:null_error("_temp333", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp333))
      end

_temp341 = string:new("\n")

      local _t = _type(_temp333)
      if _t == "table" then
                      if _type(_temp333.join) == "function" or (_type(_temp333.join) == "table" and _rawget(_temp333.join, "__call_thing")) then
        _temp333 = _temp333:join(_temp341)
      elseif _temp333.join ~= nil then
        _temp333 = _temp333.join

        elseif _temp333.no_undermethod ~= nil then
          _temp333 =  _temp333:no_undermethod(string:new("join") , _temp341)
        else
          _error(exception:method_error(_temp333, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp333)
      if _n.join ~= nil then
        _temp333 = _n:join(_temp341)
      elseif _n.no_undermethod ~= nil then
        _temp333 =  _n:no_undermethod(string:new("join") , _temp341)
      else
        _error(exception:method_error(_temp333, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp333)
      if _f.join ~= nil then
        _temp333 = _f:join(_temp341)
      elseif _f.no_undermethod ~= nil then
        _temp333 =  _f:no_undermethod(string:new("join") , _temp341)
      else
        _error(exception:method_error(_temp333, "join"))
      end

      elseif _temp333 == nil then
        _error(exception:null_error("_temp333", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp333))
      end

local _temp341
      local _t = _type(_temp332)
      if _t == "table" then
                      if _type(_temp332._less_less) == "function" or (_type(_temp332._less_less) == "table" and _rawget(_temp332._less_less, "__call_thing")) then
        _temp341 = _temp332:_less_less(_temp333)
      elseif _temp332._less_less ~= nil then
        _temp341 = _temp332._less_less

        elseif _temp332.no_undermethod ~= nil then
          _temp341 =  _temp332:no_undermethod(string:new("<<") , _temp333)
        else
          _error(exception:method_error(_temp332, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp332)
      if _n._less_less ~= nil then
        _temp341 = _n:_less_less(_temp333)
      elseif _n.no_undermethod ~= nil then
        _temp341 =  _n:no_undermethod(string:new("<<") , _temp333)
      else
        _error(exception:method_error(_temp332, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp332)
      if _f._less_less ~= nil then
        _temp341 = _f:_less_less(_temp333)
      elseif _f.no_undermethod ~= nil then
        _temp341 =  _f:no_undermethod(string:new("<<") , _temp333)
      else
        _error(exception:method_error(_temp332, "<<"))
      end

      elseif _temp332 == nil then
        _error(exception:null_error("_temp332", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp332))
      end

_dummy_ = _temp341 
end

do
local _temp342 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp342 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp342 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp342 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp342 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp342 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp342 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp342 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp342 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp342 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp343 = nil
      local _t = _type(_temp342)
      if _t == "table" then
                      if _type(_temp342.out) == "function" or (_type(_temp342.out) == "table" and _rawget(_temp342.out, "__call_thing")) then
        _temp343 = _temp342:out()
      elseif _temp342.out ~= nil then
        _temp343 = _temp342.out

        elseif _temp342.no_undermethod ~= nil then
          _temp343 =  _temp342:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp342, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp342)
      if _n.out ~= nil then
        _temp343 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp343 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp342, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp342)
      if _f.out ~= nil then
        _temp343 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp343 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp342, "out"))
      end

      elseif _temp342 == nil then
        _error(exception:null_error("_temp342", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp342))
      end

local _temp344
do
    if _type(_temp325) == "function" or (_type(_temp325) == "table" and _rawget(_temp325, "__call_thing")) then
      _temp344 =  _temp325(_self)

    elseif _temp325 then
      _temp344 =  _temp325
    else
            if _type(_self.args) == "function" or (_type(_self.args) == "table" and _rawget(_self.args, "__call_thing")) then
        _temp344 =  _self:args()
      elseif _self.args ~= nil then
        _temp344 =  _self.args

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp344 =  _self:no_undermethod(string:new("args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp344 =  no_undermethod(_self, string:new("args"))
      else
        _error(exception:name_error("args"))
      end
    end
local _temp345 = string:new("out")


_temp344 = _temp344:get(_temp345)
end
local _temp346
      local _t = _type(_temp343)
      if _t == "table" then
                      if _type(_temp343._less_less) == "function" or (_type(_temp343._less_less) == "table" and _rawget(_temp343._less_less, "__call_thing")) then
        _temp346 = _temp343:_less_less(_temp344)
      elseif _temp343._less_less ~= nil then
        _temp346 = _temp343._less_less

        elseif _temp343.no_undermethod ~= nil then
          _temp346 =  _temp343:no_undermethod(string:new("<<") , _temp344)
        else
          _error(exception:method_error(_temp343, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp343)
      if _n._less_less ~= nil then
        _temp346 = _n:_less_less(_temp344)
      elseif _n.no_undermethod ~= nil then
        _temp346 =  _n:no_undermethod(string:new("<<") , _temp344)
      else
        _error(exception:method_error(_temp343, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp343)
      if _f._less_less ~= nil then
        _temp346 = _f:_less_less(_temp344)
      elseif _f.no_undermethod ~= nil then
        _temp346 =  _f:no_undermethod(string:new("<<") , _temp344)
      else
        _error(exception:method_error(_temp343, "<<"))
      end

      elseif _temp343 == nil then
        _error(exception:null_error("_temp343", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp343))
      end

_dummy_ = _temp346 
end

local _temp347
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp347 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp347 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp347 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp347 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp347 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp347 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp347 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp347 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp347 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp347)
      if _t == "table" then
                      if _type(_temp347.body) == "function" or (_type(_temp347.body) == "table" and _rawget(_temp347.body, "__call_thing")) then
        _temp347 = _temp347:body()
      elseif _temp347.body ~= nil then
        _temp347 = _temp347.body

        elseif _temp347.no_undermethod ~= nil then
          _temp347 =  _temp347:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp347)
      if _n.body ~= nil then
        _temp347 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp347 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp347)
      if _f.body ~= nil then
        _temp347 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp347 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp347 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp347))
      end

      local _t = _type(_temp347)
      if _t == "table" then
                      if _type(_temp347.copy) == "function" or (_type(_temp347.copy) == "table" and _rawget(_temp347.copy, "__call_thing")) then
        _temp347 = _temp347:copy()
      elseif _temp347.copy ~= nil then
        _temp347 = _temp347.copy

        elseif _temp347.no_undermethod ~= nil then
          _temp347 =  _temp347:no_undermethod(string:new("copy"))
        else
          _error(exception:method_error("body", "copy"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp347)
      if _n.copy ~= nil then
        _temp347 = _n:copy()
      elseif _n.no_undermethod ~= nil then
        _temp347 =  _n:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp347)
      if _f.copy ~= nil then
        _temp347 = _f:copy()
      elseif _f.no_undermethod ~= nil then
        _temp347 =  _f:no_undermethod(string:new("copy"))
      else
        _error(exception:method_error("body", "copy"))
      end

      elseif _temp347 == nil then
        _error(exception:null_error("body", "invoke copy on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp347))
      end


local _temp348
        local _t = _type(_temp347)
        if _t == "table" then
          if _rawget(_temp347, "__call_thing") == nil then
            _temp348 = _temp347
          else
                  if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp348 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp348 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp348 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp348 =  _temp347(_self)
      end

          end
        elseif _t == "number" then
          _temp348 = _temp347
        elseif _t == "function" then
                if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp348 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp348 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp348 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp348 =  _temp347(_self)
      end

        elseif _temp347 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end
      local _t = _type(_temp348)
      if _t == "table" then
                      if _type(_temp348.pop) == "function" or (_type(_temp348.pop) == "table" and _rawget(_temp348.pop, "__call_thing")) then
        _temp348 = _temp348:pop()
      elseif _temp348.pop ~= nil then
        _temp348 = _temp348.pop

        elseif _temp348.no_undermethod ~= nil then
          _temp348 =  _temp348:no_undermethod(string:new("pop"))
        else
          _error(exception:method_error("last", "pop"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp348)
      if _n.pop ~= nil then
        _temp348 = _n:pop()
      elseif _n.no_undermethod ~= nil then
        _temp348 =  _n:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp348)
      if _f.pop ~= nil then
        _temp348 = _f:pop()
      elseif _f.no_undermethod ~= nil then
        _temp348 =  _f:no_undermethod(string:new("pop"))
      else
        _error(exception:method_error("last", "pop"))
      end

      elseif _temp348 == nil then
        _error(exception:null_error("last", "invoke pop on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp348))
      end


local _temp349
        local _t = _type(_temp347)
        if _t == "table" then
          if _rawget(_temp347, "__call_thing") == nil then
            _temp349 = _temp347
          else
                  if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp349 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp349 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp349 =  _temp347(_self)
      end

          end
        elseif _t == "number" then
          _temp349 = _temp347
        elseif _t == "function" then
                if _temp347 == nil then
              if _type(_self._temp347) == "function" or (_type(_self._temp347) == "table" and _rawget(_self._temp347, "__call_thing")) then
        _temp349 =  _self:_temp347()
      elseif _self._temp347 ~= nil then
        _temp349 =  _self._temp347

        elseif _self.no_undermethod ~= nil then
          _temp349 =  _self:no_undermethod(string:new("_temp347"))
        else
          _error(exception:null_error("body", "invoke method"))
        end
      else 
        _temp349 =  _temp347(_self)
      end

        elseif _temp347 == nil then
          _error(exception:null_error("body", "cannot call method on it"))
        else
          _error(exception:method_error("self", "body"))
        end

_temp352 = _lifted_call(_temp353, {})
_temp352.arg_table["_temp323"] = _temp323

      local _t = _type(_temp349)
      if _t == "table" then
                      if _type(_temp349.map) == "function" or (_type(_temp349.map) == "table" and _rawget(_temp349.map, "__call_thing")) then
        _temp349 = _temp349:map(_temp352)
      elseif _temp349.map ~= nil then
        _temp349 = _temp349.map

        elseif _temp349.no_undermethod ~= nil then
          _temp349 =  _temp349:no_undermethod(string:new("map") , _temp352)
        else
          _error(exception:method_error("body_res", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp349)
      if _n.map ~= nil then
        _temp349 = _n:map(_temp352)
      elseif _n.no_undermethod ~= nil then
        _temp349 =  _n:no_undermethod(string:new("map") , _temp352)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp349)
      if _f.map ~= nil then
        _temp349 = _f:map(_temp352)
      elseif _f.no_undermethod ~= nil then
        _temp349 =  _f:no_undermethod(string:new("map") , _temp352)
      else
        _error(exception:method_error("body_res", "map"))
      end

      elseif _temp349 == nil then
        _error(exception:null_error("body_res", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp349))
      end

_temp352 = string:new("\n")

      local _t = _type(_temp349)
      if _t == "table" then
                      if _type(_temp349.join) == "function" or (_type(_temp349.join) == "table" and _rawget(_temp349.join, "__call_thing")) then
        _temp349 = _temp349:join(_temp352)
      elseif _temp349.join ~= nil then
        _temp349 = _temp349.join

        elseif _temp349.no_undermethod ~= nil then
          _temp349 =  _temp349:no_undermethod(string:new("join") , _temp352)
        else
          _error(exception:method_error("body_res", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp349)
      if _n.join ~= nil then
        _temp349 = _n:join(_temp352)
      elseif _n.no_undermethod ~= nil then
        _temp349 =  _n:no_undermethod(string:new("join") , _temp352)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp349)
      if _f.join ~= nil then
        _temp349 = _f:join(_temp352)
      elseif _f.no_undermethod ~= nil then
        _temp349 =  _f:no_undermethod(string:new("join") , _temp352)
      else
        _error(exception:method_error("body_res", "join"))
      end

      elseif _temp349 == nil then
        _error(exception:null_error("body_res", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp349))
      end


do
local _temp354 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp354 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp354 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp354 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp354 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp354 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp354 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp354 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp354 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp354 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp354 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp355 = nil
      local _t = _type(_temp354)
      if _t == "table" then
                      if _type(_temp354.out) == "function" or (_type(_temp354.out) == "table" and _rawget(_temp354.out, "__call_thing")) then
        _temp355 = _temp354:out()
      elseif _temp354.out ~= nil then
        _temp355 = _temp354.out

        elseif _temp354.no_undermethod ~= nil then
          _temp355 =  _temp354:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp354, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp354)
      if _n.out ~= nil then
        _temp355 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp355 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp354, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp354)
      if _f.out ~= nil then
        _temp355 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp355 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp354, "out"))
      end

      elseif _temp354 == nil then
        _error(exception:null_error("_temp354", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp354))
      end

local _temp356 = nil
    if _type(_temp349) == "function" or (_type(_temp349) == "table" and _rawget(_temp349, "__call_thing")) then
      _temp356 =  _temp349(_self)

    elseif _temp349 then
      _temp356 =  _temp349
    else
            if _type(_self.body_underres) == "function" or (_type(_self.body_underres) == "table" and _rawget(_self.body_underres, "__call_thing")) then
        _temp356 =  _self:body_underres()
      elseif _self.body_underres ~= nil then
        _temp356 =  _self.body_underres

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp356 =  _self:no_undermethod(string:new("body_res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp356 =  no_undermethod(_self, string:new("body_res"))
      else
        _error(exception:name_error("body_res"))
      end
    end
local _temp357
      local _t = _type(_temp355)
      if _t == "table" then
                      if _type(_temp355._less_less) == "function" or (_type(_temp355._less_less) == "table" and _rawget(_temp355._less_less, "__call_thing")) then
        _temp357 = _temp355:_less_less(_temp356)
      elseif _temp355._less_less ~= nil then
        _temp357 = _temp355._less_less

        elseif _temp355.no_undermethod ~= nil then
          _temp357 =  _temp355:no_undermethod(string:new("<<") , _temp356)
        else
          _error(exception:method_error(_temp355, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp355)
      if _n._less_less ~= nil then
        _temp357 = _n:_less_less(_temp356)
      elseif _n.no_undermethod ~= nil then
        _temp357 =  _n:no_undermethod(string:new("<<") , _temp356)
      else
        _error(exception:method_error(_temp355, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp355)
      if _f._less_less ~= nil then
        _temp357 = _f:_less_less(_temp356)
      elseif _f.no_undermethod ~= nil then
        _temp357 =  _f:no_undermethod(string:new("<<") , _temp356)
      else
        _error(exception:method_error(_temp355, "<<"))
      end

      elseif _temp355 == nil then
        _error(exception:null_error("_temp355", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp355))
      end

_dummy_ = _temp357 
end

    if _type(_temp348) == "function" or (_type(_temp348) == "table" and _rawget(_temp348, "__call_thing")) then
      _temp352 =  _temp348(_self)

    elseif _temp348 then
      _temp352 =  _temp348
    else
            if _type(_self.last) == "function" or (_type(_self.last) == "table" and _rawget(_self.last, "__call_thing")) then
        _temp352 =  _self:last()
      elseif _self.last ~= nil then
        _temp352 =  _self.last

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp352 =  _self:no_undermethod(string:new("last"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp352 =  no_undermethod(_self, string:new("last"))
      else
        _error(exception:name_error("last"))
      end
    end


local _temp369 = _lifted_call(_temp368, {})
_temp369.arg_table["_temp348"] = _temp348
_temp369.arg_table["_temp326"] = _temp326


local _temp379 = _lifted_call(_temp378, {})
_temp379.arg_table["_temp347"] = _temp347
_temp379.arg_table["_temp326"] = _temp326

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp352,_temp369,_temp379)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp352,_temp369,_temp379)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp352,_temp369,_temp379)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp352,_temp369,_temp379)
      else
        _error(exception:name_error("true?"))
      end
    end

              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp379 =  _self:my()
      elseif _self.my ~= nil then
        _temp379 =  _self.my

        elseif my ~= nil then
          _temp379 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp379)
      if _t == "table" then
                      if _type(_temp379.env) == "function" or (_type(_temp379.env) == "table" and _rawget(_temp379.env, "__call_thing")) then
        _temp379 = _temp379:env()
      elseif _temp379.env ~= nil then
        _temp379 = _temp379.env

        elseif _temp379.no_undermethod ~= nil then
          _temp379 =  _temp379:no_undermethod(string:new("env"))
        else
          _error(exception:method_error(_temp379, "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp379)
      if _n.env ~= nil then
        _temp379 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp379 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp379, "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp379)
      if _f.env ~= nil then
        _temp379 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp379 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error(_temp379, "env"))
      end

      elseif _temp379 == nil then
        _error(exception:null_error("_temp379", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp379))
      end

      local _t = _type(_temp379)
      if _t == "table" then
                      if _type(_temp379.pop_underscope) == "function" or (_type(_temp379.pop_underscope) == "table" and _rawget(_temp379.pop_underscope, "__call_thing")) then
        _dummy_ = _temp379:pop_underscope()
      elseif _temp379.pop_underscope ~= nil then
        _dummy_ = _temp379.pop_underscope

        elseif _temp379.no_undermethod ~= nil then
          _dummy_ =  _temp379:no_undermethod(string:new("pop_scope"))
        else
          _error(exception:method_error(_temp379, "pop_scope"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp379)
      if _n.pop_underscope ~= nil then
        _dummy_ = _n:pop_underscope()
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp379, "pop_scope"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp379)
      if _f.pop_underscope ~= nil then
        _dummy_ = _f:pop_underscope()
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("pop_scope"))
      else
        _error(exception:method_error(_temp379, "pop_scope"))
      end

      elseif _temp379 == nil then
        _error(exception:null_error("_temp379", "invoke pop_scope on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp379))
      end

do
local _temp380 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp380 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp380 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp380 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp380 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp380 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp380 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp380 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp380 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp380 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp380 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp381 = nil
      local _t = _type(_temp380)
      if _t == "table" then
                      if _type(_temp380.out) == "function" or (_type(_temp380.out) == "table" and _rawget(_temp380.out, "__call_thing")) then
        _temp381 = _temp380:out()
      elseif _temp380.out ~= nil then
        _temp381 = _temp380.out

        elseif _temp380.no_undermethod ~= nil then
          _temp381 =  _temp380:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp380, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp380)
      if _n.out ~= nil then
        _temp381 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp381 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp380, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp380)
      if _f.out ~= nil then
        _temp381 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp381 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp380, "out"))
      end

      elseif _temp380 == nil then
        _error(exception:null_error("_temp380", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp380))
      end

local _temp382 = string:new("\nend\n")
local _temp383
      local _t = _type(_temp381)
      if _t == "table" then
                      if _type(_temp381._less_less) == "function" or (_type(_temp381._less_less) == "table" and _rawget(_temp381._less_less, "__call_thing")) then
        _temp383 = _temp381:_less_less(_temp382)
      elseif _temp381._less_less ~= nil then
        _temp383 = _temp381._less_less

        elseif _temp381.no_undermethod ~= nil then
          _temp383 =  _temp381:no_undermethod(string:new("<<") , _temp382)
        else
          _error(exception:method_error(_temp381, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp381)
      if _n._less_less ~= nil then
        _temp383 = _n:_less_less(_temp382)
      elseif _n.no_undermethod ~= nil then
        _temp383 =  _n:no_undermethod(string:new("<<") , _temp382)
      else
        _error(exception:method_error(_temp381, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp381)
      if _f._less_less ~= nil then
        _temp383 = _f:_less_less(_temp382)
      elseif _f.no_undermethod ~= nil then
        _temp383 =  _f:no_undermethod(string:new("<<") , _temp382)
      else
        _error(exception:method_error(_temp381, "<<"))
      end

      elseif _temp381 == nil then
        _error(exception:null_error("_temp381", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp381))
      end

_dummy_ = _temp383 
end

do
local _temp369
    if _type(_temp326) == "function" or (_type(_temp326) == "table" and _rawget(_temp326, "__call_thing")) then
      _temp369 =  _temp326(_self)

    elseif _temp326 then
      _temp369 =  _temp326
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp369 =  _self:res()
      elseif _self.res ~= nil then
        _temp369 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp369 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp369 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

local _temp384 = string:new("function")

local _temp385 = string:new("type")

_temp369:set(_temp385, _temp384)
end

do
local _temp386 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp386 =  _self:my()
      elseif _self.my ~= nil then
        _temp386 =  _self.my

        elseif my ~= nil then
          _temp386 = my;
        else
          _error(exception:method_error("self", "my"))
        end

local _temp387 = nil
      local _t = _type(_temp386)
      if _t == "table" then
                      if _type(_temp386.liftable_underfunctions) == "function" or (_type(_temp386.liftable_underfunctions) == "table" and _rawget(_temp386.liftable_underfunctions, "__call_thing")) then
        _temp387 = _temp386:liftable_underfunctions()
      elseif _temp386.liftable_underfunctions ~= nil then
        _temp387 = _temp386.liftable_underfunctions

        elseif _temp386.no_undermethod ~= nil then
          _temp387 =  _temp386:no_undermethod(string:new("liftable_functions"))
        else
          _error(exception:method_error(_temp386, "liftable_functions"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp386)
      if _n.liftable_underfunctions ~= nil then
        _temp387 = _n:liftable_underfunctions()
      elseif _n.no_undermethod ~= nil then
        _temp387 =  _n:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp386, "liftable_functions"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp386)
      if _f.liftable_underfunctions ~= nil then
        _temp387 = _f:liftable_underfunctions()
      elseif _f.no_undermethod ~= nil then
        _temp387 =  _f:no_undermethod(string:new("liftable_functions"))
      else
        _error(exception:method_error(_temp386, "liftable_functions"))
      end

      elseif _temp386 == nil then
        _error(exception:null_error("_temp386", "invoke liftable_functions on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp386))
      end

local _temp388 = nil
    if _type(_temp326) == "function" or (_type(_temp326) == "table" and _rawget(_temp326, "__call_thing")) then
      _temp388 =  _temp326(_self)

    elseif _temp326 then
      _temp388 =  _temp326
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp388 =  _self:res()
      elseif _self.res ~= nil then
        _temp388 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp388 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp388 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end
local _temp389
      local _t = _type(_temp387)
      if _t == "table" then
                      if _type(_temp387._less_less) == "function" or (_type(_temp387._less_less) == "table" and _rawget(_temp387._less_less, "__call_thing")) then
        _temp389 = _temp387:_less_less(_temp388)
      elseif _temp387._less_less ~= nil then
        _temp389 = _temp387._less_less

        elseif _temp387.no_undermethod ~= nil then
          _temp389 =  _temp387:no_undermethod(string:new("<<") , _temp388)
        else
          _error(exception:method_error(_temp387, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp387)
      if _n._less_less ~= nil then
        _temp389 = _n:_less_less(_temp388)
      elseif _n.no_undermethod ~= nil then
        _temp389 =  _n:no_undermethod(string:new("<<") , _temp388)
      else
        _error(exception:method_error(_temp387, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp387)
      if _f._less_less ~= nil then
        _temp389 = _f:_less_less(_temp388)
      elseif _f.no_undermethod ~= nil then
        _temp389 =  _f:no_undermethod(string:new("<<") , _temp388)
      else
        _error(exception:method_error(_temp387, "<<"))
      end

      elseif _temp387 == nil then
        _error(exception:null_error("_temp387", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp387))
      end

_dummy_ = _temp389 
end

local _temp390
    if _type(_temp321) == "function" or (_type(_temp321) == "table" and _rawget(_temp321, "__call_thing")) then
      _temp352 =  _temp321(_self)

    elseif _temp321 then
      _temp352 =  _temp321
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp352 =  _self:var()
      elseif _self.var ~= nil then
        _temp352 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp352 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp352 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp391 = nil
        local _t = _type(_temp326)
        if _t == "table" then
          if _rawget(_temp326, "__call_thing") == nil then
            _temp391 = _temp326
          else
                  if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp391 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp391 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp326(_self)
      end

          end
        elseif _t == "number" then
          _temp391 = _temp326
        elseif _t == "function" then
                if _temp326 == nil then
              if _type(_self._temp326) == "function" or (_type(_self._temp326) == "table" and _rawget(_self._temp326, "__call_thing")) then
        _temp391 =  _self:_temp326()
      elseif _self._temp326 ~= nil then
        _temp391 =  _self._temp326

        elseif _self.no_undermethod ~= nil then
          _temp391 =  _self:no_undermethod(string:new("_temp326"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp391 =  _temp326(_self)
      end

        elseif _temp326 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp391)
      if _t == "table" then
                      if _type(_temp391.var) == "function" or (_type(_temp391.var) == "table" and _rawget(_temp391.var, "__call_thing")) then
        _temp391 = _temp391:var()
      elseif _temp391.var ~= nil then
        _temp391 = _temp391.var

        elseif _temp391.no_undermethod ~= nil then
          _temp391 =  _temp391:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp391, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp391)
      if _n.var ~= nil then
        _temp391 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp391 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp391, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp391)
      if _f.var ~= nil then
        _temp391 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp391 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp391, "var"))
      end

      elseif _temp391 == nil then
        _error(exception:null_error("_temp391", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp391))
      end


_temp328 = string:new("_lifted_call(" .. _tostring(_temp391) .. ")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp390 =  set_underresult(_self, _temp352,_temp328)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp390 =  _self:set_underresult(_temp352,_temp328)
      elseif _self.set_underresult ~= nil then
        _temp390 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp390 =  _self:no_undermethod(string:new("set_result") , _temp352,_temp328)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp390 =  no_undermethod(_self, string:new("set_result") , _temp352,_temp328)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp392 = nil
        local _t = _type(_temp390)
        if _t == "table" then
          if _rawget(_temp390, "__call_thing") == nil then
            _temp392 = _temp390
          else
                  if _temp390 == nil then
              if _type(_self._temp390) == "function" or (_type(_self._temp390) == "table" and _rawget(_self._temp390, "__call_thing")) then
        _temp392 =  _self:_temp390()
      elseif _self._temp390 ~= nil then
        _temp392 =  _self._temp390

        elseif _self.no_undermethod ~= nil then
          _temp392 =  _self:no_undermethod(string:new("_temp390"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp392 =  _temp390(_self)
      end

          end
        elseif _t == "number" then
          _temp392 = _temp390
        elseif _t == "function" then
                if _temp390 == nil then
              if _type(_self._temp390) == "function" or (_type(_self._temp390) == "table" and _rawget(_self._temp390, "__call_thing")) then
        _temp392 =  _self:_temp390()
      elseif _self._temp390 ~= nil then
        _temp392 =  _self._temp390

        elseif _self.no_undermethod ~= nil then
          _temp392 =  _self:no_undermethod(string:new("_temp390"))
        else
          _error(exception:null_error("lifted", "invoke method"))
        end
      else 
        _temp392 =  _temp390(_self)
      end

        elseif _temp390 == nil then
          _error(exception:null_error("lifted", "cannot call method on it"))
        else
          _error(exception:method_error("self", "lifted"))
        end

local _temp393 = nil
      local _t = _type(_temp392)
      if _t == "table" then
                      if _type(_temp392.out) == "function" or (_type(_temp392.out) == "table" and _rawget(_temp392.out, "__call_thing")) then
        _temp393 = _temp392:out()
      elseif _temp392.out ~= nil then
        _temp393 = _temp392.out

        elseif _temp392.no_undermethod ~= nil then
          _temp393 =  _temp392:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp392, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp392)
      if _n.out ~= nil then
        _temp393 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp393 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp392, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp392)
      if _f.out ~= nil then
        _temp393 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp393 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp392, "out"))
      end

      elseif _temp392 == nil then
        _error(exception:null_error("_temp392", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp392))
      end

local _temp394 = nil
        local _t = _type(_temp322)
        if _t == "table" then
          if _rawget(_temp322, "__call_thing") == nil then
            _temp394 = _temp322
          else
                  if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp394 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp394 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp394 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp394 =  _temp322(_self)
      end

          end
        elseif _t == "number" then
          _temp394 = _temp322
        elseif _t == "function" then
                if _temp322 == nil then
              if _type(_self._temp322) == "function" or (_type(_self._temp322) == "table" and _rawget(_self._temp322, "__call_thing")) then
        _temp394 =  _self:_temp322()
      elseif _self._temp322 ~= nil then
        _temp394 =  _self._temp322

        elseif _self.no_undermethod ~= nil then
          _temp394 =  _self:no_undermethod(string:new("_temp322"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp394 =  _temp322(_self)
      end

        elseif _temp322 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp394)
      if _t == "table" then
                      if _type(_temp394.upvars) == "function" or (_type(_temp394.upvars) == "table" and _rawget(_temp394.upvars, "__call_thing")) then
        _temp394 = _temp394:upvars()
      elseif _temp394.upvars ~= nil then
        _temp394 = _temp394.upvars

        elseif _temp394.no_undermethod ~= nil then
          _temp394 =  _temp394:no_undermethod(string:new("upvars"))
        else
          _error(exception:method_error(_temp394, "upvars"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp394)
      if _n.upvars ~= nil then
        _temp394 = _n:upvars()
      elseif _n.no_undermethod ~= nil then
        _temp394 =  _n:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp394, "upvars"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp394)
      if _f.upvars ~= nil then
        _temp394 = _f:upvars()
      elseif _f.no_undermethod ~= nil then
        _temp394 =  _f:no_undermethod(string:new("upvars"))
      else
        _error(exception:method_error(_temp394, "upvars"))
      end

      elseif _temp394 == nil then
        _error(exception:null_error("_temp394", "invoke upvars on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp394))
      end


local _temp403 = _lifted_call(_temp402, {})
_temp403.arg_table["_temp390"] = _temp390
_temp403.arg_table["_temp323"] = _temp323

      local _t = _type(_temp394)
      if _t == "table" then
                      if _type(_temp394.map) == "function" or (_type(_temp394.map) == "table" and _rawget(_temp394.map, "__call_thing")) then
        _temp394 = _temp394:map(_temp403)
      elseif _temp394.map ~= nil then
        _temp394 = _temp394.map

        elseif _temp394.no_undermethod ~= nil then
          _temp394 =  _temp394:no_undermethod(string:new("map") , _temp403)
        else
          _error(exception:method_error(_temp394, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp394)
      if _n.map ~= nil then
        _temp394 = _n:map(_temp403)
      elseif _n.no_undermethod ~= nil then
        _temp394 =  _n:no_undermethod(string:new("map") , _temp403)
      else
        _error(exception:method_error(_temp394, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp394)
      if _f.map ~= nil then
        _temp394 = _f:map(_temp403)
      elseif _f.no_undermethod ~= nil then
        _temp394 =  _f:no_undermethod(string:new("map") , _temp403)
      else
        _error(exception:method_error(_temp394, "map"))
      end

      elseif _temp394 == nil then
        _error(exception:null_error("_temp394", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp394))
      end

_temp403 = string:new("\n")

      local _t = _type(_temp394)
      if _t == "table" then
                      if _type(_temp394.join) == "function" or (_type(_temp394.join) == "table" and _rawget(_temp394.join, "__call_thing")) then
        _temp394 = _temp394:join(_temp403)
      elseif _temp394.join ~= nil then
        _temp394 = _temp394.join

        elseif _temp394.no_undermethod ~= nil then
          _temp394 =  _temp394:no_undermethod(string:new("join") , _temp403)
        else
          _error(exception:method_error(_temp394, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp394)
      if _n.join ~= nil then
        _temp394 = _n:join(_temp403)
      elseif _n.no_undermethod ~= nil then
        _temp394 =  _n:no_undermethod(string:new("join") , _temp403)
      else
        _error(exception:method_error(_temp394, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp394)
      if _f.join ~= nil then
        _temp394 = _f:join(_temp403)
      elseif _f.no_undermethod ~= nil then
        _temp394 =  _f:no_undermethod(string:new("join") , _temp403)
      else
        _error(exception:method_error(_temp394, "join"))
      end

      elseif _temp394 == nil then
        _error(exception:null_error("_temp394", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp394))
      end

local _temp403
      local _t = _type(_temp393)
      if _t == "table" then
                      if _type(_temp393._less_less) == "function" or (_type(_temp393._less_less) == "table" and _rawget(_temp393._less_less, "__call_thing")) then
        _temp403 = _temp393:_less_less(_temp394)
      elseif _temp393._less_less ~= nil then
        _temp403 = _temp393._less_less

        elseif _temp393.no_undermethod ~= nil then
          _temp403 =  _temp393:no_undermethod(string:new("<<") , _temp394)
        else
          _error(exception:method_error(_temp393, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp393)
      if _n._less_less ~= nil then
        _temp403 = _n:_less_less(_temp394)
      elseif _n.no_undermethod ~= nil then
        _temp403 =  _n:no_undermethod(string:new("<<") , _temp394)
      else
        _error(exception:method_error(_temp393, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp393)
      if _f._less_less ~= nil then
        _temp403 = _f:_less_less(_temp394)
      elseif _f.no_undermethod ~= nil then
        _temp403 =  _f:no_undermethod(string:new("<<") , _temp394)
      else
        _error(exception:method_error(_temp393, "<<"))
      end

      elseif _temp393 == nil then
        _error(exception:null_error("_temp393", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp393))
      end

_dummy_ = _temp403 
end

    if _type(_temp390) == "function" or (_type(_temp390) == "table" and _rawget(_temp390, "__call_thing")) then
      return  _temp390(_self)

    elseif _temp390 then
      return  _temp390
    else
            if _type(_self.lifted) == "function" or (_type(_self.lifted) == "table" and _rawget(_self.lifted, "__call_thing")) then
        return  _self:lifted()
      elseif _self.lifted ~= nil then
        return  _self.lifted

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("lifted"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("lifted"))
      else
        _error(exception:name_error("lifted"))
      end
    end

end

      local _t = _type(_temp320)
      if _t == "table" then
                      if _type(_temp320.walk) == "function" or (_type(_temp320.walk) == "table" and _rawget(_temp320.walk, "__call_thing")) then
        _dummy_ = _temp320:walk(_temp4,_temp352)
      elseif _temp320.walk ~= nil then
        _dummy_ = _temp320.walk

        elseif _temp320.no_undermethod ~= nil then
          _dummy_ =  _temp320:no_undermethod(string:new("walk") , _temp4,_temp352)
        else
          _error(exception:method_error(_temp320, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp320)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp352)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp352)
      else
        _error(exception:method_error(_temp320, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp320)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp352)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp352)
      else
        _error(exception:method_error(_temp320, "walk"))
      end

      elseif _temp320 == nil then
        _error(exception:null_error("_temp320", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp320))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp352 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp352 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp352 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp352 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp352 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp352 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp352 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp352 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp352 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("arg")

local _temp411 = function (_self, _temp405,_temp404)
        if _temp405 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp404 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp404 =  null(_self)

    elseif null then
      _temp404 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp404 =  _self:null()
      elseif _self.null ~= nil then
        _temp404 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp404 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp404 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp406
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp406 =  _self:my()
      elseif _self.my ~= nil then
        _temp406 =  _self.my

        elseif my ~= nil then
          _temp406 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp406)
      if _t == "table" then
                      if _type(_temp406.env) == "function" or (_type(_temp406.env) == "table" and _rawget(_temp406.env, "__call_thing")) then
        _temp406 = _temp406:env()
      elseif _temp406.env ~= nil then
        _temp406 = _temp406.env

        elseif _temp406.no_undermethod ~= nil then
          _temp406 =  _temp406:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp406)
      if _n.env ~= nil then
        _temp406 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp406 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp406)
      if _f.env ~= nil then
        _temp406 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp406 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp406 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp406))
      end

local _temp407 = nil
        local _t = _type(_temp405)
        if _t == "table" then
          if _rawget(_temp405, "__call_thing") == nil then
            _temp407 = _temp405
          else
                  if _temp405 == nil then
              if _type(_self._temp405) == "function" or (_type(_self._temp405) == "table" and _rawget(_self._temp405, "__call_thing")) then
        _temp407 =  _self:_temp405()
      elseif _self._temp405 ~= nil then
        _temp407 =  _self._temp405

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp405"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp407 =  _temp405(_self)
      end

          end
        elseif _t == "number" then
          _temp407 = _temp405
        elseif _t == "function" then
                if _temp405 == nil then
              if _type(_self._temp405) == "function" or (_type(_self._temp405) == "table" and _rawget(_self._temp405, "__call_thing")) then
        _temp407 =  _self:_temp405()
      elseif _self._temp405 ~= nil then
        _temp407 =  _self._temp405

        elseif _self.no_undermethod ~= nil then
          _temp407 =  _self:no_undermethod(string:new("_temp405"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp407 =  _temp405(_self)
      end

        elseif _temp405 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp407)
      if _t == "table" then
                      if _type(_temp407.id) == "function" or (_type(_temp407.id) == "table" and _rawget(_temp407.id, "__call_thing")) then
        _temp407 = _temp407:id()
      elseif _temp407.id ~= nil then
        _temp407 = _temp407.id

        elseif _temp407.no_undermethod ~= nil then
          _temp407 =  _temp407:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp407, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp407)
      if _n.id ~= nil then
        _temp407 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp407 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp407, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp407)
      if _f.id ~= nil then
        _temp407 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp407 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp407, "id"))
      end

      elseif _temp407 == nil then
        _error(exception:null_error("_temp407", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp407))
      end


      local _t = _type(_temp406)
      if _t == "table" then
                      if _type(_temp406.new_undervar) == "function" or (_type(_temp406.new_undervar) == "table" and _rawget(_temp406.new_undervar, "__call_thing")) then
        _temp406 = _temp406:new_undervar(_temp407)
      elseif _temp406.new_undervar ~= nil then
        _temp406 = _temp406.new_undervar

        elseif _temp406.no_undermethod ~= nil then
          _temp406 =  _temp406:no_undermethod(string:new("new_var") , _temp407)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp406)
      if _n.new_undervar ~= nil then
        _temp406 = _n:new_undervar(_temp407)
      elseif _n.no_undermethod ~= nil then
        _temp406 =  _n:no_undermethod(string:new("new_var") , _temp407)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp406)
      if _f.new_undervar ~= nil then
        _temp406 = _f:new_undervar(_temp407)
      elseif _f.no_undermethod ~= nil then
        _temp406 =  _f:no_undermethod(string:new("new_var") , _temp407)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp406 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp406))
      end


    if _type(_temp406) == "function" or (_type(_temp406) == "table" and _rawget(_temp406, "__call_thing")) then
      _temp407 =  _temp406(_self)

    elseif _temp406 then
      _temp407 =  _temp406
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp407 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp407 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp407 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp407 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp408 = string:new("")

local _temp409 = string:new("arg")

local _temp410 = {}
_temp410[string:new("arg_type")] = _temp409
_temp410 = hash:new(_temp410)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp407,_temp408,_temp410)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp407,_temp408,_temp410)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp407,_temp408,_temp410)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp407,_temp408,_temp410)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp352)
      if _t == "table" then
                      if _type(_temp352.walk) == "function" or (_type(_temp352.walk) == "table" and _rawget(_temp352.walk, "__call_thing")) then
        _dummy_ = _temp352:walk(_temp4,_temp411)
      elseif _temp352.walk ~= nil then
        _dummy_ = _temp352.walk

        elseif _temp352.no_undermethod ~= nil then
          _dummy_ =  _temp352:no_undermethod(string:new("walk") , _temp4,_temp411)
        else
          _error(exception:method_error(_temp352, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp352)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp411)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp411)
      else
        _error(exception:method_error(_temp352, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp352)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp411)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp411)
      else
        _error(exception:method_error(_temp352, "walk"))
      end

      elseif _temp352 == nil then
        _error(exception:null_error("_temp352", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp352))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp411 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp411 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp411 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp411 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp411 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp411 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp411 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp411 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp411 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp411 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("var_arg")

local _temp420 = function (_self, _temp413,_temp412)
        if _temp413 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp412 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp412 =  null(_self)

    elseif null then
      _temp412 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp412 =  _self:null()
      elseif _self.null ~= nil then
        _temp412 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp412 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp412 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp414
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp414 =  _self:my()
      elseif _self.my ~= nil then
        _temp414 =  _self.my

        elseif my ~= nil then
          _temp414 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp414)
      if _t == "table" then
                      if _type(_temp414.env) == "function" or (_type(_temp414.env) == "table" and _rawget(_temp414.env, "__call_thing")) then
        _temp414 = _temp414:env()
      elseif _temp414.env ~= nil then
        _temp414 = _temp414.env

        elseif _temp414.no_undermethod ~= nil then
          _temp414 =  _temp414:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp414)
      if _n.env ~= nil then
        _temp414 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp414 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp414)
      if _f.env ~= nil then
        _temp414 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp414 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp414 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp414))
      end

local _temp415 = nil
        local _t = _type(_temp413)
        if _t == "table" then
          if _rawget(_temp413, "__call_thing") == nil then
            _temp415 = _temp413
          else
                  if _temp413 == nil then
              if _type(_self._temp413) == "function" or (_type(_self._temp413) == "table" and _rawget(_self._temp413, "__call_thing")) then
        _temp415 =  _self:_temp413()
      elseif _self._temp413 ~= nil then
        _temp415 =  _self._temp413

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp413"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp413(_self)
      end

          end
        elseif _t == "number" then
          _temp415 = _temp413
        elseif _t == "function" then
                if _temp413 == nil then
              if _type(_self._temp413) == "function" or (_type(_self._temp413) == "table" and _rawget(_self._temp413, "__call_thing")) then
        _temp415 =  _self:_temp413()
      elseif _self._temp413 ~= nil then
        _temp415 =  _self._temp413

        elseif _self.no_undermethod ~= nil then
          _temp415 =  _self:no_undermethod(string:new("_temp413"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp415 =  _temp413(_self)
      end

        elseif _temp413 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp415)
      if _t == "table" then
                      if _type(_temp415.id) == "function" or (_type(_temp415.id) == "table" and _rawget(_temp415.id, "__call_thing")) then
        _temp415 = _temp415:id()
      elseif _temp415.id ~= nil then
        _temp415 = _temp415.id

        elseif _temp415.no_undermethod ~= nil then
          _temp415 =  _temp415:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp415, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp415)
      if _n.id ~= nil then
        _temp415 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp415 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp415, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp415)
      if _f.id ~= nil then
        _temp415 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp415 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp415, "id"))
      end

      elseif _temp415 == nil then
        _error(exception:null_error("_temp415", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp415))
      end


      local _t = _type(_temp414)
      if _t == "table" then
                      if _type(_temp414.new_undervar) == "function" or (_type(_temp414.new_undervar) == "table" and _rawget(_temp414.new_undervar, "__call_thing")) then
        _temp414 = _temp414:new_undervar(_temp415)
      elseif _temp414.new_undervar ~= nil then
        _temp414 = _temp414.new_undervar

        elseif _temp414.no_undermethod ~= nil then
          _temp414 =  _temp414:no_undermethod(string:new("new_var") , _temp415)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp414)
      if _n.new_undervar ~= nil then
        _temp414 = _n:new_undervar(_temp415)
      elseif _n.no_undermethod ~= nil then
        _temp414 =  _n:no_undermethod(string:new("new_var") , _temp415)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp414)
      if _f.new_undervar ~= nil then
        _temp414 = _f:new_undervar(_temp415)
      elseif _f.no_undermethod ~= nil then
        _temp414 =  _f:no_undermethod(string:new("new_var") , _temp415)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp414 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp414))
      end


_temp415 = string:new("...")

local _temp416 = nil
do
local _temp417 = nil
    if _type(_temp414) == "function" or (_type(_temp414) == "table" and _rawget(_temp414, "__call_thing")) then
      _temp417 =  _temp414(_self)

    elseif _temp414 then
      _temp417 =  _temp414
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp417 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp417 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp417 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp417 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp416 = string:new("local " .. _tostring(_temp417) .. " = array:new(...)\n")
end

local _temp418 = string:new("var_arg")

local _temp419 = {}
_temp419[string:new("arg_type")] = _temp418
_temp419 = hash:new(_temp419)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp415,_temp416,_temp419)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp415,_temp416,_temp419)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp415,_temp416,_temp419)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp415,_temp416,_temp419)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp411)
      if _t == "table" then
                      if _type(_temp411.walk) == "function" or (_type(_temp411.walk) == "table" and _rawget(_temp411.walk, "__call_thing")) then
        _dummy_ = _temp411:walk(_temp4,_temp420)
      elseif _temp411.walk ~= nil then
        _dummy_ = _temp411.walk

        elseif _temp411.no_undermethod ~= nil then
          _dummy_ =  _temp411:no_undermethod(string:new("walk") , _temp4,_temp420)
        else
          _error(exception:method_error(_temp411, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp411)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp420)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp420)
      else
        _error(exception:method_error(_temp411, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp411)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp420)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp420)
      else
        _error(exception:method_error(_temp411, "walk"))
      end

      elseif _temp411 == nil then
        _error(exception:null_error("_temp411", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp411))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp420 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp420 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp420 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp420 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp420 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp420 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp420 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp420 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp420 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp420 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("def_arg")

local _temp446 = function (_self, _temp422,_temp421)
        if _temp422 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp421 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp421 =  null(_self)

    elseif null then
      _temp421 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp421 =  _self:null()
      elseif _self.null ~= nil then
        _temp421 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp421 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp421 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp423
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp423 =  _self:my()
      elseif _self.my ~= nil then
        _temp423 =  _self.my

        elseif my ~= nil then
          _temp423 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp423)
      if _t == "table" then
                      if _type(_temp423.env) == "function" or (_type(_temp423.env) == "table" and _rawget(_temp423.env, "__call_thing")) then
        _temp423 = _temp423:env()
      elseif _temp423.env ~= nil then
        _temp423 = _temp423.env

        elseif _temp423.no_undermethod ~= nil then
          _temp423 =  _temp423:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp423)
      if _n.env ~= nil then
        _temp423 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp423 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp423)
      if _f.env ~= nil then
        _temp423 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp423 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp423 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp423))
      end

local _temp424 = nil
        local _t = _type(_temp422)
        if _t == "table" then
          if _rawget(_temp422, "__call_thing") == nil then
            _temp424 = _temp422
          else
                  if _temp422 == nil then
              if _type(_self._temp422) == "function" or (_type(_self._temp422) == "table" and _rawget(_self._temp422, "__call_thing")) then
        _temp424 =  _self:_temp422()
      elseif _self._temp422 ~= nil then
        _temp424 =  _self._temp422

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp422"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp422(_self)
      end

          end
        elseif _t == "number" then
          _temp424 = _temp422
        elseif _t == "function" then
                if _temp422 == nil then
              if _type(_self._temp422) == "function" or (_type(_self._temp422) == "table" and _rawget(_self._temp422, "__call_thing")) then
        _temp424 =  _self:_temp422()
      elseif _self._temp422 ~= nil then
        _temp424 =  _self._temp422

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp422"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp422(_self)
      end

        elseif _temp422 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424.id) == "function" or (_type(_temp424.id) == "table" and _rawget(_temp424.id, "__call_thing")) then
        _temp424 = _temp424:id()
      elseif _temp424.id ~= nil then
        _temp424 = _temp424.id

        elseif _temp424.no_undermethod ~= nil then
          _temp424 =  _temp424:no_undermethod(string:new("id"))
        else
          _error(exception:method_error(_temp424, "id"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n.id ~= nil then
        _temp424 = _n:id()
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp424, "id"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f.id ~= nil then
        _temp424 = _f:id()
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("id"))
      else
        _error(exception:method_error(_temp424, "id"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke id on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end


      local _t = _type(_temp423)
      if _t == "table" then
                      if _type(_temp423.new_undervar) == "function" or (_type(_temp423.new_undervar) == "table" and _rawget(_temp423.new_undervar, "__call_thing")) then
        _temp423 = _temp423:new_undervar(_temp424)
      elseif _temp423.new_undervar ~= nil then
        _temp423 = _temp423.new_undervar

        elseif _temp423.no_undermethod ~= nil then
          _temp423 =  _temp423:no_undermethod(string:new("new_var") , _temp424)
        else
          _error(exception:method_error("temp", "new_var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp423)
      if _n.new_undervar ~= nil then
        _temp423 = _n:new_undervar(_temp424)
      elseif _n.no_undermethod ~= nil then
        _temp423 =  _n:no_undermethod(string:new("new_var") , _temp424)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp423)
      if _f.new_undervar ~= nil then
        _temp423 = _f:new_undervar(_temp424)
      elseif _f.no_undermethod ~= nil then
        _temp423 =  _f:no_undermethod(string:new("new_var") , _temp424)
      else
        _error(exception:method_error("temp", "new_var"))
      end

      elseif _temp423 == nil then
        _error(exception:null_error("temp", "invoke new_var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp423))
      end


local _temp425
        local _t = _type(_temp422)
        if _t == "table" then
          if _rawget(_temp422, "__call_thing") == nil then
            _temp424 = _temp422
          else
                  if _temp422 == nil then
              if _type(_self._temp422) == "function" or (_type(_self._temp422) == "table" and _rawget(_self._temp422, "__call_thing")) then
        _temp424 =  _self:_temp422()
      elseif _self._temp422 ~= nil then
        _temp424 =  _self._temp422

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp422"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp422(_self)
      end

          end
        elseif _t == "number" then
          _temp424 = _temp422
        elseif _t == "function" then
                if _temp422 == nil then
              if _type(_self._temp422) == "function" or (_type(_self._temp422) == "table" and _rawget(_self._temp422, "__call_thing")) then
        _temp424 =  _self:_temp422()
      elseif _self._temp422 ~= nil then
        _temp424 =  _self._temp422

        elseif _self.no_undermethod ~= nil then
          _temp424 =  _self:no_undermethod(string:new("_temp422"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp424 =  _temp422(_self)
      end

        elseif _temp422 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp424)
      if _t == "table" then
                      if _type(_temp424.value) == "function" or (_type(_temp424.value) == "table" and _rawget(_temp424.value, "__call_thing")) then
        _temp424 = _temp424:value()
      elseif _temp424.value ~= nil then
        _temp424 = _temp424.value

        elseif _temp424.no_undermethod ~= nil then
          _temp424 =  _temp424:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp424, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp424)
      if _n.value ~= nil then
        _temp424 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp424 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp424, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp424)
      if _f.value ~= nil then
        _temp424 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp424 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp424, "value"))
      end

      elseif _temp424 == nil then
        _error(exception:null_error("_temp424", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp424))
      end


local _temp426 = nil
    if _type(_temp423) == "function" or (_type(_temp423) == "table" and _rawget(_temp423, "__call_thing")) then
      _temp426 =  _temp423(_self)

    elseif _temp423 then
      _temp426 =  _temp423
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp426 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp426 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp426 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp426 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp425 =  process(_self, _temp424,_temp426)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp425 =  _self:process(_temp424,_temp426)
      elseif _self.process ~= nil then
        _temp425 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp425 =  _self:no_undermethod(string:new("process") , _temp424,_temp426)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp425 =  no_undermethod(_self, string:new("process") , _temp424,_temp426)
      else
        _error(exception:name_error("process"))
      end
    end

local _temp427
do
local _temp428 = nil
    if _type(_temp423) == "function" or (_type(_temp423) == "table" and _rawget(_temp423, "__call_thing")) then
      _temp428 =  _temp423(_self)

    elseif _temp423 then
      _temp428 =  _temp423
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp428 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp428 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp428 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp428 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

local _temp429 = nil
        local _t = _type(_temp425)
        if _t == "table" then
          if _rawget(_temp425, "__call_thing") == nil then
            _temp429 = _temp425
          else
                  if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp429 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp429 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp429 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp429 =  _temp425(_self)
      end

          end
        elseif _t == "number" then
          _temp429 = _temp425
        elseif _t == "function" then
                if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp429 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp429 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp429 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp429 =  _temp425(_self)
      end

        elseif _temp425 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp429)
      if _t == "table" then
                      if _type(_temp429.out) == "function" or (_type(_temp429.out) == "table" and _rawget(_temp429.out, "__call_thing")) then
        _temp429 = _temp429:out()
      elseif _temp429.out ~= nil then
        _temp429 = _temp429.out

        elseif _temp429.no_undermethod ~= nil then
          _temp429 =  _temp429:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp429, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp429)
      if _n.out ~= nil then
        _temp429 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp429 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp429, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp429)
      if _f.out ~= nil then
        _temp429 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp429 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp429, "out"))
      end

      elseif _temp429 == nil then
        _error(exception:null_error("_temp429", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp429))
      end


_temp427 = string:new("\n    if " .. _tostring(_temp428) .. " == nil then\n      " .. _tostring(_temp429) .. "\n  ")
end

local _temp426 
do
local _temp430 = nil
        local _t = _type(_temp425)
        if _t == "table" then
          if _rawget(_temp425, "__call_thing") == nil then
            _temp430 = _temp425
          else
                  if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp430 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp430 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp430 =  _temp425(_self)
      end

          end
        elseif _t == "number" then
          _temp430 = _temp425
        elseif _t == "function" then
                if _temp425 == nil then
              if _type(_self._temp425) == "function" or (_type(_self._temp425) == "table" and _rawget(_self._temp425, "__call_thing")) then
        _temp430 =  _self:_temp425()
      elseif _self._temp425 ~= nil then
        _temp430 =  _self._temp425

        elseif _self.no_undermethod ~= nil then
          _temp430 =  _self:no_undermethod(string:new("_temp425"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp430 =  _temp425(_self)
      end

        elseif _temp425 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp431 = nil
      local _t = _type(_temp430)
      if _t == "table" then
                      if _type(_temp430.var) == "function" or (_type(_temp430.var) == "table" and _rawget(_temp430.var, "__call_thing")) then
        _temp431 = _temp430:var()
      elseif _temp430.var ~= nil then
        _temp431 = _temp430.var

        elseif _temp430.no_undermethod ~= nil then
          _temp431 =  _temp430:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp430, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp430)
      if _n.var ~= nil then
        _temp431 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp431 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp430, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp430)
      if _f.var ~= nil then
        _temp431 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp431 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp430, "var"))
      end

      elseif _temp430 == nil then
        _error(exception:null_error("_temp430", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp430))
      end

local _temp432 = nil
    if _type(_temp423) == "function" or (_type(_temp423) == "table" and _rawget(_temp423, "__call_thing")) then
      _temp432 =  _temp423(_self)

    elseif _temp423 then
      _temp432 =  _temp423
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp432 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp432 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp432 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp432 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end
local _temp433
      local _t = _type(_temp431)
      if _t == "table" then
                      if _type(_temp431._equal_equal) == "function" or (_type(_temp431._equal_equal) == "table" and _rawget(_temp431._equal_equal, "__call_thing")) then
        _temp433 = _temp431:_equal_equal(_temp432)
      elseif _temp431._equal_equal ~= nil then
        _temp433 = _temp431._equal_equal

        elseif _temp431.no_undermethod ~= nil then
          _temp433 =  _temp431:no_undermethod(string:new("==") , _temp432)
        else
          _error(exception:method_error(_temp431, "=="))
        end

      elseif _t == "number" then
              if number._unchanged('_equal_equal') and _type(_temp432) == 'number' then
              if _temp431 == _temp432 then
        _temp433 = object.__true
      else
        _temp433 = object.__false
      end

      else
              local _n = number:new(_temp431)
      if _n._equal_equal ~= nil then
        _temp433 = _n:_equal_equal(_temp432)
      elseif _n.no_undermethod ~= nil then
        _temp433 =  _n:no_undermethod(string:new("==") , _temp432)
      else
        _error(exception:method_error(_temp431, "=="))
      end

      end 

      elseif _t == "function" then
              local _f = brat_function:new(_temp431)
      if _f._equal_equal ~= nil then
        _temp433 = _f:_equal_equal(_temp432)
      elseif _f.no_undermethod ~= nil then
        _temp433 =  _f:no_undermethod(string:new("==") , _temp432)
      else
        _error(exception:method_error(_temp431, "=="))
      end

      elseif _temp431 == nil then
        _error(exception:null_error("_temp431", "invoke == on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp431))
      end

_temp426 = _temp433 
end


local _temp441 = _lifted_call(_temp440, {})
_temp441.arg_table["_temp427"] = _temp427
_temp441.arg_table["_temp423"] = _temp423
_temp441.arg_table["_temp425"] = _temp425

    if _type(false_question) == "function" or (_type(false_question) == "table" and _rawget(false_question, "__call_thing")) then
      _dummy_ =  false_question(_self, _temp426,_temp441)

    elseif false_question then
      _error(exception:new("Tried to invoke non-method: false? (" .. object.__type(false_question) .. ")"))
    else
            if _type(_self.false_question) == "function" or (_type(_self.false_question) == "table" and _rawget(_self.false_question, "__call_thing")) then
        _dummy_ =  _self:false_question(_temp426,_temp441)
      elseif _self.false_question ~= nil then
        _dummy_ =  _self.false_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("false?") , _temp426,_temp441)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("false?") , _temp426,_temp441)
      else
        _error(exception:name_error("false?"))
      end
    end

do
local _temp442 = nil
_temp442 =  _temp427

local _temp443 = string:new("end\n")
local _temp444
              if _type(_temp442._less_less) == "function" or (_type(_temp442._less_less) == "table" and _rawget(_temp442._less_less, "__call_thing")) then
        _temp444 = _temp442:_less_less(_temp443)
      elseif _temp442._less_less ~= nil then
        _temp444 = _temp442._less_less

        elseif _temp442.no_undermethod ~= nil then
          _temp444 =  _temp442:no_undermethod(string:new("<<") , _temp443)
        else
          _error(exception:method_error(_temp442, "<<"))
        end

_dummy_ = _temp444 
end

    if _type(_temp423) == "function" or (_type(_temp423) == "table" and _rawget(_temp423, "__call_thing")) then
      _temp441 =  _temp423(_self)

    elseif _temp423 then
      _temp441 =  _temp423
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp441 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp441 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp441 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp441 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp426 =  _temp427

_temp424 = string:new("def_arg")

local _temp445 = {}
_temp445[string:new("arg_type")] = _temp424
_temp445 = hash:new(_temp445)
    if _type(r) == "function" or (_type(r) == "table" and _rawget(r, "__call_thing")) then
      return  r(_self, _temp441,_temp426,_temp445)

    elseif r then
      _error(exception:new("Tried to invoke non-method: r (" .. object.__type(r) .. ")"))
    else
            if _type(_self.r) == "function" or (_type(_self.r) == "table" and _rawget(_self.r, "__call_thing")) then
        return  _self:r(_temp441,_temp426,_temp445)
      elseif _self.r ~= nil then
        return  _self.r

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("r") , _temp441,_temp426,_temp445)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("r") , _temp441,_temp426,_temp445)
      else
        _error(exception:name_error("r"))
      end
    end

end

      local _t = _type(_temp420)
      if _t == "table" then
                      if _type(_temp420.walk) == "function" or (_type(_temp420.walk) == "table" and _rawget(_temp420.walk, "__call_thing")) then
        _dummy_ = _temp420:walk(_temp4,_temp446)
      elseif _temp420.walk ~= nil then
        _dummy_ = _temp420.walk

        elseif _temp420.no_undermethod ~= nil then
          _dummy_ =  _temp420:no_undermethod(string:new("walk") , _temp4,_temp446)
        else
          _error(exception:method_error(_temp420, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp420)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp446)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp446)
      else
        _error(exception:method_error(_temp420, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp420)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp446)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp446)
      else
        _error(exception:method_error(_temp420, "walk"))
      end

      elseif _temp420 == nil then
        _error(exception:null_error("_temp420", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp420))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp446 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp446 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp446 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp446 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp446 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp446 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp446 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp446 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp446 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp446 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_local")

local _temp456 = function (_self, _temp448,_temp447)
        if _temp448 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp447 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp447 =  null(_self)

    elseif null then
      _temp447 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp447 =  _self:null()
      elseif _self.null ~= nil then
        _temp447 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp447 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp447 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp449
local _temp450 = nil
    if _type(_temp447) == "function" or (_type(_temp447) == "table" and _rawget(_temp447, "__call_thing")) then
      _temp450 =  _temp447(_self)

    elseif _temp447 then
      _temp450 =  _temp447
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp450 =  _self:var()
      elseif _self.var ~= nil then
        _temp450 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp450 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp450 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp449 =  set_underresult(_self, _temp450)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp449 =  _self:set_underresult(_temp450)
      elseif _self.set_underresult ~= nil then
        _temp449 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp449 =  _self:no_undermethod(string:new("set_result") , _temp450)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp449 =  no_undermethod(_self, string:new("set_result") , _temp450)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp451 = nil
        local _t = _type(_temp449)
        if _t == "table" then
          if _rawget(_temp449, "__call_thing") == nil then
            _temp451 = _temp449
          else
                  if _temp449 == nil then
              if _type(_self._temp449) == "function" or (_type(_self._temp449) == "table" and _rawget(_self._temp449, "__call_thing")) then
        _temp451 =  _self:_temp449()
      elseif _self._temp449 ~= nil then
        _temp451 =  _self._temp449

        elseif _self.no_undermethod ~= nil then
          _temp451 =  _self:no_undermethod(string:new("_temp449"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp451 =  _temp449(_self)
      end

          end
        elseif _t == "number" then
          _temp451 = _temp449
        elseif _t == "function" then
                if _temp449 == nil then
              if _type(_self._temp449) == "function" or (_type(_self._temp449) == "table" and _rawget(_self._temp449, "__call_thing")) then
        _temp451 =  _self:_temp449()
      elseif _self._temp449 ~= nil then
        _temp451 =  _self._temp449

        elseif _self.no_undermethod ~= nil then
          _temp451 =  _self:no_undermethod(string:new("_temp449"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp451 =  _temp449(_self)
      end

        elseif _temp449 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp452 = nil
      local _t = _type(_temp451)
      if _t == "table" then
                      if _type(_temp451.out) == "function" or (_type(_temp451.out) == "table" and _rawget(_temp451.out, "__call_thing")) then
        _temp452 = _temp451:out()
      elseif _temp451.out ~= nil then
        _temp452 = _temp451.out

        elseif _temp451.no_undermethod ~= nil then
          _temp452 =  _temp451:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp451, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp451)
      if _n.out ~= nil then
        _temp452 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp452 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp451, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp451)
      if _f.out ~= nil then
        _temp452 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp452 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp451, "out"))
      end

      elseif _temp451 == nil then
        _error(exception:null_error("_temp451", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp451))
      end

local _temp453 = nil
local _temp454 = nil
        local _t = _type(_temp448)
        if _t == "table" then
          if _rawget(_temp448, "__call_thing") == nil then
            _temp454 = _temp448
          else
                  if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp454 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp454 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp454 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp454 =  _temp448(_self)
      end

          end
        elseif _t == "number" then
          _temp454 = _temp448
        elseif _t == "function" then
                if _temp448 == nil then
              if _type(_self._temp448) == "function" or (_type(_self._temp448) == "table" and _rawget(_self._temp448, "__call_thing")) then
        _temp454 =  _self:_temp448()
      elseif _self._temp448 ~= nil then
        _temp454 =  _self._temp448

        elseif _self.no_undermethod ~= nil then
          _temp454 =  _self:no_undermethod(string:new("_temp448"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp454 =  _temp448(_self)
      end

        elseif _temp448 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp454)
      if _t == "table" then
                      if _type(_temp454.method) == "function" or (_type(_temp454.method) == "table" and _rawget(_temp454.method, "__call_thing")) then
        _temp454 = _temp454:method()
      elseif _temp454.method ~= nil then
        _temp454 = _temp454.method

        elseif _temp454.no_undermethod ~= nil then
          _temp454 =  _temp454:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp454, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp454)
      if _n.method ~= nil then
        _temp454 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp454 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp454, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp454)
      if _f.method ~= nil then
        _temp454 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp454 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp454, "method"))
      end

      elseif _temp454 == nil then
        _error(exception:null_error("_temp454", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp454))
      end


local _temp455 = nil
        local _t = _type(_temp449)
        if _t == "table" then
          if _rawget(_temp449, "__call_thing") == nil then
            _temp455 = _temp449
          else
                  if _temp449 == nil then
              if _type(_self._temp449) == "function" or (_type(_self._temp449) == "table" and _rawget(_self._temp449, "__call_thing")) then
        _temp455 =  _self:_temp449()
      elseif _self._temp449 ~= nil then
        _temp455 =  _self._temp449

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp449"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp455 =  _temp449(_self)
      end

          end
        elseif _t == "number" then
          _temp455 = _temp449
        elseif _t == "function" then
                if _temp449 == nil then
              if _type(_self._temp449) == "function" or (_type(_self._temp449) == "table" and _rawget(_self._temp449, "__call_thing")) then
        _temp455 =  _self:_temp449()
      elseif _self._temp449 ~= nil then
        _temp455 =  _self._temp449

        elseif _self.no_undermethod ~= nil then
          _temp455 =  _self:no_undermethod(string:new("_temp449"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp455 =  _temp449(_self)
      end

        elseif _temp449 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp455)
      if _t == "table" then
                      if _type(_temp455.var) == "function" or (_type(_temp455.var) == "table" and _rawget(_temp455.var, "__call_thing")) then
        _temp455 = _temp455:var()
      elseif _temp455.var ~= nil then
        _temp455 = _temp455.var

        elseif _temp455.no_undermethod ~= nil then
          _temp455 =  _temp455:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp455, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp455)
      if _n.var ~= nil then
        _temp455 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp455 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp455, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp455)
      if _f.var ~= nil then
        _temp455 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp455 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp455, "var"))
      end

      elseif _temp455 == nil then
        _error(exception:null_error("_temp455", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp455))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp453 =  get_undermethod_underlocal(_self, _temp454,_temp455)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp453 =  _self:get_undermethod_underlocal(_temp454,_temp455)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp453 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp453 =  _self:no_undermethod(string:new("get_method_local") , _temp454,_temp455)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp453 =  no_undermethod(_self, string:new("get_method_local") , _temp454,_temp455)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp455
      local _t = _type(_temp452)
      if _t == "table" then
                      if _type(_temp452._less_less) == "function" or (_type(_temp452._less_less) == "table" and _rawget(_temp452._less_less, "__call_thing")) then
        _temp455 = _temp452:_less_less(_temp453)
      elseif _temp452._less_less ~= nil then
        _temp455 = _temp452._less_less

        elseif _temp452.no_undermethod ~= nil then
          _temp455 =  _temp452:no_undermethod(string:new("<<") , _temp453)
        else
          _error(exception:method_error(_temp452, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp452)
      if _n._less_less ~= nil then
        _temp455 = _n:_less_less(_temp453)
      elseif _n.no_undermethod ~= nil then
        _temp455 =  _n:no_undermethod(string:new("<<") , _temp453)
      else
        _error(exception:method_error(_temp452, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp452)
      if _f._less_less ~= nil then
        _temp455 = _f:_less_less(_temp453)
      elseif _f.no_undermethod ~= nil then
        _temp455 =  _f:no_undermethod(string:new("<<") , _temp453)
      else
        _error(exception:method_error(_temp452, "<<"))
      end

      elseif _temp452 == nil then
        _error(exception:null_error("_temp452", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp452))
      end

_dummy_ = _temp455 
end

    if _type(_temp449) == "function" or (_type(_temp449) == "table" and _rawget(_temp449, "__call_thing")) then
      return  _temp449(_self)

    elseif _temp449 then
      return  _temp449
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp446)
      if _t == "table" then
                      if _type(_temp446.walk) == "function" or (_type(_temp446.walk) == "table" and _rawget(_temp446.walk, "__call_thing")) then
        _dummy_ = _temp446:walk(_temp4,_temp456)
      elseif _temp446.walk ~= nil then
        _dummy_ = _temp446.walk

        elseif _temp446.no_undermethod ~= nil then
          _dummy_ =  _temp446:no_undermethod(string:new("walk") , _temp4,_temp456)
        else
          _error(exception:method_error(_temp446, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp446)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp456)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp456)
      else
        _error(exception:method_error(_temp446, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp446)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp456)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp456)
      else
        _error(exception:method_error(_temp446, "walk"))
      end

      elseif _temp446 == nil then
        _error(exception:null_error("_temp446", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp446))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp456 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp456 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp456 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp456 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp456 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp456 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp456 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp456 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp456 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_up")

local _temp466 = function (_self, _temp458,_temp457)
        if _temp458 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp457 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp457 =  null(_self)

    elseif null then
      _temp457 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp457 =  _self:null()
      elseif _self.null ~= nil then
        _temp457 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp457 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp457 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp459
local _temp460 = nil
    if _type(_temp457) == "function" or (_type(_temp457) == "table" and _rawget(_temp457, "__call_thing")) then
      _temp460 =  _temp457(_self)

    elseif _temp457 then
      _temp460 =  _temp457
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp460 =  _self:var()
      elseif _self.var ~= nil then
        _temp460 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp460 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp460 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp459 =  set_underresult(_self, _temp460)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp459 =  _self:set_underresult(_temp460)
      elseif _self.set_underresult ~= nil then
        _temp459 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp459 =  _self:no_undermethod(string:new("set_result") , _temp460)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp459 =  no_undermethod(_self, string:new("set_result") , _temp460)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp461 = nil
        local _t = _type(_temp459)
        if _t == "table" then
          if _rawget(_temp459, "__call_thing") == nil then
            _temp461 = _temp459
          else
                  if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp461 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp461 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp461 =  _temp459(_self)
      end

          end
        elseif _t == "number" then
          _temp461 = _temp459
        elseif _t == "function" then
                if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp461 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp461 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp461 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp461 =  _temp459(_self)
      end

        elseif _temp459 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp462 = nil
      local _t = _type(_temp461)
      if _t == "table" then
                      if _type(_temp461.out) == "function" or (_type(_temp461.out) == "table" and _rawget(_temp461.out, "__call_thing")) then
        _temp462 = _temp461:out()
      elseif _temp461.out ~= nil then
        _temp462 = _temp461.out

        elseif _temp461.no_undermethod ~= nil then
          _temp462 =  _temp461:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp461, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp461)
      if _n.out ~= nil then
        _temp462 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp462 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp461, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp461)
      if _f.out ~= nil then
        _temp462 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp462 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp461, "out"))
      end

      elseif _temp461 == nil then
        _error(exception:null_error("_temp461", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp461))
      end

local _temp463 = nil
local _temp464 = nil
        local _t = _type(_temp458)
        if _t == "table" then
          if _rawget(_temp458, "__call_thing") == nil then
            _temp464 = _temp458
          else
                  if _temp458 == nil then
              if _type(_self._temp458) == "function" or (_type(_self._temp458) == "table" and _rawget(_self._temp458, "__call_thing")) then
        _temp464 =  _self:_temp458()
      elseif _self._temp458 ~= nil then
        _temp464 =  _self._temp458

        elseif _self.no_undermethod ~= nil then
          _temp464 =  _self:no_undermethod(string:new("_temp458"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp464 =  _temp458(_self)
      end

          end
        elseif _t == "number" then
          _temp464 = _temp458
        elseif _t == "function" then
                if _temp458 == nil then
              if _type(_self._temp458) == "function" or (_type(_self._temp458) == "table" and _rawget(_self._temp458, "__call_thing")) then
        _temp464 =  _self:_temp458()
      elseif _self._temp458 ~= nil then
        _temp464 =  _self._temp458

        elseif _self.no_undermethod ~= nil then
          _temp464 =  _self:no_undermethod(string:new("_temp458"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp464 =  _temp458(_self)
      end

        elseif _temp458 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp464)
      if _t == "table" then
                      if _type(_temp464.method) == "function" or (_type(_temp464.method) == "table" and _rawget(_temp464.method, "__call_thing")) then
        _temp464 = _temp464:method()
      elseif _temp464.method ~= nil then
        _temp464 = _temp464.method

        elseif _temp464.no_undermethod ~= nil then
          _temp464 =  _temp464:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp464, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp464)
      if _n.method ~= nil then
        _temp464 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp464 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp464, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp464)
      if _f.method ~= nil then
        _temp464 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp464 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp464, "method"))
      end

      elseif _temp464 == nil then
        _error(exception:null_error("_temp464", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp464))
      end


local _temp465 = nil
        local _t = _type(_temp459)
        if _t == "table" then
          if _rawget(_temp459, "__call_thing") == nil then
            _temp465 = _temp459
          else
                  if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp465 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp465 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp465 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp465 =  _temp459(_self)
      end

          end
        elseif _t == "number" then
          _temp465 = _temp459
        elseif _t == "function" then
                if _temp459 == nil then
              if _type(_self._temp459) == "function" or (_type(_self._temp459) == "table" and _rawget(_self._temp459, "__call_thing")) then
        _temp465 =  _self:_temp459()
      elseif _self._temp459 ~= nil then
        _temp465 =  _self._temp459

        elseif _self.no_undermethod ~= nil then
          _temp465 =  _self:no_undermethod(string:new("_temp459"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp465 =  _temp459(_self)
      end

        elseif _temp459 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp465)
      if _t == "table" then
                      if _type(_temp465.var) == "function" or (_type(_temp465.var) == "table" and _rawget(_temp465.var, "__call_thing")) then
        _temp465 = _temp465:var()
      elseif _temp465.var ~= nil then
        _temp465 = _temp465.var

        elseif _temp465.no_undermethod ~= nil then
          _temp465 =  _temp465:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp465, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp465)
      if _n.var ~= nil then
        _temp465 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp465 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp465, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp465)
      if _f.var ~= nil then
        _temp465 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp465 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp465, "var"))
      end

      elseif _temp465 == nil then
        _error(exception:null_error("_temp465", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp465))
      end


    if _type(get_undermethod_underlocal) == "function" or (_type(get_undermethod_underlocal) == "table" and _rawget(get_undermethod_underlocal, "__call_thing")) then
      _temp463 =  get_undermethod_underlocal(_self, _temp464,_temp465)

    elseif get_undermethod_underlocal then
      _error(exception:new("Tried to invoke non-method: get_method_local (" .. object.__type(get_undermethod_underlocal) .. ")"))
    else
            if _type(_self.get_undermethod_underlocal) == "function" or (_type(_self.get_undermethod_underlocal) == "table" and _rawget(_self.get_undermethod_underlocal, "__call_thing")) then
        _temp463 =  _self:get_undermethod_underlocal(_temp464,_temp465)
      elseif _self.get_undermethod_underlocal ~= nil then
        _temp463 =  _self.get_undermethod_underlocal

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp463 =  _self:no_undermethod(string:new("get_method_local") , _temp464,_temp465)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp463 =  no_undermethod(_self, string:new("get_method_local") , _temp464,_temp465)
      else
        _error(exception:name_error("get_method_local"))
      end
    end
local _temp465
      local _t = _type(_temp462)
      if _t == "table" then
                      if _type(_temp462._less_less) == "function" or (_type(_temp462._less_less) == "table" and _rawget(_temp462._less_less, "__call_thing")) then
        _temp465 = _temp462:_less_less(_temp463)
      elseif _temp462._less_less ~= nil then
        _temp465 = _temp462._less_less

        elseif _temp462.no_undermethod ~= nil then
          _temp465 =  _temp462:no_undermethod(string:new("<<") , _temp463)
        else
          _error(exception:method_error(_temp462, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp462)
      if _n._less_less ~= nil then
        _temp465 = _n:_less_less(_temp463)
      elseif _n.no_undermethod ~= nil then
        _temp465 =  _n:no_undermethod(string:new("<<") , _temp463)
      else
        _error(exception:method_error(_temp462, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp462)
      if _f._less_less ~= nil then
        _temp465 = _f:_less_less(_temp463)
      elseif _f.no_undermethod ~= nil then
        _temp465 =  _f:no_undermethod(string:new("<<") , _temp463)
      else
        _error(exception:method_error(_temp462, "<<"))
      end

      elseif _temp462 == nil then
        _error(exception:null_error("_temp462", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp462))
      end

_dummy_ = _temp465 
end

    if _type(_temp459) == "function" or (_type(_temp459) == "table" and _rawget(_temp459, "__call_thing")) then
      return  _temp459(_self)

    elseif _temp459 then
      return  _temp459
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp456)
      if _t == "table" then
                      if _type(_temp456.walk) == "function" or (_type(_temp456.walk) == "table" and _rawget(_temp456.walk, "__call_thing")) then
        _dummy_ = _temp456:walk(_temp4,_temp466)
      elseif _temp456.walk ~= nil then
        _dummy_ = _temp456.walk

        elseif _temp456.no_undermethod ~= nil then
          _dummy_ =  _temp456:no_undermethod(string:new("walk") , _temp4,_temp466)
        else
          _error(exception:method_error(_temp456, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp456)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp466)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp466)
      else
        _error(exception:method_error(_temp456, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp456)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp466)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp466)
      else
        _error(exception:method_error(_temp456, "walk"))
      end

      elseif _temp456 == nil then
        _error(exception:null_error("_temp456", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp456))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp466 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp466 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp466 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp466 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp466 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp466 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp466 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp466 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp466 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp466 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access_self")

local _temp476 = function (_self, _temp468,_temp467)
        if _temp468 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp467 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp467 =  null(_self)

    elseif null then
      _temp467 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp467 =  _self:null()
      elseif _self.null ~= nil then
        _temp467 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp467 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp467 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp469
local _temp470 = nil
    if _type(_temp467) == "function" or (_type(_temp467) == "table" and _rawget(_temp467, "__call_thing")) then
      _temp470 =  _temp467(_self)

    elseif _temp467 then
      _temp470 =  _temp467
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp470 =  _self:var()
      elseif _self.var ~= nil then
        _temp470 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp470 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp470 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp469 =  set_underresult(_self, _temp470)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp469 =  _self:set_underresult(_temp470)
      elseif _self.set_underresult ~= nil then
        _temp469 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp469 =  _self:no_undermethod(string:new("set_result") , _temp470)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp469 =  no_undermethod(_self, string:new("set_result") , _temp470)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp471 = nil
        local _t = _type(_temp469)
        if _t == "table" then
          if _rawget(_temp469, "__call_thing") == nil then
            _temp471 = _temp469
          else
                  if _temp469 == nil then
              if _type(_self._temp469) == "function" or (_type(_self._temp469) == "table" and _rawget(_self._temp469, "__call_thing")) then
        _temp471 =  _self:_temp469()
      elseif _self._temp469 ~= nil then
        _temp471 =  _self._temp469

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp469"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp471 =  _temp469(_self)
      end

          end
        elseif _t == "number" then
          _temp471 = _temp469
        elseif _t == "function" then
                if _temp469 == nil then
              if _type(_self._temp469) == "function" or (_type(_self._temp469) == "table" and _rawget(_self._temp469, "__call_thing")) then
        _temp471 =  _self:_temp469()
      elseif _self._temp469 ~= nil then
        _temp471 =  _self._temp469

        elseif _self.no_undermethod ~= nil then
          _temp471 =  _self:no_undermethod(string:new("_temp469"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp471 =  _temp469(_self)
      end

        elseif _temp469 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp472 = nil
      local _t = _type(_temp471)
      if _t == "table" then
                      if _type(_temp471.out) == "function" or (_type(_temp471.out) == "table" and _rawget(_temp471.out, "__call_thing")) then
        _temp472 = _temp471:out()
      elseif _temp471.out ~= nil then
        _temp472 = _temp471.out

        elseif _temp471.no_undermethod ~= nil then
          _temp472 =  _temp471:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp471, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp471)
      if _n.out ~= nil then
        _temp472 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp472 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp471, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp471)
      if _f.out ~= nil then
        _temp472 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp472 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp471, "out"))
      end

      elseif _temp471 == nil then
        _error(exception:null_error("_temp471", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp471))
      end

local _temp473 = nil
local _temp474 = nil
        local _t = _type(_temp468)
        if _t == "table" then
          if _rawget(_temp468, "__call_thing") == nil then
            _temp474 = _temp468
          else
                  if _temp468 == nil then
              if _type(_self._temp468) == "function" or (_type(_self._temp468) == "table" and _rawget(_self._temp468, "__call_thing")) then
        _temp474 =  _self:_temp468()
      elseif _self._temp468 ~= nil then
        _temp474 =  _self._temp468

        elseif _self.no_undermethod ~= nil then
          _temp474 =  _self:no_undermethod(string:new("_temp468"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp474 =  _temp468(_self)
      end

          end
        elseif _t == "number" then
          _temp474 = _temp468
        elseif _t == "function" then
                if _temp468 == nil then
              if _type(_self._temp468) == "function" or (_type(_self._temp468) == "table" and _rawget(_self._temp468, "__call_thing")) then
        _temp474 =  _self:_temp468()
      elseif _self._temp468 ~= nil then
        _temp474 =  _self._temp468

        elseif _self.no_undermethod ~= nil then
          _temp474 =  _self:no_undermethod(string:new("_temp468"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp474 =  _temp468(_self)
      end

        elseif _temp468 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp474)
      if _t == "table" then
                      if _type(_temp474.method) == "function" or (_type(_temp474.method) == "table" and _rawget(_temp474.method, "__call_thing")) then
        _temp474 = _temp474:method()
      elseif _temp474.method ~= nil then
        _temp474 = _temp474.method

        elseif _temp474.no_undermethod ~= nil then
          _temp474 =  _temp474:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp474, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp474)
      if _n.method ~= nil then
        _temp474 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp474 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp474, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp474)
      if _f.method ~= nil then
        _temp474 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp474 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp474, "method"))
      end

      elseif _temp474 == nil then
        _error(exception:null_error("_temp474", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp474))
      end


local _temp475 = nil
        local _t = _type(_temp469)
        if _t == "table" then
          if _rawget(_temp469, "__call_thing") == nil then
            _temp475 = _temp469
          else
                  if _temp469 == nil then
              if _type(_self._temp469) == "function" or (_type(_self._temp469) == "table" and _rawget(_self._temp469, "__call_thing")) then
        _temp475 =  _self:_temp469()
      elseif _self._temp469 ~= nil then
        _temp475 =  _self._temp469

        elseif _self.no_undermethod ~= nil then
          _temp475 =  _self:no_undermethod(string:new("_temp469"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp475 =  _temp469(_self)
      end

          end
        elseif _t == "number" then
          _temp475 = _temp469
        elseif _t == "function" then
                if _temp469 == nil then
              if _type(_self._temp469) == "function" or (_type(_self._temp469) == "table" and _rawget(_self._temp469, "__call_thing")) then
        _temp475 =  _self:_temp469()
      elseif _self._temp469 ~= nil then
        _temp475 =  _self._temp469

        elseif _self.no_undermethod ~= nil then
          _temp475 =  _self:no_undermethod(string:new("_temp469"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp475 =  _temp469(_self)
      end

        elseif _temp469 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp475)
      if _t == "table" then
                      if _type(_temp475.var) == "function" or (_type(_temp475.var) == "table" and _rawget(_temp475.var, "__call_thing")) then
        _temp475 = _temp475:var()
      elseif _temp475.var ~= nil then
        _temp475 = _temp475.var

        elseif _temp475.no_undermethod ~= nil then
          _temp475 =  _temp475:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp475, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp475)
      if _n.var ~= nil then
        _temp475 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp475 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp475, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp475)
      if _f.var ~= nil then
        _temp475 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp475 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp475, "var"))
      end

      elseif _temp475 == nil then
        _error(exception:null_error("_temp475", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp475))
      end


    if _type(get_undermethod_underself) == "function" or (_type(get_undermethod_underself) == "table" and _rawget(get_undermethod_underself, "__call_thing")) then
      _temp473 =  get_undermethod_underself(_self, _temp474,_temp475)

    elseif get_undermethod_underself then
      _error(exception:new("Tried to invoke non-method: get_method_self (" .. object.__type(get_undermethod_underself) .. ")"))
    else
            if _type(_self.get_undermethod_underself) == "function" or (_type(_self.get_undermethod_underself) == "table" and _rawget(_self.get_undermethod_underself, "__call_thing")) then
        _temp473 =  _self:get_undermethod_underself(_temp474,_temp475)
      elseif _self.get_undermethod_underself ~= nil then
        _temp473 =  _self.get_undermethod_underself

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp473 =  _self:no_undermethod(string:new("get_method_self") , _temp474,_temp475)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp473 =  no_undermethod(_self, string:new("get_method_self") , _temp474,_temp475)
      else
        _error(exception:name_error("get_method_self"))
      end
    end
local _temp475
      local _t = _type(_temp472)
      if _t == "table" then
                      if _type(_temp472._less_less) == "function" or (_type(_temp472._less_less) == "table" and _rawget(_temp472._less_less, "__call_thing")) then
        _temp475 = _temp472:_less_less(_temp473)
      elseif _temp472._less_less ~= nil then
        _temp475 = _temp472._less_less

        elseif _temp472.no_undermethod ~= nil then
          _temp475 =  _temp472:no_undermethod(string:new("<<") , _temp473)
        else
          _error(exception:method_error(_temp472, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp472)
      if _n._less_less ~= nil then
        _temp475 = _n:_less_less(_temp473)
      elseif _n.no_undermethod ~= nil then
        _temp475 =  _n:no_undermethod(string:new("<<") , _temp473)
      else
        _error(exception:method_error(_temp472, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp472)
      if _f._less_less ~= nil then
        _temp475 = _f:_less_less(_temp473)
      elseif _f.no_undermethod ~= nil then
        _temp475 =  _f:no_undermethod(string:new("<<") , _temp473)
      else
        _error(exception:method_error(_temp472, "<<"))
      end

      elseif _temp472 == nil then
        _error(exception:null_error("_temp472", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp472))
      end

_dummy_ = _temp475 
end

    if _type(_temp469) == "function" or (_type(_temp469) == "table" and _rawget(_temp469, "__call_thing")) then
      return  _temp469(_self)

    elseif _temp469 then
      return  _temp469
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp466)
      if _t == "table" then
                      if _type(_temp466.walk) == "function" or (_type(_temp466.walk) == "table" and _rawget(_temp466.walk, "__call_thing")) then
        _dummy_ = _temp466:walk(_temp4,_temp476)
      elseif _temp466.walk ~= nil then
        _dummy_ = _temp466.walk

        elseif _temp466.no_undermethod ~= nil then
          _dummy_ =  _temp466:no_undermethod(string:new("walk") , _temp4,_temp476)
        else
          _error(exception:method_error(_temp466, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp466)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp476)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp476)
      else
        _error(exception:method_error(_temp466, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp466)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp476)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp476)
      else
        _error(exception:method_error(_temp466, "walk"))
      end

      elseif _temp466 == nil then
        _error(exception:null_error("_temp466", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp466))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp476 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp476 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp476 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp476 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp476 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp476 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp476 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp476 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp476 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp476 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("meth_access")

local _temp492 = function (_self, _temp478,_temp477)
        if _temp478 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp477 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp477 =  null(_self)

    elseif null then
      _temp477 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp477 =  _self:null()
      elseif _self.null ~= nil then
        _temp477 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp477 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp477 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp479
local _temp480 = nil
    if _type(_temp477) == "function" or (_type(_temp477) == "table" and _rawget(_temp477, "__call_thing")) then
      _temp480 =  _temp477(_self)

    elseif _temp477 then
      _temp480 =  _temp477
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp480 =  _self:var()
      elseif _self.var ~= nil then
        _temp480 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp480 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp480 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp479 =  set_underresult(_self, _temp480)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp479 =  _self:set_underresult(_temp480)
      elseif _self.set_underresult ~= nil then
        _temp479 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp479 =  _self:no_undermethod(string:new("set_result") , _temp480)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp479 =  no_undermethod(_self, string:new("set_result") , _temp480)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp481
        local _t = _type(_temp478)
        if _t == "table" then
          if _rawget(_temp478, "__call_thing") == nil then
            _temp480 = _temp478
          else
                  if _temp478 == nil then
              if _type(_self._temp478) == "function" or (_type(_self._temp478) == "table" and _rawget(_self._temp478, "__call_thing")) then
        _temp480 =  _self:_temp478()
      elseif _self._temp478 ~= nil then
        _temp480 =  _self._temp478

        elseif _self.no_undermethod ~= nil then
          _temp480 =  _self:no_undermethod(string:new("_temp478"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp480 =  _temp478(_self)
      end

          end
        elseif _t == "number" then
          _temp480 = _temp478
        elseif _t == "function" then
                if _temp478 == nil then
              if _type(_self._temp478) == "function" or (_type(_self._temp478) == "table" and _rawget(_self._temp478, "__call_thing")) then
        _temp480 =  _self:_temp478()
      elseif _self._temp478 ~= nil then
        _temp480 =  _self._temp478

        elseif _self.no_undermethod ~= nil then
          _temp480 =  _self:no_undermethod(string:new("_temp478"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp480 =  _temp478(_self)
      end

        elseif _temp478 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp480)
      if _t == "table" then
                      if _type(_temp480.target) == "function" or (_type(_temp480.target) == "table" and _rawget(_temp480.target, "__call_thing")) then
        _temp480 = _temp480:target()
      elseif _temp480.target ~= nil then
        _temp480 = _temp480.target

        elseif _temp480.no_undermethod ~= nil then
          _temp480 =  _temp480:no_undermethod(string:new("target"))
        else
          _error(exception:method_error(_temp480, "target"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp480)
      if _n.target ~= nil then
        _temp480 = _n:target()
      elseif _n.no_undermethod ~= nil then
        _temp480 =  _n:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp480, "target"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp480)
      if _f.target ~= nil then
        _temp480 = _f:target()
      elseif _f.no_undermethod ~= nil then
        _temp480 =  _f:no_undermethod(string:new("target"))
      else
        _error(exception:method_error(_temp480, "target"))
      end

      elseif _temp480 == nil then
        _error(exception:null_error("_temp480", "invoke target on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp480))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp481 =  process(_self, _temp480)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp481 =  _self:process(_temp480)
      elseif _self.process ~= nil then
        _temp481 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp481 =  _self:no_undermethod(string:new("process") , _temp480)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp481 =  no_undermethod(_self, string:new("process") , _temp480)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp482 = nil
        local _t = _type(_temp479)
        if _t == "table" then
          if _rawget(_temp479, "__call_thing") == nil then
            _temp482 = _temp479
          else
                  if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp482 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp482 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp482 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp482 =  _temp479(_self)
      end

          end
        elseif _t == "number" then
          _temp482 = _temp479
        elseif _t == "function" then
                if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp482 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp482 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp482 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp482 =  _temp479(_self)
      end

        elseif _temp479 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp483 = nil
      local _t = _type(_temp482)
      if _t == "table" then
                      if _type(_temp482.out) == "function" or (_type(_temp482.out) == "table" and _rawget(_temp482.out, "__call_thing")) then
        _temp483 = _temp482:out()
      elseif _temp482.out ~= nil then
        _temp483 = _temp482.out

        elseif _temp482.no_undermethod ~= nil then
          _temp483 =  _temp482:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp482, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp482)
      if _n.out ~= nil then
        _temp483 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp483 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp482, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp482)
      if _f.out ~= nil then
        _temp483 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp483 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp482, "out"))
      end

      elseif _temp482 == nil then
        _error(exception:null_error("_temp482", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp482))
      end

local _temp484 = nil
        local _t = _type(_temp481)
        if _t == "table" then
          if _rawget(_temp481, "__call_thing") == nil then
            _temp484 = _temp481
          else
                  if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp484 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp484 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp484 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp484 =  _temp481(_self)
      end

          end
        elseif _t == "number" then
          _temp484 = _temp481
        elseif _t == "function" then
                if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp484 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp484 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp484 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp484 =  _temp481(_self)
      end

        elseif _temp481 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp484)
      if _t == "table" then
                      if _type(_temp484.out) == "function" or (_type(_temp484.out) == "table" and _rawget(_temp484.out, "__call_thing")) then
        _temp484 = _temp484:out()
      elseif _temp484.out ~= nil then
        _temp484 = _temp484.out

        elseif _temp484.no_undermethod ~= nil then
          _temp484 =  _temp484:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp484, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp484)
      if _n.out ~= nil then
        _temp484 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp484 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp484, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp484)
      if _f.out ~= nil then
        _temp484 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp484 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp484, "out"))
      end

      elseif _temp484 == nil then
        _error(exception:null_error("_temp484", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp484))
      end

local _temp485
      local _t = _type(_temp483)
      if _t == "table" then
                      if _type(_temp483._less_less) == "function" or (_type(_temp483._less_less) == "table" and _rawget(_temp483._less_less, "__call_thing")) then
        _temp485 = _temp483:_less_less(_temp484)
      elseif _temp483._less_less ~= nil then
        _temp485 = _temp483._less_less

        elseif _temp483.no_undermethod ~= nil then
          _temp485 =  _temp483:no_undermethod(string:new("<<") , _temp484)
        else
          _error(exception:method_error(_temp483, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp483)
      if _n._less_less ~= nil then
        _temp485 = _n:_less_less(_temp484)
      elseif _n.no_undermethod ~= nil then
        _temp485 =  _n:no_undermethod(string:new("<<") , _temp484)
      else
        _error(exception:method_error(_temp483, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp483)
      if _f._less_less ~= nil then
        _temp485 = _f:_less_less(_temp484)
      elseif _f.no_undermethod ~= nil then
        _temp485 =  _f:no_undermethod(string:new("<<") , _temp484)
      else
        _error(exception:method_error(_temp483, "<<"))
      end

      elseif _temp483 == nil then
        _error(exception:null_error("_temp483", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp483))
      end

_dummy_ = _temp485 
end

do
local _temp486 = nil
        local _t = _type(_temp479)
        if _t == "table" then
          if _rawget(_temp479, "__call_thing") == nil then
            _temp486 = _temp479
          else
                  if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp486 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp486 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp486 =  _temp479(_self)
      end

          end
        elseif _t == "number" then
          _temp486 = _temp479
        elseif _t == "function" then
                if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp486 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp486 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp486 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp486 =  _temp479(_self)
      end

        elseif _temp479 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp487 = nil
      local _t = _type(_temp486)
      if _t == "table" then
                      if _type(_temp486.out) == "function" or (_type(_temp486.out) == "table" and _rawget(_temp486.out, "__call_thing")) then
        _temp487 = _temp486:out()
      elseif _temp486.out ~= nil then
        _temp487 = _temp486.out

        elseif _temp486.no_undermethod ~= nil then
          _temp487 =  _temp486:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp486, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp486)
      if _n.out ~= nil then
        _temp487 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp487 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp486, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp486)
      if _f.out ~= nil then
        _temp487 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp487 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp486, "out"))
      end

      elseif _temp486 == nil then
        _error(exception:null_error("_temp486", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp486))
      end

local _temp488 = nil
local _temp489 = nil
        local _t = _type(_temp481)
        if _t == "table" then
          if _rawget(_temp481, "__call_thing") == nil then
            _temp489 = _temp481
          else
                  if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp489 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp489 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp489 =  _temp481(_self)
      end

          end
        elseif _t == "number" then
          _temp489 = _temp481
        elseif _t == "function" then
                if _temp481 == nil then
              if _type(_self._temp481) == "function" or (_type(_self._temp481) == "table" and _rawget(_self._temp481, "__call_thing")) then
        _temp489 =  _self:_temp481()
      elseif _self._temp481 ~= nil then
        _temp489 =  _self._temp481

        elseif _self.no_undermethod ~= nil then
          _temp489 =  _self:no_undermethod(string:new("_temp481"))
        else
          _error(exception:null_error("target", "invoke method"))
        end
      else 
        _temp489 =  _temp481(_self)
      end

        elseif _temp481 == nil then
          _error(exception:null_error("target", "cannot call method on it"))
        else
          _error(exception:method_error("self", "target"))
        end
      local _t = _type(_temp489)
      if _t == "table" then
                      if _type(_temp489.var) == "function" or (_type(_temp489.var) == "table" and _rawget(_temp489.var, "__call_thing")) then
        _temp489 = _temp489:var()
      elseif _temp489.var ~= nil then
        _temp489 = _temp489.var

        elseif _temp489.no_undermethod ~= nil then
          _temp489 =  _temp489:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp489, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp489)
      if _n.var ~= nil then
        _temp489 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp489 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp489, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp489)
      if _f.var ~= nil then
        _temp489 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp489 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp489, "var"))
      end

      elseif _temp489 == nil then
        _error(exception:null_error("_temp489", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp489))
      end


local _temp490 = nil
        local _t = _type(_temp478)
        if _t == "table" then
          if _rawget(_temp478, "__call_thing") == nil then
            _temp490 = _temp478
          else
                  if _temp478 == nil then
              if _type(_self._temp478) == "function" or (_type(_self._temp478) == "table" and _rawget(_self._temp478, "__call_thing")) then
        _temp490 =  _self:_temp478()
      elseif _self._temp478 ~= nil then
        _temp490 =  _self._temp478

        elseif _self.no_undermethod ~= nil then
          _temp490 =  _self:no_undermethod(string:new("_temp478"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp490 =  _temp478(_self)
      end

          end
        elseif _t == "number" then
          _temp490 = _temp478
        elseif _t == "function" then
                if _temp478 == nil then
              if _type(_self._temp478) == "function" or (_type(_self._temp478) == "table" and _rawget(_self._temp478, "__call_thing")) then
        _temp490 =  _self:_temp478()
      elseif _self._temp478 ~= nil then
        _temp490 =  _self._temp478

        elseif _self.no_undermethod ~= nil then
          _temp490 =  _self:no_undermethod(string:new("_temp478"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp490 =  _temp478(_self)
      end

        elseif _temp478 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp490)
      if _t == "table" then
                      if _type(_temp490.method) == "function" or (_type(_temp490.method) == "table" and _rawget(_temp490.method, "__call_thing")) then
        _temp490 = _temp490:method()
      elseif _temp490.method ~= nil then
        _temp490 = _temp490.method

        elseif _temp490.no_undermethod ~= nil then
          _temp490 =  _temp490:no_undermethod(string:new("method"))
        else
          _error(exception:method_error(_temp490, "method"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp490)
      if _n.method ~= nil then
        _temp490 = _n:method()
      elseif _n.no_undermethod ~= nil then
        _temp490 =  _n:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp490, "method"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp490)
      if _f.method ~= nil then
        _temp490 = _f:method()
      elseif _f.no_undermethod ~= nil then
        _temp490 =  _f:no_undermethod(string:new("method"))
      else
        _error(exception:method_error(_temp490, "method"))
      end

      elseif _temp490 == nil then
        _error(exception:null_error("_temp490", "invoke method on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp490))
      end


local _temp491 = nil
        local _t = _type(_temp479)
        if _t == "table" then
          if _rawget(_temp479, "__call_thing") == nil then
            _temp491 = _temp479
          else
                  if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp491 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp491 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp491 =  _temp479(_self)
      end

          end
        elseif _t == "number" then
          _temp491 = _temp479
        elseif _t == "function" then
                if _temp479 == nil then
              if _type(_self._temp479) == "function" or (_type(_self._temp479) == "table" and _rawget(_self._temp479, "__call_thing")) then
        _temp491 =  _self:_temp479()
      elseif _self._temp479 ~= nil then
        _temp491 =  _self._temp479

        elseif _self.no_undermethod ~= nil then
          _temp491 =  _self:no_undermethod(string:new("_temp479"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp491 =  _temp479(_self)
      end

        elseif _temp479 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp491)
      if _t == "table" then
                      if _type(_temp491.var) == "function" or (_type(_temp491.var) == "table" and _rawget(_temp491.var, "__call_thing")) then
        _temp491 = _temp491:var()
      elseif _temp491.var ~= nil then
        _temp491 = _temp491.var

        elseif _temp491.no_undermethod ~= nil then
          _temp491 =  _temp491:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp491, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp491)
      if _n.var ~= nil then
        _temp491 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp491 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp491, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp491)
      if _f.var ~= nil then
        _temp491 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp491 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp491, "var"))
      end

      elseif _temp491 == nil then
        _error(exception:null_error("_temp491", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp491))
      end


    if _type(get_undermethod) == "function" or (_type(get_undermethod) == "table" and _rawget(get_undermethod, "__call_thing")) then
      _temp488 =  get_undermethod(_self, _temp489,_temp490,_temp491)

    elseif get_undermethod then
      _error(exception:new("Tried to invoke non-method: get_method (" .. object.__type(get_undermethod) .. ")"))
    else
            if _type(_self.get_undermethod) == "function" or (_type(_self.get_undermethod) == "table" and _rawget(_self.get_undermethod, "__call_thing")) then
        _temp488 =  _self:get_undermethod(_temp489,_temp490,_temp491)
      elseif _self.get_undermethod ~= nil then
        _temp488 =  _self.get_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp488 =  _self:no_undermethod(string:new("get_method") , _temp489,_temp490,_temp491)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp488 =  no_undermethod(_self, string:new("get_method") , _temp489,_temp490,_temp491)
      else
        _error(exception:name_error("get_method"))
      end
    end
local _temp491
      local _t = _type(_temp487)
      if _t == "table" then
                      if _type(_temp487._less_less) == "function" or (_type(_temp487._less_less) == "table" and _rawget(_temp487._less_less, "__call_thing")) then
        _temp491 = _temp487:_less_less(_temp488)
      elseif _temp487._less_less ~= nil then
        _temp491 = _temp487._less_less

        elseif _temp487.no_undermethod ~= nil then
          _temp491 =  _temp487:no_undermethod(string:new("<<") , _temp488)
        else
          _error(exception:method_error(_temp487, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp487)
      if _n._less_less ~= nil then
        _temp491 = _n:_less_less(_temp488)
      elseif _n.no_undermethod ~= nil then
        _temp491 =  _n:no_undermethod(string:new("<<") , _temp488)
      else
        _error(exception:method_error(_temp487, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp487)
      if _f._less_less ~= nil then
        _temp491 = _f:_less_less(_temp488)
      elseif _f.no_undermethod ~= nil then
        _temp491 =  _f:no_undermethod(string:new("<<") , _temp488)
      else
        _error(exception:method_error(_temp487, "<<"))
      end

      elseif _temp487 == nil then
        _error(exception:null_error("_temp487", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp487))
      end

_dummy_ = _temp491 
end

    if _type(_temp479) == "function" or (_type(_temp479) == "table" and _rawget(_temp479, "__call_thing")) then
      return  _temp479(_self)

    elseif _temp479 then
      return  _temp479
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp476)
      if _t == "table" then
                      if _type(_temp476.walk) == "function" or (_type(_temp476.walk) == "table" and _rawget(_temp476.walk, "__call_thing")) then
        _dummy_ = _temp476:walk(_temp4,_temp492)
      elseif _temp476.walk ~= nil then
        _dummy_ = _temp476.walk

        elseif _temp476.no_undermethod ~= nil then
          _dummy_ =  _temp476:no_undermethod(string:new("walk") , _temp4,_temp492)
        else
          _error(exception:method_error(_temp476, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp476)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp492)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp492)
      else
        _error(exception:method_error(_temp476, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp476)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp492)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp492)
      else
        _error(exception:method_error(_temp476, "walk"))
      end

      elseif _temp476 == nil then
        _error(exception:null_error("_temp476", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp476))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp492 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp492 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp492 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp492 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp492 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp492 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp492 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp492 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp492 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp492 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("regex")

local _temp502 = function (_self, _temp494,_temp493)
        if _temp494 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp493 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp493 =  null(_self)

    elseif null then
      _temp493 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp493 =  _self:null()
      elseif _self.null ~= nil then
        _temp493 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp493 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp493 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp495
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp495 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp495 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp495 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp495 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp495 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp495 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp495 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp495 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp495 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp495 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.body) == "function" or (_type(_temp495.body) == "table" and _rawget(_temp495.body, "__call_thing")) then
        _temp495 = _temp495:body()
      elseif _temp495.body ~= nil then
        _temp495 = _temp495.body

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("body"))
        else
          _error(exception:method_error("body", "body"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.body ~= nil then
        _temp495 = _n:body()
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.body ~= nil then
        _temp495 = _f:body()
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("body"))
      else
        _error(exception:method_error("body", "body"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("body", "invoke body on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end

local _temp496 = regex:new("[\\\\]")

local _temp497 = string:new("\\\\")

      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.sub) == "function" or (_type(_temp495.sub) == "table" and _rawget(_temp495.sub, "__call_thing")) then
        _temp495 = _temp495:sub(_temp496,_temp497)
      elseif _temp495.sub ~= nil then
        _temp495 = _temp495.sub

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("sub") , _temp496,_temp497)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.sub ~= nil then
        _temp495 = _n:sub(_temp496,_temp497)
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("sub") , _temp496,_temp497)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.sub ~= nil then
        _temp495 = _f:sub(_temp496,_temp497)
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("sub") , _temp496,_temp497)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end

local _temp497 = regex:new("\"")

_temp496 = string:new("\\\"")

      local _t = _type(_temp495)
      if _t == "table" then
                      if _type(_temp495.sub) == "function" or (_type(_temp495.sub) == "table" and _rawget(_temp495.sub, "__call_thing")) then
        _temp495 = _temp495:sub(_temp497,_temp496)
      elseif _temp495.sub ~= nil then
        _temp495 = _temp495.sub

        elseif _temp495.no_undermethod ~= nil then
          _temp495 =  _temp495:no_undermethod(string:new("sub") , _temp497,_temp496)
        else
          _error(exception:method_error("body", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp495)
      if _n.sub ~= nil then
        _temp495 = _n:sub(_temp497,_temp496)
      elseif _n.no_undermethod ~= nil then
        _temp495 =  _n:no_undermethod(string:new("sub") , _temp497,_temp496)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp495)
      if _f.sub ~= nil then
        _temp495 = _f:sub(_temp497,_temp496)
      elseif _f.no_undermethod ~= nil then
        _temp495 =  _f:no_undermethod(string:new("sub") , _temp497,_temp496)
      else
        _error(exception:method_error("body", "sub"))
      end

      elseif _temp495 == nil then
        _error(exception:null_error("body", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp495))
      end


local _temp498
        local _t = _type(_temp494)
        if _t == "table" then
          if _rawget(_temp494, "__call_thing") == nil then
            _temp498 = _temp494
          else
                  if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp498 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp498 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp498 =  _temp494(_self)
      end

          end
        elseif _t == "number" then
          _temp498 = _temp494
        elseif _t == "function" then
                if _temp494 == nil then
              if _type(_self._temp494) == "function" or (_type(_self._temp494) == "table" and _rawget(_self._temp494, "__call_thing")) then
        _temp498 =  _self:_temp494()
      elseif _self._temp494 ~= nil then
        _temp498 =  _self._temp494

        elseif _self.no_undermethod ~= nil then
          _temp498 =  _self:no_undermethod(string:new("_temp494"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp498 =  _temp494(_self)
      end

        elseif _temp494 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.opts) == "function" or (_type(_temp498.opts) == "table" and _rawget(_temp498.opts, "__call_thing")) then
        _temp498 = _temp498:opts()
      elseif _temp498.opts ~= nil then
        _temp498 = _temp498.opts

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("opts"))
        else
          _error(exception:method_error("opts", "opts"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.opts ~= nil then
        _temp498 = _n:opts()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.opts ~= nil then
        _temp498 = _f:opts()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("opts"))
      else
        _error(exception:method_error("opts", "opts"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("opts", "invoke opts on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.dice) == "function" or (_type(_temp498.dice) == "table" and _rawget(_temp498.dice, "__call_thing")) then
        _temp498 = _temp498:dice()
      elseif _temp498.dice ~= nil then
        _temp498 = _temp498.dice

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("dice"))
        else
          _error(exception:method_error("opts", "dice"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.dice ~= nil then
        _temp498 = _n:dice()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.dice ~= nil then
        _temp498 = _f:dice()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("dice"))
      else
        _error(exception:method_error("opts", "dice"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("opts", "invoke dice on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.unique) == "function" or (_type(_temp498.unique) == "table" and _rawget(_temp498.unique, "__call_thing")) then
        _temp498 = _temp498:unique()
      elseif _temp498.unique ~= nil then
        _temp498 = _temp498.unique

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("unique"))
        else
          _error(exception:method_error("opts", "unique"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.unique ~= nil then
        _temp498 = _n:unique()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.unique ~= nil then
        _temp498 = _f:unique()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("unique"))
      else
        _error(exception:method_error("opts", "unique"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("opts", "invoke unique on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.join) == "function" or (_type(_temp498.join) == "table" and _rawget(_temp498.join, "__call_thing")) then
        _temp498 = _temp498:join()
      elseif _temp498.join ~= nil then
        _temp498 = _temp498.join

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("join"))
        else
          _error(exception:method_error("opts", "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.join ~= nil then
        _temp498 = _n:join()
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.join ~= nil then
        _temp498 = _f:join()
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("join"))
      else
        _error(exception:method_error("opts", "join"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("opts", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end

local _temp496 = regex:new("m")

_temp497 = string:new("s")

      local _t = _type(_temp498)
      if _t == "table" then
                      if _type(_temp498.sub) == "function" or (_type(_temp498.sub) == "table" and _rawget(_temp498.sub, "__call_thing")) then
        _temp498 = _temp498:sub(_temp496,_temp497)
      elseif _temp498.sub ~= nil then
        _temp498 = _temp498.sub

        elseif _temp498.no_undermethod ~= nil then
          _temp498 =  _temp498:no_undermethod(string:new("sub") , _temp496,_temp497)
        else
          _error(exception:method_error("opts", "sub"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp498)
      if _n.sub ~= nil then
        _temp498 = _n:sub(_temp496,_temp497)
      elseif _n.no_undermethod ~= nil then
        _temp498 =  _n:no_undermethod(string:new("sub") , _temp496,_temp497)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp498)
      if _f.sub ~= nil then
        _temp498 = _f:sub(_temp496,_temp497)
      elseif _f.no_undermethod ~= nil then
        _temp498 =  _f:no_undermethod(string:new("sub") , _temp496,_temp497)
      else
        _error(exception:method_error("opts", "sub"))
      end

      elseif _temp498 == nil then
        _error(exception:null_error("opts", "invoke sub on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp498))
      end


    if _type(_temp493) == "function" or (_type(_temp493) == "table" and _rawget(_temp493, "__call_thing")) then
      _temp497 =  _temp493(_self)

    elseif _temp493 then
      _temp497 =  _temp493
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp497 =  _self:var()
      elseif _self.var ~= nil then
        _temp497 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp497 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp497 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

do
local _temp499 = nil
    if _type(_temp495) == "function" or (_type(_temp495) == "table" and _rawget(_temp495, "__call_thing")) then
      _temp499 =  _temp495(_self)

    elseif _temp495 then
      _temp499 =  _temp495
    else
            if _type(_self.body) == "function" or (_type(_self.body) == "table" and _rawget(_self.body, "__call_thing")) then
        _temp499 =  _self:body()
      elseif _self.body ~= nil then
        _temp499 =  _self.body

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp499 =  _self:no_undermethod(string:new("body"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp499 =  no_undermethod(_self, string:new("body"))
      else
        _error(exception:name_error("body"))
      end
    end

local _temp500 = nil
    if _type(_temp498) == "function" or (_type(_temp498) == "table" and _rawget(_temp498, "__call_thing")) then
      _temp500 =  _temp498(_self)

    elseif _temp498 then
      _temp500 =  _temp498
    else
            if _type(_self.opts) == "function" or (_type(_self.opts) == "table" and _rawget(_self.opts, "__call_thing")) then
        _temp500 =  _self:opts()
      elseif _self.opts ~= nil then
        _temp500 =  _self.opts

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp500 =  _self:no_undermethod(string:new("opts"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp500 =  no_undermethod(_self, string:new("opts"))
      else
        _error(exception:name_error("opts"))
      end
    end

_temp496 = string:new("regex:new(\"" .. _tostring(_temp499) .. "\", \"" .. _tostring(_temp500) .. "\")")
end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      return  set_underresult(_self, _temp497,_temp496)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        return  _self:set_underresult(_temp497,_temp496)
      elseif _self.set_underresult ~= nil then
        return  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set_result") , _temp497,_temp496)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set_result") , _temp497,_temp496)
      else
        _error(exception:name_error("set_result"))
      end
    end

end

      local _t = _type(_temp492)
      if _t == "table" then
                      if _type(_temp492.walk) == "function" or (_type(_temp492.walk) == "table" and _rawget(_temp492.walk, "__call_thing")) then
        _dummy_ = _temp492:walk(_temp4,_temp502)
      elseif _temp492.walk ~= nil then
        _dummy_ = _temp492.walk

        elseif _temp492.no_undermethod ~= nil then
          _dummy_ =  _temp492:no_undermethod(string:new("walk") , _temp4,_temp502)
        else
          _error(exception:method_error(_temp492, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp492)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp502)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp502)
      else
        _error(exception:method_error(_temp492, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp492)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp502)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp502)
      else
        _error(exception:method_error(_temp492, "walk"))
      end

      elseif _temp492 == nil then
        _error(exception:null_error("_temp492", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp492))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp502 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp502 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp502 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp502 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp502 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp502 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp502 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp502 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp502 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_interp")

_temp506 = function (_self, _temp504,_temp503)
        if _temp504 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp503 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp503 =  null(_self)

    elseif null then
      _temp503 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp503 =  _self:null()
      elseif _self.null ~= nil then
        _temp503 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp503 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp503 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp505
local _temp506 = nil
    if _type(_temp503) == "function" or (_type(_temp503) == "table" and _rawget(_temp503, "__call_thing")) then
      _temp506 =  _temp503(_self)

    elseif _temp503 then
      _temp506 =  _temp503
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp506 =  _self:var()
      elseif _self.var ~= nil then
        _temp506 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp506 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp506 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp505 =  set_underresult(_self, _temp506)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp505 =  _self:set_underresult(_temp506)
      elseif _self.set_underresult ~= nil then
        _temp505 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp505 =  _self:no_undermethod(string:new("set_result") , _temp506)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp505 =  no_undermethod(_self, string:new("set_result") , _temp506)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp507
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp507 =  _self:my()
      elseif _self.my ~= nil then
        _temp507 =  _self.my

        elseif my ~= nil then
          _temp507 = my;
        else
          _error(exception:method_error("self", "my"))
        end
      local _t = _type(_temp507)
      if _t == "table" then
                      if _type(_temp507.env) == "function" or (_type(_temp507.env) == "table" and _rawget(_temp507.env, "__call_thing")) then
        _temp507 = _temp507:env()
      elseif _temp507.env ~= nil then
        _temp507 = _temp507.env

        elseif _temp507.no_undermethod ~= nil then
          _temp507 =  _temp507:no_undermethod(string:new("env"))
        else
          _error(exception:method_error("temp", "env"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp507)
      if _n.env ~= nil then
        _temp507 = _n:env()
      elseif _n.no_undermethod ~= nil then
        _temp507 =  _n:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp507)
      if _f.env ~= nil then
        _temp507 = _f:env()
      elseif _f.no_undermethod ~= nil then
        _temp507 =  _f:no_undermethod(string:new("env"))
      else
        _error(exception:method_error("temp", "env"))
      end

      elseif _temp507 == nil then
        _error(exception:null_error("temp", "invoke env on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp507))
      end

      local _t = _type(_temp507)
      if _t == "table" then
                      if _type(_temp507.next_undertemp) == "function" or (_type(_temp507.next_undertemp) == "table" and _rawget(_temp507.next_undertemp, "__call_thing")) then
        _temp507 = _temp507:next_undertemp()
      elseif _temp507.next_undertemp ~= nil then
        _temp507 = _temp507.next_undertemp

        elseif _temp507.no_undermethod ~= nil then
          _temp507 =  _temp507:no_undermethod(string:new("next_temp"))
        else
          _error(exception:method_error("temp", "next_temp"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp507)
      if _n.next_undertemp ~= nil then
        _temp507 = _n:next_undertemp()
      elseif _n.no_undermethod ~= nil then
        _temp507 =  _n:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp507)
      if _f.next_undertemp ~= nil then
        _temp507 = _f:next_undertemp()
      elseif _f.no_undermethod ~= nil then
        _temp507 =  _f:no_undermethod(string:new("next_temp"))
      else
        _error(exception:method_error("temp", "next_temp"))
      end

      elseif _temp507 == nil then
        _error(exception:null_error("temp", "invoke next_temp on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp507))
      end


do
local _temp508 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp508 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp508 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp508 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp508 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp508 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp508 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp508 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp508 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp508 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp508 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp509 = nil
      local _t = _type(_temp508)
      if _t == "table" then
                      if _type(_temp508.out) == "function" or (_type(_temp508.out) == "table" and _rawget(_temp508.out, "__call_thing")) then
        _temp509 = _temp508:out()
      elseif _temp508.out ~= nil then
        _temp509 = _temp508.out

        elseif _temp508.no_undermethod ~= nil then
          _temp509 =  _temp508:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp508, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp508)
      if _n.out ~= nil then
        _temp509 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp509 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp508, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp508)
      if _f.out ~= nil then
        _temp509 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp509 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp508, "out"))
      end

      elseif _temp508 == nil then
        _error(exception:null_error("_temp508", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp508))
      end

local _temp510 = nil
do
local _temp511 = nil
    if _type(_temp507) == "function" or (_type(_temp507) == "table" and _rawget(_temp507, "__call_thing")) then
      _temp511 =  _temp507(_self)

    elseif _temp507 then
      _temp511 =  _temp507
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp511 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp511 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp511 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp511 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp510 = string:new("\ndo\nlocal " .. _tostring(_temp511) .. " = {}\n")
end
local _temp512
      local _t = _type(_temp509)
      if _t == "table" then
                      if _type(_temp509._less_less) == "function" or (_type(_temp509._less_less) == "table" and _rawget(_temp509._less_less, "__call_thing")) then
        _temp512 = _temp509:_less_less(_temp510)
      elseif _temp509._less_less ~= nil then
        _temp512 = _temp509._less_less

        elseif _temp509.no_undermethod ~= nil then
          _temp512 =  _temp509:no_undermethod(string:new("<<") , _temp510)
        else
          _error(exception:method_error(_temp509, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp509)
      if _n._less_less ~= nil then
        _temp512 = _n:_less_less(_temp510)
      elseif _n.no_undermethod ~= nil then
        _temp512 =  _n:no_undermethod(string:new("<<") , _temp510)
      else
        _error(exception:method_error(_temp509, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp509)
      if _f._less_less ~= nil then
        _temp512 = _f:_less_less(_temp510)
      elseif _f.no_undermethod ~= nil then
        _temp512 =  _f:no_undermethod(string:new("<<") , _temp510)
      else
        _error(exception:method_error(_temp509, "<<"))
      end

      elseif _temp509 == nil then
        _error(exception:null_error("_temp509", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp509))
      end

_dummy_ = _temp512 
end

local _temp513
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp513 =  my(_self)

    elseif my then
      _temp513 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp513 =  _self:my()
      elseif _self.my ~= nil then
        _temp513 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp513 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp513 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

        local _t = _type(_temp504)
        if _t == "table" then
          if _rawget(_temp504, "__call_thing") == nil then
            _temp506 = _temp504
          else
                  if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp506 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp506 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp506 =  _temp504(_self)
      end

          end
        elseif _t == "number" then
          _temp506 = _temp504
        elseif _t == "function" then
                if _temp504 == nil then
              if _type(_self._temp504) == "function" or (_type(_self._temp504) == "table" and _rawget(_self._temp504, "__call_thing")) then
        _temp506 =  _self:_temp504()
      elseif _self._temp504 ~= nil then
        _temp506 =  _self._temp504

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp504"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp506 =  _temp504(_self)
      end

        elseif _temp504 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506.nodes) == "function" or (_type(_temp506.nodes) == "table" and _rawget(_temp506.nodes, "__call_thing")) then
        _temp506 = _temp506:nodes()
      elseif _temp506.nodes ~= nil then
        _temp506 = _temp506.nodes

        elseif _temp506.no_undermethod ~= nil then
          _temp506 =  _temp506:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error(_temp506, "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n.nodes ~= nil then
        _temp506 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp506 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp506, "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f.nodes ~= nil then
        _temp506 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp506 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error(_temp506, "nodes"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end


local _temp556 = _lifted_call(_temp555, {})
_temp556.arg_table["_temp505"] = _temp505
_temp556.arg_table["_temp507"] = _temp507
_temp556.arg_table["_temp513"] = _temp513

      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506.each_underwith_underindex) == "function" or (_type(_temp506.each_underwith_underindex) == "table" and _rawget(_temp506.each_underwith_underindex, "__call_thing")) then
        _dummy_ = _temp506:each_underwith_underindex(_temp556)
      elseif _temp506.each_underwith_underindex ~= nil then
        _dummy_ = _temp506.each_underwith_underindex

        elseif _temp506.no_undermethod ~= nil then
          _dummy_ =  _temp506:no_undermethod(string:new("each_with_index") , _temp556)
        else
          _error(exception:method_error(_temp506, "each_with_index"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n.each_underwith_underindex ~= nil then
        _dummy_ = _n:each_underwith_underindex(_temp556)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("each_with_index") , _temp556)
      else
        _error(exception:method_error(_temp506, "each_with_index"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f.each_underwith_underindex ~= nil then
        _dummy_ = _f:each_underwith_underindex(_temp556)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("each_with_index") , _temp556)
      else
        _error(exception:method_error(_temp506, "each_with_index"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke each_with_index on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end

do
local _temp557 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp557 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp557 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp557 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp557 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp557 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp557 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp557 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp557 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp557 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp557 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp558 = nil
      local _t = _type(_temp557)
      if _t == "table" then
                      if _type(_temp557.out) == "function" or (_type(_temp557.out) == "table" and _rawget(_temp557.out, "__call_thing")) then
        _temp558 = _temp557:out()
      elseif _temp557.out ~= nil then
        _temp558 = _temp557.out

        elseif _temp557.no_undermethod ~= nil then
          _temp558 =  _temp557:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp557, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp557)
      if _n.out ~= nil then
        _temp558 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp558 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp557, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp557)
      if _f.out ~= nil then
        _temp558 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp558 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp557, "out"))
      end

      elseif _temp557 == nil then
        _error(exception:null_error("_temp557", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp557))
      end

local _temp559 = nil
do
local _temp560 = nil
        local _t = _type(_temp505)
        if _t == "table" then
          if _rawget(_temp505, "__call_thing") == nil then
            _temp560 = _temp505
          else
                  if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp560 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp560 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp560 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp560 =  _temp505(_self)
      end

          end
        elseif _t == "number" then
          _temp560 = _temp505
        elseif _t == "function" then
                if _temp505 == nil then
              if _type(_self._temp505) == "function" or (_type(_self._temp505) == "table" and _rawget(_self._temp505, "__call_thing")) then
        _temp560 =  _self:_temp505()
      elseif _self._temp505 ~= nil then
        _temp560 =  _self._temp505

        elseif _self.no_undermethod ~= nil then
          _temp560 =  _self:no_undermethod(string:new("_temp505"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp560 =  _temp505(_self)
      end

        elseif _temp505 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp560)
      if _t == "table" then
                      if _type(_temp560.var) == "function" or (_type(_temp560.var) == "table" and _rawget(_temp560.var, "__call_thing")) then
        _temp560 = _temp560:var()
      elseif _temp560.var ~= nil then
        _temp560 = _temp560.var

        elseif _temp560.no_undermethod ~= nil then
          _temp560 =  _temp560:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp560, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp560)
      if _n.var ~= nil then
        _temp560 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp560 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp560, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp560)
      if _f.var ~= nil then
        _temp560 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp560 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp560, "var"))
      end

      elseif _temp560 == nil then
        _error(exception:null_error("_temp560", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp560))
      end


local _temp561 = nil
    if _type(_temp507) == "function" or (_type(_temp507) == "table" and _rawget(_temp507, "__call_thing")) then
      _temp561 =  _temp507(_self)

    elseif _temp507 then
      _temp561 =  _temp507
    else
            if _type(_self.temp) == "function" or (_type(_self.temp) == "table" and _rawget(_self.temp, "__call_thing")) then
        _temp561 =  _self:temp()
      elseif _self.temp ~= nil then
        _temp561 =  _self.temp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp561 =  _self:no_undermethod(string:new("temp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp561 =  no_undermethod(_self, string:new("temp"))
      else
        _error(exception:name_error("temp"))
      end
    end

_temp559 = string:new("" .. _tostring(_temp560) .. " = string:new(_table.concat(" .. _tostring(_temp561) .. "))\nend\n")
end
local _temp562
      local _t = _type(_temp558)
      if _t == "table" then
                      if _type(_temp558._less_less) == "function" or (_type(_temp558._less_less) == "table" and _rawget(_temp558._less_less, "__call_thing")) then
        _temp562 = _temp558:_less_less(_temp559)
      elseif _temp558._less_less ~= nil then
        _temp562 = _temp558._less_less

        elseif _temp558.no_undermethod ~= nil then
          _temp562 =  _temp558:no_undermethod(string:new("<<") , _temp559)
        else
          _error(exception:method_error(_temp558, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp558)
      if _n._less_less ~= nil then
        _temp562 = _n:_less_less(_temp559)
      elseif _n.no_undermethod ~= nil then
        _temp562 =  _n:no_undermethod(string:new("<<") , _temp559)
      else
        _error(exception:method_error(_temp558, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp558)
      if _f._less_less ~= nil then
        _temp562 = _f:_less_less(_temp559)
      elseif _f.no_undermethod ~= nil then
        _temp562 =  _f:no_undermethod(string:new("<<") , _temp559)
      else
        _error(exception:method_error(_temp558, "<<"))
      end

      elseif _temp558 == nil then
        _error(exception:null_error("_temp558", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp558))
      end

_dummy_ = _temp562 
end

    if _type(_temp505) == "function" or (_type(_temp505) == "table" and _rawget(_temp505, "__call_thing")) then
      return  _temp505(_self)

    elseif _temp505 then
      return  _temp505
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp502)
      if _t == "table" then
                      if _type(_temp502.walk) == "function" or (_type(_temp502.walk) == "table" and _rawget(_temp502.walk, "__call_thing")) then
        _dummy_ = _temp502:walk(_temp4,_temp506)
      elseif _temp502.walk ~= nil then
        _dummy_ = _temp502.walk

        elseif _temp502.no_undermethod ~= nil then
          _dummy_ =  _temp502:no_undermethod(string:new("walk") , _temp4,_temp506)
        else
          _error(exception:method_error(_temp502, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp502)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp506)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp506)
      else
        _error(exception:method_error(_temp502, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp502)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp506)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp506)
      else
        _error(exception:method_error(_temp502, "walk"))
      end

      elseif _temp502 == nil then
        _error(exception:null_error("_temp502", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp502))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp506 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp506 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp506 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp506 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp506 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp506 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp506 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp506 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp506 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("string_eval")

_temp574 = function (_self, _temp564,_temp563)
        if _temp564 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp563 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp563 =  null(_self)

    elseif null then
      _temp563 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp563 =  _self:null()
      elseif _self.null ~= nil then
        _temp563 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp563 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp563 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp565
local _temp566 = nil
    if _type(_temp563) == "function" or (_type(_temp563) == "table" and _rawget(_temp563, "__call_thing")) then
      _temp566 =  _temp563(_self)

    elseif _temp563 then
      _temp566 =  _temp563
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp566 =  _self:var()
      elseif _self.var ~= nil then
        _temp566 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp566 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp566 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp565 =  set_underresult(_self, _temp566)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp565 =  _self:set_underresult(_temp566)
      elseif _self.set_underresult ~= nil then
        _temp565 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp565 =  _self:no_undermethod(string:new("set_result") , _temp566)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp565 =  no_undermethod(_self, string:new("set_result") , _temp566)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp567
    if _type(my) == "function" or (_type(my) == "table" and _rawget(my, "__call_thing")) then
      _temp567 =  my(_self)

    elseif my then
      _temp567 =  my
    else
            if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp567 =  _self:my()
      elseif _self.my ~= nil then
        _temp567 =  _self.my

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp567 =  _self:no_undermethod(string:new("my"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp567 =  no_undermethod(_self, string:new("my"))
      else
        _error(exception:name_error("my"))
      end
    end

local _temp568
        local _t = _type(_temp564)
        if _t == "table" then
          if _rawget(_temp564, "__call_thing") == nil then
            _temp568 = _temp564
          else
                  if _temp564 == nil then
              if _type(_self._temp564) == "function" or (_type(_self._temp564) == "table" and _rawget(_self._temp564, "__call_thing")) then
        _temp568 =  _self:_temp564()
      elseif _self._temp564 ~= nil then
        _temp568 =  _self._temp564

        elseif _self.no_undermethod ~= nil then
          _temp568 =  _self:no_undermethod(string:new("_temp564"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp568 =  _temp564(_self)
      end

          end
        elseif _t == "number" then
          _temp568 = _temp564
        elseif _t == "function" then
                if _temp564 == nil then
              if _type(_self._temp564) == "function" or (_type(_self._temp564) == "table" and _rawget(_self._temp564, "__call_thing")) then
        _temp568 =  _self:_temp564()
      elseif _self._temp564 ~= nil then
        _temp568 =  _self._temp564

        elseif _self.no_undermethod ~= nil then
          _temp568 =  _self:no_undermethod(string:new("_temp564"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp568 =  _temp564(_self)
      end

        elseif _temp564 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp568)
      if _t == "table" then
                      if _type(_temp568.nodes) == "function" or (_type(_temp568.nodes) == "table" and _rawget(_temp568.nodes, "__call_thing")) then
        _temp568 = _temp568:nodes()
      elseif _temp568.nodes ~= nil then
        _temp568 = _temp568.nodes

        elseif _temp568.no_undermethod ~= nil then
          _temp568 =  _temp568:no_undermethod(string:new("nodes"))
        else
          _error(exception:method_error("values", "nodes"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp568)
      if _n.nodes ~= nil then
        _temp568 = _n:nodes()
      elseif _n.no_undermethod ~= nil then
        _temp568 =  _n:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp568)
      if _f.nodes ~= nil then
        _temp568 = _f:nodes()
      elseif _f.no_undermethod ~= nil then
        _temp568 =  _f:no_undermethod(string:new("nodes"))
      else
        _error(exception:method_error("values", "nodes"))
      end

      elseif _temp568 == nil then
        _error(exception:null_error("values", "invoke nodes on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp568))
      end


local _temp574 = _lifted_call(_temp573, {})
_temp574.arg_table["_temp567"] = _temp567
_temp574.arg_table["_temp565"] = _temp565

      local _t = _type(_temp568)
      if _t == "table" then
                      if _type(_temp568.map) == "function" or (_type(_temp568.map) == "table" and _rawget(_temp568.map, "__call_thing")) then
        _temp568 = _temp568:map(_temp574)
      elseif _temp568.map ~= nil then
        _temp568 = _temp568.map

        elseif _temp568.no_undermethod ~= nil then
          _temp568 =  _temp568:no_undermethod(string:new("map") , _temp574)
        else
          _error(exception:method_error("values", "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp568)
      if _n.map ~= nil then
        _temp568 = _n:map(_temp574)
      elseif _n.no_undermethod ~= nil then
        _temp568 =  _n:no_undermethod(string:new("map") , _temp574)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp568)
      if _f.map ~= nil then
        _temp568 = _f:map(_temp574)
      elseif _f.no_undermethod ~= nil then
        _temp568 =  _f:no_undermethod(string:new("map") , _temp574)
      else
        _error(exception:method_error("values", "map"))
      end

      elseif _temp568 == nil then
        _error(exception:null_error("values", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp568))
      end


do
local _temp575 = nil
        local _t = _type(_temp565)
        if _t == "table" then
          if _rawget(_temp565, "__call_thing") == nil then
            _temp575 = _temp565
          else
                  if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp575 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp575 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp575 =  _temp565(_self)
      end

          end
        elseif _t == "number" then
          _temp575 = _temp565
        elseif _t == "function" then
                if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp575 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp575 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp575 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp575 =  _temp565(_self)
      end

        elseif _temp565 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp576 = nil
      local _t = _type(_temp575)
      if _t == "table" then
                      if _type(_temp575.out) == "function" or (_type(_temp575.out) == "table" and _rawget(_temp575.out, "__call_thing")) then
        _temp576 = _temp575:out()
      elseif _temp575.out ~= nil then
        _temp576 = _temp575.out

        elseif _temp575.no_undermethod ~= nil then
          _temp576 =  _temp575:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp575, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp575)
      if _n.out ~= nil then
        _temp576 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp576 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp575, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp575)
      if _f.out ~= nil then
        _temp576 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp576 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp575, "out"))
      end

      elseif _temp575 == nil then
        _error(exception:null_error("_temp575", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp575))
      end

local _temp577 = nil
        local _t = _type(_temp568)
        if _t == "table" then
          if _rawget(_temp568, "__call_thing") == nil then
            _temp577 = _temp568
          else
                  if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp577 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp577 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp577 =  _temp568(_self)
      end

          end
        elseif _t == "number" then
          _temp577 = _temp568
        elseif _t == "function" then
                if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp577 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp577 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp577 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp577 =  _temp568(_self)
      end

        elseif _temp568 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
local _temp578 = string:new("out")

      local _t = _type(_temp577)
      if _t == "table" then
                      if _type(_temp577.map) == "function" or (_type(_temp577.map) == "table" and _rawget(_temp577.map, "__call_thing")) then
        _temp577 = _temp577:map(_temp578)
      elseif _temp577.map ~= nil then
        _temp577 = _temp577.map

        elseif _temp577.no_undermethod ~= nil then
          _temp577 =  _temp577:no_undermethod(string:new("map") , _temp578)
        else
          _error(exception:method_error(_temp577, "map"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp577)
      if _n.map ~= nil then
        _temp577 = _n:map(_temp578)
      elseif _n.no_undermethod ~= nil then
        _temp577 =  _n:no_undermethod(string:new("map") , _temp578)
      else
        _error(exception:method_error(_temp577, "map"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp577)
      if _f.map ~= nil then
        _temp577 = _f:map(_temp578)
      elseif _f.no_undermethod ~= nil then
        _temp577 =  _f:no_undermethod(string:new("map") , _temp578)
      else
        _error(exception:method_error(_temp577, "map"))
      end

      elseif _temp577 == nil then
        _error(exception:null_error("_temp577", "invoke map on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp577))
      end

_temp578 = string:new("\n")

      local _t = _type(_temp577)
      if _t == "table" then
                      if _type(_temp577.join) == "function" or (_type(_temp577.join) == "table" and _rawget(_temp577.join, "__call_thing")) then
        _temp577 = _temp577:join(_temp578)
      elseif _temp577.join ~= nil then
        _temp577 = _temp577.join

        elseif _temp577.no_undermethod ~= nil then
          _temp577 =  _temp577:no_undermethod(string:new("join") , _temp578)
        else
          _error(exception:method_error(_temp577, "join"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp577)
      if _n.join ~= nil then
        _temp577 = _n:join(_temp578)
      elseif _n.no_undermethod ~= nil then
        _temp577 =  _n:no_undermethod(string:new("join") , _temp578)
      else
        _error(exception:method_error(_temp577, "join"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp577)
      if _f.join ~= nil then
        _temp577 = _f:join(_temp578)
      elseif _f.no_undermethod ~= nil then
        _temp577 =  _f:no_undermethod(string:new("join") , _temp578)
      else
        _error(exception:method_error(_temp577, "join"))
      end

      elseif _temp577 == nil then
        _error(exception:null_error("_temp577", "invoke join on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp577))
      end

local _temp578
      local _t = _type(_temp576)
      if _t == "table" then
                      if _type(_temp576._less_less) == "function" or (_type(_temp576._less_less) == "table" and _rawget(_temp576._less_less, "__call_thing")) then
        _temp578 = _temp576:_less_less(_temp577)
      elseif _temp576._less_less ~= nil then
        _temp578 = _temp576._less_less

        elseif _temp576.no_undermethod ~= nil then
          _temp578 =  _temp576:no_undermethod(string:new("<<") , _temp577)
        else
          _error(exception:method_error(_temp576, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp576)
      if _n._less_less ~= nil then
        _temp578 = _n:_less_less(_temp577)
      elseif _n.no_undermethod ~= nil then
        _temp578 =  _n:no_undermethod(string:new("<<") , _temp577)
      else
        _error(exception:method_error(_temp576, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp576)
      if _f._less_less ~= nil then
        _temp578 = _f:_less_less(_temp577)
      elseif _f.no_undermethod ~= nil then
        _temp578 =  _f:no_undermethod(string:new("<<") , _temp577)
      else
        _error(exception:method_error(_temp576, "<<"))
      end

      elseif _temp576 == nil then
        _error(exception:null_error("_temp576", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp576))
      end

_dummy_ = _temp578 
end

local _temp574 
do
local _temp579 = nil
        local _t = _type(_temp565)
        if _t == "table" then
          if _rawget(_temp565, "__call_thing") == nil then
            _temp579 = _temp565
          else
                  if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp579 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp579 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp579 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp579 =  _temp565(_self)
      end

          end
        elseif _t == "number" then
          _temp579 = _temp565
        elseif _t == "function" then
                if _temp565 == nil then
              if _type(_self._temp565) == "function" or (_type(_self._temp565) == "table" and _rawget(_self._temp565, "__call_thing")) then
        _temp579 =  _self:_temp565()
      elseif _self._temp565 ~= nil then
        _temp579 =  _self._temp565

        elseif _self.no_undermethod ~= nil then
          _temp579 =  _self:no_undermethod(string:new("_temp565"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp579 =  _temp565(_self)
      end

        elseif _temp565 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp580 = nil
      local _t = _type(_temp579)
      if _t == "table" then
                      if _type(_temp579.var) == "function" or (_type(_temp579.var) == "table" and _rawget(_temp579.var, "__call_thing")) then
        _temp580 = _temp579:var()
      elseif _temp579.var ~= nil then
        _temp580 = _temp579.var

        elseif _temp579.no_undermethod ~= nil then
          _temp580 =  _temp579:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp579, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp579)
      if _n.var ~= nil then
        _temp580 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp580 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp579, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp579)
      if _f.var ~= nil then
        _temp580 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp580 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp579, "var"))
      end

      elseif _temp579 == nil then
        _error(exception:null_error("_temp579", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp579))
      end

local _temp581 = nil
        local _t = _type(_temp568)
        if _t == "table" then
          if _rawget(_temp568, "__call_thing") == nil then
            _temp581 = _temp568
          else
                  if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp581 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp581 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp581 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp581 =  _temp568(_self)
      end

          end
        elseif _t == "number" then
          _temp581 = _temp568
        elseif _t == "function" then
                if _temp568 == nil then
              if _type(_self._temp568) == "function" or (_type(_self._temp568) == "table" and _rawget(_self._temp568, "__call_thing")) then
        _temp581 =  _self:_temp568()
      elseif _self._temp568 ~= nil then
        _temp581 =  _self._temp568

        elseif _self.no_undermethod ~= nil then
          _temp581 =  _self:no_undermethod(string:new("_temp568"))
        else
          _error(exception:null_error("values", "invoke method"))
        end
      else 
        _temp581 =  _temp568(_self)
      end

        elseif _temp568 == nil then
          _error(exception:null_error("values", "cannot call method on it"))
        else
          _error(exception:method_error("self", "values"))
        end
      local _t = _type(_temp581)
      if _t == "table" then
                      if _type(_temp581.last) == "function" or (_type(_temp581.last) == "table" and _rawget(_temp581.last, "__call_thing")) then
        _temp581 = _temp581:last()
      elseif _temp581.last ~= nil then
        _temp581 = _temp581.last

        elseif _temp581.no_undermethod ~= nil then
          _temp581 =  _temp581:no_undermethod(string:new("last"))
        else
          _error(exception:method_error(_temp581, "last"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp581)
      if _n.last ~= nil then
        _temp581 = _n:last()
      elseif _n.no_undermethod ~= nil then
        _temp581 =  _n:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp581, "last"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp581)
      if _f.last ~= nil then
        _temp581 = _f:last()
      elseif _f.no_undermethod ~= nil then
        _temp581 =  _f:no_undermethod(string:new("last"))
      else
        _error(exception:method_error(_temp581, "last"))
      end

      elseif _temp581 == nil then
        _error(exception:null_error("_temp581", "invoke last on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp581))
      end

      local _t = _type(_temp581)
      if _t == "table" then
                      if _type(_temp581.var) == "function" or (_type(_temp581.var) == "table" and _rawget(_temp581.var, "__call_thing")) then
        _temp581 = _temp581:var()
      elseif _temp581.var ~= nil then
        _temp581 = _temp581.var

        elseif _temp581.no_undermethod ~= nil then
          _temp581 =  _temp581:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp581, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp581)
      if _n.var ~= nil then
        _temp581 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp581 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp581, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp581)
      if _f.var ~= nil then
        _temp581 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp581 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp581, "var"))
      end

      elseif _temp581 == nil then
        _error(exception:null_error("_temp581", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp581))
      end

local _temp582
      local _t = _type(_temp580)
      if _t == "table" then
                      if _type(_temp580._bang_equal) == "function" or (_type(_temp580._bang_equal) == "table" and _rawget(_temp580._bang_equal, "__call_thing")) then
        _temp582 = _temp580:_bang_equal(_temp581)
      elseif _temp580._bang_equal ~= nil then
        _temp582 = _temp580._bang_equal

        elseif _temp580.no_undermethod ~= nil then
          _temp582 =  _temp580:no_undermethod(string:new("!=") , _temp581)
        else
          _error(exception:method_error(_temp580, "!="))
        end

      elseif _t == "number" then
              local _n = number:new(_temp580)
      if _n._bang_equal ~= nil then
        _temp582 = _n:_bang_equal(_temp581)
      elseif _n.no_undermethod ~= nil then
        _temp582 =  _n:no_undermethod(string:new("!=") , _temp581)
      else
        _error(exception:method_error(_temp580, "!="))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp580)
      if _f._bang_equal ~= nil then
        _temp582 = _f:_bang_equal(_temp581)
      elseif _f.no_undermethod ~= nil then
        _temp582 =  _f:no_undermethod(string:new("!=") , _temp581)
      else
        _error(exception:method_error(_temp580, "!="))
      end

      elseif _temp580 == nil then
        _error(exception:null_error("_temp580", "invoke != on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp580))
      end

_temp574 = _temp582 
end


local _temp591 = _lifted_call(_temp590, {})
_temp591.arg_table["_temp565"] = _temp565
_temp591.arg_table["_temp568"] = _temp568

    if _type(true_question) == "function" or (_type(true_question) == "table" and _rawget(true_question, "__call_thing")) then
      _dummy_ =  true_question(_self, _temp574,_temp591)

    elseif true_question then
      _error(exception:new("Tried to invoke non-method: true? (" .. object.__type(true_question) .. ")"))
    else
            if _type(_self.true_question) == "function" or (_type(_self.true_question) == "table" and _rawget(_self.true_question, "__call_thing")) then
        _dummy_ =  _self:true_question(_temp574,_temp591)
      elseif _self.true_question ~= nil then
        _dummy_ =  _self.true_question

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("true?") , _temp574,_temp591)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("true?") , _temp574,_temp591)
      else
        _error(exception:name_error("true?"))
      end
    end

    if _type(_temp565) == "function" or (_type(_temp565) == "table" and _rawget(_temp565, "__call_thing")) then
      return  _temp565(_self)

    elseif _temp565 then
      return  _temp565
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp506)
      if _t == "table" then
                      if _type(_temp506.walk) == "function" or (_type(_temp506.walk) == "table" and _rawget(_temp506.walk, "__call_thing")) then
        _dummy_ = _temp506:walk(_temp4,_temp574)
      elseif _temp506.walk ~= nil then
        _dummy_ = _temp506.walk

        elseif _temp506.no_undermethod ~= nil then
          _dummy_ =  _temp506:no_undermethod(string:new("walk") , _temp4,_temp574)
        else
          _error(exception:method_error(_temp506, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp506)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp574)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp574)
      else
        _error(exception:method_error(_temp506, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp506)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp574)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp574)
      else
        _error(exception:method_error(_temp506, "walk"))
      end

      elseif _temp506 == nil then
        _error(exception:null_error("_temp506", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp506))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp574 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp574 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp574 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp574 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp574 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp574 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp574 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp574 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp574 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp574 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("binop")

local _temp597 = function (_self, _temp593,_temp592)
        if _temp593 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp592 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp592 =  null(_self)

    elseif null then
      _temp592 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp592 =  _self:null()
      elseif _self.null ~= nil then
        _temp592 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp592 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp592 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp594
local _temp595 = nil
    if _type(_temp593) == "function" or (_type(_temp593) == "table" and _rawget(_temp593, "__call_thing")) then
      _temp595 =  _temp593(_self)

    elseif _temp593 then
      _temp595 =  _temp593
    else
            if _type(_self.node) == "function" or (_type(_self.node) == "table" and _rawget(_self.node, "__call_thing")) then
        _temp595 =  _self:node()
      elseif _self.node ~= nil then
        _temp595 =  _self.node

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp595 =  _self:no_undermethod(string:new("node"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp595 =  no_undermethod(_self, string:new("node"))
      else
        _error(exception:name_error("node"))
      end
    end

    if _type(reorder_underops) == "function" or (_type(reorder_underops) == "table" and _rawget(reorder_underops, "__call_thing")) then
      _temp594 =  reorder_underops(_self, _temp595)

    elseif reorder_underops then
      _error(exception:new("Tried to invoke non-method: reorder_ops (" .. object.__type(reorder_underops) .. ")"))
    else
            if _type(_self.reorder_underops) == "function" or (_type(_self.reorder_underops) == "table" and _rawget(_self.reorder_underops, "__call_thing")) then
        _temp594 =  _self:reorder_underops(_temp595)
      elseif _self.reorder_underops ~= nil then
        _temp594 =  _self.reorder_underops

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp594 =  _self:no_undermethod(string:new("reorder_ops") , _temp595)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp594 =  no_undermethod(_self, string:new("reorder_ops") , _temp595)
      else
        _error(exception:name_error("reorder_ops"))
      end
    end

    if _type(_temp594) == "function" or (_type(_temp594) == "table" and _rawget(_temp594, "__call_thing")) then
      _temp595 =  _temp594(_self)

    elseif _temp594 then
      _temp595 =  _temp594
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        _temp595 =  _self:res()
      elseif _self.res ~= nil then
        _temp595 =  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp595 =  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp595 =  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      return  process(_self, _temp595)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        return  _self:process(_temp595)
      elseif _self.process ~= nil then
        return  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("process") , _temp595)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("process") , _temp595)
      else
        _error(exception:name_error("process"))
      end
    end

end

      local _t = _type(_temp574)
      if _t == "table" then
                      if _type(_temp574.walk) == "function" or (_type(_temp574.walk) == "table" and _rawget(_temp574.walk, "__call_thing")) then
        _dummy_ = _temp574:walk(_temp4,_temp597)
      elseif _temp574.walk ~= nil then
        _dummy_ = _temp574.walk

        elseif _temp574.no_undermethod ~= nil then
          _dummy_ =  _temp574:no_undermethod(string:new("walk") , _temp4,_temp597)
        else
          _error(exception:method_error(_temp574, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp574)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp597)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp597)
      else
        _error(exception:method_error(_temp574, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp574)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp597)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp597)
      else
        _error(exception:method_error(_temp574, "walk"))
      end

      elseif _temp574 == nil then
        _error(exception:null_error("_temp574", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp574))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp597 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp597 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp597 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp597 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp597 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp597 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp597 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp597 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp597 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp597 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_numbers")

local _temp609 = function (_self, _temp599,_temp598)
        if _temp599 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp598 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp598 =  null(_self)

    elseif null then
      _temp598 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp598 =  _self:null()
      elseif _self.null ~= nil then
        _temp598 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp598 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp598 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp600
local _temp601 = nil
    if _type(_temp598) == "function" or (_type(_temp598) == "table" and _rawget(_temp598, "__call_thing")) then
      _temp601 =  _temp598(_self)

    elseif _temp598 then
      _temp601 =  _temp598
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp601 =  _self:var()
      elseif _self.var ~= nil then
        _temp601 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp601 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp601 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp600 =  set_underresult(_self, _temp601)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp600 =  _self:set_underresult(_temp601)
      elseif _self.set_underresult ~= nil then
        _temp600 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp600 =  _self:no_undermethod(string:new("set_result") , _temp601)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp600 =  no_undermethod(_self, string:new("set_result") , _temp601)
      else
        _error(exception:name_error("set_result"))
      end
    end

do
local _temp602 = nil
        local _t = _type(_temp600)
        if _t == "table" then
          if _rawget(_temp600, "__call_thing") == nil then
            _temp602 = _temp600
          else
                  if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp602 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp602 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp600(_self)
      end

          end
        elseif _t == "number" then
          _temp602 = _temp600
        elseif _t == "function" then
                if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp602 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp602 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp602 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp602 =  _temp600(_self)
      end

        elseif _temp600 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp603 = nil
      local _t = _type(_temp602)
      if _t == "table" then
                      if _type(_temp602.out) == "function" or (_type(_temp602.out) == "table" and _rawget(_temp602.out, "__call_thing")) then
        _temp603 = _temp602:out()
      elseif _temp602.out ~= nil then
        _temp603 = _temp602.out

        elseif _temp602.no_undermethod ~= nil then
          _temp603 =  _temp602:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp602, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp602)
      if _n.out ~= nil then
        _temp603 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp603 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp602, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp602)
      if _f.out ~= nil then
        _temp603 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp603 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp602, "out"))
      end

      elseif _temp602 == nil then
        _error(exception:null_error("_temp602", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp602))
      end

local _temp604 = nil
local _temp605 = nil
        local _t = _type(_temp599)
        if _t == "table" then
          if _rawget(_temp599, "__call_thing") == nil then
            _temp605 = _temp599
          else
                  if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp605 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp605 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp605 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp605 =  _temp599(_self)
      end

          end
        elseif _t == "number" then
          _temp605 = _temp599
        elseif _t == "function" then
                if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp605 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp605 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp605 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp605 =  _temp599(_self)
      end

        elseif _temp599 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp605)
      if _t == "table" then
                      if _type(_temp605.lhs) == "function" or (_type(_temp605.lhs) == "table" and _rawget(_temp605.lhs, "__call_thing")) then
        _temp605 = _temp605:lhs()
      elseif _temp605.lhs ~= nil then
        _temp605 = _temp605.lhs

        elseif _temp605.no_undermethod ~= nil then
          _temp605 =  _temp605:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp605, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp605)
      if _n.lhs ~= nil then
        _temp605 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp605 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp605, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp605)
      if _f.lhs ~= nil then
        _temp605 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp605 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp605, "lhs"))
      end

      elseif _temp605 == nil then
        _error(exception:null_error("_temp605", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp605))
      end

      local _t = _type(_temp605)
      if _t == "table" then
                      if _type(_temp605.value) == "function" or (_type(_temp605.value) == "table" and _rawget(_temp605.value, "__call_thing")) then
        _temp605 = _temp605:value()
      elseif _temp605.value ~= nil then
        _temp605 = _temp605.value

        elseif _temp605.no_undermethod ~= nil then
          _temp605 =  _temp605:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp605, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp605)
      if _n.value ~= nil then
        _temp605 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp605 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp605, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp605)
      if _f.value ~= nil then
        _temp605 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp605 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp605, "value"))
      end

      elseif _temp605 == nil then
        _error(exception:null_error("_temp605", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp605))
      end


local _temp606 = nil
        local _t = _type(_temp599)
        if _t == "table" then
          if _rawget(_temp599, "__call_thing") == nil then
            _temp606 = _temp599
          else
                  if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp606 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp606 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp606 =  _temp599(_self)
      end

          end
        elseif _t == "number" then
          _temp606 = _temp599
        elseif _t == "function" then
                if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp606 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp606 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp606 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp606 =  _temp599(_self)
      end

        elseif _temp599 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp606)
      if _t == "table" then
                      if _type(_temp606.op) == "function" or (_type(_temp606.op) == "table" and _rawget(_temp606.op, "__call_thing")) then
        _temp606 = _temp606:op()
      elseif _temp606.op ~= nil then
        _temp606 = _temp606.op

        elseif _temp606.no_undermethod ~= nil then
          _temp606 =  _temp606:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp606, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp606)
      if _n.op ~= nil then
        _temp606 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp606 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp606, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp606)
      if _f.op ~= nil then
        _temp606 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp606 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp606, "op"))
      end

      elseif _temp606 == nil then
        _error(exception:null_error("_temp606", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp606))
      end


local _temp607 = nil
        local _t = _type(_temp599)
        if _t == "table" then
          if _rawget(_temp599, "__call_thing") == nil then
            _temp607 = _temp599
          else
                  if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp607 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp607 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp607 =  _temp599(_self)
      end

          end
        elseif _t == "number" then
          _temp607 = _temp599
        elseif _t == "function" then
                if _temp599 == nil then
              if _type(_self._temp599) == "function" or (_type(_self._temp599) == "table" and _rawget(_self._temp599, "__call_thing")) then
        _temp607 =  _self:_temp599()
      elseif _self._temp599 ~= nil then
        _temp607 =  _self._temp599

        elseif _self.no_undermethod ~= nil then
          _temp607 =  _self:no_undermethod(string:new("_temp599"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp607 =  _temp599(_self)
      end

        elseif _temp599 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp607)
      if _t == "table" then
                      if _type(_temp607.rhs) == "function" or (_type(_temp607.rhs) == "table" and _rawget(_temp607.rhs, "__call_thing")) then
        _temp607 = _temp607:rhs()
      elseif _temp607.rhs ~= nil then
        _temp607 = _temp607.rhs

        elseif _temp607.no_undermethod ~= nil then
          _temp607 =  _temp607:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp607, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp607)
      if _n.rhs ~= nil then
        _temp607 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp607 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp607, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp607)
      if _f.rhs ~= nil then
        _temp607 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp607 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp607, "rhs"))
      end

      elseif _temp607 == nil then
        _error(exception:null_error("_temp607", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp607))
      end

      local _t = _type(_temp607)
      if _t == "table" then
                      if _type(_temp607.value) == "function" or (_type(_temp607.value) == "table" and _rawget(_temp607.value, "__call_thing")) then
        _temp607 = _temp607:value()
      elseif _temp607.value ~= nil then
        _temp607 = _temp607.value

        elseif _temp607.no_undermethod ~= nil then
          _temp607 =  _temp607:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp607, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp607)
      if _n.value ~= nil then
        _temp607 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp607 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp607, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp607)
      if _f.value ~= nil then
        _temp607 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp607 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp607, "value"))
      end

      elseif _temp607 == nil then
        _error(exception:null_error("_temp607", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp607))
      end


local _temp608 = nil
        local _t = _type(_temp600)
        if _t == "table" then
          if _rawget(_temp600, "__call_thing") == nil then
            _temp608 = _temp600
          else
                  if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp608 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp608 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp608 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp608 =  _temp600(_self)
      end

          end
        elseif _t == "number" then
          _temp608 = _temp600
        elseif _t == "function" then
                if _temp600 == nil then
              if _type(_self._temp600) == "function" or (_type(_self._temp600) == "table" and _rawget(_self._temp600, "__call_thing")) then
        _temp608 =  _self:_temp600()
      elseif _self._temp600 ~= nil then
        _temp608 =  _self._temp600

        elseif _self.no_undermethod ~= nil then
          _temp608 =  _self:no_undermethod(string:new("_temp600"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp608 =  _temp600(_self)
      end

        elseif _temp600 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp608)
      if _t == "table" then
                      if _type(_temp608.var) == "function" or (_type(_temp608.var) == "table" and _rawget(_temp608.var, "__call_thing")) then
        _temp608 = _temp608:var()
      elseif _temp608.var ~= nil then
        _temp608 = _temp608.var

        elseif _temp608.no_undermethod ~= nil then
          _temp608 =  _temp608:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp608, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp608)
      if _n.var ~= nil then
        _temp608 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp608 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp608, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp608)
      if _f.var ~= nil then
        _temp608 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp608 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp608, "var"))
      end

      elseif _temp608 == nil then
        _error(exception:null_error("_temp608", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp608))
      end


    if _type(invoke_undernumbers) == "function" or (_type(invoke_undernumbers) == "table" and _rawget(invoke_undernumbers, "__call_thing")) then
      _temp604 =  invoke_undernumbers(_self, _temp605,_temp606,_temp607,_temp608)

    elseif invoke_undernumbers then
      _error(exception:new("Tried to invoke non-method: invoke_numbers (" .. object.__type(invoke_undernumbers) .. ")"))
    else
            if _type(_self.invoke_undernumbers) == "function" or (_type(_self.invoke_undernumbers) == "table" and _rawget(_self.invoke_undernumbers, "__call_thing")) then
        _temp604 =  _self:invoke_undernumbers(_temp605,_temp606,_temp607,_temp608)
      elseif _self.invoke_undernumbers ~= nil then
        _temp604 =  _self.invoke_undernumbers

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp604 =  _self:no_undermethod(string:new("invoke_numbers") , _temp605,_temp606,_temp607,_temp608)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp604 =  no_undermethod(_self, string:new("invoke_numbers") , _temp605,_temp606,_temp607,_temp608)
      else
        _error(exception:name_error("invoke_numbers"))
      end
    end
local _temp608
      local _t = _type(_temp603)
      if _t == "table" then
                      if _type(_temp603._less_less) == "function" or (_type(_temp603._less_less) == "table" and _rawget(_temp603._less_less, "__call_thing")) then
        _temp608 = _temp603:_less_less(_temp604)
      elseif _temp603._less_less ~= nil then
        _temp608 = _temp603._less_less

        elseif _temp603.no_undermethod ~= nil then
          _temp608 =  _temp603:no_undermethod(string:new("<<") , _temp604)
        else
          _error(exception:method_error(_temp603, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp603)
      if _n._less_less ~= nil then
        _temp608 = _n:_less_less(_temp604)
      elseif _n.no_undermethod ~= nil then
        _temp608 =  _n:no_undermethod(string:new("<<") , _temp604)
      else
        _error(exception:method_error(_temp603, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp603)
      if _f._less_less ~= nil then
        _temp608 = _f:_less_less(_temp604)
      elseif _f.no_undermethod ~= nil then
        _temp608 =  _f:no_undermethod(string:new("<<") , _temp604)
      else
        _error(exception:method_error(_temp603, "<<"))
      end

      elseif _temp603 == nil then
        _error(exception:null_error("_temp603", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp603))
      end

_dummy_ = _temp608 
end

    if _type(_temp600) == "function" or (_type(_temp600) == "table" and _rawget(_temp600, "__call_thing")) then
      return  _temp600(_self)

    elseif _temp600 then
      return  _temp600
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp597)
      if _t == "table" then
                      if _type(_temp597.walk) == "function" or (_type(_temp597.walk) == "table" and _rawget(_temp597.walk, "__call_thing")) then
        _dummy_ = _temp597:walk(_temp4,_temp609)
      elseif _temp597.walk ~= nil then
        _dummy_ = _temp597.walk

        elseif _temp597.no_undermethod ~= nil then
          _dummy_ =  _temp597:no_undermethod(string:new("walk") , _temp4,_temp609)
        else
          _error(exception:method_error(_temp597, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp597)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp609)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp609)
      else
        _error(exception:method_error(_temp597, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp597)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp609)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp609)
      else
        _error(exception:method_error(_temp597, "walk"))
      end

      elseif _temp597 == nil then
        _error(exception:null_error("_temp597", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp597))
      end

        local _t = _type(_temp5)
        if _t == "table" then
          if _rawget(_temp5, "__call_thing") == nil then
            _temp609 = _temp5
          else
                  if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp609 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp609 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp609 =  _temp5(_self)
      end

          end
        elseif _t == "number" then
          _temp609 = _temp5
        elseif _t == "function" then
                if _temp5 == nil then
              if _type(_self._temp5) == "function" or (_type(_self._temp5) == "table" and _rawget(_self._temp5, "__call_thing")) then
        _temp609 =  _self:_temp5()
      elseif _self._temp5 ~= nil then
        _temp609 =  _self._temp5

        elseif _self.no_undermethod ~= nil then
          _temp609 =  _self:no_undermethod(string:new("_temp5"))
        else
          _error(exception:null_error("c", "invoke method"))
        end
      else 
        _temp609 =  _temp5(_self)
      end

        elseif _temp5 == nil then
          _error(exception:null_error("c", "cannot call method on it"))
        else
          _error(exception:method_error("self", "c"))
        end
_temp4 = string:new("invoke_number")

local _temp628 = function (_self, _temp611,_temp610)
        if _temp611 == nil then
          _error(exception:argument_error("function", 'at least 1', 0))

end
if _temp610 == nil then
 do
    if _type(null) == "function" or (_type(null) == "table" and _rawget(null, "__call_thing")) then
      _temp610 =  null(_self)

    elseif null then
      _temp610 =  null
    else
            if _type(_self.null) == "function" or (_type(_self.null) == "table" and _rawget(_self.null, "__call_thing")) then
        _temp610 =  _self:null()
      elseif _self.null ~= nil then
        _temp610 =  _self.null

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp610 =  _self:no_undermethod(string:new("null"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp610 =  no_undermethod(_self, string:new("null"))
      else
        _error(exception:name_error("null"))
      end
    end

end
end

local _temp612
local _temp613 = nil
    if _type(_temp610) == "function" or (_type(_temp610) == "table" and _rawget(_temp610, "__call_thing")) then
      _temp613 =  _temp610(_self)

    elseif _temp610 then
      _temp613 =  _temp610
    else
            if _type(_self.var) == "function" or (_type(_self.var) == "table" and _rawget(_self.var, "__call_thing")) then
        _temp613 =  _self:var()
      elseif _self.var ~= nil then
        _temp613 =  _self.var

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp613 =  _self:no_undermethod(string:new("var"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp613 =  no_undermethod(_self, string:new("var"))
      else
        _error(exception:name_error("var"))
      end
    end

    if _type(set_underresult) == "function" or (_type(set_underresult) == "table" and _rawget(set_underresult, "__call_thing")) then
      _temp612 =  set_underresult(_self, _temp613)

    elseif set_underresult then
      _error(exception:new("Tried to invoke non-method: set_result (" .. object.__type(set_underresult) .. ")"))
    else
            if _type(_self.set_underresult) == "function" or (_type(_self.set_underresult) == "table" and _rawget(_self.set_underresult, "__call_thing")) then
        _temp612 =  _self:set_underresult(_temp613)
      elseif _self.set_underresult ~= nil then
        _temp612 =  _self.set_underresult

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp612 =  _self:no_undermethod(string:new("set_result") , _temp613)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp612 =  no_undermethod(_self, string:new("set_result") , _temp613)
      else
        _error(exception:name_error("set_result"))
      end
    end

local _temp614
        local _t = _type(_temp611)
        if _t == "table" then
          if _rawget(_temp611, "__call_thing") == nil then
            _temp613 = _temp611
          else
                  if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp613 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp613 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp613 =  _temp611(_self)
      end

          end
        elseif _t == "number" then
          _temp613 = _temp611
        elseif _t == "function" then
                if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp613 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp613 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp613 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp613 =  _temp611(_self)
      end

        elseif _temp611 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp613)
      if _t == "table" then
                      if _type(_temp613.rhs) == "function" or (_type(_temp613.rhs) == "table" and _rawget(_temp613.rhs, "__call_thing")) then
        _temp613 = _temp613:rhs()
      elseif _temp613.rhs ~= nil then
        _temp613 = _temp613.rhs

        elseif _temp613.no_undermethod ~= nil then
          _temp613 =  _temp613:no_undermethod(string:new("rhs"))
        else
          _error(exception:method_error(_temp613, "rhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp613)
      if _n.rhs ~= nil then
        _temp613 = _n:rhs()
      elseif _n.no_undermethod ~= nil then
        _temp613 =  _n:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp613, "rhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp613)
      if _f.rhs ~= nil then
        _temp613 = _f:rhs()
      elseif _f.no_undermethod ~= nil then
        _temp613 =  _f:no_undermethod(string:new("rhs"))
      else
        _error(exception:method_error(_temp613, "rhs"))
      end

      elseif _temp613 == nil then
        _error(exception:null_error("_temp613", "invoke rhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp613))
      end


    if _type(process) == "function" or (_type(process) == "table" and _rawget(process, "__call_thing")) then
      _temp614 =  process(_self, _temp613)

    elseif process then
      _error(exception:new("Tried to invoke non-method: process (" .. object.__type(process) .. ")"))
    else
            if _type(_self.process) == "function" or (_type(_self.process) == "table" and _rawget(_self.process, "__call_thing")) then
        _temp614 =  _self:process(_temp613)
      elseif _self.process ~= nil then
        _temp614 =  _self.process

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp614 =  _self:no_undermethod(string:new("process") , _temp613)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp614 =  no_undermethod(_self, string:new("process") , _temp613)
      else
        _error(exception:name_error("process"))
      end
    end

do
local _temp615 = nil
        local _t = _type(_temp612)
        if _t == "table" then
          if _rawget(_temp612, "__call_thing") == nil then
            _temp615 = _temp612
          else
                  if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp615 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp615 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp615 =  _temp612(_self)
      end

          end
        elseif _t == "number" then
          _temp615 = _temp612
        elseif _t == "function" then
                if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp615 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp615 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp615 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp615 =  _temp612(_self)
      end

        elseif _temp612 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp616 = nil
      local _t = _type(_temp615)
      if _t == "table" then
                      if _type(_temp615.out) == "function" or (_type(_temp615.out) == "table" and _rawget(_temp615.out, "__call_thing")) then
        _temp616 = _temp615:out()
      elseif _temp615.out ~= nil then
        _temp616 = _temp615.out

        elseif _temp615.no_undermethod ~= nil then
          _temp616 =  _temp615:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp615, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp615)
      if _n.out ~= nil then
        _temp616 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp616 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp615, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp615)
      if _f.out ~= nil then
        _temp616 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp616 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp615, "out"))
      end

      elseif _temp615 == nil then
        _error(exception:null_error("_temp615", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp615))
      end

local _temp617 = nil
        local _t = _type(_temp614)
        if _t == "table" then
          if _rawget(_temp614, "__call_thing") == nil then
            _temp617 = _temp614
          else
                  if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp617 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp617 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp617 =  _temp614(_self)
      end

          end
        elseif _t == "number" then
          _temp617 = _temp614
        elseif _t == "function" then
                if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp617 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp617 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp617 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp617 =  _temp614(_self)
      end

        elseif _temp614 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end

local _temp618 = nil
      local _t = _type(_temp617)
      if _t == "table" then
                      if _type(_temp617.out) == "function" or (_type(_temp617.out) == "table" and _rawget(_temp617.out, "__call_thing")) then
        _temp618 = _temp617:out()
      elseif _temp617.out ~= nil then
        _temp618 = _temp617.out

        elseif _temp617.no_undermethod ~= nil then
          _temp618 =  _temp617:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp617, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp617)
      if _n.out ~= nil then
        _temp618 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp618 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp617)
      if _f.out ~= nil then
        _temp618 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp618 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp617, "out"))
      end

      elseif _temp617 == nil then
        _error(exception:null_error("_temp617", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp617))
      end

local _temp619 = string:new("\n")
local _temp620
      local _t = _type(_temp616)
      if _t == "table" then
                      if _type(_temp616._less_less) == "function" or (_type(_temp616._less_less) == "table" and _rawget(_temp616._less_less, "__call_thing")) then
        _temp620 = _temp616:_less_less(_temp618)
      elseif _temp616._less_less ~= nil then
        _temp620 = _temp616._less_less

        elseif _temp616.no_undermethod ~= nil then
          _temp620 =  _temp616:no_undermethod(string:new("<<") , _temp618)
        else
          _error(exception:method_error(_temp616, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp616)
      if _n._less_less ~= nil then
        _temp620 = _n:_less_less(_temp618)
      elseif _n.no_undermethod ~= nil then
        _temp620 =  _n:no_undermethod(string:new("<<") , _temp618)
      else
        _error(exception:method_error(_temp616, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp616)
      if _f._less_less ~= nil then
        _temp620 = _f:_less_less(_temp618)
      elseif _f.no_undermethod ~= nil then
        _temp620 =  _f:no_undermethod(string:new("<<") , _temp618)
      else
        _error(exception:method_error(_temp616, "<<"))
      end

      elseif _temp616 == nil then
        _error(exception:null_error("_temp616", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp616))
      end

local _temp618
      local _t = _type(_temp620)
      if _t == "table" then
                      if _type(_temp620._less_less) == "function" or (_type(_temp620._less_less) == "table" and _rawget(_temp620._less_less, "__call_thing")) then
        _temp618 = _temp620:_less_less(_temp619)
      elseif _temp620._less_less ~= nil then
        _temp618 = _temp620._less_less

        elseif _temp620.no_undermethod ~= nil then
          _temp618 =  _temp620:no_undermethod(string:new("<<") , _temp619)
        else
          _error(exception:method_error(_temp620, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp620)
      if _n._less_less ~= nil then
        _temp618 = _n:_less_less(_temp619)
      elseif _n.no_undermethod ~= nil then
        _temp618 =  _n:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp620, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp620)
      if _f._less_less ~= nil then
        _temp618 = _f:_less_less(_temp619)
      elseif _f.no_undermethod ~= nil then
        _temp618 =  _f:no_undermethod(string:new("<<") , _temp619)
      else
        _error(exception:method_error(_temp620, "<<"))
      end

      elseif _temp620 == nil then
        _error(exception:null_error("_temp620", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp620))
      end

_dummy_ = _temp618 
end

do
local _temp621 = nil
        local _t = _type(_temp612)
        if _t == "table" then
          if _rawget(_temp612, "__call_thing") == nil then
            _temp621 = _temp612
          else
                  if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp621 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp621 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp621 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp621 =  _temp612(_self)
      end

          end
        elseif _t == "number" then
          _temp621 = _temp612
        elseif _t == "function" then
                if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp621 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp621 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp621 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp621 =  _temp612(_self)
      end

        elseif _temp612 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end

local _temp622 = nil
      local _t = _type(_temp621)
      if _t == "table" then
                      if _type(_temp621.out) == "function" or (_type(_temp621.out) == "table" and _rawget(_temp621.out, "__call_thing")) then
        _temp622 = _temp621:out()
      elseif _temp621.out ~= nil then
        _temp622 = _temp621.out

        elseif _temp621.no_undermethod ~= nil then
          _temp622 =  _temp621:no_undermethod(string:new("out"))
        else
          _error(exception:method_error(_temp621, "out"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp621)
      if _n.out ~= nil then
        _temp622 = _n:out()
      elseif _n.no_undermethod ~= nil then
        _temp622 =  _n:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp621, "out"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp621)
      if _f.out ~= nil then
        _temp622 = _f:out()
      elseif _f.no_undermethod ~= nil then
        _temp622 =  _f:no_undermethod(string:new("out"))
      else
        _error(exception:method_error(_temp621, "out"))
      end

      elseif _temp621 == nil then
        _error(exception:null_error("_temp621", "invoke out on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp621))
      end

local _temp623 = nil
local _temp624 = nil
        local _t = _type(_temp611)
        if _t == "table" then
          if _rawget(_temp611, "__call_thing") == nil then
            _temp624 = _temp611
          else
                  if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp624 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp624 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp624 =  _temp611(_self)
      end

          end
        elseif _t == "number" then
          _temp624 = _temp611
        elseif _t == "function" then
                if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp624 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp624 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp624 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp624 =  _temp611(_self)
      end

        elseif _temp611 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp624)
      if _t == "table" then
                      if _type(_temp624.lhs) == "function" or (_type(_temp624.lhs) == "table" and _rawget(_temp624.lhs, "__call_thing")) then
        _temp624 = _temp624:lhs()
      elseif _temp624.lhs ~= nil then
        _temp624 = _temp624.lhs

        elseif _temp624.no_undermethod ~= nil then
          _temp624 =  _temp624:no_undermethod(string:new("lhs"))
        else
          _error(exception:method_error(_temp624, "lhs"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp624)
      if _n.lhs ~= nil then
        _temp624 = _n:lhs()
      elseif _n.no_undermethod ~= nil then
        _temp624 =  _n:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp624, "lhs"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp624)
      if _f.lhs ~= nil then
        _temp624 = _f:lhs()
      elseif _f.no_undermethod ~= nil then
        _temp624 =  _f:no_undermethod(string:new("lhs"))
      else
        _error(exception:method_error(_temp624, "lhs"))
      end

      elseif _temp624 == nil then
        _error(exception:null_error("_temp624", "invoke lhs on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp624))
      end

      local _t = _type(_temp624)
      if _t == "table" then
                      if _type(_temp624.value) == "function" or (_type(_temp624.value) == "table" and _rawget(_temp624.value, "__call_thing")) then
        _temp624 = _temp624:value()
      elseif _temp624.value ~= nil then
        _temp624 = _temp624.value

        elseif _temp624.no_undermethod ~= nil then
          _temp624 =  _temp624:no_undermethod(string:new("value"))
        else
          _error(exception:method_error(_temp624, "value"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp624)
      if _n.value ~= nil then
        _temp624 = _n:value()
      elseif _n.no_undermethod ~= nil then
        _temp624 =  _n:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp624, "value"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp624)
      if _f.value ~= nil then
        _temp624 = _f:value()
      elseif _f.no_undermethod ~= nil then
        _temp624 =  _f:no_undermethod(string:new("value"))
      else
        _error(exception:method_error(_temp624, "value"))
      end

      elseif _temp624 == nil then
        _error(exception:null_error("_temp624", "invoke value on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp624))
      end


local _temp625 = nil
        local _t = _type(_temp611)
        if _t == "table" then
          if _rawget(_temp611, "__call_thing") == nil then
            _temp625 = _temp611
          else
                  if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp625 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp625 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp625 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp625 =  _temp611(_self)
      end

          end
        elseif _t == "number" then
          _temp625 = _temp611
        elseif _t == "function" then
                if _temp611 == nil then
              if _type(_self._temp611) == "function" or (_type(_self._temp611) == "table" and _rawget(_self._temp611, "__call_thing")) then
        _temp625 =  _self:_temp611()
      elseif _self._temp611 ~= nil then
        _temp625 =  _self._temp611

        elseif _self.no_undermethod ~= nil then
          _temp625 =  _self:no_undermethod(string:new("_temp611"))
        else
          _error(exception:null_error("node", "invoke method"))
        end
      else 
        _temp625 =  _temp611(_self)
      end

        elseif _temp611 == nil then
          _error(exception:null_error("node", "cannot call method on it"))
        else
          _error(exception:method_error("self", "node"))
        end
      local _t = _type(_temp625)
      if _t == "table" then
                      if _type(_temp625.op) == "function" or (_type(_temp625.op) == "table" and _rawget(_temp625.op, "__call_thing")) then
        _temp625 = _temp625:op()
      elseif _temp625.op ~= nil then
        _temp625 = _temp625.op

        elseif _temp625.no_undermethod ~= nil then
          _temp625 =  _temp625:no_undermethod(string:new("op"))
        else
          _error(exception:method_error(_temp625, "op"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp625)
      if _n.op ~= nil then
        _temp625 = _n:op()
      elseif _n.no_undermethod ~= nil then
        _temp625 =  _n:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp625, "op"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp625)
      if _f.op ~= nil then
        _temp625 = _f:op()
      elseif _f.no_undermethod ~= nil then
        _temp625 =  _f:no_undermethod(string:new("op"))
      else
        _error(exception:method_error(_temp625, "op"))
      end

      elseif _temp625 == nil then
        _error(exception:null_error("_temp625", "invoke op on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp625))
      end


local _temp626 
do
_temp626 = {}
local _temp627
        local _t = _type(_temp614)
        if _t == "table" then
          if _rawget(_temp614, "__call_thing") == nil then
            _temp627 = _temp614
          else
                  if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp627 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp627 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp627 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp627 =  _temp614(_self)
      end

          end
        elseif _t == "number" then
          _temp627 = _temp614
        elseif _t == "function" then
                if _temp614 == nil then
              if _type(_self._temp614) == "function" or (_type(_self._temp614) == "table" and _rawget(_self._temp614, "__call_thing")) then
        _temp627 =  _self:_temp614()
      elseif _self._temp614 ~= nil then
        _temp627 =  _self._temp614

        elseif _self.no_undermethod ~= nil then
          _temp627 =  _self:no_undermethod(string:new("_temp614"))
        else
          _error(exception:null_error("rhs", "invoke method"))
        end
      else 
        _temp627 =  _temp614(_self)
      end

        elseif _temp614 == nil then
          _error(exception:null_error("rhs", "cannot call method on it"))
        else
          _error(exception:method_error("self", "rhs"))
        end
      local _t = _type(_temp627)
      if _t == "table" then
                      if _type(_temp627.var) == "function" or (_type(_temp627.var) == "table" and _rawget(_temp627.var, "__call_thing")) then
        _temp627 = _temp627:var()
      elseif _temp627.var ~= nil then
        _temp627 = _temp627.var

        elseif _temp627.no_undermethod ~= nil then
          _temp627 =  _temp627:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp627, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp627)
      if _n.var ~= nil then
        _temp627 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp627 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp627, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp627)
      if _f.var ~= nil then
        _temp627 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp627 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp627, "var"))
      end

      elseif _temp627 == nil then
        _error(exception:null_error("_temp627", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp627))
      end


_temp626[1] = _temp627
_temp626 = array:new(_temp626)
end

        local _t = _type(_temp612)
        if _t == "table" then
          if _rawget(_temp612, "__call_thing") == nil then
            _temp627 = _temp612
          else
                  if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp627 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp627 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp627 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp627 =  _temp612(_self)
      end

          end
        elseif _t == "number" then
          _temp627 = _temp612
        elseif _t == "function" then
                if _temp612 == nil then
              if _type(_self._temp612) == "function" or (_type(_self._temp612) == "table" and _rawget(_self._temp612, "__call_thing")) then
        _temp627 =  _self:_temp612()
      elseif _self._temp612 ~= nil then
        _temp627 =  _self._temp612

        elseif _self.no_undermethod ~= nil then
          _temp627 =  _self:no_undermethod(string:new("_temp612"))
        else
          _error(exception:null_error("res", "invoke method"))
        end
      else 
        _temp627 =  _temp612(_self)
      end

        elseif _temp612 == nil then
          _error(exception:null_error("res", "cannot call method on it"))
        else
          _error(exception:method_error("self", "res"))
        end
      local _t = _type(_temp627)
      if _t == "table" then
                      if _type(_temp627.var) == "function" or (_type(_temp627.var) == "table" and _rawget(_temp627.var, "__call_thing")) then
        _temp627 = _temp627:var()
      elseif _temp627.var ~= nil then
        _temp627 = _temp627.var

        elseif _temp627.no_undermethod ~= nil then
          _temp627 =  _temp627:no_undermethod(string:new("var"))
        else
          _error(exception:method_error(_temp627, "var"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp627)
      if _n.var ~= nil then
        _temp627 = _n:var()
      elseif _n.no_undermethod ~= nil then
        _temp627 =  _n:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp627, "var"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp627)
      if _f.var ~= nil then
        _temp627 = _f:var()
      elseif _f.no_undermethod ~= nil then
        _temp627 =  _f:no_undermethod(string:new("var"))
      else
        _error(exception:method_error(_temp627, "var"))
      end

      elseif _temp627 == nil then
        _error(exception:null_error("_temp627", "invoke var on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp627))
      end


    if _type(invoke_undermethod) == "function" or (_type(invoke_undermethod) == "table" and _rawget(invoke_undermethod, "__call_thing")) then
      _temp623 =  invoke_undermethod(_self, _temp624,_temp625,_temp626,_temp627)

    elseif invoke_undermethod then
      _error(exception:new("Tried to invoke non-method: invoke_method (" .. object.__type(invoke_undermethod) .. ")"))
    else
            if _type(_self.invoke_undermethod) == "function" or (_type(_self.invoke_undermethod) == "table" and _rawget(_self.invoke_undermethod, "__call_thing")) then
        _temp623 =  _self:invoke_undermethod(_temp624,_temp625,_temp626,_temp627)
      elseif _self.invoke_undermethod ~= nil then
        _temp623 =  _self.invoke_undermethod

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp623 =  _self:no_undermethod(string:new("invoke_method") , _temp624,_temp625,_temp626,_temp627)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp623 =  no_undermethod(_self, string:new("invoke_method") , _temp624,_temp625,_temp626,_temp627)
      else
        _error(exception:name_error("invoke_method"))
      end
    end
local _temp627
      local _t = _type(_temp622)
      if _t == "table" then
                      if _type(_temp622._less_less) == "function" or (_type(_temp622._less_less) == "table" and _rawget(_temp622._less_less, "__call_thing")) then
        _temp627 = _temp622:_less_less(_temp623)
      elseif _temp622._less_less ~= nil then
        _temp627 = _temp622._less_less

        elseif _temp622.no_undermethod ~= nil then
          _temp627 =  _temp622:no_undermethod(string:new("<<") , _temp623)
        else
          _error(exception:method_error(_temp622, "<<"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp622)
      if _n._less_less ~= nil then
        _temp627 = _n:_less_less(_temp623)
      elseif _n.no_undermethod ~= nil then
        _temp627 =  _n:no_undermethod(string:new("<<") , _temp623)
      else
        _error(exception:method_error(_temp622, "<<"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp622)
      if _f._less_less ~= nil then
        _temp627 = _f:_less_less(_temp623)
      elseif _f.no_undermethod ~= nil then
        _temp627 =  _f:no_undermethod(string:new("<<") , _temp623)
      else
        _error(exception:method_error(_temp622, "<<"))
      end

      elseif _temp622 == nil then
        _error(exception:null_error("_temp622", "invoke << on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp622))
      end

_dummy_ = _temp627 
end

    if _type(_temp612) == "function" or (_type(_temp612) == "table" and _rawget(_temp612, "__call_thing")) then
      return  _temp612(_self)

    elseif _temp612 then
      return  _temp612
    else
            if _type(_self.res) == "function" or (_type(_self.res) == "table" and _rawget(_self.res, "__call_thing")) then
        return  _self:res()
      elseif _self.res ~= nil then
        return  _self.res

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("res"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("res"))
      else
        _error(exception:name_error("res"))
      end
    end

end

      local _t = _type(_temp609)
      if _t == "table" then
                      if _type(_temp609.walk) == "function" or (_type(_temp609.walk) == "table" and _rawget(_temp609.walk, "__call_thing")) then
        _dummy_ = _temp609:walk(_temp4,_temp628)
      elseif _temp609.walk ~= nil then
        _dummy_ = _temp609.walk

        elseif _temp609.no_undermethod ~= nil then
          _dummy_ =  _temp609:no_undermethod(string:new("walk") , _temp4,_temp628)
        else
          _error(exception:method_error(_temp609, "walk"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp609)
      if _n.walk ~= nil then
        _dummy_ = _n:walk(_temp4,_temp628)
      elseif _n.no_undermethod ~= nil then
        _dummy_ =  _n:no_undermethod(string:new("walk") , _temp4,_temp628)
      else
        _error(exception:method_error(_temp609, "walk"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp609)
      if _f.walk ~= nil then
        _dummy_ = _f:walk(_temp4,_temp628)
      elseif _f.no_undermethod ~= nil then
        _dummy_ =  _f:no_undermethod(string:new("walk") , _temp4,_temp628)
      else
        _error(exception:method_error(_temp609, "walk"))
      end

      elseif _temp609 == nil then
        _error(exception:null_error("_temp609", "invoke walk on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp609))
      end

    if _type(_temp5) == "function" or (_type(_temp5) == "table" and _rawget(_temp5, "__call_thing")) then
      _temp628 =  _temp5(_self)

    elseif _temp5 then
      _temp628 =  _temp5
    else
            if _type(_self.c) == "function" or (_type(_self.c) == "table" and _rawget(_self.c, "__call_thing")) then
        _temp628 =  _self:c()
      elseif _self.c ~= nil then
        _temp628 =  _self.c

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp628 =  _self:no_undermethod(string:new("c"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp628 =  no_undermethod(_self, string:new("c"))
      else
        _error(exception:name_error("c"))
      end
    end

_temp4 = string:new("compiler")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp628,_temp4)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp628,_temp4)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp628,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp628,_temp4)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
