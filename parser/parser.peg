line = comment
     | space? expression space? comment? (eof | eol | eob)
     | empty_line

empty_line = space? eol

eob = space? &"}" space?

expression = hash | array | regex | string | number | paren_exp

paren_exp  = "(" space? expression space? ")"

array   = "[" spaceorbreak array_inner spaceorbreak "]"
        | "[" spaceorbreak "]"

array_inner = expression (((spaceorbreak "," spaceorbreak) | (space | eol)+) expression)+

hash    = "[" space? ":" space? "]"
        | "[" spaceorbreak hash_inner spaceorbreak "]"

hash_inner = hash_argument ((spaceorbreak "," spaceorbreak) | ((space | eol)+) hash_argument)*

hash_argument = (identifier | operator) (identifier | operator | number)* ":" spaceorbreak expression
              | expression spaceorbreak ":" spaceorbreak expression

regex   = "/" (!"/" . | "\\/")* "/" /[mix]*/

string  = "\"" (string_interpolation | !"\"" .)* "\""
        | "'" (!"'" .)* "'"
        | ":" (identifier | operator | number)+

string_interpolation = "#" "{" space? expression? space? (eol space? expression space?)* spaceorbreak "}"

comment = space? "#*" (!"*#" (comment | .))* "*#"
        | space? "#" (!(eol | eof) .)*

function_definition = "{" space? formal_args space? line* space? "}"

formal_args = space? plain_formals space? "|" !"|"
            | space? default_args space? "|" !"|"
            | space? variable_args space? "|" !"|"
            | space? plain_formals space? "," space? variable_args space? "|" !"|" 
            | space? default_args space? "," space? variable_args space? "|" !"|"
            | space? plain_formals space? "," space? default_args space? "," space? variable_args space? "|" !"|"
            | space? plain_formals space? "," space? default_args space? "|" !"|"
            | !"|"

plain_formals = identifier rest_formals

rest_formals = (space? "," space? identifier !(space "="))*

default_args = default_arg (space? "," space? default_args)*

default_arg = identifier space "=" space default_arg_rhs_expression

default_arg_rhs_expression = paren_exp | number | string | function_definition | array | hash

variable_args = "*" identifier

unary_operation = !("-" number) operator !space unary_rhs_expression

unary_rhs_expression = paren_exp | number | string | array | hash | regex

binary_operation = binary_operation_chain expression

binary_operation_chain = binary_lhs_expression space operator ((space? eol space?) | space)+

binary_lhs_expression = paren_exp | number | string | array | hash | regex | unary_operation

identifier = /[a-zA-Z]/ (!"->" /[a-zA-Z0-9_!?\-*+^&@~\/\\><$%]/)*

operator = !("->" !operator) !("=" !(operator | "=")) ("!=" | ">=" | "<=" | /[!?\-*+^@~\/\\><$_%\=]/ | "||" | "|" | "&&" | "&")+

number  = "-"? /[0-9]+/ ("." /[0-9]+/)?

spaceorbreak = space? eol? space?

space   = (" " | "\t")+

eol     = ("\n" | ";" | "\r\n")+

eof     = (eol | space)? !.
