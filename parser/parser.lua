              require "coxpcall"
      local _lib
      if package.loaded.core then
        _lib = true
      else
        _lib = false
        require "core"
      end


      _exports = {}
      local _main = function ()
                local object = object
        local array = array
        local number = number
        local string = base_string
        local exception = exception
        local hash = hash
        local regex = regex
        local _self = object
        local _type = type
        local _error = error
        local _tostring = tostring
        local brat_function = brat_function
        local _lifted_call = _lifted_call
        local _rawget = rawget


        setfenv(1, {})

        --lifted
local _temp11 = function (_arg_table, _self)


local _temp9 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp9 =  _self:my()
      elseif _self.my ~= nil then
        _temp9 =  _self.my

        elseif my ~= nil then
          _temp9 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp10 = nil
    if _type(program) == "function" or (_type(program) == "table" and _rawget(program, "__call_thing")) then
      _temp10 =  program(_self)

    elseif program then
      _temp10 =  program
    else
            if _type(_self.program) == "function" or (_type(_self.program) == "table" and _rawget(_self.program, "__call_thing")) then
        _temp10 =  _self:program()
      elseif _self.program ~= nil then
        _temp10 =  _self.program

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp10 =  _self:no_undermethod(string:new("program"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp10 =  no_undermethod(_self, string:new("program"))
      else
        _error(exception:name_error("program"))
      end
    end

      local _t = _type(_temp9)
      if _t == "table" then
                      if _type(_temp9.squish) == "function" or (_type(_temp9.squish) == "table" and _rawget(_temp9.squish, "__call_thing")) then
        return _temp9:squish(_temp10)
      elseif _temp9.squish ~= nil then
        return _temp9.squish

        elseif _temp9.no_undermethod ~= nil then
          return  _temp9:no_undermethod(string:new("squish") , _temp10)
        else
          _error(exception:method_error(_temp9, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp9)
      if _n.squish ~= nil then
        return _n:squish(_temp10)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp10)
      else
        _error(exception:method_error(_temp9, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp9)
      if _f.squish ~= nil then
        return _f:squish(_temp10)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp10)
      else
        _error(exception:method_error(_temp9, "squish"))
      end

      elseif _temp9 == nil then
        _error(exception:null_error("_temp9", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp9))
      end

end

local _temp15 = function (_arg_table, _self)


local _temp13 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp13 =  _self:my()
      elseif _self.my ~= nil then
        _temp13 =  _self.my

        elseif my ~= nil then
          _temp13 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp14 = nil
    if _type(program) == "function" or (_type(program) == "table" and _rawget(program, "__call_thing")) then
      _temp14 =  program(_self)

    elseif program then
      _temp14 =  program
    else
            if _type(_self.program) == "function" or (_type(_self.program) == "table" and _rawget(_self.program, "__call_thing")) then
        _temp14 =  _self:program()
      elseif _self.program ~= nil then
        _temp14 =  _self.program

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp14 =  _self:no_undermethod(string:new("program"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp14 =  no_undermethod(_self, string:new("program"))
      else
        _error(exception:name_error("program"))
      end
    end

      local _t = _type(_temp13)
      if _t == "table" then
                      if _type(_temp13.squish) == "function" or (_type(_temp13.squish) == "table" and _rawget(_temp13.squish, "__call_thing")) then
        return _temp13:squish(_temp14)
      elseif _temp13.squish ~= nil then
        return _temp13.squish

        elseif _temp13.no_undermethod ~= nil then
          return  _temp13:no_undermethod(string:new("squish") , _temp14)
        else
          _error(exception:method_error(_temp13, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp13)
      if _n.squish ~= nil then
        return _n:squish(_temp14)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp14)
      else
        _error(exception:method_error(_temp13, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp13)
      if _f.squish ~= nil then
        return _f:squish(_temp14)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp14)
      else
        _error(exception:method_error(_temp13, "squish"))
      end

      elseif _temp13 == nil then
        _error(exception:null_error("_temp13", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp13))
      end

end

local _temp25 = function (_arg_table, _self)


local _temp23 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp23 =  _self:my()
      elseif _self.my ~= nil then
        _temp23 =  _self.my

        elseif my ~= nil then
          _temp23 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp24 = nil
    if _type(simple_underexp) == "function" or (_type(simple_underexp) == "table" and _rawget(simple_underexp, "__call_thing")) then
      _temp24 =  simple_underexp(_self)

    elseif simple_underexp then
      _temp24 =  simple_underexp
    else
            if _type(_self.simple_underexp) == "function" or (_type(_self.simple_underexp) == "table" and _rawget(_self.simple_underexp, "__call_thing")) then
        _temp24 =  _self:simple_underexp()
      elseif _self.simple_underexp ~= nil then
        _temp24 =  _self.simple_underexp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp24 =  _self:no_undermethod(string:new("simple_exp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp24 =  no_undermethod(_self, string:new("simple_exp"))
      else
        _error(exception:name_error("simple_exp"))
      end
    end

      local _t = _type(_temp23)
      if _t == "table" then
                      if _type(_temp23.squish) == "function" or (_type(_temp23.squish) == "table" and _rawget(_temp23.squish, "__call_thing")) then
        return _temp23:squish(_temp24)
      elseif _temp23.squish ~= nil then
        return _temp23.squish

        elseif _temp23.no_undermethod ~= nil then
          return  _temp23:no_undermethod(string:new("squish") , _temp24)
        else
          _error(exception:method_error(_temp23, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp23)
      if _n.squish ~= nil then
        return _n:squish(_temp24)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp24)
      else
        _error(exception:method_error(_temp23, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp23)
      if _f.squish ~= nil then
        return _f:squish(_temp24)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp24)
      else
        _error(exception:method_error(_temp23, "squish"))
      end

      elseif _temp23 == nil then
        _error(exception:null_error("_temp23", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp23))
      end

end

local _temp29 = function (_arg_table, _self)


local _temp27 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp27 =  _self:my()
      elseif _self.my ~= nil then
        _temp27 =  _self.my

        elseif my ~= nil then
          _temp27 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp28 = nil
    if _type(simple_underexp) == "function" or (_type(simple_underexp) == "table" and _rawget(simple_underexp, "__call_thing")) then
      _temp28 =  simple_underexp(_self)

    elseif simple_underexp then
      _temp28 =  simple_underexp
    else
            if _type(_self.simple_underexp) == "function" or (_type(_self.simple_underexp) == "table" and _rawget(_self.simple_underexp, "__call_thing")) then
        _temp28 =  _self:simple_underexp()
      elseif _self.simple_underexp ~= nil then
        _temp28 =  _self.simple_underexp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp28 =  _self:no_undermethod(string:new("simple_exp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp28 =  no_undermethod(_self, string:new("simple_exp"))
      else
        _error(exception:name_error("simple_exp"))
      end
    end

      local _t = _type(_temp27)
      if _t == "table" then
                      if _type(_temp27.squish) == "function" or (_type(_temp27.squish) == "table" and _rawget(_temp27.squish, "__call_thing")) then
        return _temp27:squish(_temp28)
      elseif _temp27.squish ~= nil then
        return _temp27.squish

        elseif _temp27.no_undermethod ~= nil then
          return  _temp27:no_undermethod(string:new("squish") , _temp28)
        else
          _error(exception:method_error(_temp27, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp27)
      if _n.squish ~= nil then
        return _n:squish(_temp28)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp28)
      else
        _error(exception:method_error(_temp27, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp27)
      if _f.squish ~= nil then
        return _f:squish(_temp28)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp28)
      else
        _error(exception:method_error(_temp27, "squish"))
      end

      elseif _temp27 == nil then
        _error(exception:null_error("_temp27", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp27))
      end

end

local _temp34 = function (_arg_table, _self)


local _temp32 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp32 =  _self:my()
      elseif _self.my ~= nil then
        _temp32 =  _self.my

        elseif my ~= nil then
          _temp32 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp33 = nil
    if _type(simple_underexp) == "function" or (_type(simple_underexp) == "table" and _rawget(simple_underexp, "__call_thing")) then
      _temp33 =  simple_underexp(_self)

    elseif simple_underexp then
      _temp33 =  simple_underexp
    else
            if _type(_self.simple_underexp) == "function" or (_type(_self.simple_underexp) == "table" and _rawget(_self.simple_underexp, "__call_thing")) then
        _temp33 =  _self:simple_underexp()
      elseif _self.simple_underexp ~= nil then
        _temp33 =  _self.simple_underexp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp33 =  _self:no_undermethod(string:new("simple_exp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp33 =  no_undermethod(_self, string:new("simple_exp"))
      else
        _error(exception:name_error("simple_exp"))
      end
    end

      local _t = _type(_temp32)
      if _t == "table" then
                      if _type(_temp32.squish) == "function" or (_type(_temp32.squish) == "table" and _rawget(_temp32.squish, "__call_thing")) then
        return _temp32:squish(_temp33)
      elseif _temp32.squish ~= nil then
        return _temp32.squish

        elseif _temp32.no_undermethod ~= nil then
          return  _temp32:no_undermethod(string:new("squish") , _temp33)
        else
          _error(exception:method_error(_temp32, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp32)
      if _n.squish ~= nil then
        return _n:squish(_temp33)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp33)
      else
        _error(exception:method_error(_temp32, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp32)
      if _f.squish ~= nil then
        return _f:squish(_temp33)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp33)
      else
        _error(exception:method_error(_temp32, "squish"))
      end

      elseif _temp32 == nil then
        _error(exception:null_error("_temp32", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp32))
      end

end

local _temp38 = function (_arg_table, _self)


local _temp36 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp36 =  _self:my()
      elseif _self.my ~= nil then
        _temp36 =  _self.my

        elseif my ~= nil then
          _temp36 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp37 = nil
    if _type(field_underassign) == "function" or (_type(field_underassign) == "table" and _rawget(field_underassign, "__call_thing")) then
      _temp37 =  field_underassign(_self)

    elseif field_underassign then
      _temp37 =  field_underassign
    else
            if _type(_self.field_underassign) == "function" or (_type(_self.field_underassign) == "table" and _rawget(_self.field_underassign, "__call_thing")) then
        _temp37 =  _self:field_underassign()
      elseif _self.field_underassign ~= nil then
        _temp37 =  _self.field_underassign

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp37 =  _self:no_undermethod(string:new("field_assign"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp37 =  no_undermethod(_self, string:new("field_assign"))
      else
        _error(exception:name_error("field_assign"))
      end
    end

      local _t = _type(_temp36)
      if _t == "table" then
                      if _type(_temp36.squish) == "function" or (_type(_temp36.squish) == "table" and _rawget(_temp36.squish, "__call_thing")) then
        return _temp36:squish(_temp37)
      elseif _temp36.squish ~= nil then
        return _temp36.squish

        elseif _temp36.no_undermethod ~= nil then
          return  _temp36:no_undermethod(string:new("squish") , _temp37)
        else
          _error(exception:method_error(_temp36, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp36)
      if _n.squish ~= nil then
        return _n:squish(_temp37)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp37)
      else
        _error(exception:method_error(_temp36, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp36)
      if _f.squish ~= nil then
        return _f:squish(_temp37)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp37)
      else
        _error(exception:method_error(_temp36, "squish"))
      end

      elseif _temp36 == nil then
        _error(exception:null_error("_temp36", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp36))
      end

end

local _temp42 = function (_arg_table, _self)


local _temp40 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp40 =  _self:my()
      elseif _self.my ~= nil then
        _temp40 =  _self.my

        elseif my ~= nil then
          _temp40 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp41 = nil
    if _type(field_underassign) == "function" or (_type(field_underassign) == "table" and _rawget(field_underassign, "__call_thing")) then
      _temp41 =  field_underassign(_self)

    elseif field_underassign then
      _temp41 =  field_underassign
    else
            if _type(_self.field_underassign) == "function" or (_type(_self.field_underassign) == "table" and _rawget(_self.field_underassign, "__call_thing")) then
        _temp41 =  _self:field_underassign()
      elseif _self.field_underassign ~= nil then
        _temp41 =  _self.field_underassign

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp41 =  _self:no_undermethod(string:new("field_assign"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp41 =  no_undermethod(_self, string:new("field_assign"))
      else
        _error(exception:name_error("field_assign"))
      end
    end

      local _t = _type(_temp40)
      if _t == "table" then
                      if _type(_temp40.squish) == "function" or (_type(_temp40.squish) == "table" and _rawget(_temp40.squish, "__call_thing")) then
        return _temp40:squish(_temp41)
      elseif _temp40.squish ~= nil then
        return _temp40.squish

        elseif _temp40.no_undermethod ~= nil then
          return  _temp40:no_undermethod(string:new("squish") , _temp41)
        else
          _error(exception:method_error(_temp40, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp40)
      if _n.squish ~= nil then
        return _n:squish(_temp41)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp41)
      else
        _error(exception:method_error(_temp40, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp40)
      if _f.squish ~= nil then
        return _f:squish(_temp41)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp41)
      else
        _error(exception:method_error(_temp40, "squish"))
      end

      elseif _temp40 == nil then
        _error(exception:null_error("_temp40", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp40))
      end

end

local _temp46 = function (_arg_table, _self)


local _temp44 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp44 =  _self:my()
      elseif _self.my ~= nil then
        _temp44 =  _self.my

        elseif my ~= nil then
          _temp44 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp45 = nil
    if _type(var_underassign) == "function" or (_type(var_underassign) == "table" and _rawget(var_underassign, "__call_thing")) then
      _temp45 =  var_underassign(_self)

    elseif var_underassign then
      _temp45 =  var_underassign
    else
            if _type(_self.var_underassign) == "function" or (_type(_self.var_underassign) == "table" and _rawget(_self.var_underassign, "__call_thing")) then
        _temp45 =  _self:var_underassign()
      elseif _self.var_underassign ~= nil then
        _temp45 =  _self.var_underassign

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp45 =  _self:no_undermethod(string:new("var_assign"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp45 =  no_undermethod(_self, string:new("var_assign"))
      else
        _error(exception:name_error("var_assign"))
      end
    end

      local _t = _type(_temp44)
      if _t == "table" then
                      if _type(_temp44.squish) == "function" or (_type(_temp44.squish) == "table" and _rawget(_temp44.squish, "__call_thing")) then
        return _temp44:squish(_temp45)
      elseif _temp44.squish ~= nil then
        return _temp44.squish

        elseif _temp44.no_undermethod ~= nil then
          return  _temp44:no_undermethod(string:new("squish") , _temp45)
        else
          _error(exception:method_error(_temp44, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp44)
      if _n.squish ~= nil then
        return _n:squish(_temp45)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp45)
      else
        _error(exception:method_error(_temp44, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp44)
      if _f.squish ~= nil then
        return _f:squish(_temp45)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp45)
      else
        _error(exception:method_error(_temp44, "squish"))
      end

      elseif _temp44 == nil then
        _error(exception:null_error("_temp44", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp44))
      end

end

local _temp50 = function (_arg_table, _self)


local _temp48 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp48 =  _self:my()
      elseif _self.my ~= nil then
        _temp48 =  _self.my

        elseif my ~= nil then
          _temp48 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp49 = nil
    if _type(field_underaccess) == "function" or (_type(field_underaccess) == "table" and _rawget(field_underaccess, "__call_thing")) then
      _temp49 =  field_underaccess(_self)

    elseif field_underaccess then
      _temp49 =  field_underaccess
    else
            if _type(_self.field_underaccess) == "function" or (_type(_self.field_underaccess) == "table" and _rawget(_self.field_underaccess, "__call_thing")) then
        _temp49 =  _self:field_underaccess()
      elseif _self.field_underaccess ~= nil then
        _temp49 =  _self.field_underaccess

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp49 =  _self:no_undermethod(string:new("field_access"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp49 =  no_undermethod(_self, string:new("field_access"))
      else
        _error(exception:name_error("field_access"))
      end
    end

      local _t = _type(_temp48)
      if _t == "table" then
                      if _type(_temp48.squish) == "function" or (_type(_temp48.squish) == "table" and _rawget(_temp48.squish, "__call_thing")) then
        return _temp48:squish(_temp49)
      elseif _temp48.squish ~= nil then
        return _temp48.squish

        elseif _temp48.no_undermethod ~= nil then
          return  _temp48:no_undermethod(string:new("squish") , _temp49)
        else
          _error(exception:method_error(_temp48, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp48)
      if _n.squish ~= nil then
        return _n:squish(_temp49)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp49)
      else
        _error(exception:method_error(_temp48, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp48)
      if _f.squish ~= nil then
        return _f:squish(_temp49)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp49)
      else
        _error(exception:method_error(_temp48, "squish"))
      end

      elseif _temp48 == nil then
        _error(exception:null_error("_temp48", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp48))
      end

end

local _temp54 = function (_arg_table, _self)


local _temp52 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp52 =  _self:my()
      elseif _self.my ~= nil then
        _temp52 =  _self.my

        elseif my ~= nil then
          _temp52 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp53 = nil
    if _type(index_underset) == "function" or (_type(index_underset) == "table" and _rawget(index_underset, "__call_thing")) then
      _temp53 =  index_underset(_self)

    elseif index_underset then
      _temp53 =  index_underset
    else
            if _type(_self.index_underset) == "function" or (_type(_self.index_underset) == "table" and _rawget(_self.index_underset, "__call_thing")) then
        _temp53 =  _self:index_underset()
      elseif _self.index_underset ~= nil then
        _temp53 =  _self.index_underset

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp53 =  _self:no_undermethod(string:new("index_set"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp53 =  no_undermethod(_self, string:new("index_set"))
      else
        _error(exception:name_error("index_set"))
      end
    end

      local _t = _type(_temp52)
      if _t == "table" then
                      if _type(_temp52.squish) == "function" or (_type(_temp52.squish) == "table" and _rawget(_temp52.squish, "__call_thing")) then
        return _temp52:squish(_temp53)
      elseif _temp52.squish ~= nil then
        return _temp52.squish

        elseif _temp52.no_undermethod ~= nil then
          return  _temp52:no_undermethod(string:new("squish") , _temp53)
        else
          _error(exception:method_error(_temp52, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp52)
      if _n.squish ~= nil then
        return _n:squish(_temp53)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp53)
      else
        _error(exception:method_error(_temp52, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp52)
      if _f.squish ~= nil then
        return _f:squish(_temp53)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp53)
      else
        _error(exception:method_error(_temp52, "squish"))
      end

      elseif _temp52 == nil then
        _error(exception:null_error("_temp52", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp52))
      end

end

local _temp58 = function (_arg_table, _self)


local _temp56 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp56 =  _self:my()
      elseif _self.my ~= nil then
        _temp56 =  _self.my

        elseif my ~= nil then
          _temp56 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp57 = nil
    if _type(index_underget) == "function" or (_type(index_underget) == "table" and _rawget(index_underget, "__call_thing")) then
      _temp57 =  index_underget(_self)

    elseif index_underget then
      _temp57 =  index_underget
    else
            if _type(_self.index_underget) == "function" or (_type(_self.index_underget) == "table" and _rawget(_self.index_underget, "__call_thing")) then
        _temp57 =  _self:index_underget()
      elseif _self.index_underget ~= nil then
        _temp57 =  _self.index_underget

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp57 =  _self:no_undermethod(string:new("index_get"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp57 =  no_undermethod(_self, string:new("index_get"))
      else
        _error(exception:name_error("index_get"))
      end
    end

      local _t = _type(_temp56)
      if _t == "table" then
                      if _type(_temp56.squish) == "function" or (_type(_temp56.squish) == "table" and _rawget(_temp56.squish, "__call_thing")) then
        return _temp56:squish(_temp57)
      elseif _temp56.squish ~= nil then
        return _temp56.squish

        elseif _temp56.no_undermethod ~= nil then
          return  _temp56:no_undermethod(string:new("squish") , _temp57)
        else
          _error(exception:method_error(_temp56, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp56)
      if _n.squish ~= nil then
        return _n:squish(_temp57)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp57)
      else
        _error(exception:method_error(_temp56, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp56)
      if _f.squish ~= nil then
        return _f:squish(_temp57)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp57)
      else
        _error(exception:method_error(_temp56, "squish"))
      end

      elseif _temp56 == nil then
        _error(exception:null_error("_temp56", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp56))
      end

end

local _temp62 = function (_arg_table, _self)


local _temp60 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp60 =  _self:my()
      elseif _self.my ~= nil then
        _temp60 =  _self.my

        elseif my ~= nil then
          _temp60 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp61 = nil
    if _type(simple_undermeth_underaccess) == "function" or (_type(simple_undermeth_underaccess) == "table" and _rawget(simple_undermeth_underaccess, "__call_thing")) then
      _temp61 =  simple_undermeth_underaccess(_self)

    elseif simple_undermeth_underaccess then
      _temp61 =  simple_undermeth_underaccess
    else
            if _type(_self.simple_undermeth_underaccess) == "function" or (_type(_self.simple_undermeth_underaccess) == "table" and _rawget(_self.simple_undermeth_underaccess, "__call_thing")) then
        _temp61 =  _self:simple_undermeth_underaccess()
      elseif _self.simple_undermeth_underaccess ~= nil then
        _temp61 =  _self.simple_undermeth_underaccess

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp61 =  _self:no_undermethod(string:new("simple_meth_access"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp61 =  no_undermethod(_self, string:new("simple_meth_access"))
      else
        _error(exception:name_error("simple_meth_access"))
      end
    end

      local _t = _type(_temp60)
      if _t == "table" then
                      if _type(_temp60.squish) == "function" or (_type(_temp60.squish) == "table" and _rawget(_temp60.squish, "__call_thing")) then
        return _temp60:squish(_temp61)
      elseif _temp60.squish ~= nil then
        return _temp60.squish

        elseif _temp60.no_undermethod ~= nil then
          return  _temp60:no_undermethod(string:new("squish") , _temp61)
        else
          _error(exception:method_error(_temp60, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp60)
      if _n.squish ~= nil then
        return _n:squish(_temp61)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp61)
      else
        _error(exception:method_error(_temp60, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp60)
      if _f.squish ~= nil then
        return _f:squish(_temp61)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp61)
      else
        _error(exception:method_error(_temp60, "squish"))
      end

      elseif _temp60 == nil then
        _error(exception:null_error("_temp60", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp60))
      end

end

local _temp66 = function (_arg_table, _self)


local _temp64 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp64 =  _self:my()
      elseif _self.my ~= nil then
        _temp64 =  _self.my

        elseif my ~= nil then
          _temp64 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp65 = nil
    if _type(meth_underaccess) == "function" or (_type(meth_underaccess) == "table" and _rawget(meth_underaccess, "__call_thing")) then
      _temp65 =  meth_underaccess(_self)

    elseif meth_underaccess then
      _temp65 =  meth_underaccess
    else
            if _type(_self.meth_underaccess) == "function" or (_type(_self.meth_underaccess) == "table" and _rawget(_self.meth_underaccess, "__call_thing")) then
        _temp65 =  _self:meth_underaccess()
      elseif _self.meth_underaccess ~= nil then
        _temp65 =  _self.meth_underaccess

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp65 =  _self:no_undermethod(string:new("meth_access"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp65 =  no_undermethod(_self, string:new("meth_access"))
      else
        _error(exception:name_error("meth_access"))
      end
    end

      local _t = _type(_temp64)
      if _t == "table" then
                      if _type(_temp64.squish) == "function" or (_type(_temp64.squish) == "table" and _rawget(_temp64.squish, "__call_thing")) then
        return _temp64:squish(_temp65)
      elseif _temp64.squish ~= nil then
        return _temp64.squish

        elseif _temp64.no_undermethod ~= nil then
          return  _temp64:no_undermethod(string:new("squish") , _temp65)
        else
          _error(exception:method_error(_temp64, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp64)
      if _n.squish ~= nil then
        return _n:squish(_temp65)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp65)
      else
        _error(exception:method_error(_temp64, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp64)
      if _f.squish ~= nil then
        return _f:squish(_temp65)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp65)
      else
        _error(exception:method_error(_temp64, "squish"))
      end

      elseif _temp64 == nil then
        _error(exception:null_error("_temp64", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp64))
      end

end

local _temp70 = function (_arg_table, _self)


local _temp68 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp68 =  _self:my()
      elseif _self.my ~= nil then
        _temp68 =  _self.my

        elseif my ~= nil then
          _temp68 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp69 = nil
    if _type(paren_undermeth_underaccess) == "function" or (_type(paren_undermeth_underaccess) == "table" and _rawget(paren_undermeth_underaccess, "__call_thing")) then
      _temp69 =  paren_undermeth_underaccess(_self)

    elseif paren_undermeth_underaccess then
      _temp69 =  paren_undermeth_underaccess
    else
            if _type(_self.paren_undermeth_underaccess) == "function" or (_type(_self.paren_undermeth_underaccess) == "table" and _rawget(_self.paren_undermeth_underaccess, "__call_thing")) then
        _temp69 =  _self:paren_undermeth_underaccess()
      elseif _self.paren_undermeth_underaccess ~= nil then
        _temp69 =  _self.paren_undermeth_underaccess

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp69 =  _self:no_undermethod(string:new("paren_meth_access"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp69 =  no_undermethod(_self, string:new("paren_meth_access"))
      else
        _error(exception:name_error("paren_meth_access"))
      end
    end

      local _t = _type(_temp68)
      if _t == "table" then
                      if _type(_temp68.squish) == "function" or (_type(_temp68.squish) == "table" and _rawget(_temp68.squish, "__call_thing")) then
        return _temp68:squish(_temp69)
      elseif _temp68.squish ~= nil then
        return _temp68.squish

        elseif _temp68.no_undermethod ~= nil then
          return  _temp68:no_undermethod(string:new("squish") , _temp69)
        else
          _error(exception:method_error(_temp68, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp68)
      if _n.squish ~= nil then
        return _n:squish(_temp69)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp69)
      else
        _error(exception:method_error(_temp68, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp68)
      if _f.squish ~= nil then
        return _f:squish(_temp69)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp69)
      else
        _error(exception:method_error(_temp68, "squish"))
      end

      elseif _temp68 == nil then
        _error(exception:null_error("_temp68", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp68))
      end

end

local _temp74 = function (_arg_table, _self)


local _temp72 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp72 =  _self:my()
      elseif _self.my ~= nil then
        _temp72 =  _self.my

        elseif my ~= nil then
          _temp72 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp73 = nil
    if _type(simple_underparen_undermeth_underaccess) == "function" or (_type(simple_underparen_undermeth_underaccess) == "table" and _rawget(simple_underparen_undermeth_underaccess, "__call_thing")) then
      _temp73 =  simple_underparen_undermeth_underaccess(_self)

    elseif simple_underparen_undermeth_underaccess then
      _temp73 =  simple_underparen_undermeth_underaccess
    else
            if _type(_self.simple_underparen_undermeth_underaccess) == "function" or (_type(_self.simple_underparen_undermeth_underaccess) == "table" and _rawget(_self.simple_underparen_undermeth_underaccess, "__call_thing")) then
        _temp73 =  _self:simple_underparen_undermeth_underaccess()
      elseif _self.simple_underparen_undermeth_underaccess ~= nil then
        _temp73 =  _self.simple_underparen_undermeth_underaccess

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp73 =  _self:no_undermethod(string:new("simple_paren_meth_access"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp73 =  no_undermethod(_self, string:new("simple_paren_meth_access"))
      else
        _error(exception:name_error("simple_paren_meth_access"))
      end
    end

      local _t = _type(_temp72)
      if _t == "table" then
                      if _type(_temp72.squish) == "function" or (_type(_temp72.squish) == "table" and _rawget(_temp72.squish, "__call_thing")) then
        return _temp72:squish(_temp73)
      elseif _temp72.squish ~= nil then
        return _temp72.squish

        elseif _temp72.no_undermethod ~= nil then
          return  _temp72:no_undermethod(string:new("squish") , _temp73)
        else
          _error(exception:method_error(_temp72, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp72)
      if _n.squish ~= nil then
        return _n:squish(_temp73)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp73)
      else
        _error(exception:method_error(_temp72, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp72)
      if _f.squish ~= nil then
        return _f:squish(_temp73)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp73)
      else
        _error(exception:method_error(_temp72, "squish"))
      end

      elseif _temp72 == nil then
        _error(exception:null_error("_temp72", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp72))
      end

end

local _temp78 = function (_arg_table, _self)


local _temp76 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp76 =  _self:my()
      elseif _self.my ~= nil then
        _temp76 =  _self.my

        elseif my ~= nil then
          _temp76 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp77 = nil
    if _type(bnumber) == "function" or (_type(bnumber) == "table" and _rawget(bnumber, "__call_thing")) then
      _temp77 =  bnumber(_self)

    elseif bnumber then
      _temp77 =  bnumber
    else
            if _type(_self.bnumber) == "function" or (_type(_self.bnumber) == "table" and _rawget(_self.bnumber, "__call_thing")) then
        _temp77 =  _self:bnumber()
      elseif _self.bnumber ~= nil then
        _temp77 =  _self.bnumber

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp77 =  _self:no_undermethod(string:new("bnumber"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp77 =  no_undermethod(_self, string:new("bnumber"))
      else
        _error(exception:name_error("bnumber"))
      end
    end

      local _t = _type(_temp76)
      if _t == "table" then
                      if _type(_temp76.squish) == "function" or (_type(_temp76.squish) == "table" and _rawget(_temp76.squish, "__call_thing")) then
        return _temp76:squish(_temp77)
      elseif _temp76.squish ~= nil then
        return _temp76.squish

        elseif _temp76.no_undermethod ~= nil then
          return  _temp76:no_undermethod(string:new("squish") , _temp77)
        else
          _error(exception:method_error(_temp76, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp76)
      if _n.squish ~= nil then
        return _n:squish(_temp77)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp77)
      else
        _error(exception:method_error(_temp76, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp76)
      if _f.squish ~= nil then
        return _f:squish(_temp77)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp77)
      else
        _error(exception:method_error(_temp76, "squish"))
      end

      elseif _temp76 == nil then
        _error(exception:null_error("_temp76", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp76))
      end

end

local _temp82 = function (_arg_table, _self)


local _temp80 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp80 =  _self:my()
      elseif _self.my ~= nil then
        _temp80 =  _self.my

        elseif my ~= nil then
          _temp80 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp81 = nil
    if _type(barray) == "function" or (_type(barray) == "table" and _rawget(barray, "__call_thing")) then
      _temp81 =  barray(_self)

    elseif barray then
      _temp81 =  barray
    else
            if _type(_self.barray) == "function" or (_type(_self.barray) == "table" and _rawget(_self.barray, "__call_thing")) then
        _temp81 =  _self:barray()
      elseif _self.barray ~= nil then
        _temp81 =  _self.barray

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp81 =  _self:no_undermethod(string:new("barray"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp81 =  no_undermethod(_self, string:new("barray"))
      else
        _error(exception:name_error("barray"))
      end
    end

      local _t = _type(_temp80)
      if _t == "table" then
                      if _type(_temp80.squish) == "function" or (_type(_temp80.squish) == "table" and _rawget(_temp80.squish, "__call_thing")) then
        return _temp80:squish(_temp81)
      elseif _temp80.squish ~= nil then
        return _temp80.squish

        elseif _temp80.no_undermethod ~= nil then
          return  _temp80:no_undermethod(string:new("squish") , _temp81)
        else
          _error(exception:method_error(_temp80, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp80)
      if _n.squish ~= nil then
        return _n:squish(_temp81)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp81)
      else
        _error(exception:method_error(_temp80, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp80)
      if _f.squish ~= nil then
        return _f:squish(_temp81)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp81)
      else
        _error(exception:method_error(_temp80, "squish"))
      end

      elseif _temp80 == nil then
        _error(exception:null_error("_temp80", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp80))
      end

end

local _temp86 = function (_arg_table, _self)


local _temp84 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp84 =  _self:my()
      elseif _self.my ~= nil then
        _temp84 =  _self.my

        elseif my ~= nil then
          _temp84 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp85 = nil
    if _type(empty_underarray) == "function" or (_type(empty_underarray) == "table" and _rawget(empty_underarray, "__call_thing")) then
      _temp85 =  empty_underarray(_self)

    elseif empty_underarray then
      _temp85 =  empty_underarray
    else
            if _type(_self.empty_underarray) == "function" or (_type(_self.empty_underarray) == "table" and _rawget(_self.empty_underarray, "__call_thing")) then
        _temp85 =  _self:empty_underarray()
      elseif _self.empty_underarray ~= nil then
        _temp85 =  _self.empty_underarray

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp85 =  _self:no_undermethod(string:new("empty_array"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp85 =  no_undermethod(_self, string:new("empty_array"))
      else
        _error(exception:name_error("empty_array"))
      end
    end

      local _t = _type(_temp84)
      if _t == "table" then
                      if _type(_temp84.squish) == "function" or (_type(_temp84.squish) == "table" and _rawget(_temp84.squish, "__call_thing")) then
        return _temp84:squish(_temp85)
      elseif _temp84.squish ~= nil then
        return _temp84.squish

        elseif _temp84.no_undermethod ~= nil then
          return  _temp84:no_undermethod(string:new("squish") , _temp85)
        else
          _error(exception:method_error(_temp84, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp84)
      if _n.squish ~= nil then
        return _n:squish(_temp85)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp85)
      else
        _error(exception:method_error(_temp84, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp84)
      if _f.squish ~= nil then
        return _f:squish(_temp85)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp85)
      else
        _error(exception:method_error(_temp84, "squish"))
      end

      elseif _temp84 == nil then
        _error(exception:null_error("_temp84", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp84))
      end

end

local _temp90 = function (_arg_table, _self)


local _temp88 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp88 =  _self:my()
      elseif _self.my ~= nil then
        _temp88 =  _self.my

        elseif my ~= nil then
          _temp88 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp89 = nil
    if _type(array_underinner) == "function" or (_type(array_underinner) == "table" and _rawget(array_underinner, "__call_thing")) then
      _temp89 =  array_underinner(_self)

    elseif array_underinner then
      _temp89 =  array_underinner
    else
            if _type(_self.array_underinner) == "function" or (_type(_self.array_underinner) == "table" and _rawget(_self.array_underinner, "__call_thing")) then
        _temp89 =  _self:array_underinner()
      elseif _self.array_underinner ~= nil then
        _temp89 =  _self.array_underinner

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp89 =  _self:no_undermethod(string:new("array_inner"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp89 =  no_undermethod(_self, string:new("array_inner"))
      else
        _error(exception:name_error("array_inner"))
      end
    end

      local _t = _type(_temp88)
      if _t == "table" then
                      if _type(_temp88.squish) == "function" or (_type(_temp88.squish) == "table" and _rawget(_temp88.squish, "__call_thing")) then
        return _temp88:squish(_temp89)
      elseif _temp88.squish ~= nil then
        return _temp88.squish

        elseif _temp88.no_undermethod ~= nil then
          return  _temp88:no_undermethod(string:new("squish") , _temp89)
        else
          _error(exception:method_error(_temp88, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp88)
      if _n.squish ~= nil then
        return _n:squish(_temp89)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp89)
      else
        _error(exception:method_error(_temp88, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp88)
      if _f.squish ~= nil then
        return _f:squish(_temp89)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp89)
      else
        _error(exception:method_error(_temp88, "squish"))
      end

      elseif _temp88 == nil then
        _error(exception:null_error("_temp88", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp88))
      end

end

local _temp94 = function (_arg_table, _self)


local _temp92 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp92 =  _self:my()
      elseif _self.my ~= nil then
        _temp92 =  _self.my

        elseif my ~= nil then
          _temp92 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp93 = nil
    if _type(empty_underhash) == "function" or (_type(empty_underhash) == "table" and _rawget(empty_underhash, "__call_thing")) then
      _temp93 =  empty_underhash(_self)

    elseif empty_underhash then
      _temp93 =  empty_underhash
    else
            if _type(_self.empty_underhash) == "function" or (_type(_self.empty_underhash) == "table" and _rawget(_self.empty_underhash, "__call_thing")) then
        _temp93 =  _self:empty_underhash()
      elseif _self.empty_underhash ~= nil then
        _temp93 =  _self.empty_underhash

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp93 =  _self:no_undermethod(string:new("empty_hash"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp93 =  no_undermethod(_self, string:new("empty_hash"))
      else
        _error(exception:name_error("empty_hash"))
      end
    end

      local _t = _type(_temp92)
      if _t == "table" then
                      if _type(_temp92.squish) == "function" or (_type(_temp92.squish) == "table" and _rawget(_temp92.squish, "__call_thing")) then
        return _temp92:squish(_temp93)
      elseif _temp92.squish ~= nil then
        return _temp92.squish

        elseif _temp92.no_undermethod ~= nil then
          return  _temp92:no_undermethod(string:new("squish") , _temp93)
        else
          _error(exception:method_error(_temp92, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp92)
      if _n.squish ~= nil then
        return _n:squish(_temp93)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp93)
      else
        _error(exception:method_error(_temp92, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp92)
      if _f.squish ~= nil then
        return _f:squish(_temp93)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp93)
      else
        _error(exception:method_error(_temp92, "squish"))
      end

      elseif _temp92 == nil then
        _error(exception:null_error("_temp92", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp92))
      end

end

local _temp98 = function (_arg_table, _self)


local _temp96 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp96 =  _self:my()
      elseif _self.my ~= nil then
        _temp96 =  _self.my

        elseif my ~= nil then
          _temp96 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp97 = nil
    if _type(bhash) == "function" or (_type(bhash) == "table" and _rawget(bhash, "__call_thing")) then
      _temp97 =  bhash(_self)

    elseif bhash then
      _temp97 =  bhash
    else
            if _type(_self.bhash) == "function" or (_type(_self.bhash) == "table" and _rawget(_self.bhash, "__call_thing")) then
        _temp97 =  _self:bhash()
      elseif _self.bhash ~= nil then
        _temp97 =  _self.bhash

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp97 =  _self:no_undermethod(string:new("bhash"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp97 =  no_undermethod(_self, string:new("bhash"))
      else
        _error(exception:name_error("bhash"))
      end
    end

      local _t = _type(_temp96)
      if _t == "table" then
                      if _type(_temp96.squish) == "function" or (_type(_temp96.squish) == "table" and _rawget(_temp96.squish, "__call_thing")) then
        return _temp96:squish(_temp97)
      elseif _temp96.squish ~= nil then
        return _temp96.squish

        elseif _temp96.no_undermethod ~= nil then
          return  _temp96:no_undermethod(string:new("squish") , _temp97)
        else
          _error(exception:method_error(_temp96, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp96)
      if _n.squish ~= nil then
        return _n:squish(_temp97)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp97)
      else
        _error(exception:method_error(_temp96, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp96)
      if _f.squish ~= nil then
        return _f:squish(_temp97)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp97)
      else
        _error(exception:method_error(_temp96, "squish"))
      end

      elseif _temp96 == nil then
        _error(exception:null_error("_temp96", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp96))
      end

end

local _temp102 = function (_arg_table, _self)


local _temp100 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp100 =  _self:my()
      elseif _self.my ~= nil then
        _temp100 =  _self.my

        elseif my ~= nil then
          _temp100 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp101 = nil
    if _type(array_underinner) == "function" or (_type(array_underinner) == "table" and _rawget(array_underinner, "__call_thing")) then
      _temp101 =  array_underinner(_self)

    elseif array_underinner then
      _temp101 =  array_underinner
    else
            if _type(_self.array_underinner) == "function" or (_type(_self.array_underinner) == "table" and _rawget(_self.array_underinner, "__call_thing")) then
        _temp101 =  _self:array_underinner()
      elseif _self.array_underinner ~= nil then
        _temp101 =  _self.array_underinner

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp101 =  _self:no_undermethod(string:new("array_inner"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp101 =  no_undermethod(_self, string:new("array_inner"))
      else
        _error(exception:name_error("array_inner"))
      end
    end

      local _t = _type(_temp100)
      if _t == "table" then
                      if _type(_temp100.squish) == "function" or (_type(_temp100.squish) == "table" and _rawget(_temp100.squish, "__call_thing")) then
        return _temp100:squish(_temp101)
      elseif _temp100.squish ~= nil then
        return _temp100.squish

        elseif _temp100.no_undermethod ~= nil then
          return  _temp100:no_undermethod(string:new("squish") , _temp101)
        else
          _error(exception:method_error(_temp100, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp100)
      if _n.squish ~= nil then
        return _n:squish(_temp101)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp101)
      else
        _error(exception:method_error(_temp100, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp100)
      if _f.squish ~= nil then
        return _f:squish(_temp101)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp101)
      else
        _error(exception:method_error(_temp100, "squish"))
      end

      elseif _temp100 == nil then
        _error(exception:null_error("_temp100", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp100))
      end

end

local _temp106 = function (_arg_table, _self)


local _temp104 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp104 =  _self:my()
      elseif _self.my ~= nil then
        _temp104 =  _self.my

        elseif my ~= nil then
          _temp104 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp105 = nil
    if _type(hash_underkey_underarg) == "function" or (_type(hash_underkey_underarg) == "table" and _rawget(hash_underkey_underarg, "__call_thing")) then
      _temp105 =  hash_underkey_underarg(_self)

    elseif hash_underkey_underarg then
      _temp105 =  hash_underkey_underarg
    else
            if _type(_self.hash_underkey_underarg) == "function" or (_type(_self.hash_underkey_underarg) == "table" and _rawget(_self.hash_underkey_underarg, "__call_thing")) then
        _temp105 =  _self:hash_underkey_underarg()
      elseif _self.hash_underkey_underarg ~= nil then
        _temp105 =  _self.hash_underkey_underarg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp105 =  _self:no_undermethod(string:new("hash_key_arg"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp105 =  no_undermethod(_self, string:new("hash_key_arg"))
      else
        _error(exception:name_error("hash_key_arg"))
      end
    end

      local _t = _type(_temp104)
      if _t == "table" then
                      if _type(_temp104.squish) == "function" or (_type(_temp104.squish) == "table" and _rawget(_temp104.squish, "__call_thing")) then
        return _temp104:squish(_temp105)
      elseif _temp104.squish ~= nil then
        return _temp104.squish

        elseif _temp104.no_undermethod ~= nil then
          return  _temp104:no_undermethod(string:new("squish") , _temp105)
        else
          _error(exception:method_error(_temp104, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp104)
      if _n.squish ~= nil then
        return _n:squish(_temp105)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp105)
      else
        _error(exception:method_error(_temp104, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp104)
      if _f.squish ~= nil then
        return _f:squish(_temp105)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp105)
      else
        _error(exception:method_error(_temp104, "squish"))
      end

      elseif _temp104 == nil then
        _error(exception:null_error("_temp104", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp104))
      end

end

local _temp110 = function (_arg_table, _self)


local _temp108 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp108 =  _self:my()
      elseif _self.my ~= nil then
        _temp108 =  _self.my

        elseif my ~= nil then
          _temp108 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp109 = nil
    if _type(hash_underarg) == "function" or (_type(hash_underarg) == "table" and _rawget(hash_underarg, "__call_thing")) then
      _temp109 =  hash_underarg(_self)

    elseif hash_underarg then
      _temp109 =  hash_underarg
    else
            if _type(_self.hash_underarg) == "function" or (_type(_self.hash_underarg) == "table" and _rawget(_self.hash_underarg, "__call_thing")) then
        _temp109 =  _self:hash_underarg()
      elseif _self.hash_underarg ~= nil then
        _temp109 =  _self.hash_underarg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp109 =  _self:no_undermethod(string:new("hash_arg"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp109 =  no_undermethod(_self, string:new("hash_arg"))
      else
        _error(exception:name_error("hash_arg"))
      end
    end

      local _t = _type(_temp108)
      if _t == "table" then
                      if _type(_temp108.squish) == "function" or (_type(_temp108.squish) == "table" and _rawget(_temp108.squish, "__call_thing")) then
        return _temp108:squish(_temp109)
      elseif _temp108.squish ~= nil then
        return _temp108.squish

        elseif _temp108.no_undermethod ~= nil then
          return  _temp108:no_undermethod(string:new("squish") , _temp109)
        else
          _error(exception:method_error(_temp108, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp108)
      if _n.squish ~= nil then
        return _n:squish(_temp109)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp109)
      else
        _error(exception:method_error(_temp108, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp108)
      if _f.squish ~= nil then
        return _f:squish(_temp109)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp109)
      else
        _error(exception:method_error(_temp108, "squish"))
      end

      elseif _temp108 == nil then
        _error(exception:null_error("_temp108", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp108))
      end

end

local _temp114 = function (_arg_table, _self)


local _temp112 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp112 =  _self:my()
      elseif _self.my ~= nil then
        _temp112 =  _self.my

        elseif my ~= nil then
          _temp112 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp113 = nil
    if _type(bregex) == "function" or (_type(bregex) == "table" and _rawget(bregex, "__call_thing")) then
      _temp113 =  bregex(_self)

    elseif bregex then
      _temp113 =  bregex
    else
            if _type(_self.bregex) == "function" or (_type(_self.bregex) == "table" and _rawget(_self.bregex, "__call_thing")) then
        _temp113 =  _self:bregex()
      elseif _self.bregex ~= nil then
        _temp113 =  _self.bregex

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp113 =  _self:no_undermethod(string:new("bregex"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp113 =  no_undermethod(_self, string:new("bregex"))
      else
        _error(exception:name_error("bregex"))
      end
    end

      local _t = _type(_temp112)
      if _t == "table" then
                      if _type(_temp112.squish) == "function" or (_type(_temp112.squish) == "table" and _rawget(_temp112.squish, "__call_thing")) then
        return _temp112:squish(_temp113)
      elseif _temp112.squish ~= nil then
        return _temp112.squish

        elseif _temp112.no_undermethod ~= nil then
          return  _temp112:no_undermethod(string:new("squish") , _temp113)
        else
          _error(exception:method_error(_temp112, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp112)
      if _n.squish ~= nil then
        return _n:squish(_temp113)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp113)
      else
        _error(exception:method_error(_temp112, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp112)
      if _f.squish ~= nil then
        return _f:squish(_temp113)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp113)
      else
        _error(exception:method_error(_temp112, "squish"))
      end

      elseif _temp112 == nil then
        _error(exception:null_error("_temp112", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp112))
      end

end

local _temp118 = function (_arg_table, _self)


local _temp116 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp116 =  _self:my()
      elseif _self.my ~= nil then
        _temp116 =  _self.my

        elseif my ~= nil then
          _temp116 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp117 = nil
    if _type(empty_understring) == "function" or (_type(empty_understring) == "table" and _rawget(empty_understring, "__call_thing")) then
      _temp117 =  empty_understring(_self)

    elseif empty_understring then
      _temp117 =  empty_understring
    else
            if _type(_self.empty_understring) == "function" or (_type(_self.empty_understring) == "table" and _rawget(_self.empty_understring, "__call_thing")) then
        _temp117 =  _self:empty_understring()
      elseif _self.empty_understring ~= nil then
        _temp117 =  _self.empty_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp117 =  _self:no_undermethod(string:new("empty_string"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp117 =  no_undermethod(_self, string:new("empty_string"))
      else
        _error(exception:name_error("empty_string"))
      end
    end

      local _t = _type(_temp116)
      if _t == "table" then
                      if _type(_temp116.squish) == "function" or (_type(_temp116.squish) == "table" and _rawget(_temp116.squish, "__call_thing")) then
        return _temp116:squish(_temp117)
      elseif _temp116.squish ~= nil then
        return _temp116.squish

        elseif _temp116.no_undermethod ~= nil then
          return  _temp116:no_undermethod(string:new("squish") , _temp117)
        else
          _error(exception:method_error(_temp116, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp116)
      if _n.squish ~= nil then
        return _n:squish(_temp117)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp117)
      else
        _error(exception:method_error(_temp116, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp116)
      if _f.squish ~= nil then
        return _f:squish(_temp117)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp117)
      else
        _error(exception:method_error(_temp116, "squish"))
      end

      elseif _temp116 == nil then
        _error(exception:null_error("_temp116", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp116))
      end

end

local _temp122 = function (_arg_table, _self)


local _temp120 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp120 =  _self:my()
      elseif _self.my ~= nil then
        _temp120 =  _self.my

        elseif my ~= nil then
          _temp120 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp121 = nil
    if _type(string_underinterp) == "function" or (_type(string_underinterp) == "table" and _rawget(string_underinterp, "__call_thing")) then
      _temp121 =  string_underinterp(_self)

    elseif string_underinterp then
      _temp121 =  string_underinterp
    else
            if _type(_self.string_underinterp) == "function" or (_type(_self.string_underinterp) == "table" and _rawget(_self.string_underinterp, "__call_thing")) then
        _temp121 =  _self:string_underinterp()
      elseif _self.string_underinterp ~= nil then
        _temp121 =  _self.string_underinterp

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp121 =  _self:no_undermethod(string:new("string_interp"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp121 =  no_undermethod(_self, string:new("string_interp"))
      else
        _error(exception:name_error("string_interp"))
      end
    end

      local _t = _type(_temp120)
      if _t == "table" then
                      if _type(_temp120.squish) == "function" or (_type(_temp120.squish) == "table" and _rawget(_temp120.squish, "__call_thing")) then
        return _temp120:squish(_temp121)
      elseif _temp120.squish ~= nil then
        return _temp120.squish

        elseif _temp120.no_undermethod ~= nil then
          return  _temp120:no_undermethod(string:new("squish") , _temp121)
        else
          _error(exception:method_error(_temp120, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp120)
      if _n.squish ~= nil then
        return _n:squish(_temp121)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp121)
      else
        _error(exception:method_error(_temp120, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp120)
      if _f.squish ~= nil then
        return _f:squish(_temp121)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp121)
      else
        _error(exception:method_error(_temp120, "squish"))
      end

      elseif _temp120 == nil then
        _error(exception:null_error("_temp120", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp120))
      end

end

local _temp126 = function (_arg_table, _self)


local _temp124 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp124 =  _self:my()
      elseif _self.my ~= nil then
        _temp124 =  _self.my

        elseif my ~= nil then
          _temp124 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp125 = nil
    if _type(simple_understring) == "function" or (_type(simple_understring) == "table" and _rawget(simple_understring, "__call_thing")) then
      _temp125 =  simple_understring(_self)

    elseif simple_understring then
      _temp125 =  simple_understring
    else
            if _type(_self.simple_understring) == "function" or (_type(_self.simple_understring) == "table" and _rawget(_self.simple_understring, "__call_thing")) then
        _temp125 =  _self:simple_understring()
      elseif _self.simple_understring ~= nil then
        _temp125 =  _self.simple_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp125 =  _self:no_undermethod(string:new("simple_string"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp125 =  no_undermethod(_self, string:new("simple_string"))
      else
        _error(exception:name_error("simple_string"))
      end
    end

      local _t = _type(_temp124)
      if _t == "table" then
                      if _type(_temp124.squish) == "function" or (_type(_temp124.squish) == "table" and _rawget(_temp124.squish, "__call_thing")) then
        return _temp124:squish(_temp125)
      elseif _temp124.squish ~= nil then
        return _temp124.squish

        elseif _temp124.no_undermethod ~= nil then
          return  _temp124:no_undermethod(string:new("squish") , _temp125)
        else
          _error(exception:method_error(_temp124, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp124)
      if _n.squish ~= nil then
        return _n:squish(_temp125)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp125)
      else
        _error(exception:method_error(_temp124, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp124)
      if _f.squish ~= nil then
        return _f:squish(_temp125)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp125)
      else
        _error(exception:method_error(_temp124, "squish"))
      end

      elseif _temp124 == nil then
        _error(exception:null_error("_temp124", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp124))
      end

end

local _temp130 = function (_arg_table, _self)


local _temp128 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp128 =  _self:my()
      elseif _self.my ~= nil then
        _temp128 =  _self.my

        elseif my ~= nil then
          _temp128 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp129 = nil
    if _type(simple_understring) == "function" or (_type(simple_understring) == "table" and _rawget(simple_understring, "__call_thing")) then
      _temp129 =  simple_understring(_self)

    elseif simple_understring then
      _temp129 =  simple_understring
    else
            if _type(_self.simple_understring) == "function" or (_type(_self.simple_understring) == "table" and _rawget(_self.simple_understring, "__call_thing")) then
        _temp129 =  _self:simple_understring()
      elseif _self.simple_understring ~= nil then
        _temp129 =  _self.simple_understring

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp129 =  _self:no_undermethod(string:new("simple_string"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp129 =  no_undermethod(_self, string:new("simple_string"))
      else
        _error(exception:name_error("simple_string"))
      end
    end

      local _t = _type(_temp128)
      if _t == "table" then
                      if _type(_temp128.squish) == "function" or (_type(_temp128.squish) == "table" and _rawget(_temp128.squish, "__call_thing")) then
        return _temp128:squish(_temp129)
      elseif _temp128.squish ~= nil then
        return _temp128.squish

        elseif _temp128.no_undermethod ~= nil then
          return  _temp128:no_undermethod(string:new("squish") , _temp129)
        else
          _error(exception:method_error(_temp128, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp128)
      if _n.squish ~= nil then
        return _n:squish(_temp129)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp129)
      else
        _error(exception:method_error(_temp128, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp128)
      if _f.squish ~= nil then
        return _f:squish(_temp129)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp129)
      else
        _error(exception:method_error(_temp128, "squish"))
      end

      elseif _temp128 == nil then
        _error(exception:null_error("_temp128", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp128))
      end

end

local _temp134 = function (_arg_table, _self)


local _temp132 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp132 =  _self:my()
      elseif _self.my ~= nil then
        _temp132 =  _self.my

        elseif my ~= nil then
          _temp132 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp133 = nil
    if _type(interp_undervalue) == "function" or (_type(interp_undervalue) == "table" and _rawget(interp_undervalue, "__call_thing")) then
      _temp133 =  interp_undervalue(_self)

    elseif interp_undervalue then
      _temp133 =  interp_undervalue
    else
            if _type(_self.interp_undervalue) == "function" or (_type(_self.interp_undervalue) == "table" and _rawget(_self.interp_undervalue, "__call_thing")) then
        _temp133 =  _self:interp_undervalue()
      elseif _self.interp_undervalue ~= nil then
        _temp133 =  _self.interp_undervalue

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp133 =  _self:no_undermethod(string:new("interp_value"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp133 =  no_undermethod(_self, string:new("interp_value"))
      else
        _error(exception:name_error("interp_value"))
      end
    end

      local _t = _type(_temp132)
      if _t == "table" then
                      if _type(_temp132.squish) == "function" or (_type(_temp132.squish) == "table" and _rawget(_temp132.squish, "__call_thing")) then
        return _temp132:squish(_temp133)
      elseif _temp132.squish ~= nil then
        return _temp132.squish

        elseif _temp132.no_undermethod ~= nil then
          return  _temp132:no_undermethod(string:new("squish") , _temp133)
        else
          _error(exception:method_error(_temp132, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp132)
      if _n.squish ~= nil then
        return _n:squish(_temp133)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp133)
      else
        _error(exception:method_error(_temp132, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp132)
      if _f.squish ~= nil then
        return _f:squish(_temp133)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp133)
      else
        _error(exception:method_error(_temp132, "squish"))
      end

      elseif _temp132 == nil then
        _error(exception:null_error("_temp132", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp132))
      end

end

local _temp138 = function (_arg_table, _self)


local _temp136 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp136 =  _self:my()
      elseif _self.my ~= nil then
        _temp136 =  _self.my

        elseif my ~= nil then
          _temp136 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp137 = nil
    if _type(bfunction) == "function" or (_type(bfunction) == "table" and _rawget(bfunction, "__call_thing")) then
      _temp137 =  bfunction(_self)

    elseif bfunction then
      _temp137 =  bfunction
    else
            if _type(_self.bfunction) == "function" or (_type(_self.bfunction) == "table" and _rawget(_self.bfunction, "__call_thing")) then
        _temp137 =  _self:bfunction()
      elseif _self.bfunction ~= nil then
        _temp137 =  _self.bfunction

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp137 =  _self:no_undermethod(string:new("bfunction"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp137 =  no_undermethod(_self, string:new("bfunction"))
      else
        _error(exception:name_error("bfunction"))
      end
    end

      local _t = _type(_temp136)
      if _t == "table" then
                      if _type(_temp136.squish) == "function" or (_type(_temp136.squish) == "table" and _rawget(_temp136.squish, "__call_thing")) then
        return _temp136:squish(_temp137)
      elseif _temp136.squish ~= nil then
        return _temp136.squish

        elseif _temp136.no_undermethod ~= nil then
          return  _temp136:no_undermethod(string:new("squish") , _temp137)
        else
          _error(exception:method_error(_temp136, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp136)
      if _n.squish ~= nil then
        return _n:squish(_temp137)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp137)
      else
        _error(exception:method_error(_temp136, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp136)
      if _f.squish ~= nil then
        return _f:squish(_temp137)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp137)
      else
        _error(exception:method_error(_temp136, "squish"))
      end

      elseif _temp136 == nil then
        _error(exception:null_error("_temp136", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp136))
      end

end
--lifted
local _temp1 = string:new("parser/ast")

    if _type(includes) == "function" or (_type(includes) == "table" and _rawget(includes, "__call_thing")) then
      _dummy_ =  includes(_self, _temp1)

    elseif includes then
      _error(exception:new("Tried to invoke non-method: includes (" .. object.__type(includes) .. ")"))
    else
            if _type(_self.includes) == "function" or (_type(_self.includes) == "table" and _rawget(_self.includes, "__call_thing")) then
        _dummy_ =  _self:includes(_temp1)
      elseif _self.includes ~= nil then
        _dummy_ =  _self.includes

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("includes") , _temp1)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("includes") , _temp1)
      else
        _error(exception:name_error("includes"))
      end
    end

_temp1 = string:new("peg")

    if _type(include) == "function" or (_type(include) == "table" and _rawget(include, "__call_thing")) then
      _dummy_ =  include(_self, _temp1)

    elseif include then
      _error(exception:new("Tried to invoke non-method: include (" .. object.__type(include) .. ")"))
    else
            if _type(_self.include) == "function" or (_type(_self.include) == "table" and _rawget(_self.include, "__call_thing")) then
        _dummy_ =  _self:include(_temp1)
      elseif _self.include ~= nil then
        _dummy_ =  _self.include

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("include") , _temp1)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("include") , _temp1)
      else
        _error(exception:name_error("include"))
      end
    end

local _temp2
              if _type(_self.peg) == "function" or (_type(_self.peg) == "table" and _rawget(_self.peg, "__call_thing")) then
        _temp2 =  _self:peg()
      elseif _self.peg ~= nil then
        _temp2 =  _self.peg

        elseif peg ~= nil then
          _temp2 = peg;
        else
          _error(exception:method_error("self", "peg"))
        end
_temp223 = function (_self)

local _temp3 = string:new("program")

local _temp4 = nil
local _temp5 = nil
local _temp6 = nil
local _temp7 = nil
local _temp8 = string:new("line")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp8)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp8)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp8)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp6 =  many(_self, _temp7)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp6 =  _self:many(_temp7)
      elseif _self.many ~= nil then
        _temp6 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("many") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("many") , _temp7)
      else
        _error(exception:name_error("many"))
      end
    end

local _temp12 = _lifted_call(_temp11)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp5 =  action(_self, _temp6,_temp12)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp5 =  _self:action(_temp6,_temp12)
      elseif _self.action ~= nil then
        _temp5 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp5 =  _self:no_undermethod(string:new("action") , _temp6,_temp12)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp5 =  no_undermethod(_self, string:new("action") , _temp6,_temp12)
      else
        _error(exception:name_error("action"))
      end
    end

_temp7 = string:new("eof")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp6 =  ref(_self, _temp7)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp6 =  _self:ref(_temp7)
      elseif _self.ref ~= nil then
        _temp6 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("ref") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("ref") , _temp7)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp16 = _lifted_call(_temp15)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp12 =  action(_self, _temp6,_temp16)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp12 =  _self:action(_temp6,_temp16)
      elseif _self.action ~= nil then
        _temp12 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp12 =  _self:no_undermethod(string:new("action") , _temp6,_temp16)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp12 =  no_undermethod(_self, string:new("action") , _temp6,_temp16)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp5,_temp12)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp5,_temp12)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp5,_temp12)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp5,_temp12)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("line")

_temp5 = string:new("comment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp12 =  ref(_self, _temp5)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp12 =  _self:ref(_temp5)
      elseif _self.ref ~= nil then
        _temp12 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp12 =  _self:no_undermethod(string:new("ref") , _temp5)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp12 =  no_undermethod(_self, string:new("ref") , _temp5)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp8 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp8)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp8)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp8)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp6 =  maybe(_self, _temp7)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp6 =  _self:maybe(_temp7)
      elseif _self.maybe ~= nil then
        _temp6 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("maybe") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("maybe") , _temp7)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp8 = string:new("exp")

local _temp17 = nil
local _temp18 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp17 =  ref(_self, _temp18)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp17 =  _self:ref(_temp18)
      elseif _self.ref ~= nil then
        _temp17 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("ref") , _temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("ref") , _temp18)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp7 =  label(_self, _temp8,_temp17)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp7 =  _self:label(_temp8,_temp17)
      elseif _self.label ~= nil then
        _temp7 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("label") , _temp8,_temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("label") , _temp8,_temp17)
      else
        _error(exception:name_error("label"))
      end
    end

_temp18 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp8 =  ref(_self, _temp18)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp8 =  _self:ref(_temp18)
      elseif _self.ref ~= nil then
        _temp8 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ref") , _temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ref") , _temp18)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp17 =  maybe(_self, _temp8)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp17 =  _self:maybe(_temp8)
      elseif _self.maybe ~= nil then
        _temp17 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("maybe") , _temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("maybe") , _temp8)
      else
        _error(exception:name_error("maybe"))
      end
    end

local _temp19 = string:new("comment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp18 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp18 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp18 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp18 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp18 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp8 =  maybe(_self, _temp18)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp8 =  _self:maybe(_temp18)
      elseif _self.maybe ~= nil then
        _temp8 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("maybe") , _temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("maybe") , _temp18)
      else
        _error(exception:name_error("maybe"))
      end
    end

local _temp20 = string:new("eof")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp20)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp20)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp20)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp21 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp20 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp20 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp20 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp22 = string:new("eob")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp22)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp22)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp22)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp18 =  any(_self, _temp19,_temp20,_temp21)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp18 =  _self:any(_temp19,_temp20,_temp21)
      elseif _self.any ~= nil then
        _temp18 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp18 =  _self:no_undermethod(string:new("any") , _temp19,_temp20,_temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp18 =  no_undermethod(_self, string:new("any") , _temp19,_temp20,_temp21)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp16 =  seq(_self, _temp6,_temp7,_temp17,_temp8,_temp18)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp16 =  _self:seq(_temp6,_temp7,_temp17,_temp8,_temp18)
      elseif _self.seq ~= nil then
        _temp16 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp16 =  _self:no_undermethod(string:new("seq") , _temp6,_temp7,_temp17,_temp8,_temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp16 =  no_undermethod(_self, string:new("seq") , _temp6,_temp7,_temp17,_temp8,_temp18)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp26 = _lifted_call(_temp25)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp5 =  action(_self, _temp16,_temp26)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp5 =  _self:action(_temp16,_temp26)
      elseif _self.action ~= nil then
        _temp5 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp5 =  _self:no_undermethod(string:new("action") , _temp16,_temp26)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp5 =  no_undermethod(_self, string:new("action") , _temp16,_temp26)
      else
        _error(exception:name_error("action"))
      end
    end

_temp16 = string:new("empty_line")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp26 =  ref(_self, _temp16)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp26 =  _self:ref(_temp16)
      elseif _self.ref ~= nil then
        _temp26 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp26 =  _self:no_undermethod(string:new("ref") , _temp16)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp26 =  no_undermethod(_self, string:new("ref") , _temp16)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp12,_temp5,_temp26)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp12,_temp5,_temp26)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp12,_temp5,_temp26)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp12,_temp5,_temp26)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("empty_line")

_temp12 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp5 =  ref(_self, _temp12)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp5 =  _self:ref(_temp12)
      elseif _self.ref ~= nil then
        _temp5 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp5 =  _self:no_undermethod(string:new("ref") , _temp12)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp5 =  no_undermethod(_self, string:new("ref") , _temp12)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp26 =  maybe(_self, _temp5)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp26 =  _self:maybe(_temp5)
      elseif _self.maybe ~= nil then
        _temp26 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp26 =  _self:no_undermethod(string:new("maybe") , _temp5)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp26 =  no_undermethod(_self, string:new("maybe") , _temp5)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp12 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp5 =  ref(_self, _temp12)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp5 =  _self:ref(_temp12)
      elseif _self.ref ~= nil then
        _temp5 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp5 =  _self:no_undermethod(string:new("ref") , _temp12)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp5 =  no_undermethod(_self, string:new("ref") , _temp12)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp4 =  seq(_self, _temp26,_temp5)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp4 =  _self:seq(_temp26,_temp5)
      elseif _self.seq ~= nil then
        _temp4 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("seq") , _temp26,_temp5)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("seq") , _temp26,_temp5)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("expression")

_temp26 = string:new("regex")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp5 =  ref(_self, _temp26)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp5 =  _self:ref(_temp26)
      elseif _self.ref ~= nil then
        _temp5 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp5 =  _self:no_undermethod(string:new("ref") , _temp26)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp5 =  no_undermethod(_self, string:new("ref") , _temp26)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp12 = string:new("binary_operation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp26 =  ref(_self, _temp12)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp26 =  _self:ref(_temp12)
      elseif _self.ref ~= nil then
        _temp26 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp26 =  _self:no_undermethod(string:new("ref") , _temp12)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp26 =  no_undermethod(_self, string:new("ref") , _temp12)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp16 = string:new("index_set")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp12 =  ref(_self, _temp16)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp12 =  _self:ref(_temp16)
      elseif _self.ref ~= nil then
        _temp12 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp12 =  _self:no_undermethod(string:new("ref") , _temp16)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp12 =  no_undermethod(_self, string:new("ref") , _temp16)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp18 = string:new("index_get")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp16 =  ref(_self, _temp18)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp16 =  _self:ref(_temp18)
      elseif _self.ref ~= nil then
        _temp16 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp16 =  _self:no_undermethod(string:new("ref") , _temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp16 =  no_undermethod(_self, string:new("ref") , _temp18)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp8 = string:new("assignment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp18 =  ref(_self, _temp8)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp18 =  _self:ref(_temp8)
      elseif _self.ref ~= nil then
        _temp18 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp18 =  _self:no_undermethod(string:new("ref") , _temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp18 =  no_undermethod(_self, string:new("ref") , _temp8)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp6 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp6)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp6)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp6)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp20 = regex:new("\\.|\\(|->")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp21 =  reg(_self, _temp20)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp21 =  _self:reg(_temp20)
      elseif _self.reg ~= nil then
        _temp21 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("reg") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("reg") , _temp20)
      else
        _error(exception:name_error("reg"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp6 =  no(_self, _temp21)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp6 =  _self:no(_temp21)
      elseif _self.no ~= nil then
        _temp6 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("no") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("no") , _temp21)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp17 =  seq(_self, _temp7,_temp6)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp17 =  _self:seq(_temp7,_temp6)
      elseif _self.seq ~= nil then
        _temp17 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("seq") , _temp7,_temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("seq") , _temp7,_temp6)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp30 = _lifted_call(_temp29)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp8 =  action(_self, _temp17,_temp30)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp8 =  _self:action(_temp17,_temp30)
      elseif _self.action ~= nil then
        _temp8 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("action") , _temp17,_temp30)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("action") , _temp17,_temp30)
      else
        _error(exception:name_error("action"))
      end
    end

_temp17 = string:new("unary_operation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp30 =  ref(_self, _temp17)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp30 =  _self:ref(_temp17)
      elseif _self.ref ~= nil then
        _temp30 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp30 =  _self:no_undermethod(string:new("ref") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp30 =  no_undermethod(_self, string:new("ref") , _temp17)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp6 = string:new("method_access")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp17 =  ref(_self, _temp6)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp17 =  _self:ref(_temp6)
      elseif _self.ref ~= nil then
        _temp17 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("ref") , _temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("ref") , _temp6)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp7 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp6 =  ref(_self, _temp7)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp6 =  _self:ref(_temp7)
      elseif _self.ref ~= nil then
        _temp6 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("ref") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("ref") , _temp7)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp21 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp20 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp20)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp20)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp20)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp19 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp20 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp20 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp20 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp22 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp22)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp22)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp22)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp31 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp22 =  ref(_self, _temp31)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp22 =  _self:ref(_temp31)
      elseif _self.ref ~= nil then
        _temp22 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("ref") , _temp31)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("ref") , _temp31)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp5,_temp26,_temp12,_temp16,_temp18,_temp8,_temp30,_temp17,_temp6,_temp7,_temp21,_temp20,_temp19,_temp22)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp5,_temp26,_temp12,_temp16,_temp18,_temp8,_temp30,_temp17,_temp6,_temp7,_temp21,_temp20,_temp19,_temp22)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp5,_temp26,_temp12,_temp16,_temp18,_temp8,_temp30,_temp17,_temp6,_temp7,_temp21,_temp20,_temp19,_temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp5,_temp26,_temp12,_temp16,_temp18,_temp8,_temp30,_temp17,_temp6,_temp7,_temp21,_temp20,_temp19,_temp22)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("paren_exp")

_temp20 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp19 =  str(_self, _temp20)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp19 =  _self:str(_temp20)
      elseif _self.str ~= nil then
        _temp19 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("str") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("str") , _temp20)
      else
        _error(exception:name_error("str"))
      end
    end

_temp7 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp7)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp7)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp7)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp20 =  maybe(_self, _temp21)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp20 =  _self:maybe(_temp21)
      elseif _self.maybe ~= nil then
        _temp20 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("maybe") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("maybe") , _temp21)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp7 = string:new("exp")

_temp17 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp6 =  ref(_self, _temp17)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp6 =  _self:ref(_temp17)
      elseif _self.ref ~= nil then
        _temp6 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("ref") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("ref") , _temp17)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp21 =  label(_self, _temp7,_temp6)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp21 =  _self:label(_temp7,_temp6)
      elseif _self.label ~= nil then
        _temp21 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("label") , _temp7,_temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("label") , _temp7,_temp6)
      else
        _error(exception:name_error("label"))
      end
    end

_temp17 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp17)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp17)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp17)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp6 =  maybe(_self, _temp7)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp6 =  _self:maybe(_temp7)
      elseif _self.maybe ~= nil then
        _temp6 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("maybe") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("maybe") , _temp7)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp17 = string:new(")")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp7 =  str(_self, _temp17)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp7 =  _self:str(_temp17)
      elseif _self.str ~= nil then
        _temp7 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("str") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("str") , _temp17)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp22 =  seq(_self, _temp19,_temp20,_temp21,_temp6,_temp7)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp22 =  _self:seq(_temp19,_temp20,_temp21,_temp6,_temp7)
      elseif _self.seq ~= nil then
        _temp22 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("seq") , _temp19,_temp20,_temp21,_temp6,_temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("seq") , _temp19,_temp20,_temp21,_temp6,_temp7)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp35 = _lifted_call(_temp34)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp22,_temp35)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp22,_temp35)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp22,_temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp22,_temp35)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("assignment")

_temp6 = string:new("field_access")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp7 =  ref(_self, _temp6)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp7 =  _self:ref(_temp6)
      elseif _self.ref ~= nil then
        _temp7 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp7 =  _self:no_undermethod(string:new("ref") , _temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp7 =  no_undermethod(_self, string:new("ref") , _temp6)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp21 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp6 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp6 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp6 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp20 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp21 =  str(_self, _temp20)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp21 =  _self:str(_temp20)
      elseif _self.str ~= nil then
        _temp21 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("str") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("str") , _temp20)
      else
        _error(exception:name_error("str"))
      end
    end

_temp19 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp20 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp20 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp20 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp30 = string:new("function_literal_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp17 =  ref(_self, _temp30)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp17 =  _self:ref(_temp30)
      elseif _self.ref ~= nil then
        _temp17 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("ref") , _temp30)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("ref") , _temp30)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp19 =  no(_self, _temp17)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp19 =  _self:no(_temp17)
      elseif _self.no ~= nil then
        _temp19 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("no") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("no") , _temp17)
      else
        _error(exception:name_error("no"))
      end
    end

_temp8 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp30 =  ref(_self, _temp8)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp30 =  _self:ref(_temp8)
      elseif _self.ref ~= nil then
        _temp30 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp30 =  _self:no_undermethod(string:new("ref") , _temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp30 =  no_undermethod(_self, string:new("ref") , _temp8)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp18 = string:new("method_access")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp8 =  ref(_self, _temp18)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp8 =  _self:ref(_temp18)
      elseif _self.ref ~= nil then
        _temp8 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp8 =  _self:no_undermethod(string:new("ref") , _temp18)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp8 =  no_undermethod(_self, string:new("ref") , _temp18)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp17 =  any(_self, _temp30,_temp8)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp17 =  _self:any(_temp30,_temp8)
      elseif _self.any ~= nil then
        _temp17 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("any") , _temp30,_temp8)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("any") , _temp30,_temp8)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp22 =  seq(_self, _temp7,_temp6,_temp21,_temp20,_temp19,_temp17)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp22 =  _self:seq(_temp7,_temp6,_temp21,_temp20,_temp19,_temp17)
      elseif _self.seq ~= nil then
        _temp22 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("seq") , _temp7,_temp6,_temp21,_temp20,_temp19,_temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("seq") , _temp7,_temp6,_temp21,_temp20,_temp19,_temp17)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp39 = _lifted_call(_temp38)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp35 =  action(_self, _temp22,_temp39)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp35 =  _self:action(_temp22,_temp39)
      elseif _self.action ~= nil then
        _temp35 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("action") , _temp22,_temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("action") , _temp22,_temp39)
      else
        _error(exception:name_error("action"))
      end
    end

_temp19 = string:new("field_access")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp17 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp17 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp17 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp20 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp20)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp20)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp20)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp21 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp20 =  str(_self, _temp21)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp20 =  _self:str(_temp21)
      elseif _self.str ~= nil then
        _temp20 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("str") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("str") , _temp21)
      else
        _error(exception:name_error("str"))
      end
    end

_temp6 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp6)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp6)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp6)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp7 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp6 =  ref(_self, _temp7)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp6 =  _self:ref(_temp7)
      elseif _self.ref ~= nil then
        _temp6 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("ref") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("ref") , _temp7)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp22 =  seq(_self, _temp17,_temp19,_temp20,_temp21,_temp6)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp22 =  _self:seq(_temp17,_temp19,_temp20,_temp21,_temp6)
      elseif _self.seq ~= nil then
        _temp22 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("seq") , _temp17,_temp19,_temp20,_temp21,_temp6)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("seq") , _temp17,_temp19,_temp20,_temp21,_temp6)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp43 = _lifted_call(_temp42)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp39 =  action(_self, _temp22,_temp43)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp39 =  _self:action(_temp22,_temp43)
      elseif _self.action ~= nil then
        _temp39 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("action") , _temp22,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("action") , _temp22,_temp43)
      else
        _error(exception:name_error("action"))
      end
    end

_temp21 = string:new("var")

_temp19 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp20 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp20 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp20 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp6 =  label(_self, _temp21,_temp20)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp6 =  _self:label(_temp21,_temp20)
      elseif _self.label ~= nil then
        _temp6 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp6 =  _self:no_undermethod(string:new("label") , _temp21,_temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp6 =  no_undermethod(_self, string:new("label") , _temp21,_temp20)
      else
        _error(exception:name_error("label"))
      end
    end

_temp21 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp20 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp20 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp20 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp20 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp20 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp19 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp21 =  str(_self, _temp19)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp21 =  _self:str(_temp19)
      elseif _self.str ~= nil then
        _temp21 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("str") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("str") , _temp19)
      else
        _error(exception:name_error("str"))
      end
    end

_temp17 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp17)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp17)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp17)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp7 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp17 =  ref(_self, _temp7)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp17 =  _self:ref(_temp7)
      elseif _self.ref ~= nil then
        _temp17 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("ref") , _temp7)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("ref") , _temp7)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp22 =  seq(_self, _temp6,_temp20,_temp21,_temp19,_temp17)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp22 =  _self:seq(_temp6,_temp20,_temp21,_temp19,_temp17)
      elseif _self.seq ~= nil then
        _temp22 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("seq") , _temp6,_temp20,_temp21,_temp19,_temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("seq") , _temp6,_temp20,_temp21,_temp19,_temp17)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp47 = _lifted_call(_temp46)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp43 =  action(_self, _temp22,_temp47)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp43 =  _self:action(_temp22,_temp47)
      elseif _self.action ~= nil then
        _temp43 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("action") , _temp22,_temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("action") , _temp22,_temp47)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp35,_temp39,_temp43)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp35,_temp39,_temp43)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp35,_temp39,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp35,_temp39,_temp43)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("field_access")

_temp35 = string:new("method_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp35)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp35)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp35)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp22 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp47 =  ref(_self, _temp22)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp47 =  _self:ref(_temp22)
      elseif _self.ref ~= nil then
        _temp47 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("ref") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("ref") , _temp22)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp17 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp22 =  ref(_self, _temp17)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp22 =  _self:ref(_temp17)
      elseif _self.ref ~= nil then
        _temp22 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("ref") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("ref") , _temp17)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp35 =  any(_self, _temp47,_temp22)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp35 =  _self:any(_temp47,_temp22)
      elseif _self.any ~= nil then
        _temp35 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("any") , _temp47,_temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("any") , _temp47,_temp22)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp43 =  seq(_self, _temp39,_temp35)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp43 =  _self:seq(_temp39,_temp35)
      elseif _self.seq ~= nil then
        _temp43 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("seq") , _temp39,_temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("seq") , _temp39,_temp35)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp51 = _lifted_call(_temp50)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp43,_temp51)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp43,_temp51)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp43,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp43,_temp51)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("index_set")

_temp35 = string:new("indexed_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp43 =  ref(_self, _temp35)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp43 =  _self:ref(_temp35)
      elseif _self.ref ~= nil then
        _temp43 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("ref") , _temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("ref") , _temp35)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp39 = string:new("sindexes")

_temp19 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp17 =  str(_self, _temp19)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp17 =  _self:str(_temp19)
      elseif _self.str ~= nil then
        _temp17 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp17 =  _self:no_undermethod(string:new("str") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp17 =  no_undermethod(_self, string:new("str") , _temp19)
      else
        _error(exception:name_error("str"))
      end
    end

_temp21 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp20 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp21 =  str(_self, _temp20)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp21 =  _self:str(_temp20)
      elseif _self.str ~= nil then
        _temp21 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("str") , _temp20)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("str") , _temp20)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp47 =  seq(_self, _temp17,_temp19,_temp21)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp47 =  _self:seq(_temp17,_temp19,_temp21)
      elseif _self.seq ~= nil then
        _temp47 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("seq") , _temp17,_temp19,_temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("seq") , _temp17,_temp19,_temp21)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp22 =  many(_self, _temp47)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp22 =  _self:many(_temp47)
      elseif _self.many ~= nil then
        _temp22 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("many") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("many") , _temp47)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp35 =  label(_self, _temp39,_temp22)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp35 =  _self:label(_temp39,_temp22)
      elseif _self.label ~= nil then
        _temp35 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("label") , _temp39,_temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("label") , _temp39,_temp22)
      else
        _error(exception:name_error("label"))
      end
    end

_temp47 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp47)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp47)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp47)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp22 =  maybe(_self, _temp39)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp22 =  _self:maybe(_temp39)
      elseif _self.maybe ~= nil then
        _temp22 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("maybe") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("maybe") , _temp39)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp47 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp39 =  str(_self, _temp47)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp39 =  _self:str(_temp47)
      elseif _self.str ~= nil then
        _temp39 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("str") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("str") , _temp47)
      else
        _error(exception:name_error("str"))
      end
    end

_temp21 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp47 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp47 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp47 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp19 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp51 =  seq(_self, _temp43,_temp35,_temp22,_temp39,_temp47,_temp21)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp51 =  _self:seq(_temp43,_temp35,_temp22,_temp39,_temp47,_temp21)
      elseif _self.seq ~= nil then
        _temp51 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("seq") , _temp43,_temp35,_temp22,_temp39,_temp47,_temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("seq") , _temp43,_temp35,_temp22,_temp39,_temp47,_temp21)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp55 = _lifted_call(_temp54)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp51,_temp55)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp51,_temp55)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp51,_temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp51,_temp55)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("index_get")

_temp21 = string:new("indexed_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp47 = string:new("gindexes")

_temp43 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp35 =  str(_self, _temp43)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp35 =  _self:str(_temp43)
      elseif _self.str ~= nil then
        _temp35 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp35 =  _self:no_undermethod(string:new("str") , _temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp35 =  no_undermethod(_self, string:new("str") , _temp43)
      else
        _error(exception:name_error("str"))
      end
    end

_temp19 = string:new("index_inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp43 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp43 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp43 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp17 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp19 =  str(_self, _temp17)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp19 =  _self:str(_temp17)
      elseif _self.str ~= nil then
        _temp19 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("str") , _temp17)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("str") , _temp17)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp22 =  seq(_self, _temp35,_temp43,_temp19)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp22 =  _self:seq(_temp35,_temp43,_temp19)
      elseif _self.seq ~= nil then
        _temp22 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("seq") , _temp35,_temp43,_temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("seq") , _temp35,_temp43,_temp19)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp39 =  many(_self, _temp22)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp39 =  _self:many(_temp22)
      elseif _self.many ~= nil then
        _temp39 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("many") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("many") , _temp22)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp21 =  label(_self, _temp47,_temp39)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp21 =  _self:label(_temp47,_temp39)
      elseif _self.label ~= nil then
        _temp21 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("label") , _temp47,_temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("label") , _temp47,_temp39)
      else
        _error(exception:name_error("label"))
      end
    end

_temp22 = string:new(".")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp47 =  str(_self, _temp22)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp47 =  _self:str(_temp22)
      elseif _self.str ~= nil then
        _temp47 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("str") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("str") , _temp22)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp39 =  no(_self, _temp47)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp39 =  _self:no(_temp47)
      elseif _self.no ~= nil then
        _temp39 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("no") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("no") , _temp47)
      else
        _error(exception:name_error("no"))
      end
    end

_temp22 = string:new("iargs")

_temp35 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp43 =  ref(_self, _temp35)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp43 =  _self:ref(_temp35)
      elseif _self.ref ~= nil then
        _temp43 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("ref") , _temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("ref") , _temp35)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp19 =  maybe(_self, _temp43)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp19 =  _self:maybe(_temp43)
      elseif _self.maybe ~= nil then
        _temp19 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("maybe") , _temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("maybe") , _temp43)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp47 =  label(_self, _temp22,_temp19)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp47 =  _self:label(_temp22,_temp19)
      elseif _self.label ~= nil then
        _temp47 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("label") , _temp22,_temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("label") , _temp22,_temp19)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp55 =  seq(_self, _temp51,_temp21,_temp39,_temp47)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp55 =  _self:seq(_temp51,_temp21,_temp39,_temp47)
      elseif _self.seq ~= nil then
        _temp55 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("seq") , _temp51,_temp21,_temp39,_temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("seq") , _temp51,_temp21,_temp39,_temp47)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp59 = _lifted_call(_temp58)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp55,_temp59)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp55,_temp59)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp55,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp55,_temp59)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("indexed_expression")

_temp55 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp55)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp55)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp55)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp47 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp55 =  ref(_self, _temp47)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp55 =  _self:ref(_temp47)
      elseif _self.ref ~= nil then
        _temp55 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("ref") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("ref") , _temp47)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp39 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp47 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp47 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp47 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp21 = string:new("unary_operation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp21)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp21)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp21)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp19 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp59,_temp55,_temp47,_temp39,_temp21,_temp51)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp59,_temp55,_temp47,_temp39,_temp21,_temp51)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp59,_temp55,_temp47,_temp39,_temp21,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp59,_temp55,_temp47,_temp39,_temp21,_temp51)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("method_access")

_temp47 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp39 =  str(_self, _temp47)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp39 =  _self:str(_temp47)
      elseif _self.str ~= nil then
        _temp39 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("str") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("str") , _temp47)
      else
        _error(exception:name_error("str"))
      end
    end

_temp55 = string:new("meth")

_temp22 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp22)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp22)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp22)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp43 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp22 =  ref(_self, _temp43)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp22 =  _self:ref(_temp43)
      elseif _self.ref ~= nil then
        _temp22 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("ref") , _temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("ref") , _temp43)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp59 =  any(_self, _temp19,_temp22)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp59 =  _self:any(_temp19,_temp22)
      elseif _self.any ~= nil then
        _temp59 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("any") , _temp19,_temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("any") , _temp19,_temp22)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp47 =  label(_self, _temp55,_temp59)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp47 =  _self:label(_temp55,_temp59)
      elseif _self.label ~= nil then
        _temp47 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("label") , _temp55,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("label") , _temp55,_temp59)
      else
        _error(exception:name_error("label"))
      end
    end

_temp22 = string:new(".")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp55 =  str(_self, _temp22)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp55 =  _self:str(_temp22)
      elseif _self.str ~= nil then
        _temp55 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("str") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("str") , _temp22)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp59 =  no(_self, _temp55)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp59 =  _self:no(_temp55)
      elseif _self.no ~= nil then
        _temp59 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("no") , _temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("no") , _temp55)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp21 =  seq(_self, _temp39,_temp47,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp21 =  _self:seq(_temp39,_temp47,_temp59)
      elseif _self.seq ~= nil then
        _temp21 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("seq") , _temp39,_temp47,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("seq") , _temp39,_temp47,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp63 = _lifted_call(_temp62)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp51 =  action(_self, _temp21,_temp63)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp51 =  _self:action(_temp21,_temp63)
      elseif _self.action ~= nil then
        _temp51 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("action") , _temp21,_temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("action") , _temp21,_temp63)
      else
        _error(exception:name_error("action"))
      end
    end

_temp47 = string:new("target")

_temp55 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp55)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp55)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp55)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp59 =  label(_self, _temp47,_temp39)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp59 =  _self:label(_temp47,_temp39)
      elseif _self.label ~= nil then
        _temp59 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("label") , _temp47,_temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("label") , _temp47,_temp39)
      else
        _error(exception:name_error("label"))
      end
    end

_temp47 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp39 =  str(_self, _temp47)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp39 =  _self:str(_temp47)
      elseif _self.str ~= nil then
        _temp39 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("str") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("str") , _temp47)
      else
        _error(exception:name_error("str"))
      end
    end

_temp55 = string:new("meth")

_temp43 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp43)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp43)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp43)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp35 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp43 =  ref(_self, _temp35)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp43 =  _self:ref(_temp35)
      elseif _self.ref ~= nil then
        _temp43 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("ref") , _temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("ref") , _temp35)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp22 =  any(_self, _temp19,_temp43)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp22 =  _self:any(_temp19,_temp43)
      elseif _self.any ~= nil then
        _temp22 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp22 =  _self:no_undermethod(string:new("any") , _temp19,_temp43)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp22 =  no_undermethod(_self, string:new("any") , _temp19,_temp43)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp47 =  label(_self, _temp55,_temp22)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp47 =  _self:label(_temp55,_temp22)
      elseif _self.label ~= nil then
        _temp47 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("label") , _temp55,_temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("label") , _temp55,_temp22)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp21 =  seq(_self, _temp59,_temp39,_temp47)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp21 =  _self:seq(_temp59,_temp39,_temp47)
      elseif _self.seq ~= nil then
        _temp21 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("seq") , _temp59,_temp39,_temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("seq") , _temp59,_temp39,_temp47)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp67 = _lifted_call(_temp66)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp63 =  action(_self, _temp21,_temp67)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp63 =  _self:action(_temp21,_temp67)
      elseif _self.action ~= nil then
        _temp63 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp63 =  _self:no_undermethod(string:new("action") , _temp21,_temp67)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp63 =  no_undermethod(_self, string:new("action") , _temp21,_temp67)
      else
        _error(exception:name_error("action"))
      end
    end

_temp39 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp47 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp47 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp47 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp39 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp39 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp39 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp22 = string:new("meth")

_temp19 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp43 =  ref(_self, _temp19)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp43 =  _self:ref(_temp19)
      elseif _self.ref ~= nil then
        _temp43 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp43 =  _self:no_undermethod(string:new("ref") , _temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp43 =  no_undermethod(_self, string:new("ref") , _temp19)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp35 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp19 =  ref(_self, _temp35)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp19 =  _self:ref(_temp35)
      elseif _self.ref ~= nil then
        _temp19 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp19 =  _self:no_undermethod(string:new("ref") , _temp35)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp19 =  no_undermethod(_self, string:new("ref") , _temp35)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp55 =  any(_self, _temp43,_temp19)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp55 =  _self:any(_temp43,_temp19)
      elseif _self.any ~= nil then
        _temp55 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("any") , _temp43,_temp19)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("any") , _temp43,_temp19)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp59 =  label(_self, _temp22,_temp55)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp59 =  _self:label(_temp22,_temp55)
      elseif _self.label ~= nil then
        _temp59 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("label") , _temp22,_temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("label") , _temp22,_temp55)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp21 =  seq(_self, _temp47,_temp39,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp21 =  _self:seq(_temp47,_temp39,_temp59)
      elseif _self.seq ~= nil then
        _temp21 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("seq") , _temp47,_temp39,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("seq") , _temp47,_temp39,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp71 = _lifted_call(_temp70)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp67 =  action(_self, _temp21,_temp71)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp67 =  _self:action(_temp21,_temp71)
      elseif _self.action ~= nil then
        _temp67 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp67 =  _self:no_undermethod(string:new("action") , _temp21,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp67 =  no_undermethod(_self, string:new("action") , _temp21,_temp71)
      else
        _error(exception:name_error("action"))
      end
    end

_temp39 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp59 =  str(_self, _temp39)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp59 =  _self:str(_temp39)
      elseif _self.str ~= nil then
        _temp59 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("str") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("str") , _temp39)
      else
        _error(exception:name_error("str"))
      end
    end

_temp47 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp47)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp47)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp47)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp21 =  seq(_self, _temp59,_temp39)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp21 =  _self:seq(_temp59,_temp39)
      elseif _self.seq ~= nil then
        _temp21 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("seq") , _temp59,_temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("seq") , _temp59,_temp39)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp75 = _lifted_call(_temp74)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp71 =  action(_self, _temp21,_temp75)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp71 =  _self:action(_temp21,_temp75)
      elseif _self.action ~= nil then
        _temp71 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("action") , _temp21,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("action") , _temp21,_temp75)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp51,_temp63,_temp67,_temp71)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp51,_temp63,_temp67,_temp71)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp51,_temp63,_temp67,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp51,_temp63,_temp67,_temp71)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("number")

local _temp67 = regex:new("-?[0-9]+(\\.[0-9]+)?")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp71 =  reg(_self, _temp67)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp71 =  _self:reg(_temp67)
      elseif _self.reg ~= nil then
        _temp71 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("reg") , _temp67)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("reg") , _temp67)
      else
        _error(exception:name_error("reg"))
      end
    end

local _temp79 = _lifted_call(_temp78)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp71,_temp79)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp71,_temp79)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp71,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp71,_temp79)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("array")

_temp63 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp67 =  str(_self, _temp63)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp67 =  _self:str(_temp63)
      elseif _self.str ~= nil then
        _temp67 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp67 =  _self:no_undermethod(string:new("str") , _temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp67 =  no_undermethod(_self, string:new("str") , _temp63)
      else
        _error(exception:name_error("str"))
      end
    end

_temp51 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp63 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp63 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp63 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp63 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp63 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("inner")

_temp39 = string:new("array_inner")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp51 =  label(_self, _temp75,_temp21)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp51 =  _self:label(_temp75,_temp21)
      elseif _self.label ~= nil then
        _temp51 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("label") , _temp75,_temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("label") , _temp75,_temp21)
      else
        _error(exception:name_error("label"))
      end
    end

_temp75 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp39 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp39)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp39)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp39)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp71 =  seq(_self, _temp67,_temp63,_temp51,_temp21,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp71 =  _self:seq(_temp67,_temp63,_temp51,_temp21,_temp75)
      elseif _self.seq ~= nil then
        _temp71 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("seq") , _temp67,_temp63,_temp51,_temp21,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("seq") , _temp67,_temp63,_temp51,_temp21,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp83 = _lifted_call(_temp82)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp79 =  action(_self, _temp71,_temp83)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp79 =  _self:action(_temp71,_temp83)
      elseif _self.action ~= nil then
        _temp79 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("action") , _temp71,_temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("action") , _temp71,_temp83)
      else
        _error(exception:name_error("action"))
      end
    end

_temp21 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp21)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp21)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp21)
      else
        _error(exception:name_error("str"))
      end
    end

_temp51 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp63 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp63)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp63)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp63)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp71 =  seq(_self, _temp75,_temp21,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp71 =  _self:seq(_temp75,_temp21,_temp51)
      elseif _self.seq ~= nil then
        _temp71 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("seq") , _temp75,_temp21,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("seq") , _temp75,_temp21,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp87 = _lifted_call(_temp86)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp83 =  action(_self, _temp71,_temp87)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp83 =  _self:action(_temp71,_temp87)
      elseif _self.action ~= nil then
        _temp83 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("action") , _temp71,_temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("action") , _temp71,_temp87)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp79,_temp83)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp79,_temp83)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp79,_temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp79,_temp83)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("array_inner")

_temp87 = string:new("first")

_temp51 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp79 =  label(_self, _temp87,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp79 =  _self:label(_temp87,_temp71)
      elseif _self.label ~= nil then
        _temp79 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("label") , _temp87,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("label") , _temp87,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

_temp87 = string:new("rest")

_temp39 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp67 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp67 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp67 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp67 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp67 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp39 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp39 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp39 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp47 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp47)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp47)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp47)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp63 =  seq(_self, _temp67,_temp39,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp63 =  _self:seq(_temp67,_temp39,_temp59)
      elseif _self.seq ~= nil then
        _temp63 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp63 =  _self:no_undermethod(string:new("seq") , _temp67,_temp39,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp63 =  no_undermethod(_self, string:new("seq") , _temp67,_temp39,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp47 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp67 =  ref(_self, _temp47)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp67 =  _self:ref(_temp47)
      elseif _self.ref ~= nil then
        _temp67 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp67 =  _self:no_undermethod(string:new("ref") , _temp47)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp67 =  no_undermethod(_self, string:new("ref") , _temp47)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp55 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp47 =  ref(_self, _temp55)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp47 =  _self:ref(_temp55)
      elseif _self.ref ~= nil then
        _temp47 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp47 =  _self:no_undermethod(string:new("ref") , _temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp47 =  no_undermethod(_self, string:new("ref") , _temp55)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp22 = string:new("comment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp55 =  ref(_self, _temp22)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp55 =  _self:ref(_temp22)
      elseif _self.ref ~= nil then
        _temp55 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp55 =  _self:no_undermethod(string:new("ref") , _temp22)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp55 =  no_undermethod(_self, string:new("ref") , _temp22)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp39 =  any(_self, _temp67,_temp47,_temp55)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp39 =  _self:any(_temp67,_temp47,_temp55)
      elseif _self.any ~= nil then
        _temp39 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("any") , _temp67,_temp47,_temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("any") , _temp67,_temp47,_temp55)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp59 =  many(_self, _temp39)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp59 =  _self:many(_temp39)
      elseif _self.many ~= nil then
        _temp59 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("many") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("many") , _temp39)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp75 =  any(_self, _temp63,_temp59)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp75 =  _self:any(_temp63,_temp59)
      elseif _self.any ~= nil then
        _temp75 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("any") , _temp63,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("any") , _temp63,_temp59)
      else
        _error(exception:name_error("any"))
      end
    end

_temp63 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp63)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp63)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp63)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp21 =  seq(_self, _temp75,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp21 =  _self:seq(_temp75,_temp59)
      elseif _self.seq ~= nil then
        _temp21 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("seq") , _temp75,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("seq") , _temp75,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp51 =  kleene(_self, _temp21)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp51 =  _self:kleene(_temp21)
      elseif _self.kleene ~= nil then
        _temp51 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("kleene") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("kleene") , _temp21)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp71 =  label(_self, _temp87,_temp51)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp71 =  _self:label(_temp87,_temp51)
      elseif _self.label ~= nil then
        _temp71 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("label") , _temp87,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("label") , _temp87,_temp51)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp83 =  seq(_self, _temp79,_temp71)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp83 =  _self:seq(_temp79,_temp71)
      elseif _self.seq ~= nil then
        _temp83 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("seq") , _temp79,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("seq") , _temp79,_temp71)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp91 = _lifted_call(_temp90)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp83,_temp91)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp83,_temp91)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp83,_temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp83,_temp91)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("hash")

_temp79 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp79)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp79)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp79)
      else
        _error(exception:name_error("str"))
      end
    end

_temp87 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp87)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp87)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp87)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp79 =  maybe(_self, _temp51)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp79 =  _self:maybe(_temp51)
      elseif _self.maybe ~= nil then
        _temp79 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("maybe") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("maybe") , _temp51)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp87 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp87)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp87)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp87)
      else
        _error(exception:name_error("str"))
      end
    end

_temp59 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp87 =  maybe(_self, _temp21)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp87 =  _self:maybe(_temp21)
      elseif _self.maybe ~= nil then
        _temp87 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("maybe") , _temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("maybe") , _temp21)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp59 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp21 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp21 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp21 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp83 =  seq(_self, _temp71,_temp79,_temp51,_temp87,_temp21)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp83 =  _self:seq(_temp71,_temp79,_temp51,_temp87,_temp21)
      elseif _self.seq ~= nil then
        _temp83 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("seq") , _temp71,_temp79,_temp51,_temp87,_temp21)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("seq") , _temp71,_temp79,_temp51,_temp87,_temp21)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp95 = _lifted_call(_temp94)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp91 =  action(_self, _temp83,_temp95)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp91 =  _self:action(_temp83,_temp95)
      elseif _self.action ~= nil then
        _temp91 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("action") , _temp83,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("action") , _temp83,_temp95)
      else
        _error(exception:name_error("action"))
      end
    end

_temp87 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp21 =  str(_self, _temp87)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp21 =  _self:str(_temp87)
      elseif _self.str ~= nil then
        _temp21 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("str") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("str") , _temp87)
      else
        _error(exception:name_error("str"))
      end
    end

_temp51 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp87 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp87 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp87 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp79 = string:new("inner")

_temp59 = string:new("hash_inner")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp51 =  label(_self, _temp79,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp51 =  _self:label(_temp79,_temp71)
      elseif _self.label ~= nil then
        _temp51 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("label") , _temp79,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("label") , _temp79,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

_temp79 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp79)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp79)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp79)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp79 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp79 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp79 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp83 =  seq(_self, _temp21,_temp87,_temp51,_temp71,_temp79)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp83 =  _self:seq(_temp21,_temp87,_temp51,_temp71,_temp79)
      elseif _self.seq ~= nil then
        _temp83 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("seq") , _temp21,_temp87,_temp51,_temp71,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("seq") , _temp21,_temp87,_temp51,_temp71,_temp79)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp99 = _lifted_call(_temp98)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp95 =  action(_self, _temp83,_temp99)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp95 =  _self:action(_temp83,_temp99)
      elseif _self.action ~= nil then
        _temp95 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("action") , _temp83,_temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("action") , _temp83,_temp99)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp91,_temp95)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp91,_temp95)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp91,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp91,_temp95)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("hash_inner")

_temp99 = string:new("first")

_temp79 = string:new("hash_argument")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp83 =  ref(_self, _temp79)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp83 =  _self:ref(_temp79)
      elseif _self.ref ~= nil then
        _temp83 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("ref") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("ref") , _temp79)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp91 =  label(_self, _temp99,_temp83)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp91 =  _self:label(_temp99,_temp83)
      elseif _self.label ~= nil then
        _temp91 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("label") , _temp99,_temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("label") , _temp99,_temp83)
      else
        _error(exception:name_error("label"))
      end
    end

_temp99 = string:new("rest")

_temp59 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp59 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp59 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp59 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp63 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp63)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp63)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp63)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp87 =  seq(_self, _temp21,_temp59,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp87 =  _self:seq(_temp21,_temp59,_temp75)
      elseif _self.seq ~= nil then
        _temp87 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("seq") , _temp21,_temp59,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("seq") , _temp21,_temp59,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp63 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp21 =  ref(_self, _temp63)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp21 =  _self:ref(_temp63)
      elseif _self.ref ~= nil then
        _temp21 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp21 =  _self:no_undermethod(string:new("ref") , _temp63)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp21 =  no_undermethod(_self, string:new("ref") , _temp63)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp39 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp63 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp63 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp63 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp63 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp63 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp55 = string:new("comment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp39 =  ref(_self, _temp55)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp39 =  _self:ref(_temp55)
      elseif _self.ref ~= nil then
        _temp39 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp39 =  _self:no_undermethod(string:new("ref") , _temp55)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp39 =  no_undermethod(_self, string:new("ref") , _temp55)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp59 =  any(_self, _temp21,_temp63,_temp39)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp59 =  _self:any(_temp21,_temp63,_temp39)
      elseif _self.any ~= nil then
        _temp59 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("any") , _temp21,_temp63,_temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("any") , _temp21,_temp63,_temp39)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp75 =  many(_self, _temp59)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp75 =  _self:many(_temp59)
      elseif _self.many ~= nil then
        _temp75 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("many") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("many") , _temp59)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp51 =  any(_self, _temp87,_temp75)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp51 =  _self:any(_temp87,_temp75)
      elseif _self.any ~= nil then
        _temp51 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("any") , _temp87,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("any") , _temp87,_temp75)
      else
        _error(exception:name_error("any"))
      end
    end

_temp87 = string:new("hash_argument")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp87)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp87)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp87)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp71 =  seq(_self, _temp51,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp71 =  _self:seq(_temp51,_temp75)
      elseif _self.seq ~= nil then
        _temp71 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("seq") , _temp51,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("seq") , _temp51,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp79 =  kleene(_self, _temp71)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp79 =  _self:kleene(_temp71)
      elseif _self.kleene ~= nil then
        _temp79 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("kleene") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("kleene") , _temp71)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp83 =  label(_self, _temp99,_temp79)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp83 =  _self:label(_temp99,_temp79)
      elseif _self.label ~= nil then
        _temp83 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("label") , _temp99,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("label") , _temp99,_temp79)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp91,_temp83)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp91,_temp83)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp91,_temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp91,_temp83)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp103 = _lifted_call(_temp102)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp95,_temp103)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp95,_temp103)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp95,_temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp95,_temp103)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("hash_argument")

_temp91 = string:new("key")

_temp75 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp99 =  any(_self, _temp71,_temp75)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp99 =  _self:any(_temp71,_temp75)
      elseif _self.any ~= nil then
        _temp99 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("any") , _temp71,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("any") , _temp71,_temp75)
      else
        _error(exception:name_error("any"))
      end
    end

_temp87 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp87)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp87)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp87)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp87 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp87 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp87 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp39 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp39)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp39)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp39)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp71 =  any(_self, _temp51,_temp87,_temp59)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp71 =  _self:any(_temp51,_temp87,_temp59)
      elseif _self.any ~= nil then
        _temp71 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("any") , _temp51,_temp87,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("any") , _temp51,_temp87,_temp59)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp75 =  kleene(_self, _temp71)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp75 =  _self:kleene(_temp71)
      elseif _self.kleene ~= nil then
        _temp75 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("kleene") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("kleene") , _temp71)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp79 =  seq(_self, _temp99,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp79 =  _self:seq(_temp99,_temp75)
      elseif _self.seq ~= nil then
        _temp79 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("seq") , _temp99,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("seq") , _temp99,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp83 =  label(_self, _temp91,_temp79)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp83 =  _self:label(_temp91,_temp79)
      elseif _self.label ~= nil then
        _temp83 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("label") , _temp91,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("label") , _temp91,_temp79)
      else
        _error(exception:name_error("label"))
      end
    end

_temp91 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp79 =  str(_self, _temp91)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp79 =  _self:str(_temp91)
      elseif _self.str ~= nil then
        _temp79 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("str") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("str") , _temp91)
      else
        _error(exception:name_error("str"))
      end
    end

_temp75 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp91 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp91 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp91 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp99 = string:new("value")

_temp59 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp75 =  label(_self, _temp99,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp75 =  _self:label(_temp99,_temp71)
      elseif _self.label ~= nil then
        _temp75 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("label") , _temp99,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("label") , _temp99,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp83,_temp79,_temp91,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp83,_temp79,_temp91,_temp75)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp83,_temp79,_temp91,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp83,_temp79,_temp91,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp107 = _lifted_call(_temp106)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp103 =  action(_self, _temp95,_temp107)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp103 =  _self:action(_temp95,_temp107)
      elseif _self.action ~= nil then
        _temp103 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("action") , _temp95,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("action") , _temp95,_temp107)
      else
        _error(exception:name_error("action"))
      end
    end

_temp91 = string:new("key")

_temp83 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp79 =  ref(_self, _temp83)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp79 =  _self:ref(_temp83)
      elseif _self.ref ~= nil then
        _temp79 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("ref") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("ref") , _temp83)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp75 =  label(_self, _temp91,_temp79)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp75 =  _self:label(_temp91,_temp79)
      elseif _self.label ~= nil then
        _temp75 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("label") , _temp91,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("label") , _temp91,_temp79)
      else
        _error(exception:name_error("label"))
      end
    end

_temp91 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp79 =  ref(_self, _temp91)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp79 =  _self:ref(_temp91)
      elseif _self.ref ~= nil then
        _temp79 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("ref") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("ref") , _temp91)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp83 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp91 =  str(_self, _temp83)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp91 =  _self:str(_temp83)
      elseif _self.str ~= nil then
        _temp91 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("str") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("str") , _temp83)
      else
        _error(exception:name_error("str"))
      end
    end

_temp71 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp83 =  ref(_self, _temp71)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp83 =  _self:ref(_temp71)
      elseif _self.ref ~= nil then
        _temp83 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("ref") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("ref") , _temp71)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp99 = string:new("value")

_temp87 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp87)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp87)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp87)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp71 =  label(_self, _temp99,_temp59)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp71 =  _self:label(_temp99,_temp59)
      elseif _self.label ~= nil then
        _temp71 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("label") , _temp99,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("label") , _temp99,_temp59)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp75,_temp79,_temp91,_temp83,_temp71)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp75,_temp79,_temp91,_temp83,_temp71)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp75,_temp79,_temp91,_temp83,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp75,_temp79,_temp91,_temp83,_temp71)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp111 = _lifted_call(_temp110)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp107 =  action(_self, _temp95,_temp111)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp107 =  _self:action(_temp95,_temp111)
      elseif _self.action ~= nil then
        _temp107 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("action") , _temp95,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("action") , _temp95,_temp111)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp103,_temp107)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp103,_temp107)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp103,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp103,_temp107)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("regex")

_temp111 = string:new("/")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp103 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp103 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp103 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

_temp95 = string:new("body")

_temp79 = string:new("\\/")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp91 =  str(_self, _temp79)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp91 =  _self:str(_temp79)
      elseif _self.str ~= nil then
        _temp91 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("str") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("str") , _temp79)
      else
        _error(exception:name_error("str"))
      end
    end

_temp99 = string:new("/")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp59 =  str(_self, _temp99)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp59 =  _self:str(_temp99)
      elseif _self.str ~= nil then
        _temp59 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("str") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("str") , _temp99)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp75 =  no(_self, _temp59)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp75 =  _self:no(_temp59)
      elseif _self.no ~= nil then
        _temp75 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("no") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("no") , _temp59)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp59 =  anything(_self)

    elseif anything then
      _temp59 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp59 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp59 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp79 =  seq(_self, _temp75,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp79 =  _self:seq(_temp75,_temp59)
      elseif _self.seq ~= nil then
        _temp79 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("seq") , _temp75,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("seq") , _temp75,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp83 =  any(_self, _temp91,_temp79)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp83 =  _self:any(_temp91,_temp79)
      elseif _self.any ~= nil then
        _temp83 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("any") , _temp91,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("any") , _temp91,_temp79)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp71 =  kleene(_self, _temp83)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp71 =  _self:kleene(_temp83)
      elseif _self.kleene ~= nil then
        _temp71 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("kleene") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("kleene") , _temp83)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp111 =  label(_self, _temp95,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp111 =  _self:label(_temp95,_temp71)
      elseif _self.label ~= nil then
        _temp111 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("label") , _temp95,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("label") , _temp95,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

_temp95 = string:new("/")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp83 = string:new("opts")

local _temp91 = regex:new("[mix]*")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp79 =  reg(_self, _temp91)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp79 =  _self:reg(_temp91)
      elseif _self.reg ~= nil then
        _temp79 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("reg") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("reg") , _temp91)
      else
        _error(exception:name_error("reg"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp95 =  label(_self, _temp83,_temp79)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp95 =  _self:label(_temp83,_temp79)
      elseif _self.label ~= nil then
        _temp95 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("label") , _temp83,_temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("label") , _temp83,_temp79)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp103,_temp111,_temp71,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp103,_temp111,_temp71,_temp95)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp103,_temp111,_temp71,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp103,_temp111,_temp71,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp115 = _lifted_call(_temp114)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp107,_temp115)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp107,_temp115)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp107,_temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp107,_temp115)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("string")

_temp71 = string:new("''")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp95 =  str(_self, _temp71)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp95 =  _self:str(_temp71)
      elseif _self.str ~= nil then
        _temp95 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("str") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("str") , _temp71)
      else
        _error(exception:name_error("str"))
      end
    end

_temp111 = string:new("\"\"")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp107 =  any(_self, _temp95,_temp71)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp107 =  _self:any(_temp95,_temp71)
      elseif _self.any ~= nil then
        _temp107 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("any") , _temp95,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("any") , _temp95,_temp71)
      else
        _error(exception:name_error("any"))
      end
    end

local _temp119 = _lifted_call(_temp118)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp115 =  action(_self, _temp107,_temp119)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp115 =  _self:action(_temp107,_temp119)
      elseif _self.action ~= nil then
        _temp115 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("action") , _temp107,_temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("action") , _temp107,_temp119)
      else
        _error(exception:name_error("action"))
      end
    end

_temp95 = string:new("\"")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp111 = string:new("values")

local _temp91 = regex:new("[^#\"\\\\]+")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp83 =  reg(_self, _temp91)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp83 =  _self:reg(_temp91)
      elseif _self.reg ~= nil then
        _temp83 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("reg") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("reg") , _temp91)
      else
        _error(exception:name_error("reg"))
      end
    end

_temp59 = string:new("string_interpolation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp91 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp91 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp91 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("\\\"")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp59 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp59 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp59 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp99 = string:new("\\\\")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp99)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp99)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp99)
      else
        _error(exception:name_error("str"))
      end
    end

_temp39 = string:new("\"")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp39)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp39)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp39)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp87 =  no(_self, _temp51)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp87 =  _self:no(_temp51)
      elseif _self.no ~= nil then
        _temp87 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("no") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("no") , _temp51)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp51 =  anything(_self)

    elseif anything then
      _temp51 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp51 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp51 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp99 =  seq(_self, _temp87,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp99 =  _self:seq(_temp87,_temp51)
      elseif _self.seq ~= nil then
        _temp99 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("seq") , _temp87,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("seq") , _temp87,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp79 =  any(_self, _temp83,_temp91,_temp59,_temp75,_temp99)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp79 =  _self:any(_temp83,_temp91,_temp59,_temp75,_temp99)
      elseif _self.any ~= nil then
        _temp79 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("any") , _temp83,_temp91,_temp59,_temp75,_temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("any") , _temp83,_temp91,_temp59,_temp75,_temp99)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp103 =  kleene(_self, _temp79)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp103 =  _self:kleene(_temp79)
      elseif _self.kleene ~= nil then
        _temp103 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("kleene") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("kleene") , _temp79)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp95 =  label(_self, _temp111,_temp103)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp95 =  _self:label(_temp111,_temp103)
      elseif _self.label ~= nil then
        _temp95 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("label") , _temp111,_temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("label") , _temp111,_temp103)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("\"")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp103 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp103 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp103 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp71,_temp95,_temp103)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp71,_temp95,_temp103)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp71,_temp95,_temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp71,_temp95,_temp103)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp123 = _lifted_call(_temp122)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp119 =  action(_self, _temp107,_temp123)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp119 =  _self:action(_temp107,_temp123)
      elseif _self.action ~= nil then
        _temp119 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("action") , _temp107,_temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("action") , _temp107,_temp123)
      else
        _error(exception:name_error("action"))
      end
    end

_temp95 = string:new("'")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp103 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp103 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp103 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp71 = string:new("svalue")

_temp75 = string:new("\\'")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp99 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp99 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp99 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp59 = string:new("\\\\")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp51 = string:new("'")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp83 =  str(_self, _temp51)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp83 =  _self:str(_temp51)
      elseif _self.str ~= nil then
        _temp83 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("str") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("str") , _temp51)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp91 =  no(_self, _temp83)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp91 =  _self:no(_temp83)
      elseif _self.no ~= nil then
        _temp91 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("no") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("no") , _temp83)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp83 =  anything(_self)

    elseif anything then
      _temp83 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp83 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp83 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp59 =  seq(_self, _temp91,_temp83)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp59 =  _self:seq(_temp91,_temp83)
      elseif _self.seq ~= nil then
        _temp59 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("seq") , _temp91,_temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("seq") , _temp91,_temp83)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp79 =  any(_self, _temp99,_temp75,_temp59)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp79 =  _self:any(_temp99,_temp75,_temp59)
      elseif _self.any ~= nil then
        _temp79 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("any") , _temp99,_temp75,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("any") , _temp99,_temp75,_temp59)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp111 =  many(_self, _temp79)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp111 =  _self:many(_temp79)
      elseif _self.many ~= nil then
        _temp111 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("many") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("many") , _temp79)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp95 =  label(_self, _temp71,_temp111)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp95 =  _self:label(_temp71,_temp111)
      elseif _self.label ~= nil then
        _temp95 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("label") , _temp71,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("label") , _temp71,_temp111)
      else
        _error(exception:name_error("label"))
      end
    end

_temp71 = string:new("'")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp71)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp71)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp71)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp103,_temp95,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp103,_temp95,_temp111)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp103,_temp95,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp103,_temp95,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp127 = _lifted_call(_temp126)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp123 =  action(_self, _temp107,_temp127)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp123 =  _self:action(_temp107,_temp127)
      elseif _self.action ~= nil then
        _temp123 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("action") , _temp107,_temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("action") , _temp107,_temp127)
      else
        _error(exception:name_error("action"))
      end
    end

_temp95 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp103 = string:new("svalue")

_temp75 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp99 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp99)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp99)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp99)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp83 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp99 =  ref(_self, _temp83)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp99 =  _self:ref(_temp83)
      elseif _self.ref ~= nil then
        _temp99 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("ref") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("ref") , _temp83)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp79 =  any(_self, _temp59,_temp75,_temp99)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp79 =  _self:any(_temp59,_temp75,_temp99)
      elseif _self.any ~= nil then
        _temp79 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("any") , _temp59,_temp75,_temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("any") , _temp59,_temp75,_temp99)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp71 =  many(_self, _temp79)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp71 =  _self:many(_temp79)
      elseif _self.many ~= nil then
        _temp71 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("many") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("many") , _temp79)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp95 =  label(_self, _temp103,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp95 =  _self:label(_temp103,_temp71)
      elseif _self.label ~= nil then
        _temp95 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("label") , _temp103,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("label") , _temp103,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp111,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp111,_temp95)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp111,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp111,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp131 = _lifted_call(_temp130)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp127 =  action(_self, _temp107,_temp131)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp127 =  _self:action(_temp107,_temp131)
      elseif _self.action ~= nil then
        _temp127 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("action") , _temp107,_temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("action") , _temp107,_temp131)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp115,_temp119,_temp123,_temp127)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp115,_temp119,_temp123,_temp127)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp115,_temp119,_temp123,_temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp115,_temp119,_temp123,_temp127)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("string_interpolation")

_temp119 = string:new("#")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp123 =  str(_self, _temp119)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp123 =  _self:str(_temp119)
      elseif _self.str ~= nil then
        _temp123 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("str") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("str") , _temp119)
      else
        _error(exception:name_error("str"))
      end
    end

_temp115 = string:new("{")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp119 =  str(_self, _temp115)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp119 =  _self:str(_temp115)
      elseif _self.str ~= nil then
        _temp119 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("str") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("str") , _temp115)
      else
        _error(exception:name_error("str"))
      end
    end

_temp107 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp115 =  maybe(_self, _temp131)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp115 =  _self:maybe(_temp131)
      elseif _self.maybe ~= nil then
        _temp115 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("maybe") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("maybe") , _temp131)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp107 = string:new("first")

_temp71 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp71)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp71)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp71)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp95 =  maybe(_self, _temp111)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp95 =  _self:maybe(_temp111)
      elseif _self.maybe ~= nil then
        _temp95 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("maybe") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("maybe") , _temp111)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp131 =  label(_self, _temp107,_temp95)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp131 =  _self:label(_temp107,_temp95)
      elseif _self.label ~= nil then
        _temp131 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("label") , _temp107,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("label") , _temp107,_temp95)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp95 =  maybe(_self, _temp107)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp95 =  _self:maybe(_temp107)
      elseif _self.maybe ~= nil then
        _temp95 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("maybe") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("maybe") , _temp107)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp111 = string:new("rest")

_temp99 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp79 =  ref(_self, _temp99)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp79 =  _self:ref(_temp99)
      elseif _self.ref ~= nil then
        _temp79 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("ref") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("ref") , _temp99)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp99 =  maybe(_self, _temp75)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp99 =  _self:maybe(_temp75)
      elseif _self.maybe ~= nil then
        _temp99 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("maybe") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("maybe") , _temp75)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp59 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp91 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp83 =  ref(_self, _temp91)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp83 =  _self:ref(_temp91)
      elseif _self.ref ~= nil then
        _temp83 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("ref") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("ref") , _temp91)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp59 =  maybe(_self, _temp83)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp59 =  _self:maybe(_temp83)
      elseif _self.maybe ~= nil then
        _temp59 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("maybe") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("maybe") , _temp83)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp103 =  seq(_self, _temp79,_temp99,_temp75,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp103 =  _self:seq(_temp79,_temp99,_temp75,_temp59)
      elseif _self.seq ~= nil then
        _temp103 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("seq") , _temp79,_temp99,_temp75,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("seq") , _temp79,_temp99,_temp75,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp71 =  kleene(_self, _temp103)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp71 =  _self:kleene(_temp103)
      elseif _self.kleene ~= nil then
        _temp71 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("kleene") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("kleene") , _temp103)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp107 =  label(_self, _temp111,_temp71)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp107 =  _self:label(_temp111,_temp71)
      elseif _self.label ~= nil then
        _temp107 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("label") , _temp111,_temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("label") , _temp111,_temp71)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp103 = string:new("}")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp103)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp103)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp103)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp127 =  seq(_self, _temp123,_temp119,_temp115,_temp131,_temp95,_temp107,_temp71,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp127 =  _self:seq(_temp123,_temp119,_temp115,_temp131,_temp95,_temp107,_temp71,_temp111)
      elseif _self.seq ~= nil then
        _temp127 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("seq") , _temp123,_temp119,_temp115,_temp131,_temp95,_temp107,_temp71,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("seq") , _temp123,_temp119,_temp115,_temp131,_temp95,_temp107,_temp71,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp135 = _lifted_call(_temp134)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp127,_temp135)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp127,_temp135)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp127,_temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp127,_temp135)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("comment")

_temp71 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp71)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp71)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp71)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp127 =  maybe(_self, _temp111)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp127 =  _self:maybe(_temp111)
      elseif _self.maybe ~= nil then
        _temp127 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("maybe") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("maybe") , _temp111)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp71 = string:new("#*")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp71)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp71)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp71)
      else
        _error(exception:name_error("str"))
      end
    end

_temp115 = string:new("*#")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp131 =  str(_self, _temp115)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp131 =  _self:str(_temp115)
      elseif _self.str ~= nil then
        _temp131 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("str") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("str") , _temp115)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp95 =  no(_self, _temp131)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp95 =  _self:no(_temp131)
      elseif _self.no ~= nil then
        _temp95 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("no") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("no") , _temp131)
      else
        _error(exception:name_error("no"))
      end
    end

_temp119 = string:new("comment")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp119 =  anything(_self)

    elseif anything then
      _temp119 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp119 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp119 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp131 =  any(_self, _temp115,_temp119)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp131 =  _self:any(_temp115,_temp119)
      elseif _self.any ~= nil then
        _temp131 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("any") , _temp115,_temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("any") , _temp115,_temp119)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp95,_temp131)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp95,_temp131)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp95,_temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp95,_temp131)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp71 =  kleene(_self, _temp107)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp71 =  _self:kleene(_temp107)
      elseif _self.kleene ~= nil then
        _temp71 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("kleene") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("kleene") , _temp107)
      else
        _error(exception:name_error("kleene"))
      end
    end

_temp95 = string:new("*#")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp131 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp131 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp131 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp119 = string:new("eof")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp107 =  any(_self, _temp131,_temp95)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp107 =  _self:any(_temp131,_temp95)
      elseif _self.any ~= nil then
        _temp107 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("any") , _temp131,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("any") , _temp131,_temp95)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp135 =  seq(_self, _temp127,_temp111,_temp71,_temp107)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp135 =  _self:seq(_temp127,_temp111,_temp71,_temp107)
      elseif _self.seq ~= nil then
        _temp135 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("seq") , _temp127,_temp111,_temp71,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("seq") , _temp127,_temp111,_temp71,_temp107)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp127 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp127)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp127)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp127)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp71 =  maybe(_self, _temp111)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp71 =  _self:maybe(_temp111)
      elseif _self.maybe ~= nil then
        _temp71 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("maybe") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("maybe") , _temp111)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp127 = string:new("#")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp127)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp127)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp127)
      else
        _error(exception:name_error("str"))
      end
    end

_temp123 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp103 = string:new("eof")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp103)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp103)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp103)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp119 =  any(_self, _temp115,_temp123)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp119 =  _self:any(_temp115,_temp123)
      elseif _self.any ~= nil then
        _temp119 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("any") , _temp115,_temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("any") , _temp115,_temp123)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp131 =  no(_self, _temp119)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp131 =  _self:no(_temp119)
      elseif _self.no ~= nil then
        _temp131 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("no") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("no") , _temp119)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp119 =  anything(_self)

    elseif anything then
      _temp119 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp119 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp119 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp131,_temp119)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp131,_temp119)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp131,_temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp131,_temp119)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp127 =  kleene(_self, _temp95)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp127 =  _self:kleene(_temp95)
      elseif _self.kleene ~= nil then
        _temp127 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("kleene") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("kleene") , _temp95)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp71,_temp111,_temp127)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp71,_temp111,_temp127)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp71,_temp111,_temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp71,_temp111,_temp127)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp135,_temp107)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp135,_temp107)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp135,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp135,_temp107)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("function_definition")

_temp127 = string:new("{")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp135 =  str(_self, _temp127)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp135 =  _self:str(_temp127)
      elseif _self.str ~= nil then
        _temp135 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("str") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("str") , _temp127)
      else
        _error(exception:name_error("str"))
      end
    end

_temp71 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp71)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp71)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp71)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp127 =  maybe(_self, _temp111)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp127 =  _self:maybe(_temp111)
      elseif _self.maybe ~= nil then
        _temp127 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("maybe") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("maybe") , _temp111)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp71 = string:new("args")

_temp131 = string:new("formal_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp95 =  maybe(_self, _temp119)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp95 =  _self:maybe(_temp119)
      elseif _self.maybe ~= nil then
        _temp95 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("maybe") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("maybe") , _temp119)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp111 =  label(_self, _temp71,_temp95)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp111 =  _self:label(_temp71,_temp95)
      elseif _self.label ~= nil then
        _temp111 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("label") , _temp71,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("label") , _temp71,_temp95)
      else
        _error(exception:name_error("label"))
      end
    end

_temp119 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp95 =  maybe(_self, _temp71)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp95 =  _self:maybe(_temp71)
      elseif _self.maybe ~= nil then
        _temp95 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("maybe") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("maybe") , _temp71)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp119 = string:new("body")

_temp115 = string:new("line")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp115)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp115)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp115)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp131 =  kleene(_self, _temp123)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp131 =  _self:kleene(_temp123)
      elseif _self.kleene ~= nil then
        _temp131 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("kleene") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("kleene") , _temp123)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp71 =  label(_self, _temp119,_temp131)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp71 =  _self:label(_temp119,_temp131)
      elseif _self.label ~= nil then
        _temp71 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("label") , _temp119,_temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("label") , _temp119,_temp131)
      else
        _error(exception:name_error("label"))
      end
    end

_temp123 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp131 =  maybe(_self, _temp119)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp131 =  _self:maybe(_temp119)
      elseif _self.maybe ~= nil then
        _temp131 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("maybe") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("maybe") , _temp119)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp123 = string:new("}")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp119 =  str(_self, _temp123)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp119 =  _self:str(_temp123)
      elseif _self.str ~= nil then
        _temp119 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("str") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("str") , _temp123)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp135,_temp127,_temp111,_temp95,_temp71,_temp131,_temp119)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp135,_temp127,_temp111,_temp95,_temp71,_temp131,_temp119)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp135,_temp127,_temp111,_temp95,_temp71,_temp131,_temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp135,_temp127,_temp111,_temp95,_temp71,_temp131,_temp119)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp139 = _lifted_call(_temp138)

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp107,_temp139)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp107,_temp139)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp107,_temp139)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp107,_temp139)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("formal_args")

_temp131 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp107 =  maybe(_self, _temp119)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp107 =  _self:maybe(_temp119)
      elseif _self.maybe ~= nil then
        _temp107 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("maybe") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("maybe") , _temp119)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp131 = string:new("plain_formals")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp95 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp131 =  maybe(_self, _temp71)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp131 =  _self:maybe(_temp71)
      elseif _self.maybe ~= nil then
        _temp131 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("maybe") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("maybe") , _temp71)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp95 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp127 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp127)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp127)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp127)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp95 =  no(_self, _temp111)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp95 =  _self:no(_temp111)
      elseif _self.no ~= nil then
        _temp95 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("no") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("no") , _temp111)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp139 =  seq(_self, _temp107,_temp119,_temp131,_temp71,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp139 =  _self:seq(_temp107,_temp119,_temp131,_temp71,_temp95)
      elseif _self.seq ~= nil then
        _temp139 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("seq") , _temp107,_temp119,_temp131,_temp71,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("seq") , _temp107,_temp119,_temp131,_temp71,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp119 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp71 =  maybe(_self, _temp131)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp71 =  _self:maybe(_temp131)
      elseif _self.maybe ~= nil then
        _temp71 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("maybe") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("maybe") , _temp131)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp119 = string:new("default_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp119 =  maybe(_self, _temp107)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp119 =  _self:maybe(_temp107)
      elseif _self.maybe ~= nil then
        _temp119 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("maybe") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("maybe") , _temp107)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp111 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp107 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp107 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp107 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

_temp135 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp127 =  str(_self, _temp135)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp127 =  _self:str(_temp135)
      elseif _self.str ~= nil then
        _temp127 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("str") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("str") , _temp135)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp111 =  no(_self, _temp127)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp111 =  _self:no(_temp127)
      elseif _self.no ~= nil then
        _temp111 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("no") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("no") , _temp127)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp71,_temp131,_temp119,_temp107,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp71,_temp131,_temp119,_temp107,_temp111)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp131 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp107 =  maybe(_self, _temp119)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp107 =  _self:maybe(_temp119)
      elseif _self.maybe ~= nil then
        _temp107 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("maybe") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("maybe") , _temp119)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp131 = string:new("variable_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp127 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp127)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp127)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp127)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp131 =  maybe(_self, _temp71)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp131 =  _self:maybe(_temp71)
      elseif _self.maybe ~= nil then
        _temp131 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("maybe") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("maybe") , _temp71)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp127 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp127)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp127)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp127)
      else
        _error(exception:name_error("str"))
      end
    end

_temp123 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp135 =  str(_self, _temp123)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp135 =  _self:str(_temp123)
      elseif _self.str ~= nil then
        _temp135 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("str") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("str") , _temp123)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp127 =  no(_self, _temp135)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp127 =  _self:no(_temp135)
      elseif _self.no ~= nil then
        _temp127 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("no") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("no") , _temp135)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp111 =  seq(_self, _temp107,_temp119,_temp131,_temp71,_temp127)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp111 =  _self:seq(_temp107,_temp119,_temp131,_temp71,_temp127)
      elseif _self.seq ~= nil then
        _temp111 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("seq") , _temp107,_temp119,_temp131,_temp71,_temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("seq") , _temp107,_temp119,_temp131,_temp71,_temp127)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp119 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp71 =  maybe(_self, _temp131)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp71 =  _self:maybe(_temp131)
      elseif _self.maybe ~= nil then
        _temp71 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("maybe") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("maybe") , _temp131)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp119 = string:new("plain_formals")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp135 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp135)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp135)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp135)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp119 =  maybe(_self, _temp107)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp119 =  _self:maybe(_temp107)
      elseif _self.maybe ~= nil then
        _temp119 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("maybe") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("maybe") , _temp107)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp135 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp107 =  str(_self, _temp135)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp107 =  _self:str(_temp135)
      elseif _self.str ~= nil then
        _temp107 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("str") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("str") , _temp135)
      else
        _error(exception:name_error("str"))
      end
    end

_temp115 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp115)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp115)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp115)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp135 =  maybe(_self, _temp123)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp135 =  _self:maybe(_temp123)
      elseif _self.maybe ~= nil then
        _temp135 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("maybe") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("maybe") , _temp123)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp115 = string:new("variable_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp115)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp115)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp115)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp103 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp103 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp103 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp115 =  maybe(_self, _temp103)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp115 =  _self:maybe(_temp103)
      elseif _self.maybe ~= nil then
        _temp115 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("maybe") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("maybe") , _temp103)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp59 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp103 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp103 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp103 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp99 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp99)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp99)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp99)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp59 =  no(_self, _temp75)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp59 =  _self:no(_temp75)
      elseif _self.no ~= nil then
        _temp59 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("no") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("no") , _temp75)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp127 =  seq(_self, _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp127 =  _self:seq(_temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp59)
      elseif _self.seq ~= nil then
        _temp127 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp123 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp103 =  maybe(_self, _temp115)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp103 =  _self:maybe(_temp115)
      elseif _self.maybe ~= nil then
        _temp103 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("maybe") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("maybe") , _temp115)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp123 = string:new("default_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp135 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp135 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp135 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp123 =  maybe(_self, _temp135)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp123 =  _self:maybe(_temp135)
      elseif _self.maybe ~= nil then
        _temp123 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("maybe") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("maybe") , _temp135)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp107 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp135 =  str(_self, _temp107)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp135 =  _self:str(_temp107)
      elseif _self.str ~= nil then
        _temp135 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("str") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("str") , _temp107)
      else
        _error(exception:name_error("str"))
      end
    end

_temp131 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp107 =  maybe(_self, _temp119)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp107 =  _self:maybe(_temp119)
      elseif _self.maybe ~= nil then
        _temp107 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("maybe") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("maybe") , _temp119)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp131 = string:new("variable_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp119 =  ref(_self, _temp131)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp119 =  _self:ref(_temp131)
      elseif _self.ref ~= nil then
        _temp119 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("ref") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("ref") , _temp131)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp71 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp71 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp71 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp131 =  maybe(_self, _temp71)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp131 =  _self:maybe(_temp71)
      elseif _self.maybe ~= nil then
        _temp131 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("maybe") , _temp71)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("maybe") , _temp71)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp75 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp71 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp71 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp71 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp79 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp99 =  str(_self, _temp79)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp99 =  _self:str(_temp79)
      elseif _self.str ~= nil then
        _temp99 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("str") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("str") , _temp79)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp75 =  no(_self, _temp99)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp75 =  _self:no(_temp99)
      elseif _self.no ~= nil then
        _temp75 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("no") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("no") , _temp99)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp59 =  seq(_self, _temp103,_temp115,_temp123,_temp135,_temp107,_temp119,_temp131,_temp71,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp59 =  _self:seq(_temp103,_temp115,_temp123,_temp135,_temp107,_temp119,_temp131,_temp71,_temp75)
      elseif _self.seq ~= nil then
        _temp59 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("seq") , _temp103,_temp115,_temp123,_temp135,_temp107,_temp119,_temp131,_temp71,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("seq") , _temp103,_temp115,_temp123,_temp135,_temp107,_temp119,_temp131,_temp71,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp119 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp71 =  maybe(_self, _temp131)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp71 =  _self:maybe(_temp131)
      elseif _self.maybe ~= nil then
        _temp71 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp71 =  _self:no_undermethod(string:new("maybe") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp71 =  no_undermethod(_self, string:new("maybe") , _temp131)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp119 = string:new("plain_formals")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp131 =  ref(_self, _temp119)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp131 =  _self:ref(_temp119)
      elseif _self.ref ~= nil then
        _temp131 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp131 =  _self:no_undermethod(string:new("ref") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp131 =  no_undermethod(_self, string:new("ref") , _temp119)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp135 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp135)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp135)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp135)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp119 =  maybe(_self, _temp107)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp119 =  _self:maybe(_temp107)
      elseif _self.maybe ~= nil then
        _temp119 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("maybe") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("maybe") , _temp107)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp135 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp107 =  str(_self, _temp135)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp107 =  _self:str(_temp135)
      elseif _self.str ~= nil then
        _temp107 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("str") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("str") , _temp135)
      else
        _error(exception:name_error("str"))
      end
    end

_temp115 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp115)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp115)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp115)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp135 =  maybe(_self, _temp123)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp135 =  _self:maybe(_temp123)
      elseif _self.maybe ~= nil then
        _temp135 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("maybe") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("maybe") , _temp123)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp115 = string:new("default_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp123 =  ref(_self, _temp115)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp123 =  _self:ref(_temp115)
      elseif _self.ref ~= nil then
        _temp123 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("ref") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("ref") , _temp115)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp99 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp103 =  ref(_self, _temp99)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp103 =  _self:ref(_temp99)
      elseif _self.ref ~= nil then
        _temp103 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("ref") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("ref") , _temp99)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp115 =  maybe(_self, _temp103)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp115 =  _self:maybe(_temp103)
      elseif _self.maybe ~= nil then
        _temp115 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("maybe") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("maybe") , _temp103)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp99 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp103 =  str(_self, _temp99)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp103 =  _self:str(_temp99)
      elseif _self.str ~= nil then
        _temp103 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("str") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("str") , _temp99)
      else
        _error(exception:name_error("str"))
      end
    end

_temp83 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp79 =  ref(_self, _temp83)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp79 =  _self:ref(_temp83)
      elseif _self.ref ~= nil then
        _temp79 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("ref") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("ref") , _temp83)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp99 =  maybe(_self, _temp79)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp99 =  _self:maybe(_temp79)
      elseif _self.maybe ~= nil then
        _temp99 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("maybe") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("maybe") , _temp79)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp83 = string:new("variable_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp79 =  ref(_self, _temp83)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp79 =  _self:ref(_temp83)
      elseif _self.ref ~= nil then
        _temp79 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("ref") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("ref") , _temp83)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp91 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp91 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp91 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp83 =  maybe(_self, _temp91)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp83 =  _self:maybe(_temp91)
      elseif _self.maybe ~= nil then
        _temp83 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("maybe") , _temp91)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("maybe") , _temp91)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp51 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp91 =  str(_self, _temp51)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp91 =  _self:str(_temp51)
      elseif _self.str ~= nil then
        _temp91 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("str") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("str") , _temp51)
      else
        _error(exception:name_error("str"))
      end
    end

_temp39 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp87 =  str(_self, _temp39)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp87 =  _self:str(_temp39)
      elseif _self.str ~= nil then
        _temp87 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp87 =  _self:no_undermethod(string:new("str") , _temp39)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp87 =  no_undermethod(_self, string:new("str") , _temp39)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp51 =  no(_self, _temp87)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp51 =  _self:no(_temp87)
      elseif _self.no ~= nil then
        _temp51 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("no") , _temp87)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("no") , _temp87)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp75 =  seq(_self, _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp99,_temp79,_temp83,_temp91,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp75 =  _self:seq(_temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp99,_temp79,_temp83,_temp91,_temp51)
      elseif _self.seq ~= nil then
        _temp75 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp99,_temp79,_temp83,_temp91,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("seq") , _temp71,_temp131,_temp119,_temp107,_temp135,_temp123,_temp115,_temp103,_temp99,_temp79,_temp83,_temp91,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp79 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp83 =  ref(_self, _temp79)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp83 =  _self:ref(_temp79)
      elseif _self.ref ~= nil then
        _temp83 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("ref") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("ref") , _temp79)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp91 =  maybe(_self, _temp83)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp91 =  _self:maybe(_temp83)
      elseif _self.maybe ~= nil then
        _temp91 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp91 =  _self:no_undermethod(string:new("maybe") , _temp83)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp91 =  no_undermethod(_self, string:new("maybe") , _temp83)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp79 = string:new("plain_formals")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp83 =  ref(_self, _temp79)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp83 =  _self:ref(_temp79)
      elseif _self.ref ~= nil then
        _temp83 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp83 =  _self:no_undermethod(string:new("ref") , _temp79)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp83 =  no_undermethod(_self, string:new("ref") , _temp79)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp103 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp99 =  ref(_self, _temp103)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp99 =  _self:ref(_temp103)
      elseif _self.ref ~= nil then
        _temp99 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("ref") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("ref") , _temp103)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp79 =  maybe(_self, _temp99)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp79 =  _self:maybe(_temp99)
      elseif _self.maybe ~= nil then
        _temp79 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp79 =  _self:no_undermethod(string:new("maybe") , _temp99)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp79 =  no_undermethod(_self, string:new("maybe") , _temp99)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp103 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp99 =  str(_self, _temp103)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp99 =  _self:str(_temp103)
      elseif _self.str ~= nil then
        _temp99 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp99 =  _self:no_undermethod(string:new("str") , _temp103)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp99 =  no_undermethod(_self, string:new("str") , _temp103)
      else
        _error(exception:name_error("str"))
      end
    end

_temp123 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp103 =  maybe(_self, _temp115)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp103 =  _self:maybe(_temp115)
      elseif _self.maybe ~= nil then
        _temp103 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp103 =  _self:no_undermethod(string:new("maybe") , _temp115)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp103 =  no_undermethod(_self, string:new("maybe") , _temp115)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp123 = string:new("default_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp115 =  ref(_self, _temp123)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp115 =  _self:ref(_temp123)
      elseif _self.ref ~= nil then
        _temp115 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp115 =  _self:no_undermethod(string:new("ref") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp115 =  no_undermethod(_self, string:new("ref") , _temp123)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp135 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp135 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp135 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp123 =  maybe(_self, _temp135)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp123 =  _self:maybe(_temp135)
      elseif _self.maybe ~= nil then
        _temp123 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp123 =  _self:no_undermethod(string:new("maybe") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp123 =  no_undermethod(_self, string:new("maybe") , _temp135)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp107 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp135 =  str(_self, _temp107)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp135 =  _self:str(_temp107)
      elseif _self.str ~= nil then
        _temp135 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("str") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("str") , _temp107)
      else
        _error(exception:name_error("str"))
      end
    end

_temp131 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp119 =  str(_self, _temp131)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp119 =  _self:str(_temp131)
      elseif _self.str ~= nil then
        _temp119 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp119 =  _self:no_undermethod(string:new("str") , _temp131)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp119 =  no_undermethod(_self, string:new("str") , _temp131)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp107 =  no(_self, _temp119)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp107 =  _self:no(_temp119)
      elseif _self.no ~= nil then
        _temp107 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("no") , _temp119)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("no") , _temp119)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp51 =  seq(_self, _temp91,_temp83,_temp79,_temp99,_temp103,_temp115,_temp123,_temp135,_temp107)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp51 =  _self:seq(_temp91,_temp83,_temp79,_temp99,_temp103,_temp115,_temp123,_temp135,_temp107)
      elseif _self.seq ~= nil then
        _temp51 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("seq") , _temp91,_temp83,_temp79,_temp99,_temp103,_temp115,_temp123,_temp135,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("seq") , _temp91,_temp83,_temp79,_temp99,_temp103,_temp115,_temp123,_temp135,_temp107)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp135 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp107 =  str(_self, _temp135)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp107 =  _self:str(_temp135)
      elseif _self.str ~= nil then
        _temp107 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("str") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("str") , _temp135)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp139,_temp95,_temp111,_temp127,_temp59,_temp75,_temp51,_temp107)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp139,_temp95,_temp111,_temp127,_temp59,_temp75,_temp51,_temp107)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp139,_temp95,_temp111,_temp127,_temp59,_temp75,_temp51,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp139,_temp95,_temp111,_temp127,_temp59,_temp75,_temp51,_temp107)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("plain_formals")

_temp51 = string:new("plain_arg")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("rest")

_temp127 = string:new("rest_formals")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp127)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp127)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp127)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp51 =  label(_self, _temp75,_temp59)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp51 =  _self:label(_temp75,_temp59)
      elseif _self.label ~= nil then
        _temp51 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("label") , _temp75,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("label") , _temp75,_temp59)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp3 =  seq(_self, _temp107,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp3 =  _self:seq(_temp107,_temp51)
      elseif _self.seq ~= nil then
        _temp3 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("seq") , _temp107,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("seq") , _temp107,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("rest_formals")

_temp75 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp107 =  maybe(_self, _temp59)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp107 =  _self:maybe(_temp59)
      elseif _self.maybe ~= nil then
        _temp107 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("maybe") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("maybe") , _temp59)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp75 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp59 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp59 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp59 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp127 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp127 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp127 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp75 =  maybe(_self, _temp127)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp75 =  _self:maybe(_temp127)
      elseif _self.maybe ~= nil then
        _temp75 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("maybe") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("maybe") , _temp127)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp111 = string:new("plain_arg")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp127 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp127 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp127 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp135 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp139 =  ref(_self, _temp135)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp139 =  _self:ref(_temp135)
      elseif _self.ref ~= nil then
        _temp139 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp139 =  _self:no_undermethod(string:new("ref") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp139 =  no_undermethod(_self, string:new("ref") , _temp135)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp123 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp135 =  str(_self, _temp123)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp135 =  _self:str(_temp123)
      elseif _self.str ~= nil then
        _temp135 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp135 =  _self:no_undermethod(string:new("str") , _temp123)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp135 =  no_undermethod(_self, string:new("str") , _temp123)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp139,_temp135)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp139,_temp135)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp139,_temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp139,_temp135)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp111 =  no(_self, _temp95)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp111 =  _self:no(_temp95)
      elseif _self.no ~= nil then
        _temp111 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("no") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("no") , _temp95)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp51 =  seq(_self, _temp107,_temp59,_temp75,_temp127,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp51 =  _self:seq(_temp107,_temp59,_temp75,_temp127,_temp111)
      elseif _self.seq ~= nil then
        _temp51 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("seq") , _temp107,_temp59,_temp75,_temp127,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("seq") , _temp107,_temp59,_temp75,_temp127,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp4 =  kleene(_self, _temp51)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp4 =  _self:kleene(_temp51)
      elseif _self.kleene ~= nil then
        _temp4 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("kleene") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("kleene") , _temp51)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("plain_arg")

_temp111 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

local _temp143 = function (_self)

local _temp140 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp140 =  _self:my()
      elseif _self.my ~= nil then
        _temp140 =  _self.my

        elseif my ~= nil then
          _temp140 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp141 = nil
    if _type(plain_underarg) == "function" or (_type(plain_underarg) == "table" and _rawget(plain_underarg, "__call_thing")) then
      _temp141 =  plain_underarg(_self)

    elseif plain_underarg then
      _temp141 =  plain_underarg
    else
            if _type(_self.plain_underarg) == "function" or (_type(_self.plain_underarg) == "table" and _rawget(_self.plain_underarg, "__call_thing")) then
        _temp141 =  _self:plain_underarg()
      elseif _self.plain_underarg ~= nil then
        _temp141 =  _self.plain_underarg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp141 =  _self:no_undermethod(string:new("plain_arg"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp141 =  no_undermethod(_self, string:new("plain_arg"))
      else
        _error(exception:name_error("plain_arg"))
      end
    end

      local _t = _type(_temp140)
      if _t == "table" then
                      if _type(_temp140.squish) == "function" or (_type(_temp140.squish) == "table" and _rawget(_temp140.squish, "__call_thing")) then
        return _temp140:squish(_temp141)
      elseif _temp140.squish ~= nil then
        return _temp140.squish

        elseif _temp140.no_undermethod ~= nil then
          return  _temp140:no_undermethod(string:new("squish") , _temp141)
        else
          _error(exception:method_error(_temp140, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp140)
      if _n.squish ~= nil then
        return _n:squish(_temp141)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp141)
      else
        _error(exception:method_error(_temp140, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp140)
      if _f.squish ~= nil then
        return _f:squish(_temp141)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp141)
      else
        _error(exception:method_error(_temp140, "squish"))
      end

      elseif _temp140 == nil then
        _error(exception:null_error("_temp140", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp140))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp51,_temp143)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp51,_temp143)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp51,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp51,_temp143)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("default_args")

_temp51 = string:new("default_arg")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp127 =  maybe(_self, _temp75)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp127 =  _self:maybe(_temp75)
      elseif _self.maybe ~= nil then
        _temp127 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp127 =  _self:no_undermethod(string:new("maybe") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp127 =  no_undermethod(_self, string:new("maybe") , _temp75)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp59 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp95 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp59 =  maybe(_self, _temp107)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp59 =  _self:maybe(_temp107)
      elseif _self.maybe ~= nil then
        _temp59 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("maybe") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("maybe") , _temp107)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp95 = string:new("default_args")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp111 =  seq(_self, _temp127,_temp75,_temp59,_temp107)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp111 =  _self:seq(_temp127,_temp75,_temp59,_temp107)
      elseif _self.seq ~= nil then
        _temp111 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("seq") , _temp127,_temp75,_temp59,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("seq") , _temp127,_temp75,_temp59,_temp107)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp51 =  kleene(_self, _temp111)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp51 =  _self:kleene(_temp111)
      elseif _self.kleene ~= nil then
        _temp51 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("kleene") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("kleene") , _temp111)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp4 =  seq(_self, _temp143,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp4 =  _self:seq(_temp143,_temp51)
      elseif _self.seq ~= nil then
        _temp4 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("seq") , _temp143,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("seq") , _temp143,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("default_arg")

_temp111 = string:new("arg_var")

_temp59 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp143 =  label(_self, _temp111,_temp107)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp143 =  _self:label(_temp111,_temp107)
      elseif _self.label ~= nil then
        _temp143 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("label") , _temp111,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("label") , _temp111,_temp107)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp111 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp111 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp111 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp75 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp127 = string:new("arg_val")

_temp135 = string:new("default_arg_rhs_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp135)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp135)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp135)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp135)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp75 =  label(_self, _temp127,_temp95)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp75 =  _self:label(_temp127,_temp95)
      elseif _self.label ~= nil then
        _temp75 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("label") , _temp127,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("label") , _temp127,_temp95)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp51 =  seq(_self, _temp143,_temp107,_temp111,_temp59,_temp75)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp51 =  _self:seq(_temp143,_temp107,_temp111,_temp59,_temp75)
      elseif _self.seq ~= nil then
        _temp51 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("seq") , _temp143,_temp107,_temp111,_temp59,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("seq") , _temp143,_temp107,_temp111,_temp59,_temp75)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp147 = function (_self)

local _temp144 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp144 =  _self:my()
      elseif _self.my ~= nil then
        _temp144 =  _self.my

        elseif my ~= nil then
          _temp144 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp145 = nil
    if _type(default_underarg) == "function" or (_type(default_underarg) == "table" and _rawget(default_underarg, "__call_thing")) then
      _temp145 =  default_underarg(_self)

    elseif default_underarg then
      _temp145 =  default_underarg
    else
            if _type(_self.default_underarg) == "function" or (_type(_self.default_underarg) == "table" and _rawget(_self.default_underarg, "__call_thing")) then
        _temp145 =  _self:default_underarg()
      elseif _self.default_underarg ~= nil then
        _temp145 =  _self.default_underarg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp145 =  _self:no_undermethod(string:new("default_arg"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp145 =  no_undermethod(_self, string:new("default_arg"))
      else
        _error(exception:name_error("default_arg"))
      end
    end

      local _t = _type(_temp144)
      if _t == "table" then
                      if _type(_temp144.squish) == "function" or (_type(_temp144.squish) == "table" and _rawget(_temp144.squish, "__call_thing")) then
        return _temp144:squish(_temp145)
      elseif _temp144.squish ~= nil then
        return _temp144.squish

        elseif _temp144.no_undermethod ~= nil then
          return  _temp144:no_undermethod(string:new("squish") , _temp145)
        else
          _error(exception:method_error(_temp144, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp144)
      if _n.squish ~= nil then
        return _n:squish(_temp145)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp145)
      else
        _error(exception:method_error(_temp144, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp144)
      if _f.squish ~= nil then
        return _f:squish(_temp145)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp145)
      else
        _error(exception:method_error(_temp144, "squish"))
      end

      elseif _temp144 == nil then
        _error(exception:null_error("_temp144", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp144))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp51,_temp147)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp51,_temp147)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp51,_temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp51,_temp147)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("default_arg_rhs_expression")

_temp51 = string:new("index_get")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp147 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp147 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp147 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp111 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp143 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp95 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp127 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp127)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp127)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp127)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp147,_temp51,_temp75,_temp59,_temp111,_temp107,_temp143,_temp95)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp147,_temp51,_temp75,_temp59,_temp111,_temp107,_temp143,_temp95)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp147,_temp51,_temp75,_temp59,_temp111,_temp107,_temp143,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp147,_temp51,_temp75,_temp59,_temp111,_temp107,_temp143,_temp95)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("variable_args")

_temp107 = string:new("*")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp143 =  str(_self, _temp107)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp143 =  _self:str(_temp107)
      elseif _self.str ~= nil then
        _temp143 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("str") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("str") , _temp107)
      else
        _error(exception:name_error("str"))
      end
    end

_temp111 = string:new("arg_var")

_temp75 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp107 =  label(_self, _temp111,_temp59)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp107 =  _self:label(_temp111,_temp59)
      elseif _self.label ~= nil then
        _temp107 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("label") , _temp111,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("label") , _temp111,_temp59)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp143,_temp107)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp143,_temp107)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp143,_temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp143,_temp107)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp151 = function (_self)

local _temp148 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp148 =  _self:my()
      elseif _self.my ~= nil then
        _temp148 =  _self.my

        elseif my ~= nil then
          _temp148 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp149 = nil
    if _type(variable_underargs) == "function" or (_type(variable_underargs) == "table" and _rawget(variable_underargs, "__call_thing")) then
      _temp149 =  variable_underargs(_self)

    elseif variable_underargs then
      _temp149 =  variable_underargs
    else
            if _type(_self.variable_underargs) == "function" or (_type(_self.variable_underargs) == "table" and _rawget(_self.variable_underargs, "__call_thing")) then
        _temp149 =  _self:variable_underargs()
      elseif _self.variable_underargs ~= nil then
        _temp149 =  _self.variable_underargs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp149 =  _self:no_undermethod(string:new("variable_args"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp149 =  no_undermethod(_self, string:new("variable_args"))
      else
        _error(exception:name_error("variable_args"))
      end
    end

      local _t = _type(_temp148)
      if _t == "table" then
                      if _type(_temp148.squish) == "function" or (_type(_temp148.squish) == "table" and _rawget(_temp148.squish, "__call_thing")) then
        return _temp148:squish(_temp149)
      elseif _temp148.squish ~= nil then
        return _temp148.squish

        elseif _temp148.no_undermethod ~= nil then
          return  _temp148:no_undermethod(string:new("squish") , _temp149)
        else
          _error(exception:method_error(_temp148, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp148)
      if _n.squish ~= nil then
        return _n:squish(_temp149)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp149)
      else
        _error(exception:method_error(_temp148, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp148)
      if _f.squish ~= nil then
        return _f:squish(_temp149)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp149)
      else
        _error(exception:method_error(_temp148, "squish"))
      end

      elseif _temp148 == nil then
        _error(exception:null_error("_temp148", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp148))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp95,_temp151)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp95,_temp151)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp95,_temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp95,_temp151)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("unary_operation")

_temp59 = string:new("-")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp143 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp143 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp143 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

_temp111 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp107 =  seq(_self, _temp143,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp107 =  _self:seq(_temp143,_temp59)
      elseif _self.seq ~= nil then
        _temp107 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("seq") , _temp143,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("seq") , _temp143,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp95 =  no(_self, _temp107)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp95 =  _self:no(_temp107)
      elseif _self.no ~= nil then
        _temp95 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("no") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("no") , _temp107)
      else
        _error(exception:name_error("no"))
      end
    end

_temp59 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp59 =  no(_self, _temp143)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp59 =  _self:no(_temp143)
      elseif _self.no ~= nil then
        _temp59 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("no") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("no") , _temp143)
      else
        _error(exception:name_error("no"))
      end
    end

_temp111 = string:new("unary_rhs_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp151 =  seq(_self, _temp95,_temp107,_temp59,_temp143)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp151 =  _self:seq(_temp95,_temp107,_temp59,_temp143)
      elseif _self.seq ~= nil then
        _temp151 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("seq") , _temp95,_temp107,_temp59,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("seq") , _temp95,_temp107,_temp59,_temp143)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp155 = function (_self)

local _temp152 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp152 =  _self:my()
      elseif _self.my ~= nil then
        _temp152 =  _self.my

        elseif my ~= nil then
          _temp152 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp153 = nil
    if _type(unary_underop) == "function" or (_type(unary_underop) == "table" and _rawget(unary_underop, "__call_thing")) then
      _temp153 =  unary_underop(_self)

    elseif unary_underop then
      _temp153 =  unary_underop
    else
            if _type(_self.unary_underop) == "function" or (_type(_self.unary_underop) == "table" and _rawget(_self.unary_underop, "__call_thing")) then
        _temp153 =  _self:unary_underop()
      elseif _self.unary_underop ~= nil then
        _temp153 =  _self.unary_underop

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp153 =  _self:no_undermethod(string:new("unary_op"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp153 =  no_undermethod(_self, string:new("unary_op"))
      else
        _error(exception:name_error("unary_op"))
      end
    end

      local _t = _type(_temp152)
      if _t == "table" then
                      if _type(_temp152.squish) == "function" or (_type(_temp152.squish) == "table" and _rawget(_temp152.squish, "__call_thing")) then
        return _temp152:squish(_temp153)
      elseif _temp152.squish ~= nil then
        return _temp152.squish

        elseif _temp152.no_undermethod ~= nil then
          return  _temp152:no_undermethod(string:new("squish") , _temp153)
        else
          _error(exception:method_error(_temp152, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp152)
      if _n.squish ~= nil then
        return _n:squish(_temp153)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp153)
      else
        _error(exception:method_error(_temp152, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp152)
      if _f.squish ~= nil then
        return _f:squish(_temp153)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp153)
      else
        _error(exception:method_error(_temp152, "squish"))
      end

      elseif _temp152 == nil then
        _error(exception:null_error("_temp152", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp152))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp151,_temp155)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp151,_temp155)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp151,_temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp151,_temp155)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("unary_rhs_expression")

_temp151 = string:new("index_get")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp155 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp155 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp155 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp143 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp151 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp151 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp151 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp95 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp111 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("regex")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp155,_temp151,_temp143,_temp59,_temp107,_temp95,_temp111,_temp75)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp155,_temp151,_temp143,_temp59,_temp107,_temp95,_temp111,_temp75)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp155,_temp151,_temp143,_temp59,_temp107,_temp95,_temp111,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp155,_temp151,_temp143,_temp59,_temp107,_temp95,_temp111,_temp75)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("binary_operation")

_temp95 = string:new("binary_operation_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp75 =  seq(_self, _temp111,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp75 =  _self:seq(_temp111,_temp95)
      elseif _self.seq ~= nil then
        _temp75 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("seq") , _temp111,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("seq") , _temp111,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp159 = function (_self)

local _temp156 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp156 =  _self:my()
      elseif _self.my ~= nil then
        _temp156 =  _self.my

        elseif my ~= nil then
          _temp156 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp157 = nil
    if _type(binary_underop) == "function" or (_type(binary_underop) == "table" and _rawget(binary_underop, "__call_thing")) then
      _temp157 =  binary_underop(_self)

    elseif binary_underop then
      _temp157 =  binary_underop
    else
            if _type(_self.binary_underop) == "function" or (_type(_self.binary_underop) == "table" and _rawget(_self.binary_underop, "__call_thing")) then
        _temp157 =  _self:binary_underop()
      elseif _self.binary_underop ~= nil then
        _temp157 =  _self.binary_underop

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp157 =  _self:no_undermethod(string:new("binary_op"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp157 =  no_undermethod(_self, string:new("binary_op"))
      else
        _error(exception:name_error("binary_op"))
      end
    end

      local _t = _type(_temp156)
      if _t == "table" then
                      if _type(_temp156.squish) == "function" or (_type(_temp156.squish) == "table" and _rawget(_temp156.squish, "__call_thing")) then
        return _temp156:squish(_temp157)
      elseif _temp156.squish ~= nil then
        return _temp156.squish

        elseif _temp156.no_undermethod ~= nil then
          return  _temp156:no_undermethod(string:new("squish") , _temp157)
        else
          _error(exception:method_error(_temp156, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp156)
      if _n.squish ~= nil then
        return _n:squish(_temp157)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp157)
      else
        _error(exception:method_error(_temp156, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp156)
      if _f.squish ~= nil then
        return _f:squish(_temp157)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp157)
      else
        _error(exception:method_error(_temp156, "squish"))
      end

      elseif _temp156 == nil then
        _error(exception:null_error("_temp156", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp156))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp75,_temp159)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp75,_temp159)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp75,_temp159)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp75,_temp159)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("binary_operation_chain")

_temp111 = string:new("binary_lhs_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp155 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp155 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp155 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp151 =  maybe(_self, _temp155)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp151 =  _self:maybe(_temp155)
      elseif _self.maybe ~= nil then
        _temp151 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("maybe") , _temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("maybe") , _temp155)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp51 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp155 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp155 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp155 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp127 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp147 =  ref(_self, _temp127)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp147 =  _self:ref(_temp127)
      elseif _self.ref ~= nil then
        _temp147 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("ref") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("ref") , _temp127)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp51 =  maybe(_self, _temp147)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp51 =  _self:maybe(_temp147)
      elseif _self.maybe ~= nil then
        _temp51 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("maybe") , _temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("maybe") , _temp147)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp143 =  seq(_self, _temp151,_temp155,_temp51)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp143 =  _self:seq(_temp151,_temp155,_temp51)
      elseif _self.seq ~= nil then
        _temp143 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("seq") , _temp151,_temp155,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("seq") , _temp151,_temp155,_temp51)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp155 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp155)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp155)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp155)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp59 =  any(_self, _temp143,_temp51)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp59 =  _self:any(_temp143,_temp51)
      elseif _self.any ~= nil then
        _temp59 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("any") , _temp143,_temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("any") , _temp143,_temp51)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp75 =  seq(_self, _temp95,_temp111,_temp107,_temp59)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp75 =  _self:seq(_temp95,_temp111,_temp107,_temp59)
      elseif _self.seq ~= nil then
        _temp75 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("seq") , _temp95,_temp111,_temp107,_temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("seq") , _temp95,_temp111,_temp107,_temp59)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp159 =  many(_self, _temp75)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp159 =  _self:many(_temp75)
      elseif _self.many ~= nil then
        _temp159 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp159 =  _self:no_undermethod(string:new("many") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp159 =  no_undermethod(_self, string:new("many") , _temp75)
      else
        _error(exception:name_error("many"))
      end
    end

local _temp163 = function (_self)

local _temp160 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp160 =  _self:my()
      elseif _self.my ~= nil then
        _temp160 =  _self.my

        elseif my ~= nil then
          _temp160 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp161 = nil
    if _type(binary_underop_underchain) == "function" or (_type(binary_underop_underchain) == "table" and _rawget(binary_underop_underchain, "__call_thing")) then
      _temp161 =  binary_underop_underchain(_self)

    elseif binary_underop_underchain then
      _temp161 =  binary_underop_underchain
    else
            if _type(_self.binary_underop_underchain) == "function" or (_type(_self.binary_underop_underchain) == "table" and _rawget(_self.binary_underop_underchain, "__call_thing")) then
        _temp161 =  _self:binary_underop_underchain()
      elseif _self.binary_underop_underchain ~= nil then
        _temp161 =  _self.binary_underop_underchain

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp161 =  _self:no_undermethod(string:new("binary_op_chain"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp161 =  no_undermethod(_self, string:new("binary_op_chain"))
      else
        _error(exception:name_error("binary_op_chain"))
      end
    end

      local _t = _type(_temp160)
      if _t == "table" then
                      if _type(_temp160.squish) == "function" or (_type(_temp160.squish) == "table" and _rawget(_temp160.squish, "__call_thing")) then
        return _temp160:squish(_temp161)
      elseif _temp160.squish ~= nil then
        return _temp160.squish

        elseif _temp160.no_undermethod ~= nil then
          return  _temp160:no_undermethod(string:new("squish") , _temp161)
        else
          _error(exception:method_error(_temp160, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp160)
      if _n.squish ~= nil then
        return _n:squish(_temp161)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp161)
      else
        _error(exception:method_error(_temp160, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp160)
      if _f.squish ~= nil then
        return _f:squish(_temp161)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp161)
      else
        _error(exception:method_error(_temp160, "squish"))
      end

      elseif _temp160 == nil then
        _error(exception:null_error("_temp160", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp160))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp159,_temp163)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp159,_temp163)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp159,_temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp159,_temp163)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("binary_lhs_expression")

_temp159 = string:new("simple_method_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp163 =  ref(_self, _temp159)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp163 =  _self:ref(_temp159)
      elseif _self.ref ~= nil then
        _temp163 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("ref") , _temp159)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("ref") , _temp159)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp75 = string:new("index_get")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp159 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp159 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp159 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp159 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp159 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp59 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp75 =  ref(_self, _temp59)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp75 =  _self:ref(_temp59)
      elseif _self.ref ~= nil then
        _temp75 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("ref") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("ref") , _temp59)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp107 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp111 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp107 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp107 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp107 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp95 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp51 = string:new("regex")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp51)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp51)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp51)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp51)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp143 = string:new("unary_operation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp51 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp51 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp51 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp155 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp155)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp155)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp155)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp151 = string:new("method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp155 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp155 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp155 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp163,_temp159,_temp75,_temp59,_temp107,_temp111,_temp95,_temp51,_temp143,_temp155)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp163,_temp159,_temp75,_temp59,_temp107,_temp111,_temp95,_temp51,_temp143,_temp155)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp163,_temp159,_temp75,_temp59,_temp107,_temp111,_temp95,_temp51,_temp143,_temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp163,_temp159,_temp75,_temp59,_temp107,_temp111,_temp95,_temp51,_temp143,_temp155)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("identifier")

local _temp155 = regex:new("[a-zA-Z](?:(?!->)[a-zA-Z0-9_!?\\-*+^&@~\\/\\\\><$%])*")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp3 =  reg(_self, _temp155)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp3 =  _self:reg(_temp155)
      elseif _self.reg ~= nil then
        _temp3 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("reg") , _temp155)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("reg") , _temp155)
      else
        _error(exception:name_error("reg"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("operator")

_temp95 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp95)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp95)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp95)
      else
        _error(exception:name_error("str"))
      end
    end

_temp107 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp107)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp107)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp107)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp95 =  no(_self, _temp111)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp95 =  _self:no(_temp111)
      elseif _self.no ~= nil then
        _temp95 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("no") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("no") , _temp111)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp143 =  seq(_self, _temp51,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp143 =  _self:seq(_temp51,_temp95)
      elseif _self.seq ~= nil then
        _temp143 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("seq") , _temp51,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("seq") , _temp51,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp155 =  no(_self, _temp143)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp155 =  _self:no(_temp143)
      elseif _self.no ~= nil then
        _temp155 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("no") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("no") , _temp143)
      else
        _error(exception:name_error("no"))
      end
    end

_temp111 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

_temp75 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp59 =  ref(_self, _temp75)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp59 =  _self:ref(_temp75)
      elseif _self.ref ~= nil then
        _temp59 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("ref") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("ref") , _temp75)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp159 = string:new("=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp159)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp159)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp159)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp159)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp107 =  any(_self, _temp59,_temp75)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp107 =  _self:any(_temp59,_temp75)
      elseif _self.any ~= nil then
        _temp107 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("any") , _temp59,_temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("any") , _temp59,_temp75)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp111 =  no(_self, _temp107)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp111 =  _self:no(_temp107)
      elseif _self.no ~= nil then
        _temp111 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("no") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("no") , _temp107)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp51,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp51,_temp111)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp51,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp51,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp143 =  no(_self, _temp95)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp143 =  _self:no(_temp95)
      elseif _self.no ~= nil then
        _temp143 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("no") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("no") , _temp95)
      else
        _error(exception:name_error("no"))
      end
    end

_temp107 = string:new("!=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp51 =  str(_self, _temp107)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp51 =  _self:str(_temp107)
      elseif _self.str ~= nil then
        _temp51 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp51 =  _self:no_undermethod(string:new("str") , _temp107)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp51 =  no_undermethod(_self, string:new("str") , _temp107)
      else
        _error(exception:name_error("str"))
      end
    end

_temp75 = string:new(">=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp107 =  str(_self, _temp75)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp107 =  _self:str(_temp75)
      elseif _self.str ~= nil then
        _temp107 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp107 =  _self:no_undermethod(string:new("str") , _temp75)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp107 =  no_undermethod(_self, string:new("str") , _temp75)
      else
        _error(exception:name_error("str"))
      end
    end

_temp59 = string:new("<=")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp75 =  str(_self, _temp59)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp75 =  _self:str(_temp59)
      elseif _self.str ~= nil then
        _temp75 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp75 =  _self:no_undermethod(string:new("str") , _temp59)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp75 =  no_undermethod(_self, string:new("str") , _temp59)
      else
        _error(exception:name_error("str"))
      end
    end

local _temp159 = regex:new("[!?\\-*+^@~\\/\\\\><$_%\\=]")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp59 =  reg(_self, _temp159)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp59 =  _self:reg(_temp159)
      elseif _self.reg ~= nil then
        _temp59 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp59 =  _self:no_undermethod(string:new("reg") , _temp159)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp59 =  no_undermethod(_self, string:new("reg") , _temp159)
      else
        _error(exception:name_error("reg"))
      end
    end

_temp163 = string:new("||")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp159 =  str(_self, _temp163)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp159 =  _self:str(_temp163)
      elseif _self.str ~= nil then
        _temp159 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp159 =  _self:no_undermethod(string:new("str") , _temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp159 =  no_undermethod(_self, string:new("str") , _temp163)
      else
        _error(exception:name_error("str"))
      end
    end

_temp151 = string:new("|")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp163 =  str(_self, _temp151)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp163 =  _self:str(_temp151)
      elseif _self.str ~= nil then
        _temp163 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("str") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("str") , _temp151)
      else
        _error(exception:name_error("str"))
      end
    end

_temp147 = string:new("&&")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp151 =  str(_self, _temp147)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp151 =  _self:str(_temp147)
      elseif _self.str ~= nil then
        _temp151 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("str") , _temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("str") , _temp147)
      else
        _error(exception:name_error("str"))
      end
    end

_temp127 = string:new("&")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp147 =  str(_self, _temp127)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp147 =  _self:str(_temp127)
      elseif _self.str ~= nil then
        _temp147 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("str") , _temp127)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("str") , _temp127)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp111 =  any(_self, _temp51,_temp107,_temp75,_temp59,_temp159,_temp163,_temp151,_temp147)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp111 =  _self:any(_temp51,_temp107,_temp75,_temp59,_temp159,_temp163,_temp151,_temp147)
      elseif _self.any ~= nil then
        _temp111 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("any") , _temp51,_temp107,_temp75,_temp59,_temp159,_temp163,_temp151,_temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("any") , _temp51,_temp107,_temp75,_temp59,_temp159,_temp163,_temp151,_temp147)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp95 =  many(_self, _temp111)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp95 =  _self:many(_temp111)
      elseif _self.many ~= nil then
        _temp95 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("many") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("many") , _temp111)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp4 =  seq(_self, _temp155,_temp143,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp4 =  _self:seq(_temp155,_temp143,_temp95)
      elseif _self.seq ~= nil then
        _temp4 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("seq") , _temp155,_temp143,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("seq") , _temp155,_temp143,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("method_invocation")

_temp111 = string:new("method_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp155 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp155 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp155 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp155 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp155 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp151 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp147 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp147 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp147 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp163 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp151 =  ref(_self, _temp163)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp151 =  _self:ref(_temp163)
      elseif _self.ref ~= nil then
        _temp151 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("ref") , _temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("ref") , _temp163)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp111 =  any(_self, _temp147,_temp151)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp111 =  _self:any(_temp147,_temp151)
      elseif _self.any ~= nil then
        _temp111 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("any") , _temp147,_temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("any") , _temp147,_temp151)
      else
        _error(exception:name_error("any"))
      end
    end

_temp147 = string:new("arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp151 =  ref(_self, _temp147)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp151 =  _self:ref(_temp147)
      elseif _self.ref ~= nil then
        _temp151 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("ref") , _temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("ref") , _temp147)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp143 =  seq(_self, _temp155,_temp111,_temp151)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp143 =  _self:seq(_temp155,_temp111,_temp151)
      elseif _self.seq ~= nil then
        _temp143 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("seq") , _temp155,_temp111,_temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("seq") , _temp155,_temp111,_temp151)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp167 = function (_self)

local _temp164 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp164 =  _self:my()
      elseif _self.my ~= nil then
        _temp164 =  _self.my

        elseif my ~= nil then
          _temp164 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp165 = nil
    if _type(chain_undercall) == "function" or (_type(chain_undercall) == "table" and _rawget(chain_undercall, "__call_thing")) then
      _temp165 =  chain_undercall(_self)

    elseif chain_undercall then
      _temp165 =  chain_undercall
    else
            if _type(_self.chain_undercall) == "function" or (_type(_self.chain_undercall) == "table" and _rawget(_self.chain_undercall, "__call_thing")) then
        _temp165 =  _self:chain_undercall()
      elseif _self.chain_undercall ~= nil then
        _temp165 =  _self.chain_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp165 =  _self:no_undermethod(string:new("chain_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp165 =  no_undermethod(_self, string:new("chain_call"))
      else
        _error(exception:name_error("chain_call"))
      end
    end

      local _t = _type(_temp164)
      if _t == "table" then
                      if _type(_temp164.squish) == "function" or (_type(_temp164.squish) == "table" and _rawget(_temp164.squish, "__call_thing")) then
        return _temp164:squish(_temp165)
      elseif _temp164.squish ~= nil then
        return _temp164.squish

        elseif _temp164.no_undermethod ~= nil then
          return  _temp164:no_undermethod(string:new("squish") , _temp165)
        else
          _error(exception:method_error(_temp164, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp164)
      if _n.squish ~= nil then
        return _n:squish(_temp165)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp165)
      else
        _error(exception:method_error(_temp164, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp164)
      if _f.squish ~= nil then
        return _f:squish(_temp165)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp165)
      else
        _error(exception:method_error(_temp164, "squish"))
      end

      elseif _temp164 == nil then
        _error(exception:null_error("_temp164", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp164))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp95 =  action(_self, _temp143,_temp167)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp95 =  _self:action(_temp143,_temp167)
      elseif _self.action ~= nil then
        _temp95 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("action") , _temp143,_temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("action") , _temp143,_temp167)
      else
        _error(exception:name_error("action"))
      end
    end

_temp143 = string:new("simple_method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp155 = string:new("m_name")

_temp163 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp147 =  ref(_self, _temp163)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp147 =  _self:ref(_temp163)
      elseif _self.ref ~= nil then
        _temp147 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("ref") , _temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("ref") , _temp163)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp111 =  label(_self, _temp155,_temp147)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp111 =  _self:label(_temp155,_temp147)
      elseif _self.label ~= nil then
        _temp111 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("label") , _temp155,_temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("label") , _temp155,_temp147)
      else
        _error(exception:name_error("label"))
      end
    end

_temp155 = string:new("alist")

_temp159 = string:new("arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp163 =  ref(_self, _temp159)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp163 =  _self:ref(_temp159)
      elseif _self.ref ~= nil then
        _temp163 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp163 =  _self:no_undermethod(string:new("ref") , _temp159)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp163 =  no_undermethod(_self, string:new("ref") , _temp159)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp147 =  label(_self, _temp155,_temp163)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp147 =  _self:label(_temp155,_temp163)
      elseif _self.label ~= nil then
        _temp147 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("label") , _temp155,_temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("label") , _temp155,_temp163)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp151 =  seq(_self, _temp111,_temp147)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp151 =  _self:seq(_temp111,_temp147)
      elseif _self.seq ~= nil then
        _temp151 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("seq") , _temp111,_temp147)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("seq") , _temp111,_temp147)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp171 = function (_self)

local _temp168 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp168 =  _self:my()
      elseif _self.my ~= nil then
        _temp168 =  _self.my

        elseif my ~= nil then
          _temp168 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp169 = nil
    if _type(simple_undercall) == "function" or (_type(simple_undercall) == "table" and _rawget(simple_undercall, "__call_thing")) then
      _temp169 =  simple_undercall(_self)

    elseif simple_undercall then
      _temp169 =  simple_undercall
    else
            if _type(_self.simple_undercall) == "function" or (_type(_self.simple_undercall) == "table" and _rawget(_self.simple_undercall, "__call_thing")) then
        _temp169 =  _self:simple_undercall()
      elseif _self.simple_undercall ~= nil then
        _temp169 =  _self.simple_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp169 =  _self:no_undermethod(string:new("simple_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp169 =  no_undermethod(_self, string:new("simple_call"))
      else
        _error(exception:name_error("simple_call"))
      end
    end

      local _t = _type(_temp168)
      if _t == "table" then
                      if _type(_temp168.squish) == "function" or (_type(_temp168.squish) == "table" and _rawget(_temp168.squish, "__call_thing")) then
        return _temp168:squish(_temp169)
      elseif _temp168.squish ~= nil then
        return _temp168.squish

        elseif _temp168.no_undermethod ~= nil then
          return  _temp168:no_undermethod(string:new("squish") , _temp169)
        else
          _error(exception:method_error(_temp168, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp168)
      if _n.squish ~= nil then
        return _n:squish(_temp169)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp169)
      else
        _error(exception:method_error(_temp168, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp168)
      if _f.squish ~= nil then
        return _f:squish(_temp169)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp169)
      else
        _error(exception:method_error(_temp168, "squish"))
      end

      elseif _temp168 == nil then
        _error(exception:null_error("_temp168", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp168))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp143 =  action(_self, _temp151,_temp171)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp143 =  _self:action(_temp151,_temp171)
      elseif _self.action ~= nil then
        _temp143 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("action") , _temp151,_temp171)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("action") , _temp151,_temp171)
      else
        _error(exception:name_error("action"))
      end
    end

_temp111 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp147 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp147 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp147 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp147 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp147 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp163 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp111 =  ref(_self, _temp163)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp111 =  _self:ref(_temp163)
      elseif _self.ref ~= nil then
        _temp111 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp111 =  _self:no_undermethod(string:new("ref") , _temp163)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp111 =  no_undermethod(_self, string:new("ref") , _temp163)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp151 =  seq(_self, _temp147,_temp111)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp151 =  _self:seq(_temp147,_temp111)
      elseif _self.seq ~= nil then
        _temp151 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("seq") , _temp147,_temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("seq") , _temp147,_temp111)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp175 = function (_self)

local _temp172 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp172 =  _self:my()
      elseif _self.my ~= nil then
        _temp172 =  _self.my

        elseif my ~= nil then
          _temp172 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp173 = nil
    if _type(paren_undercall) == "function" or (_type(paren_undercall) == "table" and _rawget(paren_undercall, "__call_thing")) then
      _temp173 =  paren_undercall(_self)

    elseif paren_undercall then
      _temp173 =  paren_undercall
    else
            if _type(_self.paren_undercall) == "function" or (_type(_self.paren_undercall) == "table" and _rawget(_self.paren_undercall, "__call_thing")) then
        _temp173 =  _self:paren_undercall()
      elseif _self.paren_undercall ~= nil then
        _temp173 =  _self.paren_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp173 =  _self:no_undermethod(string:new("paren_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp173 =  no_undermethod(_self, string:new("paren_call"))
      else
        _error(exception:name_error("paren_call"))
      end
    end

      local _t = _type(_temp172)
      if _t == "table" then
                      if _type(_temp172.squish) == "function" or (_type(_temp172.squish) == "table" and _rawget(_temp172.squish, "__call_thing")) then
        return _temp172:squish(_temp173)
      elseif _temp172.squish ~= nil then
        return _temp172.squish

        elseif _temp172.no_undermethod ~= nil then
          return  _temp172:no_undermethod(string:new("squish") , _temp173)
        else
          _error(exception:method_error(_temp172, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp172)
      if _n.squish ~= nil then
        return _n:squish(_temp173)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp173)
      else
        _error(exception:method_error(_temp172, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp172)
      if _f.squish ~= nil then
        return _f:squish(_temp173)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp173)
      else
        _error(exception:method_error(_temp172, "squish"))
      end

      elseif _temp172 == nil then
        _error(exception:null_error("_temp172", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp172))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp171 =  action(_self, _temp151,_temp175)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp171 =  _self:action(_temp151,_temp175)
      elseif _self.action ~= nil then
        _temp171 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("action") , _temp151,_temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("action") , _temp151,_temp175)
      else
        _error(exception:name_error("action"))
      end
    end

_temp151 = string:new("function_literal_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp175 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp175 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp175 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp95,_temp167,_temp143,_temp171,_temp175)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp95,_temp167,_temp143,_temp171,_temp175)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp95,_temp167,_temp143,_temp171,_temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp95,_temp167,_temp143,_temp171,_temp175)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("simple_method_invocation")

_temp143 = string:new("m_name")

_temp95 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp171 =  label(_self, _temp143,_temp167)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp171 =  _self:label(_temp143,_temp167)
      elseif _self.label ~= nil then
        _temp171 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("label") , _temp143,_temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("label") , _temp143,_temp167)
      else
        _error(exception:name_error("label"))
      end
    end

_temp143 = string:new("alist")

_temp151 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp167 =  label(_self, _temp143,_temp95)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp167 =  _self:label(_temp143,_temp95)
      elseif _self.label ~= nil then
        _temp167 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("label") , _temp143,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("label") , _temp143,_temp95)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp175 =  seq(_self, _temp171,_temp167)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp175 =  _self:seq(_temp171,_temp167)
      elseif _self.seq ~= nil then
        _temp175 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("seq") , _temp171,_temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("seq") , _temp171,_temp167)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp179 = function (_self)

local _temp176 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp176 =  _self:my()
      elseif _self.my ~= nil then
        _temp176 =  _self.my

        elseif my ~= nil then
          _temp176 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp177 = nil
    if _type(simpler_undercall) == "function" or (_type(simpler_undercall) == "table" and _rawget(simpler_undercall, "__call_thing")) then
      _temp177 =  simpler_undercall(_self)

    elseif simpler_undercall then
      _temp177 =  simpler_undercall
    else
            if _type(_self.simpler_undercall) == "function" or (_type(_self.simpler_undercall) == "table" and _rawget(_self.simpler_undercall, "__call_thing")) then
        _temp177 =  _self:simpler_undercall()
      elseif _self.simpler_undercall ~= nil then
        _temp177 =  _self.simpler_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp177 =  _self:no_undermethod(string:new("simpler_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp177 =  no_undermethod(_self, string:new("simpler_call"))
      else
        _error(exception:name_error("simpler_call"))
      end
    end

      local _t = _type(_temp176)
      if _t == "table" then
                      if _type(_temp176.squish) == "function" or (_type(_temp176.squish) == "table" and _rawget(_temp176.squish, "__call_thing")) then
        return _temp176:squish(_temp177)
      elseif _temp176.squish ~= nil then
        return _temp176.squish

        elseif _temp176.no_undermethod ~= nil then
          return  _temp176:no_undermethod(string:new("squish") , _temp177)
        else
          _error(exception:method_error(_temp176, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp176)
      if _n.squish ~= nil then
        return _n:squish(_temp177)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp177)
      else
        _error(exception:method_error(_temp176, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp176)
      if _f.squish ~= nil then
        return _f:squish(_temp177)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp177)
      else
        _error(exception:method_error(_temp176, "squish"))
      end

      elseif _temp176 == nil then
        _error(exception:null_error("_temp176", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp176))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp175,_temp179)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp175,_temp179)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp175,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp175,_temp179)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("simple_method_chain")

_temp171 = string:new("method_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp171)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp171)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp171)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp171)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp143 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp151 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp171 =  any(_self, _temp95,_temp143)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp171 =  _self:any(_temp95,_temp143)
      elseif _self.any ~= nil then
        _temp171 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("any") , _temp95,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("any") , _temp95,_temp143)
      else
        _error(exception:name_error("any"))
      end
    end

_temp95 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp175 =  seq(_self, _temp167,_temp171,_temp143)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp175 =  _self:seq(_temp167,_temp171,_temp143)
      elseif _self.seq ~= nil then
        _temp175 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("seq") , _temp167,_temp171,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("seq") , _temp167,_temp171,_temp143)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp183 = function (_self)

local _temp180 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp180 =  _self:my()
      elseif _self.my ~= nil then
        _temp180 =  _self.my

        elseif my ~= nil then
          _temp180 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp181 = nil
    if _type(chain_undercall) == "function" or (_type(chain_undercall) == "table" and _rawget(chain_undercall, "__call_thing")) then
      _temp181 =  chain_undercall(_self)

    elseif chain_undercall then
      _temp181 =  chain_undercall
    else
            if _type(_self.chain_undercall) == "function" or (_type(_self.chain_undercall) == "table" and _rawget(_self.chain_undercall, "__call_thing")) then
        _temp181 =  _self:chain_undercall()
      elseif _self.chain_undercall ~= nil then
        _temp181 =  _self.chain_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp181 =  _self:no_undermethod(string:new("chain_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp181 =  no_undermethod(_self, string:new("chain_call"))
      else
        _error(exception:name_error("chain_call"))
      end
    end

      local _t = _type(_temp180)
      if _t == "table" then
                      if _type(_temp180.squish) == "function" or (_type(_temp180.squish) == "table" and _rawget(_temp180.squish, "__call_thing")) then
        return _temp180:squish(_temp181)
      elseif _temp180.squish ~= nil then
        return _temp180.squish

        elseif _temp180.no_undermethod ~= nil then
          return  _temp180:no_undermethod(string:new("squish") , _temp181)
        else
          _error(exception:method_error(_temp180, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp180)
      if _n.squish ~= nil then
        return _n:squish(_temp181)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp181)
      else
        _error(exception:method_error(_temp180, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp180)
      if _f.squish ~= nil then
        return _f:squish(_temp181)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp181)
      else
        _error(exception:method_error(_temp180, "squish"))
      end

      elseif _temp180 == nil then
        _error(exception:null_error("_temp180", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp180))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp179 =  action(_self, _temp175,_temp183)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp179 =  _self:action(_temp175,_temp183)
      elseif _self.action ~= nil then
        _temp179 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("action") , _temp175,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("action") , _temp175,_temp183)
      else
        _error(exception:name_error("action"))
      end
    end

_temp171 = string:new("method_chain")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp171)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp171)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp171)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp171)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp95 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp151 = string:new("operator")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp171 =  any(_self, _temp167,_temp95)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp171 =  _self:any(_temp167,_temp95)
      elseif _self.any ~= nil then
        _temp171 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("any") , _temp167,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("any") , _temp167,_temp95)
      else
        _error(exception:name_error("any"))
      end
    end

_temp151 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(_and) == "function" or (_type(_and) == "table" and _rawget(_and, "__call_thing")) then
      _temp95 =  _and(_self, _temp167)

    elseif _and then
      _error(exception:new("Tried to invoke non-method: & (" .. object.__type(_and) .. ")"))
    else
            if _type(_self._and) == "function" or (_type(_self._and) == "table" and _rawget(_self._and, "__call_thing")) then
        _temp95 =  _self:_and(_temp167)
      elseif _self._and ~= nil then
        _temp95 =  _self._and

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("&") , _temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("&") , _temp167)
      else
        _error(exception:name_error("&"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp175 =  seq(_self, _temp143,_temp171,_temp95)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp175 =  _self:seq(_temp143,_temp171,_temp95)
      elseif _self.seq ~= nil then
        _temp175 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("seq") , _temp143,_temp171,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("seq") , _temp143,_temp171,_temp95)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp187 = function (_self)

local _temp184 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp184 =  _self:my()
      elseif _self.my ~= nil then
        _temp184 =  _self.my

        elseif my ~= nil then
          _temp184 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp185 = nil
    if _type(chain_undercall) == "function" or (_type(chain_undercall) == "table" and _rawget(chain_undercall, "__call_thing")) then
      _temp185 =  chain_undercall(_self)

    elseif chain_undercall then
      _temp185 =  chain_undercall
    else
            if _type(_self.chain_undercall) == "function" or (_type(_self.chain_undercall) == "table" and _rawget(_self.chain_undercall, "__call_thing")) then
        _temp185 =  _self:chain_undercall()
      elseif _self.chain_undercall ~= nil then
        _temp185 =  _self.chain_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp185 =  _self:no_undermethod(string:new("chain_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp185 =  no_undermethod(_self, string:new("chain_call"))
      else
        _error(exception:name_error("chain_call"))
      end
    end

      local _t = _type(_temp184)
      if _t == "table" then
                      if _type(_temp184.squish) == "function" or (_type(_temp184.squish) == "table" and _rawget(_temp184.squish, "__call_thing")) then
        return _temp184:squish(_temp185)
      elseif _temp184.squish ~= nil then
        return _temp184.squish

        elseif _temp184.no_undermethod ~= nil then
          return  _temp184:no_undermethod(string:new("squish") , _temp185)
        else
          _error(exception:method_error(_temp184, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp184)
      if _n.squish ~= nil then
        return _n:squish(_temp185)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp185)
      else
        _error(exception:method_error(_temp184, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp184)
      if _f.squish ~= nil then
        return _f:squish(_temp185)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp185)
      else
        _error(exception:method_error(_temp184, "squish"))
      end

      elseif _temp184 == nil then
        _error(exception:null_error("_temp184", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp184))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp183 =  action(_self, _temp175,_temp187)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp183 =  _self:action(_temp175,_temp187)
      elseif _self.action ~= nil then
        _temp183 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("action") , _temp175,_temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("action") , _temp175,_temp187)
      else
        _error(exception:name_error("action"))
      end
    end

_temp175 = string:new("simple_method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp187 =  ref(_self, _temp175)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp187 =  _self:ref(_temp175)
      elseif _self.ref ~= nil then
        _temp187 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("ref") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("ref") , _temp175)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp143 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp171 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp171 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp171 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp151 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp151)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp151)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp151)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(_and) == "function" or (_type(_and) == "table" and _rawget(_and, "__call_thing")) then
      _temp143 =  _and(_self, _temp167)

    elseif _and then
      _error(exception:new("Tried to invoke non-method: & (" .. object.__type(_and) .. ")"))
    else
            if _type(_self._and) == "function" or (_type(_self._and) == "table" and _rawget(_self._and, "__call_thing")) then
        _temp143 =  _self:_and(_temp167)
      elseif _self._and ~= nil then
        _temp143 =  _self._and

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("&") , _temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("&") , _temp167)
      else
        _error(exception:name_error("&"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp95 =  seq(_self, _temp171,_temp143)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp95 =  _self:seq(_temp171,_temp143)
      elseif _self.seq ~= nil then
        _temp95 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("seq") , _temp171,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("seq") , _temp171,_temp143)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp191 = function (_self)

local _temp188 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp188 =  _self:my()
      elseif _self.my ~= nil then
        _temp188 =  _self.my

        elseif my ~= nil then
          _temp188 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp189 = nil
    if _type(simplest_undercall) == "function" or (_type(simplest_undercall) == "table" and _rawget(simplest_undercall, "__call_thing")) then
      _temp189 =  simplest_undercall(_self)

    elseif simplest_undercall then
      _temp189 =  simplest_undercall
    else
            if _type(_self.simplest_undercall) == "function" or (_type(_self.simplest_undercall) == "table" and _rawget(_self.simplest_undercall, "__call_thing")) then
        _temp189 =  _self:simplest_undercall()
      elseif _self.simplest_undercall ~= nil then
        _temp189 =  _self.simplest_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp189 =  _self:no_undermethod(string:new("simplest_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp189 =  no_undermethod(_self, string:new("simplest_call"))
      else
        _error(exception:name_error("simplest_call"))
      end
    end

      local _t = _type(_temp188)
      if _t == "table" then
                      if _type(_temp188.squish) == "function" or (_type(_temp188.squish) == "table" and _rawget(_temp188.squish, "__call_thing")) then
        return _temp188:squish(_temp189)
      elseif _temp188.squish ~= nil then
        return _temp188.squish

        elseif _temp188.no_undermethod ~= nil then
          return  _temp188:no_undermethod(string:new("squish") , _temp189)
        else
          _error(exception:method_error(_temp188, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp188)
      if _n.squish ~= nil then
        return _n:squish(_temp189)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp189)
      else
        _error(exception:method_error(_temp188, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp188)
      if _f.squish ~= nil then
        return _f:squish(_temp189)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp189)
      else
        _error(exception:method_error(_temp188, "squish"))
      end

      elseif _temp188 == nil then
        _error(exception:null_error("_temp188", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp188))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp175 =  action(_self, _temp95,_temp191)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp175 =  _self:action(_temp95,_temp191)
      elseif _self.action ~= nil then
        _temp175 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("action") , _temp95,_temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("action") , _temp95,_temp191)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp179,_temp183,_temp187,_temp175)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp179,_temp183,_temp187,_temp175)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp179,_temp183,_temp187,_temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp179,_temp183,_temp187,_temp175)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("function_literal_invocation")

_temp183 = string:new("func")

_temp191 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp191)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp191)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp191)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp187 =  label(_self, _temp183,_temp179)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp187 =  _self:label(_temp183,_temp179)
      elseif _self.label ~= nil then
        _temp187 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("label") , _temp183,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("label") , _temp183,_temp179)
      else
        _error(exception:name_error("label"))
      end
    end

_temp183 = string:new("alist")

_temp95 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp191 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp191 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp191 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp179 =  label(_self, _temp183,_temp191)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp179 =  _self:label(_temp183,_temp191)
      elseif _self.label ~= nil then
        _temp179 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("label") , _temp183,_temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("label") , _temp183,_temp191)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp175 =  seq(_self, _temp187,_temp179)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp175 =  _self:seq(_temp187,_temp179)
      elseif _self.seq ~= nil then
        _temp175 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("seq") , _temp187,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("seq") , _temp187,_temp179)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp195 = function (_self)

local _temp192 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp192 =  _self:my()
      elseif _self.my ~= nil then
        _temp192 =  _self.my

        elseif my ~= nil then
          _temp192 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp193 = nil
    if _type(func_underlit_undercall) == "function" or (_type(func_underlit_undercall) == "table" and _rawget(func_underlit_undercall, "__call_thing")) then
      _temp193 =  func_underlit_undercall(_self)

    elseif func_underlit_undercall then
      _temp193 =  func_underlit_undercall
    else
            if _type(_self.func_underlit_undercall) == "function" or (_type(_self.func_underlit_undercall) == "table" and _rawget(_self.func_underlit_undercall, "__call_thing")) then
        _temp193 =  _self:func_underlit_undercall()
      elseif _self.func_underlit_undercall ~= nil then
        _temp193 =  _self.func_underlit_undercall

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp193 =  _self:no_undermethod(string:new("func_lit_call"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp193 =  no_undermethod(_self, string:new("func_lit_call"))
      else
        _error(exception:name_error("func_lit_call"))
      end
    end

      local _t = _type(_temp192)
      if _t == "table" then
                      if _type(_temp192.squish) == "function" or (_type(_temp192.squish) == "table" and _rawget(_temp192.squish, "__call_thing")) then
        return _temp192:squish(_temp193)
      elseif _temp192.squish ~= nil then
        return _temp192.squish

        elseif _temp192.no_undermethod ~= nil then
          return  _temp192:no_undermethod(string:new("squish") , _temp193)
        else
          _error(exception:method_error(_temp192, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp192)
      if _n.squish ~= nil then
        return _n:squish(_temp193)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp193)
      else
        _error(exception:method_error(_temp192, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp192)
      if _f.squish ~= nil then
        return _f:squish(_temp193)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp193)
      else
        _error(exception:method_error(_temp192, "squish"))
      end

      elseif _temp192 == nil then
        _error(exception:null_error("_temp192", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp192))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp175,_temp195)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp175,_temp195)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp175,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp175,_temp195)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("method_chain")

_temp187 = string:new("method_lhs")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp187)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp187)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp187)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp191 = string:new(".")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp187 =  str(_self, _temp191)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp187 =  _self:str(_temp191)
      elseif _self.str ~= nil then
        _temp187 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("str") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("str") , _temp191)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp175 =  seq(_self, _temp179,_temp187)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp175 =  _self:seq(_temp179,_temp187)
      elseif _self.seq ~= nil then
        _temp175 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("seq") , _temp179,_temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("seq") , _temp179,_temp187)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp195 =  many(_self, _temp175)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp195 =  _self:many(_temp175)
      elseif _self.many ~= nil then
        _temp195 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("many") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("many") , _temp175)
      else
        _error(exception:name_error("many"))
      end
    end

local _temp199 = function (_self)

local _temp196 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp196 =  _self:my()
      elseif _self.my ~= nil then
        _temp196 =  _self.my

        elseif my ~= nil then
          _temp196 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp197 = nil
    if _type(method_underchain) == "function" or (_type(method_underchain) == "table" and _rawget(method_underchain, "__call_thing")) then
      _temp197 =  method_underchain(_self)

    elseif method_underchain then
      _temp197 =  method_underchain
    else
            if _type(_self.method_underchain) == "function" or (_type(_self.method_underchain) == "table" and _rawget(_self.method_underchain, "__call_thing")) then
        _temp197 =  _self:method_underchain()
      elseif _self.method_underchain ~= nil then
        _temp197 =  _self.method_underchain

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp197 =  _self:no_undermethod(string:new("method_chain"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp197 =  no_undermethod(_self, string:new("method_chain"))
      else
        _error(exception:name_error("method_chain"))
      end
    end

      local _t = _type(_temp196)
      if _t == "table" then
                      if _type(_temp196.squish) == "function" or (_type(_temp196.squish) == "table" and _rawget(_temp196.squish, "__call_thing")) then
        return _temp196:squish(_temp197)
      elseif _temp196.squish ~= nil then
        return _temp196.squish

        elseif _temp196.no_undermethod ~= nil then
          return  _temp196:no_undermethod(string:new("squish") , _temp197)
        else
          _error(exception:method_error(_temp196, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp196)
      if _n.squish ~= nil then
        return _n:squish(_temp197)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp197)
      else
        _error(exception:method_error(_temp196, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp196)
      if _f.squish ~= nil then
        return _f:squish(_temp197)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp197)
      else
        _error(exception:method_error(_temp196, "squish"))
      end

      elseif _temp196 == nil then
        _error(exception:null_error("_temp196", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp196))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp195,_temp199)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp195,_temp199)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp195,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp195,_temp199)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("method_lhs")

_temp187 = string:new("var")

_temp191 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp191)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp191)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp191)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp175 =  label(_self, _temp187,_temp179)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp175 =  _self:label(_temp187,_temp179)
      elseif _self.label ~= nil then
        _temp175 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("label") , _temp187,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("label") , _temp187,_temp179)
      else
        _error(exception:name_error("label"))
      end
    end

_temp191 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp187 =  ref(_self, _temp191)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp187 =  _self:ref(_temp191)
      elseif _self.ref ~= nil then
        _temp187 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("ref") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("ref") , _temp191)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp179 =  no(_self, _temp187)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp179 =  _self:no(_temp187)
      elseif _self.no ~= nil then
        _temp179 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("no") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("no") , _temp187)
      else
        _error(exception:name_error("no"))
      end
    end

_temp191 = string:new("args")

_temp95 = string:new("arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp187 =  label(_self, _temp191,_temp183)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp187 =  _self:label(_temp191,_temp183)
      elseif _self.label ~= nil then
        _temp187 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("label") , _temp191,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("label") , _temp191,_temp183)
      else
        _error(exception:name_error("label"))
      end
    end

_temp143 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp95 =  str(_self, _temp143)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp95 =  _self:str(_temp143)
      elseif _self.str ~= nil then
        _temp95 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("str") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("str") , _temp143)
      else
        _error(exception:name_error("str"))
      end
    end

_temp167 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp171 =  ref(_self, _temp167)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp171 =  _self:ref(_temp167)
      elseif _self.ref ~= nil then
        _temp171 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("ref") , _temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("ref") , _temp167)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp143 =  maybe(_self, _temp171)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp143 =  _self:maybe(_temp171)
      elseif _self.maybe ~= nil then
        _temp143 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("maybe") , _temp171)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("maybe") , _temp171)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp167 = string:new("index_args")

_temp111 = string:new("inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp151 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp151 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp151 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp171 =  label(_self, _temp167,_temp151)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp171 =  _self:label(_temp167,_temp151)
      elseif _self.label ~= nil then
        _temp171 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("label") , _temp167,_temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("label") , _temp167,_temp151)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp167 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp167 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp167 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp151 =  maybe(_self, _temp167)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp151 =  _self:maybe(_temp167)
      elseif _self.maybe ~= nil then
        _temp151 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("maybe") , _temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("maybe") , _temp167)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp111 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp167 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp167 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp167 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp191 =  seq(_self, _temp95,_temp143,_temp171,_temp151,_temp167)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp191 =  _self:seq(_temp95,_temp143,_temp171,_temp151,_temp167)
      elseif _self.seq ~= nil then
        _temp191 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("seq") , _temp95,_temp143,_temp171,_temp151,_temp167)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("seq") , _temp95,_temp143,_temp171,_temp151,_temp167)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp183 =  kleene(_self, _temp191)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp183 =  _self:kleene(_temp191)
      elseif _self.kleene ~= nil then
        _temp183 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("kleene") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("kleene") , _temp191)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp175,_temp179,_temp187,_temp183)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp175,_temp179,_temp187,_temp183)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp175,_temp179,_temp187,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp175,_temp179,_temp187,_temp183)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp203 = function (_self)

local _temp200 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp200 =  _self:my()
      elseif _self.my ~= nil then
        _temp200 =  _self.my

        elseif my ~= nil then
          _temp200 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp201 = nil
    if _type(simple_undermeth_underlhs) == "function" or (_type(simple_undermeth_underlhs) == "table" and _rawget(simple_undermeth_underlhs, "__call_thing")) then
      _temp201 =  simple_undermeth_underlhs(_self)

    elseif simple_undermeth_underlhs then
      _temp201 =  simple_undermeth_underlhs
    else
            if _type(_self.simple_undermeth_underlhs) == "function" or (_type(_self.simple_undermeth_underlhs) == "table" and _rawget(_self.simple_undermeth_underlhs, "__call_thing")) then
        _temp201 =  _self:simple_undermeth_underlhs()
      elseif _self.simple_undermeth_underlhs ~= nil then
        _temp201 =  _self.simple_undermeth_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp201 =  _self:no_undermethod(string:new("simple_meth_lhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp201 =  no_undermethod(_self, string:new("simple_meth_lhs"))
      else
        _error(exception:name_error("simple_meth_lhs"))
      end
    end

      local _t = _type(_temp200)
      if _t == "table" then
                      if _type(_temp200.squish) == "function" or (_type(_temp200.squish) == "table" and _rawget(_temp200.squish, "__call_thing")) then
        return _temp200:squish(_temp201)
      elseif _temp200.squish ~= nil then
        return _temp200.squish

        elseif _temp200.no_undermethod ~= nil then
          return  _temp200:no_undermethod(string:new("squish") , _temp201)
        else
          _error(exception:method_error(_temp200, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp200)
      if _n.squish ~= nil then
        return _n:squish(_temp201)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp201)
      else
        _error(exception:method_error(_temp200, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp200)
      if _f.squish ~= nil then
        return _f:squish(_temp201)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp201)
      else
        _error(exception:method_error(_temp200, "squish"))
      end

      elseif _temp200 == nil then
        _error(exception:null_error("_temp200", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp200))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp199 =  action(_self, _temp195,_temp203)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp199 =  _self:action(_temp195,_temp203)
      elseif _self.action ~= nil then
        _temp199 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("action") , _temp195,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("action") , _temp195,_temp203)
      else
        _error(exception:name_error("action"))
      end
    end

_temp187 = string:new("target")

_temp175 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp175)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp175)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp175)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp183 =  label(_self, _temp187,_temp179)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp183 =  _self:label(_temp187,_temp179)
      elseif _self.label ~= nil then
        _temp183 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("label") , _temp187,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("label") , _temp187,_temp179)
      else
        _error(exception:name_error("label"))
      end
    end

_temp187 = string:new("indexes")

_temp151 = string:new("[")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp167 =  str(_self, _temp151)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp167 =  _self:str(_temp151)
      elseif _self.str ~= nil then
        _temp167 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp167 =  _self:no_undermethod(string:new("str") , _temp151)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp167 =  no_undermethod(_self, string:new("str") , _temp151)
      else
        _error(exception:name_error("str"))
      end
    end

_temp143 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp171 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp171 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp171 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp151 =  maybe(_self, _temp171)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp151 =  _self:maybe(_temp171)
      elseif _self.maybe ~= nil then
        _temp151 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp151 =  _self:no_undermethod(string:new("maybe") , _temp171)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp151 =  no_undermethod(_self, string:new("maybe") , _temp171)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp143 = string:new("index_args")

_temp111 = string:new("inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp95 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp95 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp95 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp171 =  label(_self, _temp143,_temp95)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp171 =  _self:label(_temp143,_temp95)
      elseif _self.label ~= nil then
        _temp171 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp171 =  _self:no_undermethod(string:new("label") , _temp143,_temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp171 =  no_undermethod(_self, string:new("label") , _temp143,_temp95)
      else
        _error(exception:name_error("label"))
      end
    end

_temp111 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp111)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp111)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp111)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp95 =  maybe(_self, _temp143)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp95 =  _self:maybe(_temp143)
      elseif _self.maybe ~= nil then
        _temp95 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp95 =  _self:no_undermethod(string:new("maybe") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp95 =  no_undermethod(_self, string:new("maybe") , _temp143)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp111 = string:new("]")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp143 =  str(_self, _temp111)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp143 =  _self:str(_temp111)
      elseif _self.str ~= nil then
        _temp143 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("str") , _temp111)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("str") , _temp111)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp191 =  seq(_self, _temp167,_temp151,_temp171,_temp95,_temp143)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp191 =  _self:seq(_temp167,_temp151,_temp171,_temp95,_temp143)
      elseif _self.seq ~= nil then
        _temp191 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp191 =  _self:no_undermethod(string:new("seq") , _temp167,_temp151,_temp171,_temp95,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp191 =  no_undermethod(_self, string:new("seq") , _temp167,_temp151,_temp171,_temp95,_temp143)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp175 =  many(_self, _temp191)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp175 =  _self:many(_temp191)
      elseif _self.many ~= nil then
        _temp175 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("many") , _temp191)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("many") , _temp191)
      else
        _error(exception:name_error("many"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp179 =  label(_self, _temp187,_temp175)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp179 =  _self:label(_temp187,_temp175)
      elseif _self.label ~= nil then
        _temp179 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("label") , _temp187,_temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("label") , _temp187,_temp175)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp183,_temp179)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp183,_temp179)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp183,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp183,_temp179)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp207 = function (_self)

local _temp204 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp204 =  _self:my()
      elseif _self.my ~= nil then
        _temp204 =  _self.my

        elseif my ~= nil then
          _temp204 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp205 = nil
    if _type(array_underindex_underlhs) == "function" or (_type(array_underindex_underlhs) == "table" and _rawget(array_underindex_underlhs, "__call_thing")) then
      _temp205 =  array_underindex_underlhs(_self)

    elseif array_underindex_underlhs then
      _temp205 =  array_underindex_underlhs
    else
            if _type(_self.array_underindex_underlhs) == "function" or (_type(_self.array_underindex_underlhs) == "table" and _rawget(_self.array_underindex_underlhs, "__call_thing")) then
        _temp205 =  _self:array_underindex_underlhs()
      elseif _self.array_underindex_underlhs ~= nil then
        _temp205 =  _self.array_underindex_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp205 =  _self:no_undermethod(string:new("array_index_lhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp205 =  no_undermethod(_self, string:new("array_index_lhs"))
      else
        _error(exception:name_error("array_index_lhs"))
      end
    end

      local _t = _type(_temp204)
      if _t == "table" then
                      if _type(_temp204.squish) == "function" or (_type(_temp204.squish) == "table" and _rawget(_temp204.squish, "__call_thing")) then
        return _temp204:squish(_temp205)
      elseif _temp204.squish ~= nil then
        return _temp204.squish

        elseif _temp204.no_undermethod ~= nil then
          return  _temp204:no_undermethod(string:new("squish") , _temp205)
        else
          _error(exception:method_error(_temp204, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp204)
      if _n.squish ~= nil then
        return _n:squish(_temp205)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp205)
      else
        _error(exception:method_error(_temp204, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp204)
      if _f.squish ~= nil then
        return _f:squish(_temp205)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp205)
      else
        _error(exception:method_error(_temp204, "squish"))
      end

      elseif _temp204 == nil then
        _error(exception:null_error("_temp204", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp204))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp203 =  action(_self, _temp195,_temp207)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp203 =  _self:action(_temp195,_temp207)
      elseif _self.action ~= nil then
        _temp203 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("action") , _temp195,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("action") , _temp195,_temp207)
      else
        _error(exception:name_error("action"))
      end
    end

_temp179 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp179)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp179)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp179)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp175 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp175)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp175)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp175)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp179 =  no(_self, _temp183)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp179 =  _self:no(_temp183)
      elseif _self.no ~= nil then
        _temp179 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("no") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("no") , _temp183)
      else
        _error(exception:name_error("no"))
      end
    end

_temp175 = string:new("simple_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp175)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp175)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp175)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp207 =  seq(_self, _temp195,_temp179,_temp183)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp207 =  _self:seq(_temp195,_temp179,_temp183)
      elseif _self.seq ~= nil then
        _temp207 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("seq") , _temp195,_temp179,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("seq") , _temp195,_temp179,_temp183)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp195 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp187 = string:new(".")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp175 =  str(_self, _temp187)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp175 =  _self:str(_temp187)
      elseif _self.str ~= nil then
        _temp175 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("str") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("str") , _temp187)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(_and) == "function" or (_type(_and) == "table" and _rawget(_and, "__call_thing")) then
      _temp195 =  _and(_self, _temp175)

    elseif _and then
      _error(exception:new("Tried to invoke non-method: & (" .. object.__type(_and) .. ")"))
    else
            if _type(_self._and) == "function" or (_type(_self._and) == "table" and _rawget(_self._and, "__call_thing")) then
        _temp195 =  _self:_and(_temp175)
      elseif _self._and ~= nil then
        _temp195 =  _self._and

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("&") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("&") , _temp175)
      else
        _error(exception:name_error("&"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp183 =  seq(_self, _temp179,_temp195)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp183 =  _self:seq(_temp179,_temp195)
      elseif _self.seq ~= nil then
        _temp183 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("seq") , _temp179,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("seq") , _temp179,_temp195)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp187 = string:new("->")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp175 =  str(_self, _temp187)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp175 =  _self:str(_temp187)
      elseif _self.str ~= nil then
        _temp175 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("str") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("str") , _temp187)
      else
        _error(exception:name_error("str"))
      end
    end

_temp191 = string:new("var")

_temp95 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp143 =  ref(_self, _temp95)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp143 =  _self:ref(_temp95)
      elseif _self.ref ~= nil then
        _temp143 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp143 =  _self:no_undermethod(string:new("ref") , _temp95)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp143 =  no_undermethod(_self, string:new("ref") , _temp95)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp187 =  label(_self, _temp191,_temp143)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp187 =  _self:label(_temp191,_temp143)
      elseif _self.label ~= nil then
        _temp187 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("label") , _temp191,_temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("label") , _temp191,_temp143)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp179 =  seq(_self, _temp175,_temp187)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp179 =  _self:seq(_temp175,_temp187)
      elseif _self.seq ~= nil then
        _temp179 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("seq") , _temp175,_temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("seq") , _temp175,_temp187)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp211 = function (_self)

local _temp208 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp208 =  _self:my()
      elseif _self.my ~= nil then
        _temp208 =  _self.my

        elseif my ~= nil then
          _temp208 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp209 = nil
    if _type(access_undermeth_underlhs) == "function" or (_type(access_undermeth_underlhs) == "table" and _rawget(access_undermeth_underlhs, "__call_thing")) then
      _temp209 =  access_undermeth_underlhs(_self)

    elseif access_undermeth_underlhs then
      _temp209 =  access_undermeth_underlhs
    else
            if _type(_self.access_undermeth_underlhs) == "function" or (_type(_self.access_undermeth_underlhs) == "table" and _rawget(_self.access_undermeth_underlhs, "__call_thing")) then
        _temp209 =  _self:access_undermeth_underlhs()
      elseif _self.access_undermeth_underlhs ~= nil then
        _temp209 =  _self.access_undermeth_underlhs

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp209 =  _self:no_undermethod(string:new("access_meth_lhs"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp209 =  no_undermethod(_self, string:new("access_meth_lhs"))
      else
        _error(exception:name_error("access_meth_lhs"))
      end
    end

      local _t = _type(_temp208)
      if _t == "table" then
                      if _type(_temp208.squish) == "function" or (_type(_temp208.squish) == "table" and _rawget(_temp208.squish, "__call_thing")) then
        return _temp208:squish(_temp209)
      elseif _temp208.squish ~= nil then
        return _temp208.squish

        elseif _temp208.no_undermethod ~= nil then
          return  _temp208:no_undermethod(string:new("squish") , _temp209)
        else
          _error(exception:method_error(_temp208, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp208)
      if _n.squish ~= nil then
        return _n:squish(_temp209)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp209)
      else
        _error(exception:method_error(_temp208, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp208)
      if _f.squish ~= nil then
        return _f:squish(_temp209)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp209)
      else
        _error(exception:method_error(_temp208, "squish"))
      end

      elseif _temp208 == nil then
        _error(exception:null_error("_temp208", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp208))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp195 =  action(_self, _temp179,_temp211)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp195 =  _self:action(_temp179,_temp211)
      elseif _self.action ~= nil then
        _temp195 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("action") , _temp179,_temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("action") , _temp179,_temp211)
      else
        _error(exception:name_error("action"))
      end
    end

_temp179 = string:new("method_target_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp211 =  ref(_self, _temp179)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp211 =  _self:ref(_temp179)
      elseif _self.ref ~= nil then
        _temp211 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("ref") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("ref") , _temp179)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp199,_temp203,_temp207,_temp183,_temp195,_temp211)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp199,_temp203,_temp207,_temp183,_temp195,_temp211)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp199,_temp203,_temp207,_temp183,_temp195,_temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp199,_temp203,_temp207,_temp183,_temp195,_temp211)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("method_target_expression")

_temp195 = string:new("array")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp211 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp211 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp211 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp183 = string:new("hash")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp207 = string:new("paren_exp")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp203 = string:new("number")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp203)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp203)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp203)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp199 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp203 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp203 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp203 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp179 = string:new("regex")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp179)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp179)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp179)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp187 = string:new("unary_operation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp187)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp187)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp187)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp211,_temp195,_temp183,_temp207,_temp203,_temp199,_temp179)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp211,_temp195,_temp183,_temp207,_temp203,_temp199,_temp179)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp211,_temp195,_temp183,_temp207,_temp203,_temp199,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp211,_temp195,_temp183,_temp207,_temp203,_temp199,_temp179)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("arg_list")

_temp203 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp199 =  str(_self, _temp203)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp199 =  _self:str(_temp203)
      elseif _self.str ~= nil then
        _temp199 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("str") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("str") , _temp203)
      else
        _error(exception:name_error("str"))
      end
    end

_temp183 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp203 =  maybe(_self, _temp207)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp203 =  _self:maybe(_temp207)
      elseif _self.maybe ~= nil then
        _temp203 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("maybe") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("maybe") , _temp207)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp183 = string:new("inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp211 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp211)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp211)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp211)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp183 =  maybe(_self, _temp195)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp183 =  _self:maybe(_temp195)
      elseif _self.maybe ~= nil then
        _temp183 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("maybe") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("maybe") , _temp195)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp211 = string:new(")")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp195 =  str(_self, _temp211)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp195 =  _self:str(_temp211)
      elseif _self.str ~= nil then
        _temp195 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("str") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("str") , _temp211)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp179 =  seq(_self, _temp199,_temp203,_temp207,_temp183,_temp195)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp179 =  _self:seq(_temp199,_temp203,_temp207,_temp183,_temp195)
      elseif _self.seq ~= nil then
        _temp179 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("seq") , _temp199,_temp203,_temp207,_temp183,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("seq") , _temp199,_temp203,_temp207,_temp183,_temp195)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp207 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp183 =  str(_self, _temp207)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp183 =  _self:str(_temp207)
      elseif _self.str ~= nil then
        _temp183 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("str") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("str") , _temp207)
      else
        _error(exception:name_error("str"))
      end
    end

_temp199 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp203 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp203 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp203 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp207 =  maybe(_self, _temp203)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp207 =  _self:maybe(_temp203)
      elseif _self.maybe ~= nil then
        _temp207 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("maybe") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("maybe") , _temp203)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp199 = string:new(")")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp203 =  str(_self, _temp199)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp203 =  _self:str(_temp199)
      elseif _self.str ~= nil then
        _temp203 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("str") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("str") , _temp199)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp183,_temp207,_temp203)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp183,_temp207,_temp203)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp183,_temp207,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp183,_temp207,_temp203)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp183 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp199 = string:new("inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp203 =  seq(_self, _temp207,_temp183)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp203 =  _self:seq(_temp207,_temp183)
      elseif _self.seq ~= nil then
        _temp203 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("seq") , _temp207,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("seq") , _temp207,_temp183)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp211 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp199 =  str(_self, _temp211)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp199 =  _self:str(_temp211)
      elseif _self.str ~= nil then
        _temp199 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("str") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("str") , _temp211)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp207 =  no(_self, _temp199)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp207 =  _self:no(_temp199)
      elseif _self.no ~= nil then
        _temp207 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("no") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("no") , _temp199)
      else
        _error(exception:name_error("no"))
      end
    end

_temp175 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp187 =  ref(_self, _temp175)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp187 =  _self:ref(_temp175)
      elseif _self.ref ~= nil then
        _temp187 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp187 =  _self:no_undermethod(string:new("ref") , _temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp187 =  no_undermethod(_self, string:new("ref") , _temp175)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp211 =  maybe(_self, _temp187)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp211 =  _self:maybe(_temp187)
      elseif _self.maybe ~= nil then
        _temp211 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("maybe") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("maybe") , _temp187)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(_and) == "function" or (_type(_and) == "table" and _rawget(_and, "__call_thing")) then
      _temp199 =  _and(_self, _temp211)

    elseif _and then
      _error(exception:new("Tried to invoke non-method: & (" .. object.__type(_and) .. ")"))
    else
            if _type(_self._and) == "function" or (_type(_self._and) == "table" and _rawget(_self._and, "__call_thing")) then
        _temp199 =  _self:_and(_temp211)
      elseif _self._and ~= nil then
        _temp199 =  _self._and

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("&") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("&") , _temp211)
      else
        _error(exception:name_error("&"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp183 =  seq(_self, _temp207,_temp199)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp183 =  _self:seq(_temp207,_temp199)
      elseif _self.seq ~= nil then
        _temp183 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("seq") , _temp207,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("seq") , _temp207,_temp199)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp179,_temp195,_temp203,_temp183)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp179,_temp195,_temp203,_temp183)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp179,_temp195,_temp203,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp179,_temp195,_temp203,_temp183)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("simple_arg_list")

_temp195 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp203 =  str(_self, _temp195)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp203 =  _self:str(_temp195)
      elseif _self.str ~= nil then
        _temp203 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("str") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("str") , _temp195)
      else
        _error(exception:name_error("str"))
      end
    end

_temp199 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp195 =  maybe(_self, _temp179)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp195 =  _self:maybe(_temp179)
      elseif _self.maybe ~= nil then
        _temp195 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("maybe") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("maybe") , _temp179)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp199 = string:new("inner_arg_list")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp211 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp211)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp211)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp211)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp199 =  maybe(_self, _temp207)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp199 =  _self:maybe(_temp207)
      elseif _self.maybe ~= nil then
        _temp199 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("maybe") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("maybe") , _temp207)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp211 = string:new(")")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp207 =  str(_self, _temp211)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp207 =  _self:str(_temp211)
      elseif _self.str ~= nil then
        _temp207 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("str") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("str") , _temp211)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp183 =  seq(_self, _temp203,_temp195,_temp179,_temp199,_temp207)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp183 =  _self:seq(_temp203,_temp195,_temp179,_temp199,_temp207)
      elseif _self.seq ~= nil then
        _temp183 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("seq") , _temp203,_temp195,_temp179,_temp199,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("seq") , _temp203,_temp195,_temp179,_temp199,_temp207)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp179 = string:new("(")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp199 =  str(_self, _temp179)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp199 =  _self:str(_temp179)
      elseif _self.str ~= nil then
        _temp199 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("str") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("str") , _temp179)
      else
        _error(exception:name_error("str"))
      end
    end

_temp203 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp203)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp203)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp203)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp179 =  maybe(_self, _temp195)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp179 =  _self:maybe(_temp195)
      elseif _self.maybe ~= nil then
        _temp179 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("maybe") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("maybe") , _temp195)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp203 = string:new(")")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp195 =  str(_self, _temp203)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp195 =  _self:str(_temp203)
      elseif _self.str ~= nil then
        _temp195 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("str") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("str") , _temp203)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp207 =  seq(_self, _temp199,_temp179,_temp195)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp207 =  _self:seq(_temp199,_temp179,_temp195)
      elseif _self.seq ~= nil then
        _temp207 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("seq") , _temp199,_temp179,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("seq") , _temp199,_temp179,_temp195)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp183,_temp207)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp183,_temp207)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp183,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp183,_temp207)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("inner_arg_list")

_temp195 = string:new("arg_first")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp199 = string:new("arg_next")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp195 =  kleene(_self, _temp179)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp195 =  _self:kleene(_temp179)
      elseif _self.kleene ~= nil then
        _temp195 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("kleene") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("kleene") , _temp179)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp207 =  seq(_self, _temp183,_temp195)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp207 =  _self:seq(_temp183,_temp195)
      elseif _self.seq ~= nil then
        _temp207 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("seq") , _temp183,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("seq") , _temp183,_temp195)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp215 = function (_self)

local _temp212 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp212 =  _self:my()
      elseif _self.my ~= nil then
        _temp212 =  _self.my

        elseif my ~= nil then
          _temp212 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp213 = nil
    if _type(inner_underarg_underlist) == "function" or (_type(inner_underarg_underlist) == "table" and _rawget(inner_underarg_underlist, "__call_thing")) then
      _temp213 =  inner_underarg_underlist(_self)

    elseif inner_underarg_underlist then
      _temp213 =  inner_underarg_underlist
    else
            if _type(_self.inner_underarg_underlist) == "function" or (_type(_self.inner_underarg_underlist) == "table" and _rawget(_self.inner_underarg_underlist, "__call_thing")) then
        _temp213 =  _self:inner_underarg_underlist()
      elseif _self.inner_underarg_underlist ~= nil then
        _temp213 =  _self.inner_underarg_underlist

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp213 =  _self:no_undermethod(string:new("inner_arg_list"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp213 =  no_undermethod(_self, string:new("inner_arg_list"))
      else
        _error(exception:name_error("inner_arg_list"))
      end
    end

      local _t = _type(_temp212)
      if _t == "table" then
                      if _type(_temp212.squish) == "function" or (_type(_temp212.squish) == "table" and _rawget(_temp212.squish, "__call_thing")) then
        return _temp212:squish(_temp213)
      elseif _temp212.squish ~= nil then
        return _temp212.squish

        elseif _temp212.no_undermethod ~= nil then
          return  _temp212:no_undermethod(string:new("squish") , _temp213)
        else
          _error(exception:method_error(_temp212, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp212)
      if _n.squish ~= nil then
        return _n:squish(_temp213)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp213)
      else
        _error(exception:method_error(_temp212, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp212)
      if _f.squish ~= nil then
        return _f:squish(_temp213)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp213)
      else
        _error(exception:method_error(_temp212, "squish"))
      end

      elseif _temp212 == nil then
        _error(exception:null_error("_temp212", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp212))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp4 =  action(_self, _temp207,_temp215)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp4 =  _self:action(_temp207,_temp215)
      elseif _self.action ~= nil then
        _temp4 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("action") , _temp207,_temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("action") , _temp207,_temp215)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("arg_first")

_temp207 = string:new("named_argument")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp215 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp215 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp215 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp195 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp215,_temp207)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp215,_temp207)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp215,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp215,_temp207)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("arg_space")

_temp215 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp215)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp215)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp215)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp195 = string:new("eol_not_semicolon")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp215 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp215 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp215 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp207,_temp215)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp207,_temp215)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp207,_temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp207,_temp215)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("arg_next")

_temp183 = string:new("arg_space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp207 =  kleene(_self, _temp195)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp207 =  _self:kleene(_temp195)
      elseif _self.kleene ~= nil then
        _temp207 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("kleene") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("kleene") , _temp195)
      else
        _error(exception:name_error("kleene"))
      end
    end

_temp183 = string:new(",")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp195 =  str(_self, _temp183)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp195 =  _self:str(_temp183)
      elseif _self.str ~= nil then
        _temp195 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("str") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("str") , _temp183)
      else
        _error(exception:name_error("str"))
      end
    end

_temp199 = string:new("arg_space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp183 =  kleene(_self, _temp179)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp183 =  _self:kleene(_temp179)
      elseif _self.kleene ~= nil then
        _temp183 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("kleene") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("kleene") , _temp179)
      else
        _error(exception:name_error("kleene"))
      end
    end

_temp199 = string:new("arg_first")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp179 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp179 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp179 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp215 =  seq(_self, _temp207,_temp195,_temp183,_temp179)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp215 =  _self:seq(_temp207,_temp195,_temp183,_temp179)
      elseif _self.seq ~= nil then
        _temp215 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("seq") , _temp207,_temp195,_temp183,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("seq") , _temp207,_temp195,_temp183,_temp179)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp207 = string:new("arg_space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp183 =  many(_self, _temp195)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp183 =  _self:many(_temp195)
      elseif _self.many ~= nil then
        _temp183 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("many") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("many") , _temp195)
      else
        _error(exception:name_error("many"))
      end
    end

_temp207 = string:new("function_definition")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp195 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp195 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp195 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp179 =  seq(_self, _temp183,_temp195)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp179 =  _self:seq(_temp183,_temp195)
      elseif _self.seq ~= nil then
        _temp179 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("seq") , _temp183,_temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("seq") , _temp183,_temp195)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp199 = string:new("arg_space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp183 =  many(_self, _temp207)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp183 =  _self:many(_temp207)
      elseif _self.many ~= nil then
        _temp183 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("many") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("many") , _temp207)
      else
        _error(exception:name_error("many"))
      end
    end

_temp199 = string:new("named_argument")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp199)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp199)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp199)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp183,_temp207)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp183,_temp207)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp183,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp183,_temp207)
      else
        _error(exception:name_error("seq"))
      end
    end

_temp203 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp203)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp203)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp203)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp183 =  maybe(_self, _temp199)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp183 =  _self:maybe(_temp199)
      elseif _self.maybe ~= nil then
        _temp183 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("maybe") , _temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("maybe") , _temp199)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp203 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp203)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp203)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp203)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp207 =  seq(_self, _temp183,_temp199)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp207 =  _self:seq(_temp183,_temp199)
      elseif _self.seq ~= nil then
        _temp207 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("seq") , _temp183,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("seq") , _temp183,_temp199)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp3 =  any(_self, _temp215,_temp179,_temp195,_temp207)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp3 =  _self:any(_temp215,_temp179,_temp195,_temp207)
      elseif _self.any ~= nil then
        _temp3 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("any") , _temp215,_temp179,_temp195,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("any") , _temp215,_temp179,_temp195,_temp207)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("named_argument")

_temp215 = string:new("key")

_temp183 = string:new("identifier")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp179 =  label(_self, _temp215,_temp199)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp179 =  _self:label(_temp215,_temp199)
      elseif _self.label ~= nil then
        _temp179 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("label") , _temp215,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("label") , _temp215,_temp199)
      else
        _error(exception:name_error("label"))
      end
    end

_temp215 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp199 =  str(_self, _temp215)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp199 =  _self:str(_temp215)
      elseif _self.str ~= nil then
        _temp199 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("str") , _temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("str") , _temp215)
      else
        _error(exception:name_error("str"))
      end
    end

_temp183 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp215 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp215 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp215 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp203 = string:new("value")

_temp187 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp211 =  ref(_self, _temp187)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp211 =  _self:ref(_temp187)
      elseif _self.ref ~= nil then
        _temp211 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("ref") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("ref") , _temp187)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp183 =  label(_self, _temp203,_temp211)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp183 =  _self:label(_temp203,_temp211)
      elseif _self.label ~= nil then
        _temp183 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("label") , _temp203,_temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("label") , _temp203,_temp211)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp179,_temp199,_temp215,_temp183)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp179,_temp199,_temp215,_temp183)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp179,_temp199,_temp215,_temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp179,_temp199,_temp215,_temp183)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp219 = function (_self)

local _temp216 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp216 =  _self:my()
      elseif _self.my ~= nil then
        _temp216 =  _self.my

        elseif my ~= nil then
          _temp216 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp217 = nil
    if _type(named_underargument) == "function" or (_type(named_underargument) == "table" and _rawget(named_underargument, "__call_thing")) then
      _temp217 =  named_underargument(_self)

    elseif named_underargument then
      _temp217 =  named_underargument
    else
            if _type(_self.named_underargument) == "function" or (_type(_self.named_underargument) == "table" and _rawget(_self.named_underargument, "__call_thing")) then
        _temp217 =  _self:named_underargument()
      elseif _self.named_underargument ~= nil then
        _temp217 =  _self.named_underargument

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp217 =  _self:no_undermethod(string:new("named_argument"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp217 =  no_undermethod(_self, string:new("named_argument"))
      else
        _error(exception:name_error("named_argument"))
      end
    end

      local _t = _type(_temp216)
      if _t == "table" then
                      if _type(_temp216.squish) == "function" or (_type(_temp216.squish) == "table" and _rawget(_temp216.squish, "__call_thing")) then
        return _temp216:squish(_temp217)
      elseif _temp216.squish ~= nil then
        return _temp216.squish

        elseif _temp216.no_undermethod ~= nil then
          return  _temp216:no_undermethod(string:new("squish") , _temp217)
        else
          _error(exception:method_error(_temp216, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp216)
      if _n.squish ~= nil then
        return _n:squish(_temp217)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp217)
      else
        _error(exception:method_error(_temp216, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp216)
      if _f.squish ~= nil then
        return _f:squish(_temp217)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp217)
      else
        _error(exception:method_error(_temp216, "squish"))
      end

      elseif _temp216 == nil then
        _error(exception:null_error("_temp216", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp216))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp207 =  action(_self, _temp195,_temp219)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp207 =  _self:action(_temp195,_temp219)
      elseif _self.action ~= nil then
        _temp207 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("action") , _temp195,_temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("action") , _temp195,_temp219)
      else
        _error(exception:name_error("action"))
      end
    end

_temp215 = string:new("key")

_temp179 = string:new("string")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp179)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp179)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp179)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp183 =  label(_self, _temp215,_temp199)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp183 =  _self:label(_temp215,_temp199)
      elseif _self.label ~= nil then
        _temp183 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("label") , _temp215,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("label") , _temp215,_temp199)
      else
        _error(exception:name_error("label"))
      end
    end

_temp215 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp199 =  str(_self, _temp215)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp199 =  _self:str(_temp215)
      elseif _self.str ~= nil then
        _temp199 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("str") , _temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("str") , _temp215)
      else
        _error(exception:name_error("str"))
      end
    end

_temp179 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp215 =  ref(_self, _temp179)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp215 =  _self:ref(_temp179)
      elseif _self.ref ~= nil then
        _temp215 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("ref") , _temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("ref") , _temp179)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp211 = string:new("value")

_temp187 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp203 =  ref(_self, _temp187)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp203 =  _self:ref(_temp187)
      elseif _self.ref ~= nil then
        _temp203 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("ref") , _temp187)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("ref") , _temp187)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp179 =  label(_self, _temp211,_temp203)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp179 =  _self:label(_temp211,_temp203)
      elseif _self.label ~= nil then
        _temp179 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("label") , _temp211,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("label") , _temp211,_temp203)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp183,_temp199,_temp215,_temp179)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp183,_temp199,_temp215,_temp179)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp183,_temp199,_temp215,_temp179)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp183,_temp199,_temp215,_temp179)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp223 = function (_self)

local _temp220 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp220 =  _self:my()
      elseif _self.my ~= nil then
        _temp220 =  _self.my

        elseif my ~= nil then
          _temp220 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp221 = nil
    if _type(named_underargument) == "function" or (_type(named_underargument) == "table" and _rawget(named_underargument, "__call_thing")) then
      _temp221 =  named_underargument(_self)

    elseif named_underargument then
      _temp221 =  named_underargument
    else
            if _type(_self.named_underargument) == "function" or (_type(_self.named_underargument) == "table" and _rawget(_self.named_underargument, "__call_thing")) then
        _temp221 =  _self:named_underargument()
      elseif _self.named_underargument ~= nil then
        _temp221 =  _self.named_underargument

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp221 =  _self:no_undermethod(string:new("named_argument"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp221 =  no_undermethod(_self, string:new("named_argument"))
      else
        _error(exception:name_error("named_argument"))
      end
    end

      local _t = _type(_temp220)
      if _t == "table" then
                      if _type(_temp220.squish) == "function" or (_type(_temp220.squish) == "table" and _rawget(_temp220.squish, "__call_thing")) then
        return _temp220:squish(_temp221)
      elseif _temp220.squish ~= nil then
        return _temp220.squish

        elseif _temp220.no_undermethod ~= nil then
          return  _temp220:no_undermethod(string:new("squish") , _temp221)
        else
          _error(exception:method_error(_temp220, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp220)
      if _n.squish ~= nil then
        return _n:squish(_temp221)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp221)
      else
        _error(exception:method_error(_temp220, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp220)
      if _f.squish ~= nil then
        return _f:squish(_temp221)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp221)
      else
        _error(exception:method_error(_temp220, "squish"))
      end

      elseif _temp220 == nil then
        _error(exception:null_error("_temp220", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp220))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp219 =  action(_self, _temp195,_temp223)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp219 =  _self:action(_temp195,_temp223)
      elseif _self.action ~= nil then
        _temp219 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("action") , _temp195,_temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("action") , _temp195,_temp223)
      else
        _error(exception:name_error("action"))
      end
    end

_temp215 = string:new("key")

_temp203 = string:new("method_target_expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp203)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp203)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp203)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp211 = string:new("simple_method_invocation")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp203 =  ref(_self, _temp211)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp203 =  _self:ref(_temp211)
      elseif _self.ref ~= nil then
        _temp203 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("ref") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("ref") , _temp211)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp199 =  any(_self, _temp183,_temp203)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp199 =  _self:any(_temp183,_temp203)
      elseif _self.any ~= nil then
        _temp199 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("any") , _temp183,_temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("any") , _temp183,_temp203)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp179 =  label(_self, _temp215,_temp199)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp179 =  _self:label(_temp215,_temp199)
      elseif _self.label ~= nil then
        _temp179 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp179 =  _self:no_undermethod(string:new("label") , _temp215,_temp199)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp179 =  no_undermethod(_self, string:new("label") , _temp215,_temp199)
      else
        _error(exception:name_error("label"))
      end
    end

_temp215 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp199 =  ref(_self, _temp215)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp199 =  _self:ref(_temp215)
      elseif _self.ref ~= nil then
        _temp199 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp199 =  _self:no_undermethod(string:new("ref") , _temp215)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp199 =  no_undermethod(_self, string:new("ref") , _temp215)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp203 = string:new(":")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp215 =  str(_self, _temp203)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp215 =  _self:str(_temp203)
      elseif _self.str ~= nil then
        _temp215 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp215 =  _self:no_undermethod(string:new("str") , _temp203)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp215 =  no_undermethod(_self, string:new("str") , _temp203)
      else
        _error(exception:name_error("str"))
      end
    end

_temp183 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp203 =  ref(_self, _temp183)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp203 =  _self:ref(_temp183)
      elseif _self.ref ~= nil then
        _temp203 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp203 =  _self:no_undermethod(string:new("ref") , _temp183)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp203 =  no_undermethod(_self, string:new("ref") , _temp183)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp211 = string:new("spaceorbreak")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp183 =  ref(_self, _temp211)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp183 =  _self:ref(_temp211)
      elseif _self.ref ~= nil then
        _temp183 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp183 =  _self:no_undermethod(string:new("ref") , _temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp183 =  no_undermethod(_self, string:new("ref") , _temp211)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp187 = string:new("value")

_temp143 = string:new("expression")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp175 =  ref(_self, _temp143)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp175 =  _self:ref(_temp143)
      elseif _self.ref ~= nil then
        _temp175 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp175 =  _self:no_undermethod(string:new("ref") , _temp143)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp175 =  no_undermethod(_self, string:new("ref") , _temp143)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(label) == "function" or (_type(label) == "table" and _rawget(label, "__call_thing")) then
      _temp211 =  label(_self, _temp187,_temp175)

    elseif label then
      _error(exception:new("Tried to invoke non-method: label (" .. object.__type(label) .. ")"))
    else
            if _type(_self.label) == "function" or (_type(_self.label) == "table" and _rawget(_self.label, "__call_thing")) then
        _temp211 =  _self:label(_temp187,_temp175)
      elseif _self.label ~= nil then
        _temp211 =  _self.label

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp211 =  _self:no_undermethod(string:new("label") , _temp187,_temp175)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp211 =  no_undermethod(_self, string:new("label") , _temp187,_temp175)
      else
        _error(exception:name_error("label"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp195 =  seq(_self, _temp179,_temp199,_temp215,_temp203,_temp183,_temp211)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp195 =  _self:seq(_temp179,_temp199,_temp215,_temp203,_temp183,_temp211)
      elseif _self.seq ~= nil then
        _temp195 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp195 =  _self:no_undermethod(string:new("seq") , _temp179,_temp199,_temp215,_temp203,_temp183,_temp211)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp195 =  no_undermethod(_self, string:new("seq") , _temp179,_temp199,_temp215,_temp203,_temp183,_temp211)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp227 = function (_self)

local _temp224 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp224 =  _self:my()
      elseif _self.my ~= nil then
        _temp224 =  _self.my

        elseif my ~= nil then
          _temp224 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp225 = nil
    if _type(named_underargument) == "function" or (_type(named_underargument) == "table" and _rawget(named_underargument, "__call_thing")) then
      _temp225 =  named_underargument(_self)

    elseif named_underargument then
      _temp225 =  named_underargument
    else
            if _type(_self.named_underargument) == "function" or (_type(_self.named_underargument) == "table" and _rawget(_self.named_underargument, "__call_thing")) then
        _temp225 =  _self:named_underargument()
      elseif _self.named_underargument ~= nil then
        _temp225 =  _self.named_underargument

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp225 =  _self:no_undermethod(string:new("named_argument"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp225 =  no_undermethod(_self, string:new("named_argument"))
      else
        _error(exception:name_error("named_argument"))
      end
    end

      local _t = _type(_temp224)
      if _t == "table" then
                      if _type(_temp224.squish) == "function" or (_type(_temp224.squish) == "table" and _rawget(_temp224.squish, "__call_thing")) then
        return _temp224:squish(_temp225)
      elseif _temp224.squish ~= nil then
        return _temp224.squish

        elseif _temp224.no_undermethod ~= nil then
          return  _temp224:no_undermethod(string:new("squish") , _temp225)
        else
          _error(exception:method_error(_temp224, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp224)
      if _n.squish ~= nil then
        return _n:squish(_temp225)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp225)
      else
        _error(exception:method_error(_temp224, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp224)
      if _f.squish ~= nil then
        return _f:squish(_temp225)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp225)
      else
        _error(exception:method_error(_temp224, "squish"))
      end

      elseif _temp224 == nil then
        _error(exception:null_error("_temp224", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp224))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp223 =  action(_self, _temp195,_temp227)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp223 =  _self:action(_temp195,_temp227)
      elseif _self.action ~= nil then
        _temp223 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("action") , _temp195,_temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("action") , _temp195,_temp227)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp207,_temp219,_temp223)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp207,_temp219,_temp223)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp207,_temp219,_temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp207,_temp219,_temp223)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("index_inner_arg_list")

_temp207 = string:new("arg_first")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp219 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp219 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp219 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp195 = string:new("inner_arg_next")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp227 =  ref(_self, _temp195)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp227 =  _self:ref(_temp195)
      elseif _self.ref ~= nil then
        _temp227 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp227 =  _self:no_undermethod(string:new("ref") , _temp195)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp227 =  no_undermethod(_self, string:new("ref") , _temp195)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(kleene) == "function" or (_type(kleene) == "table" and _rawget(kleene, "__call_thing")) then
      _temp207 =  kleene(_self, _temp227)

    elseif kleene then
      _error(exception:new("Tried to invoke non-method: kleene (" .. object.__type(kleene) .. ")"))
    else
            if _type(_self.kleene) == "function" or (_type(_self.kleene) == "table" and _rawget(_self.kleene, "__call_thing")) then
        _temp207 =  _self:kleene(_temp227)
      elseif _self.kleene ~= nil then
        _temp207 =  _self.kleene

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("kleene") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("kleene") , _temp227)
      else
        _error(exception:name_error("kleene"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp223 =  seq(_self, _temp219,_temp207)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp223 =  _self:seq(_temp219,_temp207)
      elseif _self.seq ~= nil then
        _temp223 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("seq") , _temp219,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("seq") , _temp219,_temp207)
      else
        _error(exception:name_error("seq"))
      end
    end

local _temp231 = function (_self)

local _temp228 = nil
              if _type(_self.my) == "function" or (_type(_self.my) == "table" and _rawget(_self.my, "__call_thing")) then
        _temp228 =  _self:my()
      elseif _self.my ~= nil then
        _temp228 =  _self.my

        elseif my ~= nil then
          _temp228 = my;
        else
          _error(exception:method_error("self", "my"))
        end
local _temp229 = nil
    if _type(inner_underarg_underlist) == "function" or (_type(inner_underarg_underlist) == "table" and _rawget(inner_underarg_underlist, "__call_thing")) then
      _temp229 =  inner_underarg_underlist(_self)

    elseif inner_underarg_underlist then
      _temp229 =  inner_underarg_underlist
    else
            if _type(_self.inner_underarg_underlist) == "function" or (_type(_self.inner_underarg_underlist) == "table" and _rawget(_self.inner_underarg_underlist, "__call_thing")) then
        _temp229 =  _self:inner_underarg_underlist()
      elseif _self.inner_underarg_underlist ~= nil then
        _temp229 =  _self.inner_underarg_underlist

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp229 =  _self:no_undermethod(string:new("inner_arg_list"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp229 =  no_undermethod(_self, string:new("inner_arg_list"))
      else
        _error(exception:name_error("inner_arg_list"))
      end
    end

      local _t = _type(_temp228)
      if _t == "table" then
                      if _type(_temp228.squish) == "function" or (_type(_temp228.squish) == "table" and _rawget(_temp228.squish, "__call_thing")) then
        return _temp228:squish(_temp229)
      elseif _temp228.squish ~= nil then
        return _temp228.squish

        elseif _temp228.no_undermethod ~= nil then
          return  _temp228:no_undermethod(string:new("squish") , _temp229)
        else
          _error(exception:method_error(_temp228, "squish"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp228)
      if _n.squish ~= nil then
        return _n:squish(_temp229)
      elseif _n.no_undermethod ~= nil then
        return  _n:no_undermethod(string:new("squish") , _temp229)
      else
        _error(exception:method_error(_temp228, "squish"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp228)
      if _f.squish ~= nil then
        return _f:squish(_temp229)
      elseif _f.no_undermethod ~= nil then
        return  _f:no_undermethod(string:new("squish") , _temp229)
      else
        _error(exception:method_error(_temp228, "squish"))
      end

      elseif _temp228 == nil then
        _error(exception:null_error("_temp228", "invoke squish on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp228))
      end

end

    if _type(action) == "function" or (_type(action) == "table" and _rawget(action, "__call_thing")) then
      _temp3 =  action(_self, _temp223,_temp231)

    elseif action then
      _error(exception:new("Tried to invoke non-method: action (" .. object.__type(action) .. ")"))
    else
            if _type(_self.action) == "function" or (_type(_self.action) == "table" and _rawget(_self.action, "__call_thing")) then
        _temp3 =  _self:action(_temp223,_temp231)
      elseif _self.action ~= nil then
        _temp3 =  _self.action

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("action") , _temp223,_temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("action") , _temp223,_temp231)
      else
        _error(exception:name_error("action"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("inner_arg_next")

_temp223 = string:new("arg_next")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp231 =  ref(_self, _temp223)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp231 =  _self:ref(_temp223)
      elseif _self.ref ~= nil then
        _temp231 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("ref") , _temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("ref") , _temp223)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp227 = string:new("arg_space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp219 =  ref(_self, _temp227)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp219 =  _self:ref(_temp227)
      elseif _self.ref ~= nil then
        _temp219 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("ref") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("ref") , _temp227)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(many) == "function" or (_type(many) == "table" and _rawget(many, "__call_thing")) then
      _temp207 =  many(_self, _temp219)

    elseif many then
      _error(exception:new("Tried to invoke non-method: many (" .. object.__type(many) .. ")"))
    else
            if _type(_self.many) == "function" or (_type(_self.many) == "table" and _rawget(_self.many, "__call_thing")) then
        _temp207 =  _self:many(_temp219)
      elseif _self.many ~= nil then
        _temp207 =  _self.many

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("many") , _temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("many") , _temp219)
      else
        _error(exception:name_error("many"))
      end
    end

_temp227 = string:new("arg_first")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp219 =  ref(_self, _temp227)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp219 =  _self:ref(_temp227)
      elseif _self.ref ~= nil then
        _temp219 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("ref") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("ref") , _temp227)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp223 =  seq(_self, _temp207,_temp219)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp223 =  _self:seq(_temp207,_temp219)
      elseif _self.seq ~= nil then
        _temp223 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("seq") , _temp207,_temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("seq") , _temp207,_temp219)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp231,_temp223)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp231,_temp223)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp231,_temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp231,_temp223)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("spaceorbreak")

_temp219 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp231 =  ref(_self, _temp219)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp231 =  _self:ref(_temp219)
      elseif _self.ref ~= nil then
        _temp231 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("ref") , _temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("ref") , _temp219)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp223 =  maybe(_self, _temp231)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp223 =  _self:maybe(_temp231)
      elseif _self.maybe ~= nil then
        _temp223 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("maybe") , _temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("maybe") , _temp231)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp207 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp219 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp219 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp219 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp231 =  maybe(_self, _temp219)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp231 =  _self:maybe(_temp219)
      elseif _self.maybe ~= nil then
        _temp231 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("maybe") , _temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("maybe") , _temp219)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp227 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp227)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp227)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp227)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp219 =  maybe(_self, _temp207)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp219 =  _self:maybe(_temp207)
      elseif _self.maybe ~= nil then
        _temp219 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("maybe") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("maybe") , _temp207)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp3 =  seq(_self, _temp223,_temp231,_temp219)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp3 =  _self:seq(_temp223,_temp231,_temp219)
      elseif _self.seq ~= nil then
        _temp3 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("seq") , _temp223,_temp231,_temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("seq") , _temp223,_temp231,_temp219)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("eol_not_semicolon")

_temp231 = string:new("\n")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp219 =  str(_self, _temp231)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp219 =  _self:str(_temp231)
      elseif _self.str ~= nil then
        _temp219 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("str") , _temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("str") , _temp231)
      else
        _error(exception:name_error("str"))
      end
    end

_temp223 = string:new("\r\n")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp231 =  str(_self, _temp223)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp231 =  _self:str(_temp223)
      elseif _self.str ~= nil then
        _temp231 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("str") , _temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("str") , _temp223)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp4 =  any(_self, _temp219,_temp231)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp4 =  _self:any(_temp219,_temp231)
      elseif _self.any ~= nil then
        _temp4 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("any") , _temp219,_temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("any") , _temp219,_temp231)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("space")

local _temp231 = regex:new("(?: |\\t)+")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp3 =  reg(_self, _temp231)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp3 =  _self:reg(_temp231)
      elseif _self.reg ~= nil then
        _temp3 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("reg") , _temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("reg") , _temp231)
      else
        _error(exception:name_error("reg"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("eol")

local _temp231 = regex:new("(?:\\n|;|\\r\\n)+")

    if _type(reg) == "function" or (_type(reg) == "table" and _rawget(reg, "__call_thing")) then
      _temp4 =  reg(_self, _temp231)

    elseif reg then
      _error(exception:new("Tried to invoke non-method: reg (" .. object.__type(reg) .. ")"))
    else
            if _type(_self.reg) == "function" or (_type(_self.reg) == "table" and _rawget(_self.reg, "__call_thing")) then
        _temp4 =  _self:reg(_temp231)
      elseif _self.reg ~= nil then
        _temp4 =  _self.reg

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("reg") , _temp231)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("reg") , _temp231)
      else
        _error(exception:name_error("reg"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

_temp4 = string:new("eob")

_temp223 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp219 =  ref(_self, _temp223)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp219 =  _self:ref(_temp223)
      elseif _self.ref ~= nil then
        _temp219 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("ref") , _temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("ref") , _temp223)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp231 =  maybe(_self, _temp219)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp231 =  _self:maybe(_temp219)
      elseif _self.maybe ~= nil then
        _temp231 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("maybe") , _temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("maybe") , _temp219)
      else
        _error(exception:name_error("maybe"))
      end
    end

_temp207 = string:new("}")

    if _type(str) == "function" or (_type(str) == "table" and _rawget(str, "__call_thing")) then
      _temp223 =  str(_self, _temp207)

    elseif str then
      _error(exception:new("Tried to invoke non-method: str (" .. object.__type(str) .. ")"))
    else
            if _type(_self.str) == "function" or (_type(_self.str) == "table" and _rawget(_self.str, "__call_thing")) then
        _temp223 =  _self:str(_temp207)
      elseif _self.str ~= nil then
        _temp223 =  _self.str

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("str") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("str") , _temp207)
      else
        _error(exception:name_error("str"))
      end
    end

    if _type(_and) == "function" or (_type(_and) == "table" and _rawget(_and, "__call_thing")) then
      _temp219 =  _and(_self, _temp223)

    elseif _and then
      _error(exception:new("Tried to invoke non-method: & (" .. object.__type(_and) .. ")"))
    else
            if _type(_self._and) == "function" or (_type(_self._and) == "table" and _rawget(_self._and, "__call_thing")) then
        _temp219 =  _self:_and(_temp223)
      elseif _self._and ~= nil then
        _temp219 =  _self._and

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("&") , _temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("&") , _temp223)
      else
        _error(exception:name_error("&"))
      end
    end

_temp227 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp227)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp227)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp227)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp223 =  maybe(_self, _temp207)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp223 =  _self:maybe(_temp207)
      elseif _self.maybe ~= nil then
        _temp223 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("maybe") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("maybe") , _temp207)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp3 =  seq(_self, _temp231,_temp219,_temp223)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp3 =  _self:seq(_temp231,_temp219,_temp223)
      elseif _self.seq ~= nil then
        _temp3 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp3 =  _self:no_undermethod(string:new("seq") , _temp231,_temp219,_temp223)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp3 =  no_undermethod(_self, string:new("seq") , _temp231,_temp219,_temp223)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      _dummy_ =  set(_self, _temp4,_temp3)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        _dummy_ =  _self:set(_temp4,_temp3)
      elseif _self.set ~= nil then
        _dummy_ =  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("set") , _temp4,_temp3)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("set") , _temp4,_temp3)
      else
        _error(exception:name_error("set"))
      end
    end

_temp3 = string:new("eof")

_temp207 = string:new("eol")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp231 =  ref(_self, _temp207)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp231 =  _self:ref(_temp207)
      elseif _self.ref ~= nil then
        _temp231 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp231 =  _self:no_undermethod(string:new("ref") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp231 =  no_undermethod(_self, string:new("ref") , _temp207)
      else
        _error(exception:name_error("ref"))
      end
    end

_temp227 = string:new("space")

    if _type(ref) == "function" or (_type(ref) == "table" and _rawget(ref, "__call_thing")) then
      _temp207 =  ref(_self, _temp227)

    elseif ref then
      _error(exception:new("Tried to invoke non-method: ref (" .. object.__type(ref) .. ")"))
    else
            if _type(_self.ref) == "function" or (_type(_self.ref) == "table" and _rawget(_self.ref, "__call_thing")) then
        _temp207 =  _self:ref(_temp227)
      elseif _self.ref ~= nil then
        _temp207 =  _self.ref

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("ref") , _temp227)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("ref") , _temp227)
      else
        _error(exception:name_error("ref"))
      end
    end

    if _type(any) == "function" or (_type(any) == "table" and _rawget(any, "__call_thing")) then
      _temp219 =  any(_self, _temp231,_temp207)

    elseif any then
      _error(exception:new("Tried to invoke non-method: any (" .. object.__type(any) .. ")"))
    else
            if _type(_self.any) == "function" or (_type(_self.any) == "table" and _rawget(_self.any, "__call_thing")) then
        _temp219 =  _self:any(_temp231,_temp207)
      elseif _self.any ~= nil then
        _temp219 =  _self.any

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("any") , _temp231,_temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("any") , _temp231,_temp207)
      else
        _error(exception:name_error("any"))
      end
    end

    if _type(maybe) == "function" or (_type(maybe) == "table" and _rawget(maybe, "__call_thing")) then
      _temp223 =  maybe(_self, _temp219)

    elseif maybe then
      _error(exception:new("Tried to invoke non-method: maybe (" .. object.__type(maybe) .. ")"))
    else
            if _type(_self.maybe) == "function" or (_type(_self.maybe) == "table" and _rawget(_self.maybe, "__call_thing")) then
        _temp223 =  _self:maybe(_temp219)
      elseif _self.maybe ~= nil then
        _temp223 =  _self.maybe

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("maybe") , _temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("maybe") , _temp219)
      else
        _error(exception:name_error("maybe"))
      end
    end

    if _type(anything) == "function" or (_type(anything) == "table" and _rawget(anything, "__call_thing")) then
      _temp207 =  anything(_self)

    elseif anything then
      _temp207 =  anything
    else
            if _type(_self.anything) == "function" or (_type(_self.anything) == "table" and _rawget(_self.anything, "__call_thing")) then
        _temp207 =  _self:anything()
      elseif _self.anything ~= nil then
        _temp207 =  _self.anything

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp207 =  _self:no_undermethod(string:new("anything"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp207 =  no_undermethod(_self, string:new("anything"))
      else
        _error(exception:name_error("anything"))
      end
    end

    if _type(no) == "function" or (_type(no) == "table" and _rawget(no, "__call_thing")) then
      _temp219 =  no(_self, _temp207)

    elseif no then
      _error(exception:new("Tried to invoke non-method: no (" .. object.__type(no) .. ")"))
    else
            if _type(_self.no) == "function" or (_type(_self.no) == "table" and _rawget(_self.no, "__call_thing")) then
        _temp219 =  _self:no(_temp207)
      elseif _self.no ~= nil then
        _temp219 =  _self.no

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp219 =  _self:no_undermethod(string:new("no") , _temp207)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp219 =  no_undermethod(_self, string:new("no") , _temp207)
      else
        _error(exception:name_error("no"))
      end
    end

    if _type(seq) == "function" or (_type(seq) == "table" and _rawget(seq, "__call_thing")) then
      _temp4 =  seq(_self, _temp223,_temp219)

    elseif seq then
      _error(exception:new("Tried to invoke non-method: seq (" .. object.__type(seq) .. ")"))
    else
            if _type(_self.seq) == "function" or (_type(_self.seq) == "table" and _rawget(_self.seq, "__call_thing")) then
        _temp4 =  _self:seq(_temp223,_temp219)
      elseif _self.seq ~= nil then
        _temp4 =  _self.seq

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp4 =  _self:no_undermethod(string:new("seq") , _temp223,_temp219)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp4 =  no_undermethod(_self, string:new("seq") , _temp223,_temp219)
      else
        _error(exception:name_error("seq"))
      end
    end

    if _type(set) == "function" or (_type(set) == "table" and _rawget(set, "__call_thing")) then
      return  set(_self, _temp3,_temp4)

    elseif set then
      _error(exception:new("Tried to invoke non-method: set (" .. object.__type(set) .. ")"))
    else
            if _type(_self.set) == "function" or (_type(_self.set) == "table" and _rawget(_self.set, "__call_thing")) then
        return  _self:set(_temp3,_temp4)
      elseif _self.set ~= nil then
        return  _self.set

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        return  _self:no_undermethod(string:new("set") , _temp3,_temp4)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        return  no_undermethod(_self, string:new("set") , _temp3,_temp4)
      else
        _error(exception:name_error("set"))
      end
    end

end

      local _t = _type(_temp2)
      if _t == "table" then
                      if _type(_temp2.new) == "function" or (_type(_temp2.new) == "table" and _rawget(_temp2.new, "__call_thing")) then
        _temp2 = _temp2:new(_temp223)
      elseif _temp2.new ~= nil then
        _temp2 = _temp2.new

        elseif _temp2.no_undermethod ~= nil then
          _temp2 =  _temp2:no_undermethod(string:new("new") , _temp223)
        else
          _error(exception:method_error("brat", "new"))
        end

      elseif _t == "number" then
              local _n = number:new(_temp2)
      if _n.new ~= nil then
        _temp2 = _n:new(_temp223)
      elseif _n.no_undermethod ~= nil then
        _temp2 =  _n:no_undermethod(string:new("new") , _temp223)
      else
        _error(exception:method_error("brat", "new"))
      end

      elseif _t == "function" then
              local _f = brat_function:new(_temp2)
      if _f.new ~= nil then
        _temp2 = _f:new(_temp223)
      elseif _f.no_undermethod ~= nil then
        _temp2 =  _f:no_undermethod(string:new("new") , _temp223)
      else
        _error(exception:method_error("brat", "new"))
      end

      elseif _temp2 == nil then
        _error(exception:null_error("brat", "invoke new on it"))
      else
        _error("Tried to invoke method on something strange: " .. _tostring(_temp2))
      end


    if _type(_temp2) == "function" or (_type(_temp2) == "table" and _rawget(_temp2, "__call_thing")) then
      _temp223 =  _temp2(_self)

    elseif _temp2 then
      _temp223 =  _temp2
    else
            if _type(_self.brat) == "function" or (_type(_self.brat) == "table" and _rawget(_self.brat, "__call_thing")) then
        _temp223 =  _self:brat()
      elseif _self.brat ~= nil then
        _temp223 =  _self.brat

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _temp223 =  _self:no_undermethod(string:new("brat"))
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _temp223 =  no_undermethod(_self, string:new("brat"))
      else
        _error(exception:name_error("brat"))
      end
    end

_temp1 = string:new("brat_parser")

    if _type(export) == "function" or (_type(export) == "table" and _rawget(export, "__call_thing")) then
      _dummy_ =  export(_self, _temp223,_temp1)

    elseif export then
      _error(exception:new("Tried to invoke non-method: export (" .. object.__type(export) .. ")"))
    else
            if _type(_self.export) == "function" or (_type(_self.export) == "table" and _rawget(_self.export, "__call_thing")) then
        _dummy_ =  _self:export(_temp223,_temp1)
      elseif _self.export ~= nil then
        _dummy_ =  _self.export

      elseif _type(_self) == "number" then
        --I don't believe this will happen
        _error("WHAT. No.")
      elseif _self.no_undermethod ~= nil then
        _dummy_ =  _self:no_undermethod(string:new("export") , _temp223,_temp1)
      elseif _type(no_undermethod) == "function" or (_type(no_undermethod) == "table" and _rawget(no_undermethod, "__call_thing")) then
        _dummy_ =  no_undermethod(_self, string:new("export") , _temp223,_temp1)
      else
        _error(exception:name_error("export"))
      end
    end

      end

      local _result = coxpcall(_main, exception._handler)
      if not _lib then
        if not _result then
          os.exit(-1)
        else
          os.exit(0)
        end
      end
